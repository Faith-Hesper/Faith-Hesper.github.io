{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_data/yun.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1637501184591},{"_id":"source/_data/head.swig","hash":"d9e424c6595b78cb817ba9910dc44770380044a7","modified":1626172062525},{"_id":"source/_data/styles.styl","hash":"48aad424ad6789dd154d6418ac29709f207c9ab6","modified":1637500661844},{"_id":"source/_data/variables.styl","hash":"adfbd2ee51aee4e64a6f7973b04ee15ed5f9fc40","modified":1625974301208},{"_id":"source/about/index.md","hash":"9c61318178e26e4e0b438ac139db609fc519abed","modified":1625709662381},{"_id":"source/_posts/CMD.md","hash":"a590025b64ee986534ff5e6ea716c72a8d855a77","modified":1629594943691},{"_id":"source/_posts/CSS.md","hash":"47d48a143d0c4bb76c947b481a018edff60adc8e","modified":1662684094828},{"_id":"source/_posts/GIS空间分析复习.md","hash":"e89ba864e6268b5ab023d985e833b8aa393d780b","modified":1640592450488},{"_id":"source/_posts/GIS空间分析题目.md","hash":"616fc42e96e606fb0649a80cb8856138511a6d94","modified":1637073808733},{"_id":"source/_posts/Google Search tips.md","hash":"599817c2fb4135bf10ee297ef740cf76883f8624","modified":1640592355747},{"_id":"source/_posts/Markdown.md","hash":"488e9fd1ae52082fb596ffe6e5b1e4606eee7d93","modified":1637328764431},{"_id":"source/_posts/PowerShell.md","hash":"aa9060d48fae909f67d24e4178a6050c409d6712","modified":1637743240613},{"_id":"source/_posts/SQL查询.md","hash":"bce3a77fb1720c814b8377da798d1286e6c7dd17","modified":1636542786218},{"_id":"source/_posts/Supermap.md","hash":"3daf1cb789ad4936491da670aa6e706405f39975","modified":1626433204881},{"_id":"source/_posts/Supermap代码编写原则.md","hash":"6641403997bea4646ac2ad827f55ca3fb751d2a9","modified":1626163333116},{"_id":"source/_posts/Supermap实例.md","hash":"2ce1ab0f46e0caa657e6731fcb2ed487bcc7a521","modified":1628666784870},{"_id":"source/_posts/SuperMapObjects开发.md","hash":"f891f00bf9851c6899212651116325a8ba73b4d8","modified":1640583674466},{"_id":"source/_posts/comments.md","hash":"1e8bca07c258058a0b76858d5b94fdd90102e1b0","modified":1629595615796},{"_id":"source/_posts/docker常用命令.md","hash":"2712a723777e3fa7f55cd042176ef6d15f132aaa","modified":1661734537619},{"_id":"source/_posts/freenom搭建网站.md","hash":"bf955f0f055f9e44566b72cf32d829bd58dc4168","modified":1640747556568},{"_id":"source/_posts/git技巧.md","hash":"d86f719116dc053e70d5e07869292429ce624e8f","modified":1663290597117},{"_id":"source/_posts/hello-world.md","hash":"7b2773c800db259fd38f6a63d3ae3e0b50762022","modified":1641975739919},{"_id":"source/_posts/html.md","hash":"7ca912ea9e822944c6bcf01b4ce8f95eb36f6911","modified":1664796632517},{"_id":"source/_posts/linux.md","hash":"e66ad6bcd975f83391939bcaf612626d08fcd546","modified":1656831603822},{"_id":"source/_posts/linux命令.md","hash":"84996339df14107cce8b6c2ff761fa6026f40955","modified":1641975838760},{"_id":"source/_posts/mysql数据库.md","hash":"7414fbf345a45509ebaa61c6ed39437302706a7b","modified":1637656431174},{"_id":"source/_posts/npm.md","hash":"4935d8d6044fbd9d3e4d6293b22643caea75091b","modified":1666573047997},{"_id":"source/_posts/php.md","hash":"e94f94ba9b8c3404b9ff07ea2c5c827cc17ea4f6","modified":1661734549025},{"_id":"source/_posts/supermap-0.md","hash":"12420b1e82f97a3ddf26be8d30f9e16895385bd5","modified":1661734430248},{"_id":"source/_posts/supermap开发初配置.md","hash":"6b58649f3fa675d0c6c1d6a6ef32cc0c3cbe5e9f","modified":1661734481576},{"_id":"source/_posts/tools.md","hash":"9930dcbf0ea2b507b2ee16be2f25878a4d6e4cef","modified":1661734594756},{"_id":"source/_posts/typora快捷键.md","hash":"6f3e025c7c49bf6eefd4a0133ec0dce6ce292eb6","modified":1641975799780},{"_id":"source/_posts/vscode快捷键.md","hash":"73525f1a1bfca8ed8f8e3a58b241a3f10475f36a","modified":1661734516300},{"_id":"source/_posts/youtube-dl命令.md","hash":"7b8f4bb9356d5af1b96f1bbae4f3ab26080df8da","modified":1626138954518},{"_id":"source/_posts/vue.md","hash":"fd826b403ece648b117033803a56117687f169fa","modified":1660655828066},{"_id":"source/_posts/专题图.md","hash":"abf3c169c9145b7647a02a9308fd4f08185be7e6","modified":1652837741820},{"_id":"source/_posts/京东薅薅乐.md","hash":"21296bc0d62fec4981d0b53f32d269c4766ba901","modified":1660655867263},{"_id":"source/_posts/人造立体视觉.md","hash":"7d858af53fecb7cf6fd2bf10fe814b6f9a1b56a4","modified":1640592416322},{"_id":"source/_posts/傻妞.md","hash":"a4f4e90899a3d94b64b4c70b854c5ac977209650","modified":1640742454264},{"_id":"source/_posts/位置与几何关系分析.md","hash":"7755a01ec9a62fe2b10d7d7d41f6632b04d8f601","modified":1637585862420},{"_id":"source/_posts/像片纠正及正射影像制作.md","hash":"1a8ff2255bb0b5f9f144f06df77678c89c92050e","modified":1636542760870},{"_id":"source/_posts/光谱分辨率.md","hash":"6844ae66089d9227160dfcb3bb18bc5bce7274ba","modified":1638596181116},{"_id":"source/_posts/前端小知识.md","hash":"c05ea21931e6a5d9d87dd8bf6a557d01d7ccb1b1","modified":1663226279593},{"_id":"source/_posts/单张像片解析.md","hash":"45c53ea218d234de61ee2f869b0881bea49f4b7a","modified":1640592205107},{"_id":"source/_posts/双像解析.md","hash":"1db54ac633da623e740b2a1fdea45d93ea945dcc","modified":1640592409946},{"_id":"source/_posts/命题开发组规则.md","hash":"c5155ca4114b902224528f903c5fba0661e62b8f","modified":1626396470486},{"_id":"source/_posts/地理信息科学.md","hash":"3e473be8ab20b2ffecdaa719d85cd29a6ee71fbe","modified":1636542974588},{"_id":"source/_posts/实习.md","hash":"c79ca13fda6d294270a08737573da8986a99f4e0","modified":1666447982932},{"_id":"source/_posts/常见配置文件.md","hash":"0482f4edb9eb19ec7e204161e4582e3639462790","modified":1660655794122},{"_id":"source/_posts/数字摄影测量.md","hash":"ce425ac8bb1f89ee637409219ea3f7179f1f8d71","modified":1637575146924},{"_id":"source/_posts/数字高程模型.md","hash":"de5332f0f20a052421ebf835e1198d6f229fd4d3","modified":1636542851846},{"_id":"source/_posts/数据编辑与处理.md","hash":"bc56d7604f9d9941146a582d4a2e9013a2132c99","modified":1636543000662},{"_id":"source/_posts/数组方法.md","hash":"04338a6c56821a0255e637d5ff0b1529896302b8","modified":1663228300658},{"_id":"source/_posts/时间分辨率.md","hash":"4707516359c9de2cdfcf0887cd3e175bb354e73b","modified":1660654715227},{"_id":"source/_posts/暴力破解防护.md","hash":"515ada28535604102b67635ff961d50cbb333d2d","modified":1640847217321},{"_id":"source/_posts/空间分析与GIS.md","hash":"e2128da196e734f1c75fb94d138d7e626ecd1c56","modified":1640592423225},{"_id":"source/_posts/空间分辨率.md","hash":"d5526bc52d886adb2df27afffff6430402a76a45","modified":1640592505241},{"_id":"source/_posts/空间查询与分析.md","hash":"9bf47b56b356e7b862e9f1c359a25153cd1e40e7","modified":1640591830193},{"_id":"source/_posts/空间特征与空间问题.md","hash":"1bcf0293425a251ea674120aed0e39079d07798c","modified":1637547655915},{"_id":"source/_posts/空间相关性分析.md","hash":"f41118340c59086ba7dca23f1a35884b05ea6d1b","modified":1637495485698},{"_id":"source/_posts/空间量算与数据探测.md","hash":"3f55b2f105f14976eea644ad28df2c22b27ee595","modified":1640592456831},{"_id":"source/_posts/表面与三维空间分析.md","hash":"ed7843942a5e15894313aa81be9252bd720730ae","modified":1640592433326},{"_id":"source/_posts/翻墙基础知识.md","hash":"99e970dbade7d60a3af982c5a5bf6e9c9f6257f8","modified":1641282589025},{"_id":"source/_posts/解析空中三角测量.md","hash":"3038119ef7cec1b350c5fb7c0b63ac440aee6472","modified":1636543132463},{"_id":"source/_posts/计算机网络.md","hash":"73e81e445926bb738d3d0c19f4e0b525ca3f99ce","modified":1666427126801},{"_id":"source/_posts/辐射分辨率.md","hash":"977522e7731956bde34af9df508792aa481d3ee5","modified":1636542628061},{"_id":"source/_posts/遥感平台与遥感成像原理.md","hash":"6c1868f48ef7a4b886150ba4f2438495d2319b1f","modified":1640592523473},{"_id":"source/_posts/遥感认识.md","hash":"4f7a9c8329542fd521c5a2c66273bf64f37ce787","modified":1640780930791},{"_id":"source/archives/index.md","hash":"a39fae1ccb61e4a22b5ca74ed4d43b3cc7ae1d57","modified":1625464961389},{"_id":"source/categories/index.md","hash":"0edd36093aee384265114e4276329205af492a51","modified":1625400392352},{"_id":"source/music/index.md","hash":"5b9ad95e098b3929b2724477900401a4d78c165d","modified":1640867564594},{"_id":"source/outlink/index.md","hash":"611ac1de6d40c0b33b7b6e96e7fa5a37a452dc60","modified":1668390123584},{"_id":"source/search/index.md","hash":"e56106bdf8cef77fb66a92fce19f6617dda4067f","modified":1625464743316},{"_id":"source/tags/index.md","hash":"a79e1418a23e9385d4f9ef0c60790c4553f57838","modified":1625464584805},{"_id":"themes/butterfly/README.md","hash":"2555c3e418157a0fda35d3deaf029f12e5a12f12","modified":1640486869042},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1640486869041},{"_id":"themes/butterfly/README_CN.md","hash":"84fa5880f5358abe919eb295aad3cfd17b69b631","modified":1640486869042},{"_id":"themes/butterfly/package.json","hash":"8ce922b5641a624a79691f65fcbbded653858d06","modified":1640486869141},{"_id":"themes/butterfly/.github/stale.yml","hash":"7a131b8aa4936fbcedea3517299e1cdc1bcbcaab","modified":1640486869038},{"_id":"themes/butterfly/_config.yml","hash":"e46e7fad3ec9e3f79d389c504f584603ac7557a6","modified":1667310467161},{"_id":"themes/butterfly/languages/default.yml","hash":"36682776bbf5c95c144a52b8159883701b308ae8","modified":1640486869046},{"_id":"themes/butterfly/languages/en.yml","hash":"cca2b24e8f51bc82933951840c7ab24b8153891f","modified":1640486869047},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"497751dad5007d168d2466a9d4c0c21ebaf9cb97","modified":1640486869049},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"f95e4f86bde74a8a118f72e68f7874a33d525b38","modified":1640486869048},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1640486869051},{"_id":"themes/butterfly/layout/archive.pug","hash":"2d5bf4b1755f89898c579c18d601be83d2bc8ebd","modified":1640486869049},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1640486869137},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1640486869138},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"0b7979a908ebe8c350d73b6731f0be3e29d401c2","modified":1640486869036},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"b41123ce5f0ccfa9e06a68b9f3cb59ba040a049a","modified":1640486869037},{"_id":"themes/butterfly/layout/post.pug","hash":"8f2f13c9ae099dd83827ce3dbac5abc8d7d5bde3","modified":1640486869139},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"205a69ba038cf76affcdc1f39d88a8cb8079fc12","modified":1640486869037},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1640486869039},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1640486869140},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1640486869052},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"8459729db2978bebd7f3668f6dc00a5bb100e633","modified":1640486869053},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1640486869054},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"131634cc862247d636965cb4490118adbf15451c","modified":1640486869055},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"f2e1d8a05d2e409c4804f67a98f5f59f527d6627","modified":1640486869068},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"bb1847f45e713cc88b1c0a97035ec01f0209c995","modified":1640486869076},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"2cf68619af17ece9acea71aa2cb06737097890a5","modified":1640486869080},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"52dae507bb73d53604c51f45a20103c8e11353d0","modified":1640486869079},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1640486869206},{"_id":"themes/butterfly/source/css/var.styl","hash":"c91a1218b1b952c4ad4f13ce4cfa5c1037d943ef","modified":1640486869207},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1640486869208},{"_id":"themes/butterfly/source/js/main.js","hash":"53a1a8886a73f5a21b6d56824441bd1977650b17","modified":1640486869213},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1640486869211},{"_id":"themes/butterfly/source/img/favicon.png","hash":"afadd0ee29c5d796fd0620c14bf67fcdbcf5ad83","modified":1640922880847},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1640486869143},{"_id":"themes/butterfly/source/js/utils.js","hash":"99632cb4458795c97db0179b0196e4977d3caa07","modified":1640486869218},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"4db1170be7a9360e2c5399d281b979da730df2a3","modified":1640486869217},{"_id":"themes/butterfly/scripts/events/init.js","hash":"b321a97420082101a4d41e6e571db1a166475e06","modified":1640486869145},{"_id":"themes/butterfly/scripts/events/config.js","hash":"29cc10b328ccac0a9af8bc4a2b788f1a68f4f6b9","modified":1640486869144},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1640486869145},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"1e1da036fae593be7e2cc502f0a5cbeb2e7881d1","modified":1640486869146},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1640486869147},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"bd29f20fad3d3fab600940e7a6dc9a803943cb33","modified":1640486869148},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1640486869149},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"22a2c69b3e68b0e3f80decfd4a2b9c9cc213ff5c","modified":1640486869151},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1640486869150},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"384de3c04809ec5fa996e8aa0628f770cd4bff3e","modified":1640486869152},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"26dd1900e68a3e10a5cf3f3484a93139a0f1340e","modified":1640486869153},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1640486869154},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"6d4cd2393945a9316339351cab588265f5c18d73","modified":1640486869155},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"aadeb65a7838f45c175807658ee857d82d306b58","modified":1640486869156},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1640486869156},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1640486869157},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1640486869158},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"420ba8b11e7316b4c09eb301d39814bc9bae9f90","modified":1640486869159},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1640486869161},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"d17bb323050f7581dfa2e4e6b9a9ce3db320c56a","modified":1640486869161},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"3b0b2053fe9f08cbc21b3baa53163adc2f76c19a","modified":1640486869067},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1640486869065},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"a9e56b1c41bf327859b0a7bcb8e72b458bd851b2","modified":1640486869066},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"3a2797d2744607ba6cdb5a02853851957c0f7e29","modified":1640486869064},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1640486869067},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"07380718ed3af19a7e64b30e8c13726fe5983947","modified":1640486869056},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"b8e3e07b0e8f3cf25af9550c6361725a05045b92","modified":1640486869057},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c1e45d4d0bd905ddcd2282de4fe89be92e67847d","modified":1640486869057},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1640486869060},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"b27b7ba90b209de29eeb64d5ac6eb93b86f5d784","modified":1640486869058},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1640486869059},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1640486869062},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fc3e67e5ae4774d9e89964ba96beed28f34ee8f0","modified":1640486869061},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1640486869062},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"2e1ab0c2ca59a1ff5a5ba9b6ef60f3e34af5430c","modified":1640486869070},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"dd8e6813976be64e80eba6562b54e74527ab306d","modified":1640486869070},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"971038debf539333b1687b4a1d87cf4fc965a846","modified":1640486869071},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"9c8e65939d048a579ea08d063c0f98550376f536","modified":1640486869072},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1640486869074},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1640486869073},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"d5dfccd610970e000391400887051ee1569520ea","modified":1640486869075},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"6ec54b77e3a90e148e66e317e5bb6c89624fddca","modified":1640486869077},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"8f43fdeaf8cff4a35bab74b48c963786ca015620","modified":1640486869075},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1640486869078},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"bee06b3f01fa1f0d8fa08c154234b452da425101","modified":1640486869082},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4c3da5a89b4e6fd3ab527f5c6d27790359d57f71","modified":1640486869105},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"d06dafe7faf3a2e328ef62f26166a51ffe7a5579","modified":1640486869116},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"2448b243ded58aa1d5fc22fd115e6d06b636f9fd","modified":1640486869118},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"fb7ec4a83239f91195dccaa389fa4c6e79bb3382","modified":1640486869117},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"311d883dede2a6838bf24ba9e4b3f69e62d5b3f1","modified":1640486869124},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1640486869126},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1640486869128},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"009bdbef23381f10664622fafdc602f2ff5bf1ec","modified":1640486869127},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"935dde9cf4c1fef0214dbb9935ecb71805735be0","modified":1640486869129},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1640486869130},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1640486869131},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"0f1a5c356c1ffd47ff49e153226e2d670dc61057","modified":1640486869131},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"471b20e71a19db1f5115727082e5188200c49383","modified":1640486869133},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1640486869134},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1640486869132},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1640486869134},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"62adef7998fb9bebc5891a49472cfea944a1bf7a","modified":1640486869136},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"c9eb85fbb7444781bc4651b1884fc690bda89f9c","modified":1640486869137},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"d9367019f2c111a74368a3012c7b2b04d3ef5cd4","modified":1640486869164},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"8b63ecdbcbfbae51108493ac7879988797833ce8","modified":1640486869166},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"41adb20cea1ecaf859d65200d50234fd453606ac","modified":1640486869164},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1640486869172},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"4fea968b6f47b40057e0f52a362f88de0f244c7c","modified":1640486869173},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f27ad7b5d781c98bcac5c12c2d70b69b830e0374","modified":1640486869174},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"e931ef81754a7b9d999fa23d134c620e68e75491","modified":1640486869176},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1640486869175},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"141278e81c513ead3dcefe36e7c7846f887ba789","modified":1640486869178},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"f3aac52defb3497079a313e8c63ac2f7ee24dfbe","modified":1640486869176},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"844858ae87c7278996ce484c6b456db354c48764","modified":1640486869177},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"2545df256b6d6e09056c3d3469bc9ccc0691014f","modified":1640486869179},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1640486869180},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1640486869181},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"1c1c585ba99cb4004956b5e98fc044260b456f99","modified":1640486869182},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"4258fa2e590aeea704660008aed7f0362fac72d4","modified":1640486869183},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"f52cf2e69c4f9c68e9ae224c22ecad87cfcbffd1","modified":1640486869186},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"95b99c1a17a198a16fde1eeb1aef5e6fb23662a8","modified":1640486869185},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"e53b0b4a3657ea42f29b24fa8a3054c161d75fd1","modified":1640486869184},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1640486869187},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"d72218cb5a6bfe048ae1c92009bd815a08a53d3a","modified":1640486869188},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"a714776e3d585369f2285b6bb4e1564539c58d8b","modified":1640486869190},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1640486869189},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"c3972c22f12bff65e2c8e835d84f07e260f35fdc","modified":1640486869190},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"f84268708a9ea3c417426bf194bdfea9f7374628","modified":1640486869194},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"c42b872df237726483d93d6124b8751d4f64cf86","modified":1640486869192},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1640486869193},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"c4a4af382f03169f78881e8ed12cd2cbd0dcdd05","modified":1640486869197},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"107b9e586b12d1fe7bb5b6e53fcc8e31516ab3ba","modified":1640486869196},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"f9bee6cac49de1171076560acf6a6eec96647c56","modified":1640486869195},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"84c42716e833d2d1dd47195ea996803ffa0e58ec","modified":1640486869198},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1640486869199},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"cfcafc0c30a5555cd993cd9bd4707793c919a030","modified":1640486869199},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1640486869200},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"c91609b7f431cacecc3718ae2fb7403c55f8267a","modified":1640486869201},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"d13f6fec250274043bdc57512e2db088a338571a","modified":1640486869202},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1640486869203},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"0566718de9cd55b47b946850be352325920f81af","modified":1640486869203},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"d684f2a60fe821d61761a01cf36fd2fb57c31c9c","modified":1640486869215},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1640486869205},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"54b6266400de1a17ff40315e8307e086870c8c2c","modified":1640486869216},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1640486869083},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"a18415004d03c0a1783eccac522fbcb6ce0ea1f1","modified":1640486869084},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4eebb2d94ca75809ef0cf32d70f13e9bf1e87091","modified":1640486869084},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"eb2d840fa42de3ec7a7fda0eaa30246d52f543e2","modified":1640486869085},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"896dc0b7480151562c5717771e3000c5a7fc1b16","modified":1640486869086},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"f3db5c5e738e097a191dc0de59c61d3e1444f7c3","modified":1640486869087},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1640486869088},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1640486869089},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1640486869090},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1640486869090},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1640486869092},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"bb467bb22f3d0775b33f9eacbfc086ecb7831e78","modified":1640486869092},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"d5f81fd5443a1b09efb165b5f4447a35949d14ad","modified":1640486869093},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"9ddfac9ae7071ecd982ca3808dcfd4d2d6098f33","modified":1640486869095},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"611b2c67604926d51a74a48a78636971cdc926d5","modified":1640486869096},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"a780962b3a04cac4b296ce809ee7101e42cf3a37","modified":1640486869096},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"b22ed23c78fb372cbdc4cfd3f733beb2ebea5d74","modified":1640486869097},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"810e8ca2669433f649329859922aabbb30d76178","modified":1640486869100},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"414f876d28f8497d6d551363a89c5c69bf1533eb","modified":1640486869098},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1640486869101},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"3f10e67c7618615cc85d50e4a3694f3d8b262952","modified":1640486869101},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"21098eba47237ec003228e7fa70a5fbb14d6c804","modified":1640486869102},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"d1ac48307e4999be08c63c673e98fe3fcee5bfce","modified":1640486869103},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"0f287b10408b4455d946a69677549fcfd302e8c0","modified":1640486869104},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1640486869110},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1640486869111},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"16cf05cf9649322da57e9b8d316573bb65f8d8d8","modified":1640486869112},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"444820bc7e4a9a033062bcd8cd71b10b49d1968a","modified":1640486869113},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"03b844b6f80887ba6eeb41d887c813a94f590997","modified":1640486869114},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"c9e6e14770317a3516e2e2f320654cd52b1bd73a","modified":1640486869115},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1640486869106},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"266caf985dc0703ff81b871b8f8d206f57db6e79","modified":1640486869107},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"6dd420ea858f3237d8a7353e8541df665dd6fdf1","modified":1640486869108},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"87e40f0c315407ab88571a2b3450d640f15c96bc","modified":1640486869107},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"a5aa867697578660fe78a0d9b0f245d09b571110","modified":1640486869119},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"7ce18e4b22c41dcfd84835e89b47030fc5f4a394","modified":1640486869120},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1640486869120},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1640486869123},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1640486869121},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"7e9a7347dd8ca4c33c564fb62512743b6012bb2d","modified":1640486869123},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"fbac21a6c5924fb2f8d1190fd634105fdbc603d4","modified":1640486869122},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1640486869168},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"b0916c8c7d15b67b55cb1618be8370870fedbf42","modified":1640486869167},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1640486869171},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1640486869169},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"904000b085dea1ed657f4e36143c5e7093573ba5","modified":1640486869170},{"_id":"public/search.xml","hash":"c8f0a9eae9e6cd05998bb276ee68da3ef6ff9cbe","modified":1669531040721},{"_id":"public/about/index.html","hash":"aa0a8c426da9b08ffe89e12e3c50072163029ff6","modified":1669531040721},{"_id":"public/archives/index.html","hash":"fa91a4b8fcf4f57e50b667200300657be65a4086","modified":1669531040721},{"_id":"public/categories/index.html","hash":"48a6a662fc83e9d8ff035252472917116b9c3c5b","modified":1669531040721},{"_id":"public/music/index.html","hash":"2ad68e9c6fc8467fba32092161f7c7cca502682a","modified":1669531040721},{"_id":"public/outlink/index.html","hash":"f7055ed8ddb80a372cacb59670f0b73982a45c39","modified":1669531040721},{"_id":"public/tags/index.html","hash":"96d696a081e8085316bb143d5b4f3220e833841c","modified":1669531040721},{"_id":"public/search/index.html","hash":"b2d35211f501daa71fb3dd3d943ea31f62da27db","modified":1669531040721},{"_id":"public/blog/04806edd4911/index.html","hash":"4e52fafe492a9d223ee658e128924541fddbc39e","modified":1669531040721},{"_id":"public/blog/a62532939648/index.html","hash":"149b79e3669894549f45602390cb45d10e72a437","modified":1669531040721},{"_id":"public/blog/471b702faede/index.html","hash":"56f1254c7d415ed9b8e377eed860423c2304a6f8","modified":1669531040721},{"_id":"public/blog/4817f211e73c/index.html","hash":"960c22065303099f1d628c05a3a1a66be13fc284","modified":1669531040721},{"_id":"public/blog/3c598d70b1b6/index.html","hash":"13ee2bab5b4e9acfa52f82b85d8d070018d42b4c","modified":1669531040721},{"_id":"public/blog/1544e7c72f29/index.html","hash":"f36dbcf36beba6f43c37bb6b38a44c1a3f688baf","modified":1669531040721},{"_id":"public/blog/ff35a4a03b30/index.html","hash":"b33ae266d56652e0ca6e800496ebb1a9a3c05990","modified":1669531040721},{"_id":"public/blog/b82dae75fd55/index.html","hash":"96379669bc09067f0a0eba605b61b5bbd7148b94","modified":1669531040721},{"_id":"public/blog/d89d89a1353f/index.html","hash":"3ee327c518dcd39639efe06e1555327ddb5d5df3","modified":1669531040721},{"_id":"public/blog/1bee79822b08/index.html","hash":"b63991f4191ca4e96dd63780726e932076285072","modified":1669531040721},{"_id":"public/blog/25300747fb12/index.html","hash":"e15da1eba956fc96cbdcf7113516d0d273f10ff3","modified":1669531040721},{"_id":"public/blog/6ae537b308ac/index.html","hash":"c1679a9e50fe94941d1f43fe14bb0334c40b1e83","modified":1669531040721},{"_id":"public/blog/3cd91baf66f6/index.html","hash":"8469c3e13840ed0668b28c89ff62bbd4eb7667bc","modified":1669531040721},{"_id":"public/blog/832bb4310a1d/index.html","hash":"e66cf5db19e1f9c55fcac7f570a1e9d42c0cd97d","modified":1669531040721},{"_id":"public/blog/474c98dd14ff/index.html","hash":"c1d54ab9dafdd248cfdba08cf2ed0ad7c480945d","modified":1669531040721},{"_id":"public/blog/66a2fc5fad74/index.html","hash":"619efd498cf6374ca2434717c89af29db3981921","modified":1669531040721},{"_id":"public/blog/3ec4f2b8deea/index.html","hash":"9bdc44910db56d8ff29f84b41a2208f928075551","modified":1669531040721},{"_id":"public/blog/10539342f990/index.html","hash":"0c34c3b69a85404e00f1cd9dac755bdff63c38a7","modified":1669531040721},{"_id":"public/blog/f0110835352c/index.html","hash":"af70770ebd66bfc1f1510b0d652e678c5cced23f","modified":1669531040721},{"_id":"public/blog/3f6863d178cf/index.html","hash":"4f0bf7743d2f4a4b9c5904eb9ecc0df6979b5bc9","modified":1669531040721},{"_id":"public/blog/f0abb32254fd/index.html","hash":"6412375cd9234e5e8c0839d779d59f3410e4d8fb","modified":1669531040721},{"_id":"public/blog/b995b4746349/index.html","hash":"ceb10f5020fa8a18c67847aaeb09c7a9d197aec2","modified":1669531040721},{"_id":"public/blog/e9e683d8fa7f/index.html","hash":"591cf35dde024ba6832f245de19bee3bac26b3d1","modified":1669531040721},{"_id":"public/blog/c912291d2a96/index.html","hash":"bb7fcd1e320362078b5efbf324458e63130be135","modified":1669531040721},{"_id":"public/blog/f163ead11e12/index.html","hash":"4a64f7d939b3a62a8587e07143bac1673b89a272","modified":1669531040721},{"_id":"public/blog/2882e3cc2023/index.html","hash":"c3ea893f4306157f1c56cc0a6e7bf8063ebd98a2","modified":1669531040721},{"_id":"public/blog/3a138a640710/index.html","hash":"cccff53a5b8da85371ff02de10138fcd7dcd7ca1","modified":1669531040721},{"_id":"public/blog/1a06cef80b44/index.html","hash":"561283ae59509f0e7753e134ee88009dd14eb176","modified":1669531040721},{"_id":"public/blog/bf6d928f6c2c/index.html","hash":"9ac6bee0c6479b5b7b9d272f478479f84575b00f","modified":1669531040721},{"_id":"public/blog/5fc53494e8b9/index.html","hash":"77c30cdb6f9bc2f43b147dff885600542a0ccd2a","modified":1669531040721},{"_id":"public/blog/51ded6389d80/index.html","hash":"0a0135eb22abc6699bbc7b570ec53947c11827b8","modified":1669531040721},{"_id":"public/blog/892a4ffdb837/index.html","hash":"670a68be9a9629a47a86f7be21cc530bbfe7f308","modified":1669531040721},{"_id":"public/blog/cd779f16bd7b/index.html","hash":"ab1a0b0e48bf83d647df2421d6e81c532bbb605b","modified":1669531040721},{"_id":"public/blog/9dfe6e94b1b0/index.html","hash":"fd7f4aede3cd4ed7161c1adbeb581a1aa699e3a7","modified":1669531040721},{"_id":"public/blog/39015dd051f8/index.html","hash":"971236109edd0b70bef16e6bac05a9be93c0415b","modified":1669531040721},{"_id":"public/blog/3d9d689b330e/index.html","hash":"bbb45dec2ad25c1169ec5511a628dc001253fc26","modified":1669531040721},{"_id":"public/blog/32133cdea1a8/index.html","hash":"159e985dc6e45136efef28ed42b8df6fcb2012b1","modified":1669531040721},{"_id":"public/blog/4b11c12e198c/index.html","hash":"13a661f11c3f236abf5864396798056bf3551c0a","modified":1669531040721},{"_id":"public/blog/7377f89325d3/index.html","hash":"e33360428f0549ecb619ab10a872a8fd54803a0a","modified":1669531040721},{"_id":"public/blog/788cd9ebfda4/index.html","hash":"7f4bae90240acf80ce46cefc4f210b61612720e5","modified":1669531040721},{"_id":"public/blog/cdcc4d3652f8/index.html","hash":"2f9be6383b162fd858048a1f4469383657eb4e8f","modified":1669531040721},{"_id":"public/blog/22e900041084/index.html","hash":"344405dc57a2ed9540dab9aed22b3daaeb102e6c","modified":1669531040721},{"_id":"public/blog/236d1eaf660f/index.html","hash":"655fd52abef118798627fb5166f41050d01e5c37","modified":1669531040721},{"_id":"public/blog/ff536ecc13c1/index.html","hash":"256d579833a4b2edb119e78449fe0e667c1a5d71","modified":1669531040721},{"_id":"public/blog/df5903a7ffee/index.html","hash":"3e641fc64adf647f57b1abe1f69d17789c3cc91f","modified":1669531040721},{"_id":"public/blog/639a82e62980/index.html","hash":"b61ab52e910fc8a2dc0842c26a5010da27a3c226","modified":1669531040721},{"_id":"public/blog/e108faea8316/index.html","hash":"016d75603132951b950249710428581d295f703a","modified":1669531040721},{"_id":"public/blog/e6cd9966dc30/index.html","hash":"be3db1effb32f6632624af10e772612bba3359cd","modified":1669531040721},{"_id":"public/blog/5a1efc3eac33/index.html","hash":"5a70394fe13d660a4bc41179beb6ebddf1bbcfd5","modified":1669531040721},{"_id":"public/blog/94b4f9f985fe/index.html","hash":"8d06fe3e086d9ef32768bdc24c9b49fb11100cc8","modified":1669531040721},{"_id":"public/blog/2a9b85708ce5/index.html","hash":"ed19c0ff30a57eb8505348b5d52d8f1aa1076d3a","modified":1669531040721},{"_id":"public/blog/9e8debf5ac22/index.html","hash":"85f7cfdd13d62c91bc3c6f00c9a233399f1d8aea","modified":1669531040721},{"_id":"public/blog/26c22be7f8d5/index.html","hash":"d79071b57f0c34eb6d13697c23e9d6a048296180","modified":1669531040721},{"_id":"public/blog/9272cfe53de3/index.html","hash":"d5f8ed089dc5de813dda4717e0e3e36c296d75ac","modified":1669531040721},{"_id":"public/blog/be41f692d6df/index.html","hash":"38335df3d88e83d093931aef5f5ef6d1665b9c51","modified":1669531040721},{"_id":"public/blog/95953aa4a5f6/index.html","hash":"78096612c6da9004a80c6ecb9ba494de7cdca320","modified":1669531040721},{"_id":"public/blog/02c9a9c38e7e/index.html","hash":"b91811ef407d1a4d7d61533a3bb507c9f3f30ce6","modified":1669531040721},{"_id":"public/blog/6cb6abcb716c/index.html","hash":"79e09b272707d4ac3d310e6630d97baf409d7180","modified":1669531040721},{"_id":"public/blog/c9fc960acacd/index.html","hash":"e2b4637fc4716e6b824b302348c22299ca635518","modified":1669531040721},{"_id":"public/blog/6be3fd30c8cf/index.html","hash":"ce72e1b5b552901fba493559291c24f1e57fb40a","modified":1669531040721},{"_id":"public/blog/7d0d6d605685/index.html","hash":"accb3eaeab3d9741f1d1cd248bd657fa5441a8a8","modified":1669531040721},{"_id":"public/blog/8c762a35c9db/index.html","hash":"d167f97e392afdd511ac59f63fb80a3185b4a204","modified":1669531040721},{"_id":"public/blog/77247b1241a5/index.html","hash":"74f94f0eaa473d714a142ca378cd3820c9c5f373","modified":1669531040721},{"_id":"public/archives/page/2/index.html","hash":"4c6a662388535a2cdde90782f172b5beec09ba47","modified":1669531040721},{"_id":"public/archives/page/3/index.html","hash":"e37c19037e6727f94fee49d94e169b2e3b68f92d","modified":1669531040721},{"_id":"public/archives/page/4/index.html","hash":"14242dbd936d67664990321ad6baf41c5051679c","modified":1669531040721},{"_id":"public/archives/page/5/index.html","hash":"5c26dea8d673d0225bd50954abba712be3fcc59b","modified":1669531040721},{"_id":"public/archives/page/6/index.html","hash":"445250f0611516ae73d01c11bb8737495052c7f9","modified":1669531040721},{"_id":"public/archives/page/7/index.html","hash":"acfe87ee8c8603d05392e2a2d592eb5bfe7b6d83","modified":1669531040721},{"_id":"public/archives/2021/index.html","hash":"5041f6c8603b84c3506e86648b07a6d865b53fad","modified":1669531040721},{"_id":"public/archives/2021/page/2/index.html","hash":"72440b0b9c9ab2e39ddf3935bcdf17cdf04cd792","modified":1669531040721},{"_id":"public/archives/2021/page/3/index.html","hash":"d0fb844ba2641e267c5d68a99ad923e761b3c2a7","modified":1669531040721},{"_id":"public/archives/2021/page/4/index.html","hash":"b84bfba53273864fd77408ad13a5e97947ef1d21","modified":1669531040721},{"_id":"public/archives/2021/page/5/index.html","hash":"e348d1a32521a4049086b284b3d2a1c636c9d490","modified":1669531040721},{"_id":"public/archives/2021/07/index.html","hash":"546558b1cf9497fbab431907d8fad14e859ad26a","modified":1669531040721},{"_id":"public/archives/2021/07/page/2/index.html","hash":"505435110f81de32f507493b378c20a8012533b4","modified":1669531040721},{"_id":"public/archives/2021/08/index.html","hash":"250d5e92d19f337c4986cc55b1eaee0500062f53","modified":1669531040721},{"_id":"public/archives/2021/09/index.html","hash":"698e2c325feddfeb2ad7f7339baf43fb3302d579","modified":1669531040721},{"_id":"public/archives/2021/10/index.html","hash":"7f1411e0a22417b4c26859264de2ee765e842e43","modified":1669531040721},{"_id":"public/archives/2021/11/index.html","hash":"cf2e1d9910c23beaf9126a1bbf4c3580d25c059d","modified":1669531040721},{"_id":"public/archives/2021/11/page/2/index.html","hash":"4cafd47ac25ba6a35180d8e202c71f0e9f82e679","modified":1669531040721},{"_id":"public/archives/2021/12/index.html","hash":"8f8d8b40880d779d97e929474ac8b5532f5d5c24","modified":1669531040721},{"_id":"public/archives/2022/index.html","hash":"6cfee7b397bd1cec0e65915c6bffe17837a4415c","modified":1669531040721},{"_id":"public/archives/2022/page/2/index.html","hash":"88d129364813ec26ae8850f6053d2d7c4f8387b8","modified":1669531040721},{"_id":"public/archives/2022/01/index.html","hash":"26b8d423b6b693145a39ab7b1aad69e424708021","modified":1669531040721},{"_id":"public/archives/2022/02/index.html","hash":"9b95a5ee6a6fbf87ccb524a0badd42e9771711b2","modified":1669531040721},{"_id":"public/archives/2022/03/index.html","hash":"6f88b8b179c124cf6c4ad74d75323f4045267d0a","modified":1669531040721},{"_id":"public/archives/2022/05/index.html","hash":"2bb9284dbf1d0e8aa3125041cafea51f5cbe3a77","modified":1669531040721},{"_id":"public/archives/2022/06/index.html","hash":"2e46d63c44dfa4db9fd966d33bf92838e89cfa04","modified":1669531040721},{"_id":"public/archives/2022/07/index.html","hash":"509d19201b76f9a35815dbb07440547b8d1e27eb","modified":1669531040721},{"_id":"public/archives/2022/08/index.html","hash":"5536a495f4727777aa3df1d33827aef857088d38","modified":1669531040721},{"_id":"public/archives/2022/09/index.html","hash":"261e09484aa9426fb1c864e30a5036cfccecefbf","modified":1669531040721},{"_id":"public/index.html","hash":"daa2b5290ddaf557f18f7400e0e80d72c2ade24b","modified":1669531040721},{"_id":"public/page/2/index.html","hash":"63ae533f982935fd3487697550dd6b94d90f4da0","modified":1669531040721},{"_id":"public/page/3/index.html","hash":"a297e0eee468aea70f4bd285acd1fedcca18f040","modified":1669531040721},{"_id":"public/page/4/index.html","hash":"f8a4694abc49ed8d371ca965d958f12a0d42bb48","modified":1669531040721},{"_id":"public/page/5/index.html","hash":"9ab7aba23213b6c90f3692341f1f1450fde9d250","modified":1669531040721},{"_id":"public/page/6/index.html","hash":"472c6daef733450adfe96b4b4429af4afc4312da","modified":1669531040721},{"_id":"public/page/7/index.html","hash":"6ddfd487d7ef773e695cf395866aad04552e671c","modified":1669531040721},{"_id":"public/categories/CMD/index.html","hash":"c068a0f78bd860faf90989d953a43e2ef6405fe3","modified":1669531040721},{"_id":"public/categories/GIS/index.html","hash":"52f5407970705b1e84baa9dd5ff8d17c983bcb18","modified":1669531040721},{"_id":"public/categories/GIS/page/2/index.html","hash":"0e8fa647e03ca8e973716af334ac9c92b0d5c6c8","modified":1669531040721},{"_id":"public/categories/GIS/page/3/index.html","hash":"1dc35bc4ea47ade321a1893a1aca4ae183c6b7f5","modified":1669531040721},{"_id":"public/categories/tips/index.html","hash":"345d7e556a06815c345b4f5cdc3d95c6c3e9df70","modified":1669531040721},{"_id":"public/categories/PowerShell/index.html","hash":"956123ec99945627b7595ed62516f651bc82dc40","modified":1669531040721},{"_id":"public/categories/GIS/GIS空间分析/index.html","hash":"befec9f17cb054c4347a6ecd019bdc47063c2d63","modified":1669531040721},{"_id":"public/categories/markdown/index.html","hash":"ace8b64d1a618d980bc2d716ed58044a9c512076","modified":1669531040721},{"_id":"public/categories/GIS/SQL/index.html","hash":"1c193d9fe0781b65350205ec8e52c8bbc9b15766","modified":1669531040721},{"_id":"public/categories/Supermap/index.html","hash":"55b3a28e44e0ab2b2cefbd95920811f56cce995c","modified":1669531040721},{"_id":"public/categories/comments/index.html","hash":"132652230d16c8c6df06a2ac3a2955de8319a12b","modified":1669531040721},{"_id":"public/categories/网站/index.html","hash":"f67f99d55dc3ccaa568089c10c7399b2c4698acc","modified":1669531040721},{"_id":"public/categories/工具/index.html","hash":"b9570b899104c9e12b59847a6672beb6b076ab81","modified":1669531040721},{"_id":"public/categories/typora快捷键/index.html","hash":"25b8296e2d24cca625c7508d40a01802ee9bdf27","modified":1669531040721},{"_id":"public/categories/编程/index.html","hash":"6a9f363698c06285d4c116229cefb1011c2af6eb","modified":1669531040721},{"_id":"public/categories/Supermap/编程/index.html","hash":"722592e66a27b5ec19c1be77f88b86179ba91c39","modified":1669531040721},{"_id":"public/categories/vue/index.html","hash":"07a6d04362b321c112140f37d933d6059ec9b8b5","modified":1669531040721},{"_id":"public/categories/GIS/摄影测量/index.html","hash":"01dde45a35f5ae25ca8ef842f0289105e69dd398","modified":1669531040721},{"_id":"public/categories/傻妞/index.html","hash":"ce67101744c014c2b2745752cbbd62d58116c9aa","modified":1669531040721},{"_id":"public/categories/GIS/GIS空间分析/位置与几何关系分析/index.html","hash":"a41b6de2e379b509fbf6d4e0b3619a203c847836","modified":1669531040721},{"_id":"public/categories/GIS/遥感图像特征/index.html","hash":"a02f46236002e02a1705004befeef89827fcc5f6","modified":1669531040721},{"_id":"public/categories/GIS/地理信息科学/index.html","hash":"63d1e6f5a420addb282741a50933399e916e254b","modified":1669531040721},{"_id":"public/categories/GIS/摄影测量/人造立体视觉/index.html","hash":"b5f55cb4faae4cbe098d7d7267976efd78297760","modified":1669531040721},{"_id":"public/categories/GIS/GIS空间分析/空间分析与GIS/index.html","hash":"887c9ac44313f5d1858b26d11b6022f302d4c3b5","modified":1669531040721},{"_id":"public/categories/GIS/GIS空间分析/空间特征与空间问题/index.html","hash":"7327fd60157e16874a64d1f728991fe784f26b55","modified":1669531040721},{"_id":"public/categories/GIS/GIS空间分析/空间相关性分析/index.html","hash":"c69553b260217f41019cdc1f4c0c818f8c1687bf","modified":1669531040721},{"_id":"public/categories/GIS/GIS空间分析/空间量算与数据探测/index.html","hash":"f03e1e8af2aa120cd6a7c62b30aa237d66b351d6","modified":1669531040721},{"_id":"public/categories/GIS/摄影测量/像片纠正及正射影像制作/index.html","hash":"565157ec686c92be740831fdc9f293c048d72c99","modified":1669531040721},{"_id":"public/categories/GIS/GIS空间分析/表面与三维空间分析/index.html","hash":"b8eb03904fc41239549fda0a3cbe4723815c33fb","modified":1669531040721},{"_id":"public/categories/GIS/遥感图像特征/光谱分辨率/index.html","hash":"9fa4d2fa6adfc8bf78753bc4782dbb5fdc19c08d","modified":1669531040721},{"_id":"public/categories/GIS/摄影测量/解析空中三角测量/index.html","hash":"fb17fe3366c5eda9077f24e43ad2196f79cf652b","modified":1669531040721},{"_id":"public/categories/GIS/摄影测量/单张像片解析/index.html","hash":"99c69b39e2e471e7e8887569f36a453e5a5472ef","modified":1669531040721},{"_id":"public/categories/GIS/遥感图像特征/辐射分辨率/index.html","hash":"2dcfa860607267851a68f4a50e5f968c6998f255","modified":1669531040721},{"_id":"public/categories/GIS/摄影测量/双像解析/index.html","hash":"5c91ef5daa92955b7a8f9112a4756ebb0a765f4a","modified":1669531040721},{"_id":"public/categories/GIS/摄影测量/数字摄影测量/index.html","hash":"351402be6395513767135d5bc1e40e7cf8fce190","modified":1669531040721},{"_id":"public/categories/GIS/地理信息科学/数据编辑与处理/index.html","hash":"e23e9cd576a7c7dca4a98859272df7b65426d1ac","modified":1669531040721},{"_id":"public/categories/GIS/摄影测量/数字高程模型/index.html","hash":"bb036d1c84e1747501ed8b7768e436f391660eb2","modified":1669531040721},{"_id":"public/categories/GIS/遥感图像特征/时间分辨率/index.html","hash":"64f8f96e366132f3f68ae776b5712586d72200ae","modified":1669531040721},{"_id":"public/categories/GIS/遥感图像特征/空间分辨率/index.html","hash":"dd7ed72eedef22fc98fb77f3a45ff39303cabb49","modified":1669531040721},{"_id":"public/categories/GIS/地理信息科学/空间数据查询/index.html","hash":"57c2cdb3811b8b2d3c96086c6234014763402870","modified":1669531040721},{"_id":"public/tags/CMD/index.html","hash":"3e64a312745efb27cd7a9d98cd57118ce585e3b9","modified":1669531040721},{"_id":"public/tags/css/index.html","hash":"3a186d927060e26e251f336cc6911bcce90f10b0","modified":1669531040721},{"_id":"public/tags/前端/index.html","hash":"67bfea2e254b5ecc99f5c0e6c62872962a8f5ced","modified":1669531040721},{"_id":"public/tags/GIS空间分析/index.html","hash":"6a1dc751ef3c8c81c309eefd4df49c18f9416a01","modified":1669531040721},{"_id":"public/tags/题目/index.html","hash":"86645fee636c656103c06a120eed9ba417650896","modified":1669531040721},{"_id":"public/tags/tips/index.html","hash":"9eb8477a10b4335f7a5e749ab694bee0877cb599","modified":1669531040721},{"_id":"public/tags/PowerShell/index.html","hash":"7ab78a900ad9ea0cd691705eb817be90b0e536ae","modified":1669531040721},{"_id":"public/tags/markdown/index.html","hash":"9348d28ccf22eb1db70a8e27685e0ced8fb8a397","modified":1669531040721},{"_id":"public/tags/GIS/index.html","hash":"a04f81df94a05955e150692ecbd0ed3410d8ddf7","modified":1669531040721},{"_id":"public/tags/SuperMapObjects/index.html","hash":"988ea3abe5a246f47b34edd6f47c454edc14ddf0","modified":1669531040721},{"_id":"public/tags/Supermap/index.html","hash":"7bad03f5743bcc5d0662e93138700acd1e232fb6","modified":1669531040721},{"_id":"public/tags/编程/index.html","hash":"982f1fdca1add7cb23d96ba5006c2432cebec30d","modified":1669531040721},{"_id":"public/tags/comments/index.html","hash":"2b7fa32ab801337ceb378db1c6a514b7a3288c0d","modified":1669531040721},{"_id":"public/tags/docker/index.html","hash":"327476dd04b10ddfa4b4f6f5885885e84355a773","modified":1669531040721},{"_id":"public/tags/网站/index.html","hash":"db63788194b2daf752c2857fdbba8cbd6d544a62","modified":1669531040721},{"_id":"public/tags/git/index.html","hash":"811c2050e5f41d0f9349837a6ae1894e19d08c97","modified":1669531040721},{"_id":"public/tags/HTML/index.html","hash":"d7d7ffdc2fc0c262d8ce1295ef04844ecb6ed340","modified":1669531040721},{"_id":"public/tags/linux/index.html","hash":"e637219e7a021d20ed9a22c9f5478b54952e58e2","modified":1669531040721},{"_id":"public/tags/sql/index.html","hash":"ff6018a98c10418d70429b594bf88331d2358770","modified":1669531040721},{"_id":"public/tags/npm/index.html","hash":"0f9f16036123264550effa435b197d44bef7fae7","modified":1669531040721},{"_id":"public/tags/php/index.html","hash":"02d9803c0f54521d8e3a971c5f52c6fe1783447a","modified":1669531040721},{"_id":"public/tags/leaflet/index.html","hash":"188ebcfbd56aeadbd811009b41b364e06bd9e04b","modified":1669531040721},{"_id":"public/tags/draw/index.html","hash":"eaca0378a181e0244dae34ffa0f1cde34e6dcd9a","modified":1669531040721},{"_id":"public/tags/supermap/index.html","hash":"bbab03ffe2f92670679a4959fffb0d7985dd4f08","modified":1669531040721},{"_id":"public/tags/工具/index.html","hash":"88017847985e697fd79de277520e8c6519c956b5","modified":1669531040721},{"_id":"public/tags/tool/index.html","hash":"22dd00c59b6cdd0566db997b93267fef7380af26","modified":1669531040721},{"_id":"public/tags/typora/index.html","hash":"6cde3fdd941197b983c7d7e1f0d4a91325b05c51","modified":1669531040721},{"_id":"public/tags/快捷键/index.html","hash":"601a1262ba2b668ceebc9128173169e9f9104f22","modified":1669531040721},{"_id":"public/tags/vscode/index.html","hash":"858ed82937f2c5dafa88b6b179a6f31cdfaf061d","modified":1669531040721},{"_id":"public/tags/youtube-dl/index.html","hash":"15961092d2f66365a5b4279bc9c82b4afcaab25d","modified":1669531040721},{"_id":"public/tags/vue/index.html","hash":"8e0319750647cf7b8d9969ad04798f9954acb274","modified":1669531040721},{"_id":"public/tags/摄影测量/index.html","hash":"dfab3cc1f812186bf4217b673c3f395adf0e4b87","modified":1669531040721},{"_id":"public/tags/傻妞/index.html","hash":"374c5d17fbeb7239ac4f6beee302a8e1d99ac5a0","modified":1669531040721},{"_id":"public/tags/遥感/index.html","hash":"ab6189db2b0ef2084ae1cfdead27f3cdac42bd5f","modified":1669531040721},{"_id":"public/tags/地理信息科学/index.html","hash":"479ccedfcd6013b165b3beb29ba080b8519789ed","modified":1669531040721},{"_id":"public/tags/config/index.html","hash":"9458a52959b717d5ca583daf19ae083aab2797d8","modified":1669531040721},{"_id":"public/tags/翻墙/index.html","hash":"b3f27b0ae9616df42ca5881c8f751df3388262ea","modified":1669531040721},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1667816313040},{"_id":"public/img/favicon.png","hash":"afadd0ee29c5d796fd0620c14bf67fcdbcf5ad83","modified":1667816313040},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1667816313040},{"_id":"public/live2dw/assets/mtn/idle_02.mtn","hash":"865874c50848fbc9a55011391531e2ec171c9b91","modified":1667816313040},{"_id":"public/live2dw/assets/mtn/idle_01.mtn","hash":"908abce18f6cf7fd4bc1486f048c25a517f4a34a","modified":1667816313040},{"_id":"public/live2dw/assets/mtn/idle_03.mtn","hash":"84684914ebf5dc5b2df160338bb97dcc0a978476","modified":1667816313040},{"_id":"public/live2dw/assets/mtn/idle_04.mtn","hash":"78e22091792abb0600f724a5dfd60371257954e8","modified":1667816313040},{"_id":"public/live2dw/assets/mtn/shake_01.mtn","hash":"dffc54733127832f8f5e91aced55a83da58fa215","modified":1667816313040},{"_id":"public/live2dw/assets/mtn/shake_02.mtn","hash":"7b6c914f6c33450eda2e53d9b638fd7045c0f683","modified":1667816313040},{"_id":"public/live2dw/assets/mtn/touch_01.mtn","hash":"99270ea8fe1f8f5d88eadb94f36bd0810009d1e6","modified":1667816313040},{"_id":"public/live2dw/assets/mtn/touch_02.mtn","hash":"4d1f099fbd18d15c598a644227ed5bf942a2ba71","modified":1667816313040},{"_id":"public/live2dw/assets/mtn/touch_03.mtn","hash":"9c394975083915f0f3786caff1762381348b041e","modified":1667816313040},{"_id":"public/live2dw/assets/mtn/touch_04.mtn","hash":"8d2302cfdaec698e575048797ff4f30ae4d202de","modified":1667816313040},{"_id":"public/live2dw/assets/mtn/touch_05.mtn","hash":"9610bb8a937ba9b11445a3894d8cc0733a2b67e5","modified":1667816313040},{"_id":"public/live2dw/assets/mtn/touch_06.mtn","hash":"feb9237c73f2045ed1704c01b5362c9a54ee5a18","modified":1667816313040},{"_id":"public/live2dw/assets/wanko.model.json","hash":"b98a8ce54fbcf1606a489f1bc5f26b1a18c82d79","modified":1667816313040},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1667816313040},{"_id":"public/assets/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1667816313040},{"_id":"public/assets/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1667816313040},{"_id":"public/assets/js/Meting.min.js","hash":"a0585220b918d78649a7893279e1ec4fb5abe835","modified":1667816313040},{"_id":"public/live2dw/assets/moc/wanko.moc","hash":"7b188cd4dcddfe5bdba8ec51a65cb1c21cd2e57a","modified":1667816313040},{"_id":"public/live2dw/assets/moc/wanko.1024/texture_00.png","hash":"c405c1eeb82bcced7aa7a20f04a76168f60ad561","modified":1667816313040},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1667816313040},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1667816313040},{"_id":"public/js/search/algolia.js","hash":"aaa5e44125dcf321866bc2355a73773b11db8c9c","modified":1667816313040},{"_id":"public/js/utils.js","hash":"3ee4bd9071dc6e854ffa33964f3a8da2ee2a8409","modified":1667816313040},{"_id":"public/js/search/local-search.js","hash":"72911c7b42e0174a979c09ead3f42ee24136feae","modified":1667816313040},{"_id":"public/css/index.css","hash":"a476bf106fedc96c1455f4755faca656971b041f","modified":1667816313040},{"_id":"public/js/main.js","hash":"f997ec517c7fd30d74c32364ed530dc5332e93e8","modified":1667816313040},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1667816313040},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1667816313040},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1667816313040},{"_id":"source/_posts/esri-inership-log.md","hash":"fc4e779a39f2ec65a376a4d00455e8c2f5ce312b","modified":1669530961428},{"_id":"public/blog/28a621ac695f/index.html","hash":"0360407f758750132809b17ba69a906666e39222","modified":1669531040721},{"_id":"public/archives/2022/11/index.html","hash":"460f678af0e090164a2a122d740b7cdf2af7b0cc","modified":1669531040721},{"_id":"public/categories/react/index.html","hash":"d126119e48376c6aeb38b7673dbe3c05e5703f24","modified":1669531040721},{"_id":"public/tags/react/index.html","hash":"14128aad83501fd262b0dc1fa014676296055713","modified":1669531040721}],"Category":[{"name":"CMD","_id":"cla6mrt240004jsvk18v63d2k"},{"name":"GIS","_id":"cla6mrt2b000cjsvk40wb61gm"},{"name":"tips","_id":"cla6mrt2k000ojsvkhohma7g0"},{"name":"PowerShell","_id":"cla6mrt2n000ujsvk7dhl8z57"},{"name":"GIS空间分析","parent":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt2s0010jsvkccnu63la"},{"name":"markdown","_id":"cla6mrt2v0017jsvk453mb3g1"},{"name":"SQL","parent":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt2z001djsvkf4e06k4b"},{"name":"Supermap","_id":"cla6mrt37001pjsvkbd58g890"},{"name":"comments","_id":"cla6mrt3f0029jsvkftunajhj"},{"name":"网站","_id":"cla6mrt3k002gjsvk9z65bc47"},{"name":"工具","_id":"cla6mrt3m002ljsvk7cv4fh6s"},{"name":"typora快捷键","_id":"cla6mrt3q002xjsvkaj050l3z"},{"name":"编程","_id":"cla6mrt3s0035jsvk5z6m2567"},{"name":"编程","parent":"cla6mrt37001pjsvkbd58g890","_id":"cla6mrt3v003djsvkgdbm27g1"},{"name":"vue","_id":"cla6mrt3z003rjsvkbnqb6lo2"},{"name":"摄影测量","parent":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt430040jsvkeo57f6x7"},{"name":"傻妞","_id":"cla6mrt450046jsvk1jarfwf0"},{"name":"位置与几何关系分析","parent":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt47004djsvkgn3z4e1d"},{"name":"遥感图像特征","parent":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt4b004qjsvk4kmo00zf"},{"name":"地理信息科学","parent":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt4j005bjsvk05refwp4"},{"name":"人造立体视觉","parent":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt4n005rjsvk0oei18b3"},{"name":"空间分析与GIS","parent":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt4q005tjsvkbau853pl"},{"name":"空间特征与空间问题","parent":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt4u0068jsvk90pmdau0"},{"name":"空间相关性分析","parent":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt4w006djsvkf09lhjla"},{"name":"空间量算与数据探测","parent":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt4y006hjsvkd7e9a48d"},{"name":"像片纠正及正射影像制作","parent":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt4z006mjsvkewzk8yz1"},{"name":"表面与三维空间分析","parent":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt51006rjsvkcteof76p"},{"name":"光谱分辨率","parent":"cla6mrt4b004qjsvk4kmo00zf","_id":"cla6mrt52006xjsvk8rnk5oy8"},{"name":"解析空中三角测量","parent":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt520073jsvkfwyo9d7x"},{"name":"单张像片解析","parent":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt540078jsvke67l1zwl"},{"name":"辐射分辨率","parent":"cla6mrt4b004qjsvk4kmo00zf","_id":"cla6mrt56007djsvkbhzaht0p"},{"name":"双像解析","parent":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt56007ijsvk5sqn28z6"},{"name":"数字摄影测量","parent":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt57007pjsvk5uji0xpi"},{"name":"数据编辑与处理","parent":"cla6mrt4j005bjsvk05refwp4","_id":"cla6mrt58007ujsvk062x3rp8"},{"name":"数字高程模型","parent":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt59007zjsvkhibe57ff"},{"name":"时间分辨率","parent":"cla6mrt4b004qjsvk4kmo00zf","_id":"cla6mrt5a0084jsvk3fxt3pd8"},{"name":"空间分辨率","parent":"cla6mrt4b004qjsvk4kmo00zf","_id":"cla6mrt5a008ajsvk0q15at58"},{"name":"空间数据查询","parent":"cla6mrt4j005bjsvk05refwp4","_id":"cla6mrt5b008fjsvk7j0ycc3a"},{"name":"react","_id":"clayzoefq00018svk4f0e46oe"}],"Data":[{"_id":"styles","data":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n"},{"_id":"head","data":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>"},{"_id":"variables","data":""}],"Page":[{"title":"About","date":"2021-07-05T06:00:48.000Z","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-07-05 14:00:48\ntype: \"about\"\n---\n","updated":"2021-07-08T02:01:02.381Z","path":"about/index.html","comments":1,"layout":"page","_id":"cla6mrt1v0000jsvk0b4t6h70","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160654.webp","length":0,"excerpt":"","more":""},{"title":"Archives","date":"2021-07-05T06:01:23.000Z","type":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2021-07-05 14:01:23\ntype: \"archives\"\n---\n","updated":"2021-07-05T06:02:41.389Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cla6mrt210002jsvkdspi7wza","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160700.webp","length":0,"excerpt":"","more":""},{"title":"Categories","date":"2021-07-04T12:05:34.000Z","type":"categories","_content":"\n","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-07-04 20:05:34\ntype: \"categories\"\n---\n\n","updated":"2021-07-04T12:06:32.352Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cla6mrt260006jsvk458xbeoz","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220124161839.webp","length":0,"excerpt":"","more":""},{"title":"Music","date":"2021-12-26T01:34:39.000Z","type":"music","layout":"music","aplayer":true,"_content":"\n\n<h1><center>我的音乐</center></h1>\n\n\n\n{% meting \"60198\" \"netease\" \"playlist\" %}\n","source":"music/index.md","raw":"---\ntitle: music\ndate: 2021-12-26 09:34:39\ntype: \"music\" \nlayout: \"music\"\naplayer: true\n---\n\n\n<h1><center>我的音乐</center></h1>\n\n\n\n{% meting \"60198\" \"netease\" \"playlist\" %}\n","updated":"2021-12-30T12:32:44.594Z","path":"music/index.html","comments":1,"_id":"cla6mrt280008jsvk13a7bhwi","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1><center>我的音乐</center></h1>\n\n\n\n\n    <div id=\"aplayer-MOTvvNhe\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"60198\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"\n    ></div>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160700.webp","length":4,"excerpt":"","more":"<h1><center>我的音乐</center></h1>\n\n\n\n\n    <div id=\"aplayer-MOTvvNhe\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"60198\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"\n    ></div>\n"},{"title":"Outlink","date":"2021-12-31T03:46:29.000Z","type":"outlink","_content":"\n[假条1](https://faith-hesper.github.io/wechat/)\n\n[假条2](http://114.115.150.215/wechat/index.html)\n\n[假条3](https://wehcat-gyk4.vercel.app/)\n\n[京东薅薅乐](http://114.115.150.215:8081/login)\n\n[丁香园项目](https://lntano.top/dxy/#/)\n\n[WIFI-CARD](https://wificard.io/)\n\n[备忘录](https://wangchujiang.com/reference/)\n","source":"outlink/index.md","raw":"---\ntitle: outlink\ndate: 2021-12-31 11:46:29\ntype: \"outlink\"\n---\n\n[假条1](https://faith-hesper.github.io/wechat/)\n\n[假条2](http://114.115.150.215/wechat/index.html)\n\n[假条3](https://wehcat-gyk4.vercel.app/)\n\n[京东薅薅乐](http://114.115.150.215:8081/login)\n\n[丁香园项目](https://lntano.top/dxy/#/)\n\n[WIFI-CARD](https://wificard.io/)\n\n[备忘录](https://wangchujiang.com/reference/)\n","updated":"2022-11-14T01:42:03.584Z","path":"outlink/index.html","_id":"cla6mrt2a000ajsvkdv8aac2w","comments":1,"layout":"page","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><a href=\"https://faith-hesper.github.io/wechat/\">假条1</a></p>\n<p><a href=\"http://114.115.150.215/wechat/index.html\">假条2</a></p>\n<p><a href=\"https://wehcat-gyk4.vercel.app/\">假条3</a></p>\n<p><a href=\"http://114.115.150.215:8081/login\">京东薅薅乐</a></p>\n<p><a href=\"https://lntano.top/dxy/#/\">丁香园项目</a></p>\n<p><a href=\"https://wificard.io/\">WIFI-CARD</a></p>\n<p><a href=\"https://wangchujiang.com/reference/\">备忘录</a></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160624.jpg","length":31,"excerpt":"","more":"<p><a href=\"https://faith-hesper.github.io/wechat/\">假条1</a></p>\n<p><a href=\"http://114.115.150.215/wechat/index.html\">假条2</a></p>\n<p><a href=\"https://wehcat-gyk4.vercel.app/\">假条3</a></p>\n<p><a href=\"http://114.115.150.215:8081/login\">京东薅薅乐</a></p>\n<p><a href=\"https://lntano.top/dxy/#/\">丁香园项目</a></p>\n<p><a href=\"https://wificard.io/\">WIFI-CARD</a></p>\n<p><a href=\"https://wangchujiang.com/reference/\">备忘录</a></p>\n"},{"title":"Tags","date":"2021-07-05T05:55:43.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-07-05 13:55:43\ntype: \"tags\"\n---\n","updated":"2021-07-05T05:56:24.805Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cla6mrt2c000fjsvk10ikb9ju","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220124161839.webp","length":0,"excerpt":"","more":""},{"title":"Search","date":"2021-07-05T05:57:29.000Z","type":"search","_content":"","source":"search/index.md","raw":"---\ntitle: search\ndate: 2021-07-05 13:57:29\ntype: \"search\"\n---\n","updated":"2021-07-05T05:59:03.316Z","path":"search/index.html","comments":1,"layout":"page","_id":"cla6mrt2e000hjsvkbwp8hotq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160623.jpg","length":0,"excerpt":"","more":""}],"Post":[{"title":"CMD","date":"2021-08-22T01:14:47.000Z","description":"cmd的基本使用","_content":"\n# 启动\n\n+ win + r 输入 cmd\n\n\n\n# 命令\n\n+ cmd大小写不敏感\n+ 输入文件或者文件名的首字母**Tab**键补全文件名\n+ **↑** **↓** 查看历史命令\n+ ESC 清除当前命令\n+ CLS 清屏\n+ mkdir 创建文件夹\n+ exit 退出\n+ /? 查看命令帮助 cd/? \n+ cd \\ 回到根目录\n+ cd,, 返回上级目录\n+ REM：命令后内容不执行但回显\n+ :: 不回显注释\n+ @控制该行命令是否回显\n+ echo on off 控制是否回显\n+ echo ^G鸣响\n+ title 设置cmd窗口标题\n+ color 1A 设置控制台前景和背景颜色\n+ goto :\n+ start firefox 启动\n+ pause 暂停\n+ if string1==string2 command\n+ if exist filename command\n+ **>**将运行结果传递到后面\n+ echo hello > 1.txt 建立一个文件内容为“hello“\n+ **>>**传递并末尾追加\n+ command1|command2 第一条命令的结果作为第二条命令的参数\n+ fortune | cowsay\n+ ^ 转义字符 对<,>,& 进行转义，去除其特殊功能\n+ \"\"允许文件名有空格(\"fortune cowsay\")\n+ ! 变量延迟问题中表示变量 !var!\n+ \n\n# 程序\n\n| 命令     | 程序   |\n| -------- | ------ |\n| calc     | 计算器 |\n| clipbrd  | 剪切板 |\n| notepad  | 记事本 |\n| ipconfig | ip配置 |\n\n# 帮助\n\n 有关某个命令的详细信息，请键入 HELP 命令名\nASSOC          显示或修改文件扩展名关联。\nATTRIB         显示或更改文件属性。\nBREAK          设置或清除扩展式 CTRL+C 检查。\nBCDEDIT        设置启动数据库中的属性以控制启动加载。\nCACLS          显示或修改文件的访问控制列表(ACL)。\nCALL           从另一个批处理程序调用这一个。\nCD             显示当前目录的名称或将其更改。\nCHCP           显示或设置活动代码页数。\nCHDIR          显示当前目录的名称或将其更改。\nCHKDSK         检查磁盘并显示状态报告。\nCHKNTFS        显示或修改启动时间磁盘检查。\nCLS            清除屏幕。\nCMD            打开另一个 Windows 命令解释程序窗口。\nCOLOR          设置默认控制台前景和背景颜色。\nCOMP           比较两个或两套文件的内容。\nCOMPACT        显示或更改 NTFS 分区上文件的压缩。\nCONVERT        将 FAT 卷转换成 NTFS。你不能转换\n               当前驱动器。\nCOPY           将至少一个文件复制到另一个位置。\nDATE           显示或设置日期。\nDEL            删除至少一个文件。\nDIR            显示一个目录中的文件和子目录。\nDISKPART       显示或配置磁盘分区属性。\nDOSKEY         编辑命令行、撤回 Windows 命令并\n               创建宏。\nDRIVERQUERY    显示当前设备驱动程序状态和属性。\nECHO           显示消息，或将命令回显打开或关闭。\nENDLOCAL       结束批文件中环境更改的本地化。\nERASE          删除一个或多个文件。\nEXIT           退出 CMD.EXE 程序(命令解释程序)。\nFC             比较两个文件或两个文件集并显示\n               它们之间的不同。\nFIND           在一个或多个文件中搜索一个文本字符串。\nFINDSTR        在多个文件中搜索字符串。\nFOR            为一组文件中的每个文件运行一个指定的命令。\nFORMAT         格式化磁盘，以便用于 Windows。\nFSUTIL         显示或配置文件系统属性。\nFTYPE          显示或修改在文件扩展名关联中使用的文件\n               类型。\nGOTO           将 Windows 命令解释程序定向到批处理程序\n               中某个带标签的行。\nGPRESULT       显示计算机或用户的组策略信息。\nGRAFTABL       使 Windows 在图形模式下显示扩展\n               字符集。\nHELP           提供 Windows 命令的帮助信息。\nICACLS         显示、修改、备份或还原文件和\n               目录的 ACL。\nIF             在批处理程序中执行有条件的处理操作。\nLABEL          创建、更改或删除磁盘的卷标。\nMD             创建一个目录。\nMKDIR          创建一个目录。\nMKLINK         创建符号链接和硬链接\nMODE           配置系统设备。\nMORE           逐屏显示输出。\nMOVE           将一个或多个文件从一个目录移动到另一个\n               目录。\nOPENFILES      显示远程用户为了文件共享而打开的文件。\nPATH           为可执行文件显示或设置搜索路径。\nPAUSE          暂停批处理文件的处理并显示消息。\nPOPD           还原通过 PUSHD 保存的当前目录的上一个\n               值。\nPRINT          打印一个文本文件。\nPROMPT         更改 Windows 命令提示。\nPUSHD          保存当前目录，然后对其进行更改。\nRD             删除目录。\nRECOVER        从损坏的或有缺陷的磁盘中恢复可读信息。\nREM            记录批处理文件或 CONFIG.SYS 中的注释(批注)。\nREN            重命名文件。\nRENAME         重命名文件。\nREPLACE        替换文件。\nRMDIR          删除目录。\nROBOCOPY       复制文件和目录树的高级实用工具\nSET            显示、设置或删除 Windows 环境变量。\nSETLOCAL       开始本地化批处理文件中的环境更改。\nSC             显示或配置服务(后台进程)。\nSCHTASKS       安排在一台计算机上运行命令和程序。\nSHIFT          调整批处理文件中可替换参数的位置。\nSHUTDOWN       允许通过本地或远程方式正确关闭计算机。\nSORT           对输入排序。\nSTART          启动单独的窗口以运行指定的程序或命令。\nSUBST          将路径与驱动器号关联。\nSYSTEMINFO     显示计算机的特定属性和配置。\nTASKLIST       显示包括服务在内的所有当前运行的任务。\nTASKKILL       中止或停止正在运行的进程或应用程序。\nTIME           显示或设置系统时间。\nTITLE          设置 CMD.EXE 会话的窗口标题。\nTREE           以图形方式显示驱动程序或路径的目录\n               结构。\nTYPE           显示文本文件的内容。\nVER            显示 Windows 的版本。\nVERIFY         告诉 Windows 是否进行验证，以确保文件\n               正确写入磁盘。\nVOL            显示磁盘卷标和序列号。\nXCOPY          复制文件和目录树。\nWMIC           在交互式命令 shell 中显示 WMI 信息。\n\n# 通配符\n\n| 通配符 | 含义                             |\n| ------ | -------------------------------- |\n| *      | 匹配任意长度任意字符             |\n| ？     | 匹配任意单个字符                 |\n| ^      | 匹配指定字符范围外的任意单个字符 |\n\n# 设置环境变量\n\n```powershell\nsetx -m name \"%name%;value\"\nsetx /m PATH \"%PATH%;D:\\phpStudy\\nginx\"\n```\n\n","source":"_posts/CMD.md","raw":"---\ntitle: CMD\ndate: 2021-08-22 09:14:47\ntags: CMD\ncategories: CMD\ndescription: cmd的基本使用\n---\n\n# 启动\n\n+ win + r 输入 cmd\n\n\n\n# 命令\n\n+ cmd大小写不敏感\n+ 输入文件或者文件名的首字母**Tab**键补全文件名\n+ **↑** **↓** 查看历史命令\n+ ESC 清除当前命令\n+ CLS 清屏\n+ mkdir 创建文件夹\n+ exit 退出\n+ /? 查看命令帮助 cd/? \n+ cd \\ 回到根目录\n+ cd,, 返回上级目录\n+ REM：命令后内容不执行但回显\n+ :: 不回显注释\n+ @控制该行命令是否回显\n+ echo on off 控制是否回显\n+ echo ^G鸣响\n+ title 设置cmd窗口标题\n+ color 1A 设置控制台前景和背景颜色\n+ goto :\n+ start firefox 启动\n+ pause 暂停\n+ if string1==string2 command\n+ if exist filename command\n+ **>**将运行结果传递到后面\n+ echo hello > 1.txt 建立一个文件内容为“hello“\n+ **>>**传递并末尾追加\n+ command1|command2 第一条命令的结果作为第二条命令的参数\n+ fortune | cowsay\n+ ^ 转义字符 对<,>,& 进行转义，去除其特殊功能\n+ \"\"允许文件名有空格(\"fortune cowsay\")\n+ ! 变量延迟问题中表示变量 !var!\n+ \n\n# 程序\n\n| 命令     | 程序   |\n| -------- | ------ |\n| calc     | 计算器 |\n| clipbrd  | 剪切板 |\n| notepad  | 记事本 |\n| ipconfig | ip配置 |\n\n# 帮助\n\n 有关某个命令的详细信息，请键入 HELP 命令名\nASSOC          显示或修改文件扩展名关联。\nATTRIB         显示或更改文件属性。\nBREAK          设置或清除扩展式 CTRL+C 检查。\nBCDEDIT        设置启动数据库中的属性以控制启动加载。\nCACLS          显示或修改文件的访问控制列表(ACL)。\nCALL           从另一个批处理程序调用这一个。\nCD             显示当前目录的名称或将其更改。\nCHCP           显示或设置活动代码页数。\nCHDIR          显示当前目录的名称或将其更改。\nCHKDSK         检查磁盘并显示状态报告。\nCHKNTFS        显示或修改启动时间磁盘检查。\nCLS            清除屏幕。\nCMD            打开另一个 Windows 命令解释程序窗口。\nCOLOR          设置默认控制台前景和背景颜色。\nCOMP           比较两个或两套文件的内容。\nCOMPACT        显示或更改 NTFS 分区上文件的压缩。\nCONVERT        将 FAT 卷转换成 NTFS。你不能转换\n               当前驱动器。\nCOPY           将至少一个文件复制到另一个位置。\nDATE           显示或设置日期。\nDEL            删除至少一个文件。\nDIR            显示一个目录中的文件和子目录。\nDISKPART       显示或配置磁盘分区属性。\nDOSKEY         编辑命令行、撤回 Windows 命令并\n               创建宏。\nDRIVERQUERY    显示当前设备驱动程序状态和属性。\nECHO           显示消息，或将命令回显打开或关闭。\nENDLOCAL       结束批文件中环境更改的本地化。\nERASE          删除一个或多个文件。\nEXIT           退出 CMD.EXE 程序(命令解释程序)。\nFC             比较两个文件或两个文件集并显示\n               它们之间的不同。\nFIND           在一个或多个文件中搜索一个文本字符串。\nFINDSTR        在多个文件中搜索字符串。\nFOR            为一组文件中的每个文件运行一个指定的命令。\nFORMAT         格式化磁盘，以便用于 Windows。\nFSUTIL         显示或配置文件系统属性。\nFTYPE          显示或修改在文件扩展名关联中使用的文件\n               类型。\nGOTO           将 Windows 命令解释程序定向到批处理程序\n               中某个带标签的行。\nGPRESULT       显示计算机或用户的组策略信息。\nGRAFTABL       使 Windows 在图形模式下显示扩展\n               字符集。\nHELP           提供 Windows 命令的帮助信息。\nICACLS         显示、修改、备份或还原文件和\n               目录的 ACL。\nIF             在批处理程序中执行有条件的处理操作。\nLABEL          创建、更改或删除磁盘的卷标。\nMD             创建一个目录。\nMKDIR          创建一个目录。\nMKLINK         创建符号链接和硬链接\nMODE           配置系统设备。\nMORE           逐屏显示输出。\nMOVE           将一个或多个文件从一个目录移动到另一个\n               目录。\nOPENFILES      显示远程用户为了文件共享而打开的文件。\nPATH           为可执行文件显示或设置搜索路径。\nPAUSE          暂停批处理文件的处理并显示消息。\nPOPD           还原通过 PUSHD 保存的当前目录的上一个\n               值。\nPRINT          打印一个文本文件。\nPROMPT         更改 Windows 命令提示。\nPUSHD          保存当前目录，然后对其进行更改。\nRD             删除目录。\nRECOVER        从损坏的或有缺陷的磁盘中恢复可读信息。\nREM            记录批处理文件或 CONFIG.SYS 中的注释(批注)。\nREN            重命名文件。\nRENAME         重命名文件。\nREPLACE        替换文件。\nRMDIR          删除目录。\nROBOCOPY       复制文件和目录树的高级实用工具\nSET            显示、设置或删除 Windows 环境变量。\nSETLOCAL       开始本地化批处理文件中的环境更改。\nSC             显示或配置服务(后台进程)。\nSCHTASKS       安排在一台计算机上运行命令和程序。\nSHIFT          调整批处理文件中可替换参数的位置。\nSHUTDOWN       允许通过本地或远程方式正确关闭计算机。\nSORT           对输入排序。\nSTART          启动单独的窗口以运行指定的程序或命令。\nSUBST          将路径与驱动器号关联。\nSYSTEMINFO     显示计算机的特定属性和配置。\nTASKLIST       显示包括服务在内的所有当前运行的任务。\nTASKKILL       中止或停止正在运行的进程或应用程序。\nTIME           显示或设置系统时间。\nTITLE          设置 CMD.EXE 会话的窗口标题。\nTREE           以图形方式显示驱动程序或路径的目录\n               结构。\nTYPE           显示文本文件的内容。\nVER            显示 Windows 的版本。\nVERIFY         告诉 Windows 是否进行验证，以确保文件\n               正确写入磁盘。\nVOL            显示磁盘卷标和序列号。\nXCOPY          复制文件和目录树。\nWMIC           在交互式命令 shell 中显示 WMI 信息。\n\n# 通配符\n\n| 通配符 | 含义                             |\n| ------ | -------------------------------- |\n| *      | 匹配任意长度任意字符             |\n| ？     | 匹配任意单个字符                 |\n| ^      | 匹配指定字符范围外的任意单个字符 |\n\n# 设置环境变量\n\n```powershell\nsetx -m name \"%name%;value\"\nsetx /m PATH \"%PATH%;D:\\phpStudy\\nginx\"\n```\n\n","slug":"CMD","published":1,"updated":"2021-08-22T01:15:43.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt1x0001jsvk68k5akco","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h1><ul>\n<li>win + r 输入 cmd</li>\n</ul>\n<h1 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h1><ul>\n<li>cmd大小写不敏感</li>\n<li>输入文件或者文件名的首字母<strong>Tab</strong>键补全文件名</li>\n<li><strong>↑</strong> <strong>↓</strong> 查看历史命令</li>\n<li>ESC 清除当前命令</li>\n<li>CLS 清屏</li>\n<li>mkdir 创建文件夹</li>\n<li>exit 退出</li>\n<li>/? 查看命令帮助 cd/? </li>\n<li>cd  回到根目录</li>\n<li>cd,, 返回上级目录</li>\n<li>REM：命令后内容不执行但回显</li>\n<li>:: 不回显注释</li>\n<li>@控制该行命令是否回显</li>\n<li>echo on off 控制是否回显</li>\n<li>echo ^G鸣响</li>\n<li>title 设置cmd窗口标题</li>\n<li>color 1A 设置控制台前景和背景颜色</li>\n<li>goto :</li>\n<li>start firefox 启动</li>\n<li>pause 暂停</li>\n<li>if string1==string2 command</li>\n<li>if exist filename command</li>\n<li><strong>&gt;</strong>将运行结果传递到后面</li>\n<li>echo hello &gt; 1.txt 建立一个文件内容为“hello“</li>\n<li><strong>&gt;&gt;</strong>传递并末尾追加</li>\n<li>command1|command2 第一条命令的结果作为第二条命令的参数</li>\n<li>fortune | cowsay</li>\n<li>^ 转义字符 对&lt;,&gt;,&amp; 进行转义，去除其特殊功能</li>\n<li>“”允许文件名有空格(“fortune cowsay”)</li>\n<li>! 变量延迟问题中表示变量 !var!</li>\n<li></li>\n</ul>\n<h1 id=\"程序\"><a href=\"#程序\" class=\"headerlink\" title=\"程序\"></a>程序</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>程序</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>calc</td>\n<td>计算器</td>\n</tr>\n<tr>\n<td>clipbrd</td>\n<td>剪切板</td>\n</tr>\n<tr>\n<td>notepad</td>\n<td>记事本</td>\n</tr>\n<tr>\n<td>ipconfig</td>\n<td>ip配置</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"帮助\"><a href=\"#帮助\" class=\"headerlink\" title=\"帮助\"></a>帮助</h1><p> 有关某个命令的详细信息，请键入 HELP 命令名<br>ASSOC          显示或修改文件扩展名关联。<br>ATTRIB         显示或更改文件属性。<br>BREAK          设置或清除扩展式 CTRL+C 检查。<br>BCDEDIT        设置启动数据库中的属性以控制启动加载。<br>CACLS          显示或修改文件的访问控制列表(ACL)。<br>CALL           从另一个批处理程序调用这一个。<br>CD             显示当前目录的名称或将其更改。<br>CHCP           显示或设置活动代码页数。<br>CHDIR          显示当前目录的名称或将其更改。<br>CHKDSK         检查磁盘并显示状态报告。<br>CHKNTFS        显示或修改启动时间磁盘检查。<br>CLS            清除屏幕。<br>CMD            打开另一个 Windows 命令解释程序窗口。<br>COLOR          设置默认控制台前景和背景颜色。<br>COMP           比较两个或两套文件的内容。<br>COMPACT        显示或更改 NTFS 分区上文件的压缩。<br>CONVERT        将 FAT 卷转换成 NTFS。你不能转换<br>               当前驱动器。<br>COPY           将至少一个文件复制到另一个位置。<br>DATE           显示或设置日期。<br>DEL            删除至少一个文件。<br>DIR            显示一个目录中的文件和子目录。<br>DISKPART       显示或配置磁盘分区属性。<br>DOSKEY         编辑命令行、撤回 Windows 命令并<br>               创建宏。<br>DRIVERQUERY    显示当前设备驱动程序状态和属性。<br>ECHO           显示消息，或将命令回显打开或关闭。<br>ENDLOCAL       结束批文件中环境更改的本地化。<br>ERASE          删除一个或多个文件。<br>EXIT           退出 CMD.EXE 程序(命令解释程序)。<br>FC             比较两个文件或两个文件集并显示<br>               它们之间的不同。<br>FIND           在一个或多个文件中搜索一个文本字符串。<br>FINDSTR        在多个文件中搜索字符串。<br>FOR            为一组文件中的每个文件运行一个指定的命令。<br>FORMAT         格式化磁盘，以便用于 Windows。<br>FSUTIL         显示或配置文件系统属性。<br>FTYPE          显示或修改在文件扩展名关联中使用的文件<br>               类型。<br>GOTO           将 Windows 命令解释程序定向到批处理程序<br>               中某个带标签的行。<br>GPRESULT       显示计算机或用户的组策略信息。<br>GRAFTABL       使 Windows 在图形模式下显示扩展<br>               字符集。<br>HELP           提供 Windows 命令的帮助信息。<br>ICACLS         显示、修改、备份或还原文件和<br>               目录的 ACL。<br>IF             在批处理程序中执行有条件的处理操作。<br>LABEL          创建、更改或删除磁盘的卷标。<br>MD             创建一个目录。<br>MKDIR          创建一个目录。<br>MKLINK         创建符号链接和硬链接<br>MODE           配置系统设备。<br>MORE           逐屏显示输出。<br>MOVE           将一个或多个文件从一个目录移动到另一个<br>               目录。<br>OPENFILES      显示远程用户为了文件共享而打开的文件。<br>PATH           为可执行文件显示或设置搜索路径。<br>PAUSE          暂停批处理文件的处理并显示消息。<br>POPD           还原通过 PUSHD 保存的当前目录的上一个<br>               值。<br>PRINT          打印一个文本文件。<br>PROMPT         更改 Windows 命令提示。<br>PUSHD          保存当前目录，然后对其进行更改。<br>RD             删除目录。<br>RECOVER        从损坏的或有缺陷的磁盘中恢复可读信息。<br>REM            记录批处理文件或 CONFIG.SYS 中的注释(批注)。<br>REN            重命名文件。<br>RENAME         重命名文件。<br>REPLACE        替换文件。<br>RMDIR          删除目录。<br>ROBOCOPY       复制文件和目录树的高级实用工具<br>SET            显示、设置或删除 Windows 环境变量。<br>SETLOCAL       开始本地化批处理文件中的环境更改。<br>SC             显示或配置服务(后台进程)。<br>SCHTASKS       安排在一台计算机上运行命令和程序。<br>SHIFT          调整批处理文件中可替换参数的位置。<br>SHUTDOWN       允许通过本地或远程方式正确关闭计算机。<br>SORT           对输入排序。<br>START          启动单独的窗口以运行指定的程序或命令。<br>SUBST          将路径与驱动器号关联。<br>SYSTEMINFO     显示计算机的特定属性和配置。<br>TASKLIST       显示包括服务在内的所有当前运行的任务。<br>TASKKILL       中止或停止正在运行的进程或应用程序。<br>TIME           显示或设置系统时间。<br>TITLE          设置 CMD.EXE 会话的窗口标题。<br>TREE           以图形方式显示驱动程序或路径的目录<br>               结构。<br>TYPE           显示文本文件的内容。<br>VER            显示 Windows 的版本。<br>VERIFY         告诉 Windows 是否进行验证，以确保文件<br>               正确写入磁盘。<br>VOL            显示磁盘卷标和序列号。<br>XCOPY          复制文件和目录树。<br>WMIC           在交互式命令 shell 中显示 WMI 信息。</p>\n<h1 id=\"通配符\"><a href=\"#通配符\" class=\"headerlink\" title=\"通配符\"></a>通配符</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>通配符</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>*</td>\n<td>匹配任意长度任意字符</td>\n</tr>\n<tr>\n<td>？</td>\n<td>匹配任意单个字符</td>\n</tr>\n<tr>\n<td>^</td>\n<td>匹配指定字符范围外的任意单个字符</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"设置环境变量\"><a href=\"#设置环境变量\" class=\"headerlink\" title=\"设置环境变量\"></a>设置环境变量</h1><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">setx <span class=\"token operator\">-</span>m name <span class=\"token string\">\"%name%;value\"</span>\nsetx <span class=\"token operator\">/</span>m PATH <span class=\"token string\">\"%PATH%;D:\\phpStudy\\nginx\"</span></code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160705.jpg","length":2346,"excerpt":"","more":"<h1 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h1><ul>\n<li>win + r 输入 cmd</li>\n</ul>\n<h1 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h1><ul>\n<li>cmd大小写不敏感</li>\n<li>输入文件或者文件名的首字母<strong>Tab</strong>键补全文件名</li>\n<li><strong>↑</strong> <strong>↓</strong> 查看历史命令</li>\n<li>ESC 清除当前命令</li>\n<li>CLS 清屏</li>\n<li>mkdir 创建文件夹</li>\n<li>exit 退出</li>\n<li>/? 查看命令帮助 cd/? </li>\n<li>cd  回到根目录</li>\n<li>cd,, 返回上级目录</li>\n<li>REM：命令后内容不执行但回显</li>\n<li>:: 不回显注释</li>\n<li>@控制该行命令是否回显</li>\n<li>echo on off 控制是否回显</li>\n<li>echo ^G鸣响</li>\n<li>title 设置cmd窗口标题</li>\n<li>color 1A 设置控制台前景和背景颜色</li>\n<li>goto :</li>\n<li>start firefox 启动</li>\n<li>pause 暂停</li>\n<li>if string1==string2 command</li>\n<li>if exist filename command</li>\n<li><strong>&gt;</strong>将运行结果传递到后面</li>\n<li>echo hello &gt; 1.txt 建立一个文件内容为“hello“</li>\n<li><strong>&gt;&gt;</strong>传递并末尾追加</li>\n<li>command1|command2 第一条命令的结果作为第二条命令的参数</li>\n<li>fortune | cowsay</li>\n<li>^ 转义字符 对&lt;,&gt;,&amp; 进行转义，去除其特殊功能</li>\n<li>“”允许文件名有空格(“fortune cowsay”)</li>\n<li>! 变量延迟问题中表示变量 !var!</li>\n<li></li>\n</ul>\n<h1 id=\"程序\"><a href=\"#程序\" class=\"headerlink\" title=\"程序\"></a>程序</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>程序</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>calc</td>\n<td>计算器</td>\n</tr>\n<tr>\n<td>clipbrd</td>\n<td>剪切板</td>\n</tr>\n<tr>\n<td>notepad</td>\n<td>记事本</td>\n</tr>\n<tr>\n<td>ipconfig</td>\n<td>ip配置</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"帮助\"><a href=\"#帮助\" class=\"headerlink\" title=\"帮助\"></a>帮助</h1><p> 有关某个命令的详细信息，请键入 HELP 命令名<br>ASSOC          显示或修改文件扩展名关联。<br>ATTRIB         显示或更改文件属性。<br>BREAK          设置或清除扩展式 CTRL+C 检查。<br>BCDEDIT        设置启动数据库中的属性以控制启动加载。<br>CACLS          显示或修改文件的访问控制列表(ACL)。<br>CALL           从另一个批处理程序调用这一个。<br>CD             显示当前目录的名称或将其更改。<br>CHCP           显示或设置活动代码页数。<br>CHDIR          显示当前目录的名称或将其更改。<br>CHKDSK         检查磁盘并显示状态报告。<br>CHKNTFS        显示或修改启动时间磁盘检查。<br>CLS            清除屏幕。<br>CMD            打开另一个 Windows 命令解释程序窗口。<br>COLOR          设置默认控制台前景和背景颜色。<br>COMP           比较两个或两套文件的内容。<br>COMPACT        显示或更改 NTFS 分区上文件的压缩。<br>CONVERT        将 FAT 卷转换成 NTFS。你不能转换<br>               当前驱动器。<br>COPY           将至少一个文件复制到另一个位置。<br>DATE           显示或设置日期。<br>DEL            删除至少一个文件。<br>DIR            显示一个目录中的文件和子目录。<br>DISKPART       显示或配置磁盘分区属性。<br>DOSKEY         编辑命令行、撤回 Windows 命令并<br>               创建宏。<br>DRIVERQUERY    显示当前设备驱动程序状态和属性。<br>ECHO           显示消息，或将命令回显打开或关闭。<br>ENDLOCAL       结束批文件中环境更改的本地化。<br>ERASE          删除一个或多个文件。<br>EXIT           退出 CMD.EXE 程序(命令解释程序)。<br>FC             比较两个文件或两个文件集并显示<br>               它们之间的不同。<br>FIND           在一个或多个文件中搜索一个文本字符串。<br>FINDSTR        在多个文件中搜索字符串。<br>FOR            为一组文件中的每个文件运行一个指定的命令。<br>FORMAT         格式化磁盘，以便用于 Windows。<br>FSUTIL         显示或配置文件系统属性。<br>FTYPE          显示或修改在文件扩展名关联中使用的文件<br>               类型。<br>GOTO           将 Windows 命令解释程序定向到批处理程序<br>               中某个带标签的行。<br>GPRESULT       显示计算机或用户的组策略信息。<br>GRAFTABL       使 Windows 在图形模式下显示扩展<br>               字符集。<br>HELP           提供 Windows 命令的帮助信息。<br>ICACLS         显示、修改、备份或还原文件和<br>               目录的 ACL。<br>IF             在批处理程序中执行有条件的处理操作。<br>LABEL          创建、更改或删除磁盘的卷标。<br>MD             创建一个目录。<br>MKDIR          创建一个目录。<br>MKLINK         创建符号链接和硬链接<br>MODE           配置系统设备。<br>MORE           逐屏显示输出。<br>MOVE           将一个或多个文件从一个目录移动到另一个<br>               目录。<br>OPENFILES      显示远程用户为了文件共享而打开的文件。<br>PATH           为可执行文件显示或设置搜索路径。<br>PAUSE          暂停批处理文件的处理并显示消息。<br>POPD           还原通过 PUSHD 保存的当前目录的上一个<br>               值。<br>PRINT          打印一个文本文件。<br>PROMPT         更改 Windows 命令提示。<br>PUSHD          保存当前目录，然后对其进行更改。<br>RD             删除目录。<br>RECOVER        从损坏的或有缺陷的磁盘中恢复可读信息。<br>REM            记录批处理文件或 CONFIG.SYS 中的注释(批注)。<br>REN            重命名文件。<br>RENAME         重命名文件。<br>REPLACE        替换文件。<br>RMDIR          删除目录。<br>ROBOCOPY       复制文件和目录树的高级实用工具<br>SET            显示、设置或删除 Windows 环境变量。<br>SETLOCAL       开始本地化批处理文件中的环境更改。<br>SC             显示或配置服务(后台进程)。<br>SCHTASKS       安排在一台计算机上运行命令和程序。<br>SHIFT          调整批处理文件中可替换参数的位置。<br>SHUTDOWN       允许通过本地或远程方式正确关闭计算机。<br>SORT           对输入排序。<br>START          启动单独的窗口以运行指定的程序或命令。<br>SUBST          将路径与驱动器号关联。<br>SYSTEMINFO     显示计算机的特定属性和配置。<br>TASKLIST       显示包括服务在内的所有当前运行的任务。<br>TASKKILL       中止或停止正在运行的进程或应用程序。<br>TIME           显示或设置系统时间。<br>TITLE          设置 CMD.EXE 会话的窗口标题。<br>TREE           以图形方式显示驱动程序或路径的目录<br>               结构。<br>TYPE           显示文本文件的内容。<br>VER            显示 Windows 的版本。<br>VERIFY         告诉 Windows 是否进行验证，以确保文件<br>               正确写入磁盘。<br>VOL            显示磁盘卷标和序列号。<br>XCOPY          复制文件和目录树。<br>WMIC           在交互式命令 shell 中显示 WMI 信息。</p>\n<h1 id=\"通配符\"><a href=\"#通配符\" class=\"headerlink\" title=\"通配符\"></a>通配符</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>通配符</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>*</td>\n<td>匹配任意长度任意字符</td>\n</tr>\n<tr>\n<td>？</td>\n<td>匹配任意单个字符</td>\n</tr>\n<tr>\n<td>^</td>\n<td>匹配指定字符范围外的任意单个字符</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"设置环境变量\"><a href=\"#设置环境变量\" class=\"headerlink\" title=\"设置环境变量\"></a>设置环境变量</h1><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">setx <span class=\"token operator\">-</span>m name <span class=\"token string\">\"%name%;value\"</span>\nsetx <span class=\"token operator\">/</span>m PATH <span class=\"token string\">\"%PATH%;D:\\phpStudy\\nginx\"</span></code></pre>\n"},{"title":"CSS","mathjax":true,"date":"2022-08-29T02:48:25.000Z","description":"css","_content":"\n## CSS\n\n### 盒模型\n\n标准盒模型\n\n+ content\n+ padding\n+ border\n+ margin\n\n> 标准盒模型的宽高为content的宽高\n\nIE盒模型\n\n> IE盒模型的宽高为content+padding+border的宽高\n\n### BFC\n\n> BFC: 块级格式化上下文。\n\nBFC布局规则\n\n+ BFC **内部的**子元素，在垂直方向，**边距会发生重叠**，即会相加\n+ BFC在页面中是独立的容器，外面的元素不会影响里面的元素，反之亦然\n+ **BFC区域不与旁边的`float box`区域重叠**。（可以用来清除浮动带来的影响）\n+ 计算BFC的高度时，浮动的子元素也参与计算\n\nBFC形成\n\n+ overflow: 不为visible，可以让属性是 hidden、auto。【最常用】\n+ 浮动中：float的属性值不为none。意思是，只要设置了浮动，当前元素就创建了BFC\n+ 定位中：只要posiiton的值不是 static或者是relative即可，可以是`absolute`或`fixed`，也就生成了一个BFC\n+ display为inline-block, table-cell, table-caption, flex, inline-flex\n\n### 标准文档流\n\n1. 空白折叠现象\n\n   无论多少个空格、换行、tab，都会折叠为一个空格。\n\n2. 高矮不齐，底边对齐\n\n3. 自动换行，一行写不满，换行写\n\n#### 行内元素和块级元素\n\n**行内元素：**\n\n+ **只占据内容的一部分**\n+ 与其他行内元素并排\n+ 不能设置宽、高。默认的宽度，就是文字的宽度。\n\n```css\ndisplay:inline;\n```\n\n**块级元素：**\n\n+ **占据一整行**\n\n+ 霸占一行，不能与其他任何元素并列\n+ 能接受宽、高。如果不设置宽度，那么宽度将默认变为父亲的100%。\n\n```css\ndisplay:block;\n```\n\ncss中一共有三种手段，使一个元素脱离标准文档流：\n\n+ （1）浮动\n+ （2）绝对定位\n+ （3）固定定位\n\n### CSS的继承性和层叠性\n\n#### 继承性\n\n> 继承性：有一些属性，当给自己设置的时候，自己的后代都继承上了\n\n具有继承性的属性：\n\n+ 字体系列：`font`、`font-family`、`font-weight`、`font-size`、`font-style`\n+ 文本系列：\n  + 内联元素：`color`、`line-height`、`word-spacing`、`letter-spacing`、`text-transform`\n  + 块级元素：`text-indent`、`text-align`\n+ 元素可见性：`visibility`\n+ 表格布局属性：`border-collapse`、`border-spacing`、`empty-cells`、`table-layout`、`caption-side`\n+ 列表布局属性：`list-style`\n\n#### 层叠性\n\n> **层叠性：就是css处理冲突的能力**\n\n权重：`!important`>`行内样式`>`ID选择器`>`类选择器`>`标签选择器`>`通配符(*)`>`继承`>`浏览器默认属性`\n\n权重计算表格\n\n| 选择器               | 选择器权重 |\n| -------------------- | ---------- |\n| 继承或*              | 0,0,0,0    |\n| 标签选择器           | 0,0,0,1    |\n| 类选择器、伪类选择器 | 0,0,1,0    |\n| ID选择器             | 0,1,0,0    |\n| 行内样式(style)      | 1,0,0,0    |\n| !important           | ∞无穷大    |\n\n优先级注意点\n\n1. 权重是由四组数字组成，但是**不会进位**\n2. 可以理解为`类选择`永远大于`标签选择器`，`id选择器`永远大于`类选择器`\n3. **就近原则**，优先级相同则取书写顺序靠后的那个\n\n### px、em、rem的区别\n\n`px`：固定像素\n\n`em`：相对于其父元素`font-size`来设置字体大小\n\n`rem`：相对于根元素的`font-size`大小\n\n使用场景：\n\n+ 对于只需要适配少部分移动设备，且分辨率对页面影响不大的，使用px即可\n+ 对于需要适配各种移动设备，实现[响应式布局](#reactive-layout)，使用rem，例如需要适配iPhone和iPad等分辨率差别比较挺大的设备\n\n### display的属性值及其作用\n\n| 属性值       | 作用                                                     |\n| ------------ | -------------------------------------------------------- |\n| none         | 元素不显示，并且会从文档流中移除                         |\n| block        | 块级型。默认宽度为父元素宽度，可设置宽高，换行显示       |\n| inline       | 行内元素类型。默认宽高为内容宽度，不可设置宽高，同行显示 |\n| inline-block | 默认宽度为内容宽度，可以设置宽高，同行显示               |\n| table        | 此元素会作为块级表格来显示                               |\n| inherit      | 规定应该从父元素继承display属性的值                      |\n| list-item    | 像块类型元素一样显示，并添加样式列表标记                 |\n\n\n\n### 定位属性\n\n> 默认文档流中，在一个父容器里放置多个块级的子元素，那么，这些子元素会默认从上往下排列。\n\nposition属性值：\n\n| 属性值   | 概述                                                         |\n| -------- | ------------------------------------------------------------ |\n| absolute | 绝对定位，相对于static定位以外的一个父元素进行定位。元素的位置通过left、top、right、bottom属性进行规定 |\n| relative | 相对定位，相对于其原来的位置进行定位。元素的位置通过left、top、right、bottom属性进行规定 |\n| fixed    | 固定定位，指定元素相对于屏幕视⼝（viewport）的位置来指定元素位置。元素的位置在屏幕滚动时不会改变，⽐如回到顶部的按钮⼀般都是⽤此定位⽅式 |\n| static   | 默认值，没有定位，元素出现在正常的文档流中，会忽略 top, bottom, left, right 或者 z-index 声明，块级元素从上往下纵向排布，⾏级元素从左向右排列 |\n| inherit  | 规定从父元素继承position属性的值                             |\n\n脱离文档流的属性：`absolute`、`fixed`\n\n#### 相对定位\n\n相对定位：让元素相对于自己原来的位置，进行位置调整\n\n```css\n.div{\n    position: relative;\n    left: 50px;\n    top: 50px;\n    width: 200px;\n    height: 200px;\n    border: 1px solid red;\n}\n```\n\n![image-20220609202453294](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220609214047.png)\n\n相对定位：不脱离文档流。不脱标，老家留坑，**别人不会把它的位置挤走**。\n\n用途：\n\n1. 微调元素\n2. 做绝对定位的参考，子绝父相\n\n#### 绝对定位\n\n绝对定位：定义横纵坐标。原点在父容器的左上角或左下角。\n\n**绝对定位的盒子脱离了标准文档流。**\n\n所以，所有的标准文档流的性质，绝对定位之后都不遵守了。\n\n绝对定位之后，标签就不区分所谓的行内元素、块级元素了，不需要`display:block`就可以设置宽、高了。\n\n1. 子绝父相\n\n子元素为绝对定位，父元素为相对定位。通常用于实现压盖效果。\n\n要听最近的已经定位的祖先元素的，不一定是父亲，可能是爷爷。\n\n不一定是相对定位，任何定位，都可以作为儿子的参考点。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>Document</title>\n\t<style type=\"text/css\">\n\t\t.box{\n\t\t\tmargin: 100px;\n\t\t\twidth: 308px;\n\t\t\theight: 307px;\n\t\t\tborder: 1px solid #FF7E00;\n\t\t\tposition: relative;  /*子绝父相*/\n\n\t\t}\n\t\t.box .image img{\n\t\t\twidth: 308px;\n\t\t\theight: 196px;\n\t\t}\n\t\t.box .dtc{\n\t\t\tdisplay: block;  /*转为块级元素，才能设置span的宽高*/\n\t\t\twidth: 52px;\n\t\t\theight: 28px;\n\t\t\tbackground-image: url(http://img.smyhvae.com/20180116_1115.png);\n\t\t\tbackground-position: -108px 0px; /*这里用到了精灵图*/\n\t\t\tposition: absolute;  /*采用绝对定位的方式，将精灵图盖在最上层*/\n\t\t\ttop: -9px;\n\t\t\tleft: 13px;\n\t\t}\n\t\t.box h4{\n\t\t\tbackground-color: black;\n\t\t\tcolor: white;\n\t\t\twidth:308px;\n\t\t\theight: 40px;\n\t\t\tline-height: 40px;\n\t\t\tposition: absolute;\n\t\t\ttop: 156px;\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"box\">\n\t\t<span class=\"dtc\"></span>\n\t\t<div class=\"image\">\n\t\t\t<img src=\"http://img.smyhvae.com/20180116_1116.jpg\" alt=\"\">\n\t\t</div>\n\t\t<h4>广东深圳宝安区建安一路海雅缤纷城4楼</h4>\n\t</div>\n</body>\n</html>\n```\n\n![image-20220609204650705](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220609214102.png)\n\n#### 固定定位\n\n固定定位：就是相对浏览器窗口进行定位。无论页面如何滚动，这个盒子显示的位置不变。\n\n**用途1**：网页右下角的“返回到顶部”\n\n```css\n.backtop{\n    position: fixed;\n    bottom: 100px;\n    right: 30px;\n    width: 60px;\n    height: 60px;\n    background-color: gray;\n    text-align: center;\n    line-height:30px;\n    color:white;\n    text-decoration: none;   /*去掉超链接的下划线*/\n}\n```\n\n**用途2：**顶部导航条\n\n#### 粘性定位\n\n粘性定位的元素是依赖于用户的滚动，在 **position:relative** 与 **position:fixed** 定位之间切换。它的行为就像 **position:relative;** 而当页面滚动超出目标区域时，它的表现就像 **position:fixed;**，它会固定在目标位置。元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。这个特定阈值指的是 top, right, bottom 或 left 之一，换言之，指定 top, right, bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同\n\n### flex布局\n\n1. **flex 布局的子元素不会脱离文档流**，很好地遵从了“流的特性”。\n\n但你如果用 float 来做布局，float 属性的元素会脱离文档流，而且会涉及到各种 BFC、清除浮动的问题。浮动相关的问题，比较麻烦，所以也成了面试必问的经典题目。但有了 flex 布局之后，这些问题都不存在的。\n\n2. **flex 是一种现代的布局方式，是 W3C 第一次提供真正用于布局的 CSS 规范**。 flex 非常提供了丰富的属性，非常灵活，让布局的实现更佳多样化，且方便易用。\n\nflex 唯一的缺点就在于，它不支持低版本的 IE 浏览器。\n\n+ **弹性盒子**：指的是使用 `display:flex` 或 `display:inline-flex` 声明的**父容器**。\n+ **子元素/弹性元素**：指的是父容器里面的子元素们（父容器被声明为 flex 盒子的情况下）。\n+ 主轴：flex容器的主轴，默认是水平方向，从左向右。\n+ 侧轴：与主轴垂直的轴称作侧轴，默认是垂直方向，从上往下。\n\n#### flex\n\nflex：定义子项目分配剩余空间\n\n```css\n.div{\n    flex: 1;\n}\n```\n\n#### flex-wrap\n\n`flex-wrap`：控制子元素溢出时的换行处理。\n\nflex-wrap: wrap 换行\n\n#### flex-direction\n\n设置主轴排列方向 默认从左到右排列\n\n| 属性值         | 描述                             |\n| :------------- | :------------------------------- |\n| row            | 从左到右水平排列子元素（默认值） |\n| column         | 从上到下垂直排列子元素           |\n| row-reverse    | 从右向左排列子元素               |\n| column-reverse | 从下到上垂直排列子元素           |\n\n#### justify-content\n\n`justify-content`：控制子元素在主轴上的排列方式。 默认为水平方向\n\n+ `flex-start` 从主轴的起点对齐（默认值）\n+ `flex-end` 从主轴的终点对齐\n+ `center` 居中对齐\n+ `space-around` 在父盒子里平分\n+ `space-between` 两端对齐 平分\n\n#### align-items\n\n`align-items`：设置子元素在**侧轴上的对齐方式**。 默认为垂直方向 **单行情况**\n\n+ `flex-start` 从侧轴开始的方向对齐 \n+ `flex-end` 从侧轴结束的方向对齐 \n+ `baseline` 基线 默认同flex-start \n+ `center` 中间对齐 \n+ `stretch` 拉伸\n\n#### aligin-content\n\n`aligin-content`：设置子元素在**侧轴上的对齐方式**。 默认为垂直方向 **只适用于多行**\n\n+ `flex-start` 从侧轴开始的方向对齐 \n+ `flex-end` 从侧轴结束的方向对齐 \n+ `baseline` 基线 默认同flex-start \n+ `center` 中间对齐 \n+ `stretch` 拉伸\n\n#### flex\n\n `flex`属性：设置子盒子的权重\n\n### 水平垂直居中\n\n#### 行内元素\n\n父容器设置\n\n```css\n.father{\n    /*水平居中*/\n    text-align:center;\n    /*垂直居中*/\n    line-height:center;\n}\n```\n\n#### 块级元素\n\n1.绝对定位 + margin（需要指定子元素的宽高，不推荐）\n\n```css\n.father{\n    position: relative;\n    background: pink;\n}\n.son {\n    position: absolute;\n    width: 200px;\n    height: 100px;\n    background: red;\n    top: 50%;\n    left: 50%;\n    margin-top: -50px; /*高的一半*/\n    margin-left: -100px; /*宽的一半*/\n}\n```\n\n2. 绝对定位 + translate（无需指定子元素的宽高，推荐）\n\n```css\n.father{\n    position: relative;\n    background: pink;\n}\n.son {\n    position: absolute;\n    background: red;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n```\n\n这种写法，在没有指定子元素宽高的情况下，也能让其在父容器中垂直居中。因为 translate() 函数中使用百分比值时，是以这个元素自身的宽度和高度为基准进行换算和移动的（**动态计算宽高**）.\n\n3. flex布局（待改进）\n\n```css\n.father{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: pink;\n}\n.son {\n    background: red;\n}\n```\n\n父容器里的所有子元素们都垂直居中了\n\n4. flex 布局 + margin: auto（推荐）\n\n```css\n.father{\n    display: flex;\n    background: pink;\n}\n.son {\n    margin: auto;\n    background: red;\n}\n```\n\n当我们给父容器使用 Flex 布局 时，子元素的`margin: auto`不仅能让其在水平方向上居中，**垂直方向上也是居中的**。\n\n### 常规布局\n\n#### 单栏布局\n\n实现：`max-width: 400px;`\n\n```html\n<div class=\"header\"></div>\n<div class=\"content\"></div>\n<div class=\"footer\"></div>\n\n.header {\n    max-width: 180px;\n    margin: 10px auto;\n    height: 30px;\n    background: lawngreen;\n}\n.content {\n    max-width: 180px;\n    height: 180px;\n    margin: 20px auto;\n    background: indianred;\n}\n.footer {\n    margin: 10px auto;\n    height: 30px;\n    max-width: 180px;\n    background: blue;\n}\n```\n\n\n\n#### 两栏布局 (一栏固定 + 一栏自适应布局)\n\n1. 利用浮动，左边元素设置左浮动、固定宽度，右边元素设置`margin-left`为固定宽度，`width: auto;`\n\n```css\n.container{\n\theight: 200px;\n}\n.left{\n    float: left;\n    width: 200px;\n    height: 100%;\n}\n.right{\n    margin-left: 200px;\n    height: 100%;\n}\n```\n\n2. 同样利用浮动，左边元素设置左浮动、固定宽度，右边元素设置`overflow: hidden`为固定宽度\n\n```css\n.right{\n    overflow: hidden;\n    height: 100%;\n}\n```\n\n3. 利用`flex`布局，左边元素固定宽度，右边的元素设置 `flex: 1`\n\n```css\n.container{\n    display: flex;\n\theight: 200px;\n}\n.right{\n    flex: 1;\n}\n```\n\n#### 圣杯布局和双飞翼布局 (三栏布局)\n\n特点：两侧内容固定，中间内容随着宽度自适应\n\n实现：\n\n+ `float`布局\n+ 两侧使用`margin`负值，以便和中间内容横向重叠\n+ 防止中间内容两侧覆盖，圣杯布局用`padding`，双飞翼布局用`margin`\n\n##### 圣杯布局\n\n```html\n<div class=\"container\">\n  <div class=\"center\">我是中间</div>\n  <div class=\"left\">我是左边</div>\n  <div class=\"right\">我是右边</div>\n</div>\n\n.container{\n\tpadding-left: 200px;\n  \tpadding-right: 200px;\n  \toverflow: auto;\n}\n.center{ \n\tfloat: left;\n\twidth: 100%;\n}\n.left{\n\tfloat: left;\n\twidth: 200px;\n\tposition: relative;\n\tleft: -200px;\n\tmargin-left: -100%;\n}\n.right{ \n\tfloat: left;\n\twidth: 200px;\n\tposition: relative;\n\tmargin-right: -200px;\n}\n```\n\n##### 双飞翼布局\n\n```html\n<div class=\"container\">\n    <div class=\"center\">\n      <div class=\"inner\">双飞翼布局</div>\n    </div>\n    <div class=\"left\"></div>\n    <div class=\"right\"></div>\n </div>\n\n.center{\n\twidth: 100%;\n}\n.inner{\n\tmargin: 0 200px;\n}\n```\n\n### 响应式布局\n\n[响应式布局](https://juejin.cn/post/6844903814332432397)\n\n### element-ui\n\n1. 表头、单元格样式设置\n\n```html\n<el-table\n  max-height=\"500\"\n  :cell-style=\"{ textAlign: 'center' }\"\n  :header-cell-style=\"{\n    textAlign: 'center',\n    background: '#E4EEF6',\n    height: '21px',\n  }\"\n  @row-click=\"enterpriseDetail\"\n  \n  :data=\"tableInfo\"\n>\n```\n\n","source":"_posts/CSS.md","raw":"---\ntitle: CSS\nmathjax: true\ndate: 2022-08-29 10:48:25\ntags: [css,前端]\ncategories:\ndescription: css\n---\n\n## CSS\n\n### 盒模型\n\n标准盒模型\n\n+ content\n+ padding\n+ border\n+ margin\n\n> 标准盒模型的宽高为content的宽高\n\nIE盒模型\n\n> IE盒模型的宽高为content+padding+border的宽高\n\n### BFC\n\n> BFC: 块级格式化上下文。\n\nBFC布局规则\n\n+ BFC **内部的**子元素，在垂直方向，**边距会发生重叠**，即会相加\n+ BFC在页面中是独立的容器，外面的元素不会影响里面的元素，反之亦然\n+ **BFC区域不与旁边的`float box`区域重叠**。（可以用来清除浮动带来的影响）\n+ 计算BFC的高度时，浮动的子元素也参与计算\n\nBFC形成\n\n+ overflow: 不为visible，可以让属性是 hidden、auto。【最常用】\n+ 浮动中：float的属性值不为none。意思是，只要设置了浮动，当前元素就创建了BFC\n+ 定位中：只要posiiton的值不是 static或者是relative即可，可以是`absolute`或`fixed`，也就生成了一个BFC\n+ display为inline-block, table-cell, table-caption, flex, inline-flex\n\n### 标准文档流\n\n1. 空白折叠现象\n\n   无论多少个空格、换行、tab，都会折叠为一个空格。\n\n2. 高矮不齐，底边对齐\n\n3. 自动换行，一行写不满，换行写\n\n#### 行内元素和块级元素\n\n**行内元素：**\n\n+ **只占据内容的一部分**\n+ 与其他行内元素并排\n+ 不能设置宽、高。默认的宽度，就是文字的宽度。\n\n```css\ndisplay:inline;\n```\n\n**块级元素：**\n\n+ **占据一整行**\n\n+ 霸占一行，不能与其他任何元素并列\n+ 能接受宽、高。如果不设置宽度，那么宽度将默认变为父亲的100%。\n\n```css\ndisplay:block;\n```\n\ncss中一共有三种手段，使一个元素脱离标准文档流：\n\n+ （1）浮动\n+ （2）绝对定位\n+ （3）固定定位\n\n### CSS的继承性和层叠性\n\n#### 继承性\n\n> 继承性：有一些属性，当给自己设置的时候，自己的后代都继承上了\n\n具有继承性的属性：\n\n+ 字体系列：`font`、`font-family`、`font-weight`、`font-size`、`font-style`\n+ 文本系列：\n  + 内联元素：`color`、`line-height`、`word-spacing`、`letter-spacing`、`text-transform`\n  + 块级元素：`text-indent`、`text-align`\n+ 元素可见性：`visibility`\n+ 表格布局属性：`border-collapse`、`border-spacing`、`empty-cells`、`table-layout`、`caption-side`\n+ 列表布局属性：`list-style`\n\n#### 层叠性\n\n> **层叠性：就是css处理冲突的能力**\n\n权重：`!important`>`行内样式`>`ID选择器`>`类选择器`>`标签选择器`>`通配符(*)`>`继承`>`浏览器默认属性`\n\n权重计算表格\n\n| 选择器               | 选择器权重 |\n| -------------------- | ---------- |\n| 继承或*              | 0,0,0,0    |\n| 标签选择器           | 0,0,0,1    |\n| 类选择器、伪类选择器 | 0,0,1,0    |\n| ID选择器             | 0,1,0,0    |\n| 行内样式(style)      | 1,0,0,0    |\n| !important           | ∞无穷大    |\n\n优先级注意点\n\n1. 权重是由四组数字组成，但是**不会进位**\n2. 可以理解为`类选择`永远大于`标签选择器`，`id选择器`永远大于`类选择器`\n3. **就近原则**，优先级相同则取书写顺序靠后的那个\n\n### px、em、rem的区别\n\n`px`：固定像素\n\n`em`：相对于其父元素`font-size`来设置字体大小\n\n`rem`：相对于根元素的`font-size`大小\n\n使用场景：\n\n+ 对于只需要适配少部分移动设备，且分辨率对页面影响不大的，使用px即可\n+ 对于需要适配各种移动设备，实现[响应式布局](#reactive-layout)，使用rem，例如需要适配iPhone和iPad等分辨率差别比较挺大的设备\n\n### display的属性值及其作用\n\n| 属性值       | 作用                                                     |\n| ------------ | -------------------------------------------------------- |\n| none         | 元素不显示，并且会从文档流中移除                         |\n| block        | 块级型。默认宽度为父元素宽度，可设置宽高，换行显示       |\n| inline       | 行内元素类型。默认宽高为内容宽度，不可设置宽高，同行显示 |\n| inline-block | 默认宽度为内容宽度，可以设置宽高，同行显示               |\n| table        | 此元素会作为块级表格来显示                               |\n| inherit      | 规定应该从父元素继承display属性的值                      |\n| list-item    | 像块类型元素一样显示，并添加样式列表标记                 |\n\n\n\n### 定位属性\n\n> 默认文档流中，在一个父容器里放置多个块级的子元素，那么，这些子元素会默认从上往下排列。\n\nposition属性值：\n\n| 属性值   | 概述                                                         |\n| -------- | ------------------------------------------------------------ |\n| absolute | 绝对定位，相对于static定位以外的一个父元素进行定位。元素的位置通过left、top、right、bottom属性进行规定 |\n| relative | 相对定位，相对于其原来的位置进行定位。元素的位置通过left、top、right、bottom属性进行规定 |\n| fixed    | 固定定位，指定元素相对于屏幕视⼝（viewport）的位置来指定元素位置。元素的位置在屏幕滚动时不会改变，⽐如回到顶部的按钮⼀般都是⽤此定位⽅式 |\n| static   | 默认值，没有定位，元素出现在正常的文档流中，会忽略 top, bottom, left, right 或者 z-index 声明，块级元素从上往下纵向排布，⾏级元素从左向右排列 |\n| inherit  | 规定从父元素继承position属性的值                             |\n\n脱离文档流的属性：`absolute`、`fixed`\n\n#### 相对定位\n\n相对定位：让元素相对于自己原来的位置，进行位置调整\n\n```css\n.div{\n    position: relative;\n    left: 50px;\n    top: 50px;\n    width: 200px;\n    height: 200px;\n    border: 1px solid red;\n}\n```\n\n![image-20220609202453294](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220609214047.png)\n\n相对定位：不脱离文档流。不脱标，老家留坑，**别人不会把它的位置挤走**。\n\n用途：\n\n1. 微调元素\n2. 做绝对定位的参考，子绝父相\n\n#### 绝对定位\n\n绝对定位：定义横纵坐标。原点在父容器的左上角或左下角。\n\n**绝对定位的盒子脱离了标准文档流。**\n\n所以，所有的标准文档流的性质，绝对定位之后都不遵守了。\n\n绝对定位之后，标签就不区分所谓的行内元素、块级元素了，不需要`display:block`就可以设置宽、高了。\n\n1. 子绝父相\n\n子元素为绝对定位，父元素为相对定位。通常用于实现压盖效果。\n\n要听最近的已经定位的祖先元素的，不一定是父亲，可能是爷爷。\n\n不一定是相对定位，任何定位，都可以作为儿子的参考点。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>Document</title>\n\t<style type=\"text/css\">\n\t\t.box{\n\t\t\tmargin: 100px;\n\t\t\twidth: 308px;\n\t\t\theight: 307px;\n\t\t\tborder: 1px solid #FF7E00;\n\t\t\tposition: relative;  /*子绝父相*/\n\n\t\t}\n\t\t.box .image img{\n\t\t\twidth: 308px;\n\t\t\theight: 196px;\n\t\t}\n\t\t.box .dtc{\n\t\t\tdisplay: block;  /*转为块级元素，才能设置span的宽高*/\n\t\t\twidth: 52px;\n\t\t\theight: 28px;\n\t\t\tbackground-image: url(http://img.smyhvae.com/20180116_1115.png);\n\t\t\tbackground-position: -108px 0px; /*这里用到了精灵图*/\n\t\t\tposition: absolute;  /*采用绝对定位的方式，将精灵图盖在最上层*/\n\t\t\ttop: -9px;\n\t\t\tleft: 13px;\n\t\t}\n\t\t.box h4{\n\t\t\tbackground-color: black;\n\t\t\tcolor: white;\n\t\t\twidth:308px;\n\t\t\theight: 40px;\n\t\t\tline-height: 40px;\n\t\t\tposition: absolute;\n\t\t\ttop: 156px;\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"box\">\n\t\t<span class=\"dtc\"></span>\n\t\t<div class=\"image\">\n\t\t\t<img src=\"http://img.smyhvae.com/20180116_1116.jpg\" alt=\"\">\n\t\t</div>\n\t\t<h4>广东深圳宝安区建安一路海雅缤纷城4楼</h4>\n\t</div>\n</body>\n</html>\n```\n\n![image-20220609204650705](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220609214102.png)\n\n#### 固定定位\n\n固定定位：就是相对浏览器窗口进行定位。无论页面如何滚动，这个盒子显示的位置不变。\n\n**用途1**：网页右下角的“返回到顶部”\n\n```css\n.backtop{\n    position: fixed;\n    bottom: 100px;\n    right: 30px;\n    width: 60px;\n    height: 60px;\n    background-color: gray;\n    text-align: center;\n    line-height:30px;\n    color:white;\n    text-decoration: none;   /*去掉超链接的下划线*/\n}\n```\n\n**用途2：**顶部导航条\n\n#### 粘性定位\n\n粘性定位的元素是依赖于用户的滚动，在 **position:relative** 与 **position:fixed** 定位之间切换。它的行为就像 **position:relative;** 而当页面滚动超出目标区域时，它的表现就像 **position:fixed;**，它会固定在目标位置。元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。这个特定阈值指的是 top, right, bottom 或 left 之一，换言之，指定 top, right, bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同\n\n### flex布局\n\n1. **flex 布局的子元素不会脱离文档流**，很好地遵从了“流的特性”。\n\n但你如果用 float 来做布局，float 属性的元素会脱离文档流，而且会涉及到各种 BFC、清除浮动的问题。浮动相关的问题，比较麻烦，所以也成了面试必问的经典题目。但有了 flex 布局之后，这些问题都不存在的。\n\n2. **flex 是一种现代的布局方式，是 W3C 第一次提供真正用于布局的 CSS 规范**。 flex 非常提供了丰富的属性，非常灵活，让布局的实现更佳多样化，且方便易用。\n\nflex 唯一的缺点就在于，它不支持低版本的 IE 浏览器。\n\n+ **弹性盒子**：指的是使用 `display:flex` 或 `display:inline-flex` 声明的**父容器**。\n+ **子元素/弹性元素**：指的是父容器里面的子元素们（父容器被声明为 flex 盒子的情况下）。\n+ 主轴：flex容器的主轴，默认是水平方向，从左向右。\n+ 侧轴：与主轴垂直的轴称作侧轴，默认是垂直方向，从上往下。\n\n#### flex\n\nflex：定义子项目分配剩余空间\n\n```css\n.div{\n    flex: 1;\n}\n```\n\n#### flex-wrap\n\n`flex-wrap`：控制子元素溢出时的换行处理。\n\nflex-wrap: wrap 换行\n\n#### flex-direction\n\n设置主轴排列方向 默认从左到右排列\n\n| 属性值         | 描述                             |\n| :------------- | :------------------------------- |\n| row            | 从左到右水平排列子元素（默认值） |\n| column         | 从上到下垂直排列子元素           |\n| row-reverse    | 从右向左排列子元素               |\n| column-reverse | 从下到上垂直排列子元素           |\n\n#### justify-content\n\n`justify-content`：控制子元素在主轴上的排列方式。 默认为水平方向\n\n+ `flex-start` 从主轴的起点对齐（默认值）\n+ `flex-end` 从主轴的终点对齐\n+ `center` 居中对齐\n+ `space-around` 在父盒子里平分\n+ `space-between` 两端对齐 平分\n\n#### align-items\n\n`align-items`：设置子元素在**侧轴上的对齐方式**。 默认为垂直方向 **单行情况**\n\n+ `flex-start` 从侧轴开始的方向对齐 \n+ `flex-end` 从侧轴结束的方向对齐 \n+ `baseline` 基线 默认同flex-start \n+ `center` 中间对齐 \n+ `stretch` 拉伸\n\n#### aligin-content\n\n`aligin-content`：设置子元素在**侧轴上的对齐方式**。 默认为垂直方向 **只适用于多行**\n\n+ `flex-start` 从侧轴开始的方向对齐 \n+ `flex-end` 从侧轴结束的方向对齐 \n+ `baseline` 基线 默认同flex-start \n+ `center` 中间对齐 \n+ `stretch` 拉伸\n\n#### flex\n\n `flex`属性：设置子盒子的权重\n\n### 水平垂直居中\n\n#### 行内元素\n\n父容器设置\n\n```css\n.father{\n    /*水平居中*/\n    text-align:center;\n    /*垂直居中*/\n    line-height:center;\n}\n```\n\n#### 块级元素\n\n1.绝对定位 + margin（需要指定子元素的宽高，不推荐）\n\n```css\n.father{\n    position: relative;\n    background: pink;\n}\n.son {\n    position: absolute;\n    width: 200px;\n    height: 100px;\n    background: red;\n    top: 50%;\n    left: 50%;\n    margin-top: -50px; /*高的一半*/\n    margin-left: -100px; /*宽的一半*/\n}\n```\n\n2. 绝对定位 + translate（无需指定子元素的宽高，推荐）\n\n```css\n.father{\n    position: relative;\n    background: pink;\n}\n.son {\n    position: absolute;\n    background: red;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n```\n\n这种写法，在没有指定子元素宽高的情况下，也能让其在父容器中垂直居中。因为 translate() 函数中使用百分比值时，是以这个元素自身的宽度和高度为基准进行换算和移动的（**动态计算宽高**）.\n\n3. flex布局（待改进）\n\n```css\n.father{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: pink;\n}\n.son {\n    background: red;\n}\n```\n\n父容器里的所有子元素们都垂直居中了\n\n4. flex 布局 + margin: auto（推荐）\n\n```css\n.father{\n    display: flex;\n    background: pink;\n}\n.son {\n    margin: auto;\n    background: red;\n}\n```\n\n当我们给父容器使用 Flex 布局 时，子元素的`margin: auto`不仅能让其在水平方向上居中，**垂直方向上也是居中的**。\n\n### 常规布局\n\n#### 单栏布局\n\n实现：`max-width: 400px;`\n\n```html\n<div class=\"header\"></div>\n<div class=\"content\"></div>\n<div class=\"footer\"></div>\n\n.header {\n    max-width: 180px;\n    margin: 10px auto;\n    height: 30px;\n    background: lawngreen;\n}\n.content {\n    max-width: 180px;\n    height: 180px;\n    margin: 20px auto;\n    background: indianred;\n}\n.footer {\n    margin: 10px auto;\n    height: 30px;\n    max-width: 180px;\n    background: blue;\n}\n```\n\n\n\n#### 两栏布局 (一栏固定 + 一栏自适应布局)\n\n1. 利用浮动，左边元素设置左浮动、固定宽度，右边元素设置`margin-left`为固定宽度，`width: auto;`\n\n```css\n.container{\n\theight: 200px;\n}\n.left{\n    float: left;\n    width: 200px;\n    height: 100%;\n}\n.right{\n    margin-left: 200px;\n    height: 100%;\n}\n```\n\n2. 同样利用浮动，左边元素设置左浮动、固定宽度，右边元素设置`overflow: hidden`为固定宽度\n\n```css\n.right{\n    overflow: hidden;\n    height: 100%;\n}\n```\n\n3. 利用`flex`布局，左边元素固定宽度，右边的元素设置 `flex: 1`\n\n```css\n.container{\n    display: flex;\n\theight: 200px;\n}\n.right{\n    flex: 1;\n}\n```\n\n#### 圣杯布局和双飞翼布局 (三栏布局)\n\n特点：两侧内容固定，中间内容随着宽度自适应\n\n实现：\n\n+ `float`布局\n+ 两侧使用`margin`负值，以便和中间内容横向重叠\n+ 防止中间内容两侧覆盖，圣杯布局用`padding`，双飞翼布局用`margin`\n\n##### 圣杯布局\n\n```html\n<div class=\"container\">\n  <div class=\"center\">我是中间</div>\n  <div class=\"left\">我是左边</div>\n  <div class=\"right\">我是右边</div>\n</div>\n\n.container{\n\tpadding-left: 200px;\n  \tpadding-right: 200px;\n  \toverflow: auto;\n}\n.center{ \n\tfloat: left;\n\twidth: 100%;\n}\n.left{\n\tfloat: left;\n\twidth: 200px;\n\tposition: relative;\n\tleft: -200px;\n\tmargin-left: -100%;\n}\n.right{ \n\tfloat: left;\n\twidth: 200px;\n\tposition: relative;\n\tmargin-right: -200px;\n}\n```\n\n##### 双飞翼布局\n\n```html\n<div class=\"container\">\n    <div class=\"center\">\n      <div class=\"inner\">双飞翼布局</div>\n    </div>\n    <div class=\"left\"></div>\n    <div class=\"right\"></div>\n </div>\n\n.center{\n\twidth: 100%;\n}\n.inner{\n\tmargin: 0 200px;\n}\n```\n\n### 响应式布局\n\n[响应式布局](https://juejin.cn/post/6844903814332432397)\n\n### element-ui\n\n1. 表头、单元格样式设置\n\n```html\n<el-table\n  max-height=\"500\"\n  :cell-style=\"{ textAlign: 'center' }\"\n  :header-cell-style=\"{\n    textAlign: 'center',\n    background: '#E4EEF6',\n    height: '21px',\n  }\"\n  @row-click=\"enterpriseDetail\"\n  \n  :data=\"tableInfo\"\n>\n```\n\n","slug":"CSS","published":1,"updated":"2022-09-09T00:41:34.828Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt220003jsvk8rigfv8n","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><h3 id=\"盒模型\"><a href=\"#盒模型\" class=\"headerlink\" title=\"盒模型\"></a>盒模型</h3><p>标准盒模型</p>\n<ul>\n<li>content</li>\n<li>padding</li>\n<li>border</li>\n<li>margin</li>\n</ul>\n<blockquote>\n<p>标准盒模型的宽高为content的宽高</p>\n</blockquote>\n<p>IE盒模型</p>\n<blockquote>\n<p>IE盒模型的宽高为content+padding+border的宽高</p>\n</blockquote>\n<h3 id=\"BFC\"><a href=\"#BFC\" class=\"headerlink\" title=\"BFC\"></a>BFC</h3><blockquote>\n<p>BFC: 块级格式化上下文。</p>\n</blockquote>\n<p>BFC布局规则</p>\n<ul>\n<li>BFC <strong>内部的</strong>子元素，在垂直方向，<strong>边距会发生重叠</strong>，即会相加</li>\n<li>BFC在页面中是独立的容器，外面的元素不会影响里面的元素，反之亦然</li>\n<li><strong>BFC区域不与旁边的<code>float box</code>区域重叠</strong>。（可以用来清除浮动带来的影响）</li>\n<li>计算BFC的高度时，浮动的子元素也参与计算</li>\n</ul>\n<p>BFC形成</p>\n<ul>\n<li>overflow: 不为visible，可以让属性是 hidden、auto。【最常用】</li>\n<li>浮动中：float的属性值不为none。意思是，只要设置了浮动，当前元素就创建了BFC</li>\n<li>定位中：只要posiiton的值不是 static或者是relative即可，可以是<code>absolute</code>或<code>fixed</code>，也就生成了一个BFC</li>\n<li>display为inline-block, table-cell, table-caption, flex, inline-flex</li>\n</ul>\n<h3 id=\"标准文档流\"><a href=\"#标准文档流\" class=\"headerlink\" title=\"标准文档流\"></a>标准文档流</h3><ol>\n<li><p>空白折叠现象</p>\n<p>无论多少个空格、换行、tab，都会折叠为一个空格。</p>\n</li>\n<li><p>高矮不齐，底边对齐</p>\n</li>\n<li><p>自动换行，一行写不满，换行写</p>\n</li>\n</ol>\n<h4 id=\"行内元素和块级元素\"><a href=\"#行内元素和块级元素\" class=\"headerlink\" title=\"行内元素和块级元素\"></a>行内元素和块级元素</h4><p><strong>行内元素：</strong></p>\n<ul>\n<li><strong>只占据内容的一部分</strong></li>\n<li>与其他行内元素并排</li>\n<li>不能设置宽、高。默认的宽度，就是文字的宽度。</li>\n</ul>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span>inline<span class=\"token punctuation\">;</span></code></pre>\n<p><strong>块级元素：</strong></p>\n<ul>\n<li><p><strong>占据一整行</strong></p>\n</li>\n<li><p>霸占一行，不能与其他任何元素并列</p>\n</li>\n<li>能接受宽、高。如果不设置宽度，那么宽度将默认变为父亲的100%。</li>\n</ul>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span>block<span class=\"token punctuation\">;</span></code></pre>\n<p>css中一共有三种手段，使一个元素脱离标准文档流：</p>\n<ul>\n<li>（1）浮动</li>\n<li>（2）绝对定位</li>\n<li>（3）固定定位</li>\n</ul>\n<h3 id=\"CSS的继承性和层叠性\"><a href=\"#CSS的继承性和层叠性\" class=\"headerlink\" title=\"CSS的继承性和层叠性\"></a>CSS的继承性和层叠性</h3><h4 id=\"继承性\"><a href=\"#继承性\" class=\"headerlink\" title=\"继承性\"></a>继承性</h4><blockquote>\n<p>继承性：有一些属性，当给自己设置的时候，自己的后代都继承上了</p>\n</blockquote>\n<p>具有继承性的属性：</p>\n<ul>\n<li>字体系列：<code>font</code>、<code>font-family</code>、<code>font-weight</code>、<code>font-size</code>、<code>font-style</code></li>\n<li>文本系列：<ul>\n<li>内联元素：<code>color</code>、<code>line-height</code>、<code>word-spacing</code>、<code>letter-spacing</code>、<code>text-transform</code></li>\n<li>块级元素：<code>text-indent</code>、<code>text-align</code></li>\n</ul>\n</li>\n<li>元素可见性：<code>visibility</code></li>\n<li>表格布局属性：<code>border-collapse</code>、<code>border-spacing</code>、<code>empty-cells</code>、<code>table-layout</code>、<code>caption-side</code></li>\n<li>列表布局属性：<code>list-style</code></li>\n</ul>\n<h4 id=\"层叠性\"><a href=\"#层叠性\" class=\"headerlink\" title=\"层叠性\"></a>层叠性</h4><blockquote>\n<p><strong>层叠性：就是css处理冲突的能力</strong></p>\n</blockquote>\n<p>权重：<code>!important</code>&gt;<code>行内样式</code>&gt;<code>ID选择器</code>&gt;<code>类选择器</code>&gt;<code>标签选择器</code>&gt;<code>通配符(*)</code>&gt;<code>继承</code>&gt;<code>浏览器默认属性</code></p>\n<p>权重计算表格</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>选择器权重</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>继承或*</td>\n<td>0,0,0,0</td>\n</tr>\n<tr>\n<td>标签选择器</td>\n<td>0,0,0,1</td>\n</tr>\n<tr>\n<td>类选择器、伪类选择器</td>\n<td>0,0,1,0</td>\n</tr>\n<tr>\n<td>ID选择器</td>\n<td>0,1,0,0</td>\n</tr>\n<tr>\n<td>行内样式(style)</td>\n<td>1,0,0,0</td>\n</tr>\n<tr>\n<td>!important</td>\n<td>∞无穷大</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>优先级注意点</p>\n<ol>\n<li>权重是由四组数字组成，但是<strong>不会进位</strong></li>\n<li>可以理解为<code>类选择</code>永远大于<code>标签选择器</code>，<code>id选择器</code>永远大于<code>类选择器</code></li>\n<li><strong>就近原则</strong>，优先级相同则取书写顺序靠后的那个</li>\n</ol>\n<h3 id=\"px、em、rem的区别\"><a href=\"#px、em、rem的区别\" class=\"headerlink\" title=\"px、em、rem的区别\"></a>px、em、rem的区别</h3><p><code>px</code>：固定像素</p>\n<p><code>em</code>：相对于其父元素<code>font-size</code>来设置字体大小</p>\n<p><code>rem</code>：相对于根元素的<code>font-size</code>大小</p>\n<p>使用场景：</p>\n<ul>\n<li>对于只需要适配少部分移动设备，且分辨率对页面影响不大的，使用px即可</li>\n<li>对于需要适配各种移动设备，实现<a href=\"#reactive-layout\">响应式布局</a>，使用rem，例如需要适配iPhone和iPad等分辨率差别比较挺大的设备</li>\n</ul>\n<h3 id=\"display的属性值及其作用\"><a href=\"#display的属性值及其作用\" class=\"headerlink\" title=\"display的属性值及其作用\"></a>display的属性值及其作用</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>none</td>\n<td>元素不显示，并且会从文档流中移除</td>\n</tr>\n<tr>\n<td>block</td>\n<td>块级型。默认宽度为父元素宽度，可设置宽高，换行显示</td>\n</tr>\n<tr>\n<td>inline</td>\n<td>行内元素类型。默认宽高为内容宽度，不可设置宽高，同行显示</td>\n</tr>\n<tr>\n<td>inline-block</td>\n<td>默认宽度为内容宽度，可以设置宽高，同行显示</td>\n</tr>\n<tr>\n<td>table</td>\n<td>此元素会作为块级表格来显示</td>\n</tr>\n<tr>\n<td>inherit</td>\n<td>规定应该从父元素继承display属性的值</td>\n</tr>\n<tr>\n<td>list-item</td>\n<td>像块类型元素一样显示，并添加样式列表标记</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"定位属性\"><a href=\"#定位属性\" class=\"headerlink\" title=\"定位属性\"></a>定位属性</h3><blockquote>\n<p>默认文档流中，在一个父容器里放置多个块级的子元素，那么，这些子元素会默认从上往下排列。</p>\n</blockquote>\n<p>position属性值：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>概述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>absolute</td>\n<td>绝对定位，相对于static定位以外的一个父元素进行定位。元素的位置通过left、top、right、bottom属性进行规定</td>\n</tr>\n<tr>\n<td>relative</td>\n<td>相对定位，相对于其原来的位置进行定位。元素的位置通过left、top、right、bottom属性进行规定</td>\n</tr>\n<tr>\n<td>fixed</td>\n<td>固定定位，指定元素相对于屏幕视⼝（viewport）的位置来指定元素位置。元素的位置在屏幕滚动时不会改变，⽐如回到顶部的按钮⼀般都是⽤此定位⽅式</td>\n</tr>\n<tr>\n<td>static</td>\n<td>默认值，没有定位，元素出现在正常的文档流中，会忽略 top, bottom, left, right 或者 z-index 声明，块级元素从上往下纵向排布，⾏级元素从左向右排列</td>\n</tr>\n<tr>\n<td>inherit</td>\n<td>规定从父元素继承position属性的值</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>脱离文档流的属性：<code>absolute</code>、<code>fixed</code></p>\n<h4 id=\"相对定位\"><a href=\"#相对定位\" class=\"headerlink\" title=\"相对定位\"></a>相对定位</h4><p>相对定位：让元素相对于自己原来的位置，进行位置调整</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.div</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220609214047.png\" alt=\"image-20220609202453294\"></p>\n<p>相对定位：不脱离文档流。不脱标，老家留坑，<strong>别人不会把它的位置挤走</strong>。</p>\n<p>用途：</p>\n<ol>\n<li>微调元素</li>\n<li>做绝对定位的参考，子绝父相</li>\n</ol>\n<h4 id=\"绝对定位\"><a href=\"#绝对定位\" class=\"headerlink\" title=\"绝对定位\"></a>绝对定位</h4><p>绝对定位：定义横纵坐标。原点在父容器的左上角或左下角。</p>\n<p><strong>绝对定位的盒子脱离了标准文档流。</strong></p>\n<p>所以，所有的标准文档流的性质，绝对定位之后都不遵守了。</p>\n<p>绝对定位之后，标签就不区分所谓的行内元素、块级元素了，不需要<code>display:block</code>就可以设置宽、高了。</p>\n<ol>\n<li>子绝父相</li>\n</ol>\n<p>子元素为绝对定位，父元素为相对定位。通常用于实现压盖效果。</p>\n<p>要听最近的已经定位的祖先元素的，不一定是父亲，可能是爷爷。</p>\n<p>不一定是相对定位，任何定位，都可以作为儿子的参考点。</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t<span class=\"token selector\">.box</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 308px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 307px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #FF7E00<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>  <span class=\"token comment\">/*子绝父相*/</span>\n\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token selector\">.box .image img</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 308px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 196px<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token selector\">.box .dtc</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>  <span class=\"token comment\">/*转为块级元素，才能设置span的宽高*/</span>\n\t\t\t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 52px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 28px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>http://img.smyhvae.com/20180116_1115.png<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">background-position</span><span class=\"token punctuation\">:</span> -108px 0px<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*这里用到了精灵图*/</span>\n\t\t\t<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>  <span class=\"token comment\">/*采用绝对定位的方式，将精灵图盖在最上层*/</span>\n\t\t\t<span class=\"token property\">top</span><span class=\"token punctuation\">:</span> -9px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 13px<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token selector\">.box h4</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span>308px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 156px<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dtc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://img.smyhvae.com/20180116_1116.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">&gt;</span></span>广东深圳宝安区建安一路海雅缤纷城4楼<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220609214102.png\" alt=\"image-20220609204650705\"></p>\n<h4 id=\"固定定位\"><a href=\"#固定定位\" class=\"headerlink\" title=\"固定定位\"></a>固定定位</h4><p>固定定位：就是相对浏览器窗口进行定位。无论页面如何滚动，这个盒子显示的位置不变。</p>\n<p><strong>用途1</strong>：网页右下角的“返回到顶部”</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.backtop</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 60px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 60px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> gray<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span>30px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>   <span class=\"token comment\">/*去掉超链接的下划线*/</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><strong>用途2：</strong>顶部导航条</p>\n<h4 id=\"粘性定位\"><a href=\"#粘性定位\" class=\"headerlink\" title=\"粘性定位\"></a>粘性定位</h4><p>粘性定位的元素是依赖于用户的滚动，在 <strong>position:relative</strong> 与 <strong>position:fixed</strong> 定位之间切换。它的行为就像 <strong>position:relative;</strong> 而当页面滚动超出目标区域时，它的表现就像 <strong>position:fixed;</strong>，它会固定在目标位置。元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。这个特定阈值指的是 top, right, bottom 或 left 之一，换言之，指定 top, right, bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同</p>\n<h3 id=\"flex布局\"><a href=\"#flex布局\" class=\"headerlink\" title=\"flex布局\"></a>flex布局</h3><ol>\n<li><strong>flex 布局的子元素不会脱离文档流</strong>，很好地遵从了“流的特性”。</li>\n</ol>\n<p>但你如果用 float 来做布局，float 属性的元素会脱离文档流，而且会涉及到各种 BFC、清除浮动的问题。浮动相关的问题，比较麻烦，所以也成了面试必问的经典题目。但有了 flex 布局之后，这些问题都不存在的。</p>\n<ol>\n<li><strong>flex 是一种现代的布局方式，是 W3C 第一次提供真正用于布局的 CSS 规范</strong>。 flex 非常提供了丰富的属性，非常灵活，让布局的实现更佳多样化，且方便易用。</li>\n</ol>\n<p>flex 唯一的缺点就在于，它不支持低版本的 IE 浏览器。</p>\n<ul>\n<li><strong>弹性盒子</strong>：指的是使用 <code>display:flex</code> 或 <code>display:inline-flex</code> 声明的<strong>父容器</strong>。</li>\n<li><strong>子元素/弹性元素</strong>：指的是父容器里面的子元素们（父容器被声明为 flex 盒子的情况下）。</li>\n<li>主轴：flex容器的主轴，默认是水平方向，从左向右。</li>\n<li>侧轴：与主轴垂直的轴称作侧轴，默认是垂直方向，从上往下。</li>\n</ul>\n<h4 id=\"flex\"><a href=\"#flex\" class=\"headerlink\" title=\"flex\"></a>flex</h4><p>flex：定义子项目分配剩余空间</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.div</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"flex-wrap\"><a href=\"#flex-wrap\" class=\"headerlink\" title=\"flex-wrap\"></a>flex-wrap</h4><p><code>flex-wrap</code>：控制子元素溢出时的换行处理。</p>\n<p>flex-wrap: wrap 换行</p>\n<h4 id=\"flex-direction\"><a href=\"#flex-direction\" class=\"headerlink\" title=\"flex-direction\"></a>flex-direction</h4><p>设置主轴排列方向 默认从左到右排列</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">row</td>\n<td style=\"text-align:left\">从左到右水平排列子元素（默认值）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">column</td>\n<td style=\"text-align:left\">从上到下垂直排列子元素</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">row-reverse</td>\n<td style=\"text-align:left\">从右向左排列子元素</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">column-reverse</td>\n<td style=\"text-align:left\">从下到上垂直排列子元素</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"justify-content\"><a href=\"#justify-content\" class=\"headerlink\" title=\"justify-content\"></a>justify-content</h4><p><code>justify-content</code>：控制子元素在主轴上的排列方式。 默认为水平方向</p>\n<ul>\n<li><code>flex-start</code> 从主轴的起点对齐（默认值）</li>\n<li><code>flex-end</code> 从主轴的终点对齐</li>\n<li><code>center</code> 居中对齐</li>\n<li><code>space-around</code> 在父盒子里平分</li>\n<li><code>space-between</code> 两端对齐 平分</li>\n</ul>\n<h4 id=\"align-items\"><a href=\"#align-items\" class=\"headerlink\" title=\"align-items\"></a>align-items</h4><p><code>align-items</code>：设置子元素在<strong>侧轴上的对齐方式</strong>。 默认为垂直方向 <strong>单行情况</strong></p>\n<ul>\n<li><code>flex-start</code> 从侧轴开始的方向对齐 </li>\n<li><code>flex-end</code> 从侧轴结束的方向对齐 </li>\n<li><code>baseline</code> 基线 默认同flex-start </li>\n<li><code>center</code> 中间对齐 </li>\n<li><code>stretch</code> 拉伸</li>\n</ul>\n<h4 id=\"aligin-content\"><a href=\"#aligin-content\" class=\"headerlink\" title=\"aligin-content\"></a>aligin-content</h4><p><code>aligin-content</code>：设置子元素在<strong>侧轴上的对齐方式</strong>。 默认为垂直方向 <strong>只适用于多行</strong></p>\n<ul>\n<li><code>flex-start</code> 从侧轴开始的方向对齐 </li>\n<li><code>flex-end</code> 从侧轴结束的方向对齐 </li>\n<li><code>baseline</code> 基线 默认同flex-start </li>\n<li><code>center</code> 中间对齐 </li>\n<li><code>stretch</code> 拉伸</li>\n</ul>\n<h4 id=\"flex-1\"><a href=\"#flex-1\" class=\"headerlink\" title=\"flex\"></a>flex</h4><p> <code>flex</code>属性：设置子盒子的权重</p>\n<h3 id=\"水平垂直居中\"><a href=\"#水平垂直居中\" class=\"headerlink\" title=\"水平垂直居中\"></a>水平垂直居中</h3><h4 id=\"行内元素\"><a href=\"#行内元素\" class=\"headerlink\" title=\"行内元素\"></a>行内元素</h4><p>父容器设置</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.father</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/*水平居中*/</span>\n    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span>center<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/*垂直居中*/</span>\n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span>center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"块级元素\"><a href=\"#块级元素\" class=\"headerlink\" title=\"块级元素\"></a>块级元素</h4><p>1.绝对定位 + margin（需要指定子元素的宽高，不推荐）</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.father</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.son</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> -50px<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*高的一半*/</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> -100px<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*宽的一半*/</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ol>\n<li>绝对定位 + translate（无需指定子元素的宽高，推荐）</li>\n</ol>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.father</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.son</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">,</span> -50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>这种写法，在没有指定子元素宽高的情况下，也能让其在父容器中垂直居中。因为 translate() 函数中使用百分比值时，是以这个元素自身的宽度和高度为基准进行换算和移动的（<strong>动态计算宽高</strong>）.</p>\n<ol>\n<li>flex布局（待改进）</li>\n</ol>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.father</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.son</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>父容器里的所有子元素们都垂直居中了</p>\n<ol>\n<li>flex 布局 + margin: auto（推荐）</li>\n</ol>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.father</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.son</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>当我们给父容器使用 Flex 布局 时，子元素的<code>margin: auto</code>不仅能让其在水平方向上居中，<strong>垂直方向上也是居中的</strong>。</p>\n<h3 id=\"常规布局\"><a href=\"#常规布局\" class=\"headerlink\" title=\"常规布局\"></a>常规布局</h3><h4 id=\"单栏布局\"><a href=\"#单栏布局\" class=\"headerlink\" title=\"单栏布局\"></a>单栏布局</h4><p>实现：<code>max-width: 400px;</code></p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n.header {\n    max-width: 180px;\n    margin: 10px auto;\n    height: 30px;\n    background: lawngreen;\n}\n.content {\n    max-width: 180px;\n    height: 180px;\n    margin: 20px auto;\n    background: indianred;\n}\n.footer {\n    margin: 10px auto;\n    height: 30px;\n    max-width: 180px;\n    background: blue;\n}</code></pre>\n<h4 id=\"两栏布局-一栏固定-一栏自适应布局\"><a href=\"#两栏布局-一栏固定-一栏自适应布局\" class=\"headerlink\" title=\"两栏布局 (一栏固定 + 一栏自适应布局)\"></a>两栏布局 (一栏固定 + 一栏自适应布局)</h4><ol>\n<li>利用浮动，左边元素设置左浮动、固定宽度，右边元素设置<code>margin-left</code>为固定宽度，<code>width: auto;</code></li>\n</ol>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.left</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.right</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ol>\n<li>同样利用浮动，左边元素设置左浮动、固定宽度，右边元素设置<code>overflow: hidden</code>为固定宽度</li>\n</ol>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.right</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ol>\n<li>利用<code>flex</code>布局，左边元素固定宽度，右边的元素设置 <code>flex: 1</code></li>\n</ol>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.right</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"圣杯布局和双飞翼布局-三栏布局\"><a href=\"#圣杯布局和双飞翼布局-三栏布局\" class=\"headerlink\" title=\"圣杯布局和双飞翼布局 (三栏布局)\"></a>圣杯布局和双飞翼布局 (三栏布局)</h4><p>特点：两侧内容固定，中间内容随着宽度自适应</p>\n<p>实现：</p>\n<ul>\n<li><code>float</code>布局</li>\n<li>两侧使用<code>margin</code>负值，以便和中间内容横向重叠</li>\n<li>防止中间内容两侧覆盖，圣杯布局用<code>padding</code>，双飞翼布局用<code>margin</code></li>\n</ul>\n<h5 id=\"圣杯布局\"><a href=\"#圣杯布局\" class=\"headerlink\" title=\"圣杯布局\"></a>圣杯布局</h5><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>我是中间<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>我是左边<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>我是右边<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n.container{\n\tpadding-left: 200px;\n  \tpadding-right: 200px;\n  \toverflow: auto;\n}\n.center{ \n\tfloat: left;\n\twidth: 100%;\n}\n.left{\n\tfloat: left;\n\twidth: 200px;\n\tposition: relative;\n\tleft: -200px;\n\tmargin-left: -100%;\n}\n.right{ \n\tfloat: left;\n\twidth: 200px;\n\tposition: relative;\n\tmargin-right: -200px;\n}</code></pre>\n<h5 id=\"双飞翼布局\"><a href=\"#双飞翼布局\" class=\"headerlink\" title=\"双飞翼布局\"></a>双飞翼布局</h5><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>双飞翼布局<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n.center{\n\twidth: 100%;\n}\n.inner{\n\tmargin: 0 200px;\n}</code></pre>\n<h3 id=\"响应式布局\"><a href=\"#响应式布局\" class=\"headerlink\" title=\"响应式布局\"></a>响应式布局</h3><p><a href=\"https://juejin.cn/post/6844903814332432397\">响应式布局</a></p>\n<h3 id=\"element-ui\"><a href=\"#element-ui\" class=\"headerlink\" title=\"element-ui\"></a>element-ui</h3><ol>\n<li>表头、单元格样式设置</li>\n</ol>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-table</span>\n  <span class=\"token attr-name\">max-height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>500<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:cell-style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{ textAlign: <span class=\"token punctuation\">'</span>center<span class=\"token punctuation\">'</span> }<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:header-cell-style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{\n    textAlign: <span class=\"token punctuation\">'</span>center<span class=\"token punctuation\">'</span>,\n    background: <span class=\"token punctuation\">'</span>#E4EEF6<span class=\"token punctuation\">'</span>,\n    height: <span class=\"token punctuation\">'</span>21px<span class=\"token punctuation\">'</span>,\n  }<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">@row-click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enterpriseDetail<span class=\"token punctuation\">\"</span></span>\n  \n  <span class=\"token attr-name\">:data</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tableInfo<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">&gt;</span></span></code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160701.webp","length":7527,"excerpt":"","more":"<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><h3 id=\"盒模型\"><a href=\"#盒模型\" class=\"headerlink\" title=\"盒模型\"></a>盒模型</h3><p>标准盒模型</p>\n<ul>\n<li>content</li>\n<li>padding</li>\n<li>border</li>\n<li>margin</li>\n</ul>\n<blockquote>\n<p>标准盒模型的宽高为content的宽高</p>\n</blockquote>\n<p>IE盒模型</p>\n<blockquote>\n<p>IE盒模型的宽高为content+padding+border的宽高</p>\n</blockquote>\n<h3 id=\"BFC\"><a href=\"#BFC\" class=\"headerlink\" title=\"BFC\"></a>BFC</h3><blockquote>\n<p>BFC: 块级格式化上下文。</p>\n</blockquote>\n<p>BFC布局规则</p>\n<ul>\n<li>BFC <strong>内部的</strong>子元素，在垂直方向，<strong>边距会发生重叠</strong>，即会相加</li>\n<li>BFC在页面中是独立的容器，外面的元素不会影响里面的元素，反之亦然</li>\n<li><strong>BFC区域不与旁边的<code>float box</code>区域重叠</strong>。（可以用来清除浮动带来的影响）</li>\n<li>计算BFC的高度时，浮动的子元素也参与计算</li>\n</ul>\n<p>BFC形成</p>\n<ul>\n<li>overflow: 不为visible，可以让属性是 hidden、auto。【最常用】</li>\n<li>浮动中：float的属性值不为none。意思是，只要设置了浮动，当前元素就创建了BFC</li>\n<li>定位中：只要posiiton的值不是 static或者是relative即可，可以是<code>absolute</code>或<code>fixed</code>，也就生成了一个BFC</li>\n<li>display为inline-block, table-cell, table-caption, flex, inline-flex</li>\n</ul>\n<h3 id=\"标准文档流\"><a href=\"#标准文档流\" class=\"headerlink\" title=\"标准文档流\"></a>标准文档流</h3><ol>\n<li><p>空白折叠现象</p>\n<p>无论多少个空格、换行、tab，都会折叠为一个空格。</p>\n</li>\n<li><p>高矮不齐，底边对齐</p>\n</li>\n<li><p>自动换行，一行写不满，换行写</p>\n</li>\n</ol>\n<h4 id=\"行内元素和块级元素\"><a href=\"#行内元素和块级元素\" class=\"headerlink\" title=\"行内元素和块级元素\"></a>行内元素和块级元素</h4><p><strong>行内元素：</strong></p>\n<ul>\n<li><strong>只占据内容的一部分</strong></li>\n<li>与其他行内元素并排</li>\n<li>不能设置宽、高。默认的宽度，就是文字的宽度。</li>\n</ul>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span>inline<span class=\"token punctuation\">;</span></code></pre>\n<p><strong>块级元素：</strong></p>\n<ul>\n<li><p><strong>占据一整行</strong></p>\n</li>\n<li><p>霸占一行，不能与其他任何元素并列</p>\n</li>\n<li>能接受宽、高。如果不设置宽度，那么宽度将默认变为父亲的100%。</li>\n</ul>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span>block<span class=\"token punctuation\">;</span></code></pre>\n<p>css中一共有三种手段，使一个元素脱离标准文档流：</p>\n<ul>\n<li>（1）浮动</li>\n<li>（2）绝对定位</li>\n<li>（3）固定定位</li>\n</ul>\n<h3 id=\"CSS的继承性和层叠性\"><a href=\"#CSS的继承性和层叠性\" class=\"headerlink\" title=\"CSS的继承性和层叠性\"></a>CSS的继承性和层叠性</h3><h4 id=\"继承性\"><a href=\"#继承性\" class=\"headerlink\" title=\"继承性\"></a>继承性</h4><blockquote>\n<p>继承性：有一些属性，当给自己设置的时候，自己的后代都继承上了</p>\n</blockquote>\n<p>具有继承性的属性：</p>\n<ul>\n<li>字体系列：<code>font</code>、<code>font-family</code>、<code>font-weight</code>、<code>font-size</code>、<code>font-style</code></li>\n<li>文本系列：<ul>\n<li>内联元素：<code>color</code>、<code>line-height</code>、<code>word-spacing</code>、<code>letter-spacing</code>、<code>text-transform</code></li>\n<li>块级元素：<code>text-indent</code>、<code>text-align</code></li>\n</ul>\n</li>\n<li>元素可见性：<code>visibility</code></li>\n<li>表格布局属性：<code>border-collapse</code>、<code>border-spacing</code>、<code>empty-cells</code>、<code>table-layout</code>、<code>caption-side</code></li>\n<li>列表布局属性：<code>list-style</code></li>\n</ul>\n<h4 id=\"层叠性\"><a href=\"#层叠性\" class=\"headerlink\" title=\"层叠性\"></a>层叠性</h4><blockquote>\n<p><strong>层叠性：就是css处理冲突的能力</strong></p>\n</blockquote>\n<p>权重：<code>!important</code>&gt;<code>行内样式</code>&gt;<code>ID选择器</code>&gt;<code>类选择器</code>&gt;<code>标签选择器</code>&gt;<code>通配符(*)</code>&gt;<code>继承</code>&gt;<code>浏览器默认属性</code></p>\n<p>权重计算表格</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>选择器权重</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>继承或*</td>\n<td>0,0,0,0</td>\n</tr>\n<tr>\n<td>标签选择器</td>\n<td>0,0,0,1</td>\n</tr>\n<tr>\n<td>类选择器、伪类选择器</td>\n<td>0,0,1,0</td>\n</tr>\n<tr>\n<td>ID选择器</td>\n<td>0,1,0,0</td>\n</tr>\n<tr>\n<td>行内样式(style)</td>\n<td>1,0,0,0</td>\n</tr>\n<tr>\n<td>!important</td>\n<td>∞无穷大</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>优先级注意点</p>\n<ol>\n<li>权重是由四组数字组成，但是<strong>不会进位</strong></li>\n<li>可以理解为<code>类选择</code>永远大于<code>标签选择器</code>，<code>id选择器</code>永远大于<code>类选择器</code></li>\n<li><strong>就近原则</strong>，优先级相同则取书写顺序靠后的那个</li>\n</ol>\n<h3 id=\"px、em、rem的区别\"><a href=\"#px、em、rem的区别\" class=\"headerlink\" title=\"px、em、rem的区别\"></a>px、em、rem的区别</h3><p><code>px</code>：固定像素</p>\n<p><code>em</code>：相对于其父元素<code>font-size</code>来设置字体大小</p>\n<p><code>rem</code>：相对于根元素的<code>font-size</code>大小</p>\n<p>使用场景：</p>\n<ul>\n<li>对于只需要适配少部分移动设备，且分辨率对页面影响不大的，使用px即可</li>\n<li>对于需要适配各种移动设备，实现<a href=\"#reactive-layout\">响应式布局</a>，使用rem，例如需要适配iPhone和iPad等分辨率差别比较挺大的设备</li>\n</ul>\n<h3 id=\"display的属性值及其作用\"><a href=\"#display的属性值及其作用\" class=\"headerlink\" title=\"display的属性值及其作用\"></a>display的属性值及其作用</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>none</td>\n<td>元素不显示，并且会从文档流中移除</td>\n</tr>\n<tr>\n<td>block</td>\n<td>块级型。默认宽度为父元素宽度，可设置宽高，换行显示</td>\n</tr>\n<tr>\n<td>inline</td>\n<td>行内元素类型。默认宽高为内容宽度，不可设置宽高，同行显示</td>\n</tr>\n<tr>\n<td>inline-block</td>\n<td>默认宽度为内容宽度，可以设置宽高，同行显示</td>\n</tr>\n<tr>\n<td>table</td>\n<td>此元素会作为块级表格来显示</td>\n</tr>\n<tr>\n<td>inherit</td>\n<td>规定应该从父元素继承display属性的值</td>\n</tr>\n<tr>\n<td>list-item</td>\n<td>像块类型元素一样显示，并添加样式列表标记</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"定位属性\"><a href=\"#定位属性\" class=\"headerlink\" title=\"定位属性\"></a>定位属性</h3><blockquote>\n<p>默认文档流中，在一个父容器里放置多个块级的子元素，那么，这些子元素会默认从上往下排列。</p>\n</blockquote>\n<p>position属性值：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>概述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>absolute</td>\n<td>绝对定位，相对于static定位以外的一个父元素进行定位。元素的位置通过left、top、right、bottom属性进行规定</td>\n</tr>\n<tr>\n<td>relative</td>\n<td>相对定位，相对于其原来的位置进行定位。元素的位置通过left、top、right、bottom属性进行规定</td>\n</tr>\n<tr>\n<td>fixed</td>\n<td>固定定位，指定元素相对于屏幕视⼝（viewport）的位置来指定元素位置。元素的位置在屏幕滚动时不会改变，⽐如回到顶部的按钮⼀般都是⽤此定位⽅式</td>\n</tr>\n<tr>\n<td>static</td>\n<td>默认值，没有定位，元素出现在正常的文档流中，会忽略 top, bottom, left, right 或者 z-index 声明，块级元素从上往下纵向排布，⾏级元素从左向右排列</td>\n</tr>\n<tr>\n<td>inherit</td>\n<td>规定从父元素继承position属性的值</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>脱离文档流的属性：<code>absolute</code>、<code>fixed</code></p>\n<h4 id=\"相对定位\"><a href=\"#相对定位\" class=\"headerlink\" title=\"相对定位\"></a>相对定位</h4><p>相对定位：让元素相对于自己原来的位置，进行位置调整</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.div</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220609214047.png\" alt=\"image-20220609202453294\"></p>\n<p>相对定位：不脱离文档流。不脱标，老家留坑，<strong>别人不会把它的位置挤走</strong>。</p>\n<p>用途：</p>\n<ol>\n<li>微调元素</li>\n<li>做绝对定位的参考，子绝父相</li>\n</ol>\n<h4 id=\"绝对定位\"><a href=\"#绝对定位\" class=\"headerlink\" title=\"绝对定位\"></a>绝对定位</h4><p>绝对定位：定义横纵坐标。原点在父容器的左上角或左下角。</p>\n<p><strong>绝对定位的盒子脱离了标准文档流。</strong></p>\n<p>所以，所有的标准文档流的性质，绝对定位之后都不遵守了。</p>\n<p>绝对定位之后，标签就不区分所谓的行内元素、块级元素了，不需要<code>display:block</code>就可以设置宽、高了。</p>\n<ol>\n<li>子绝父相</li>\n</ol>\n<p>子元素为绝对定位，父元素为相对定位。通常用于实现压盖效果。</p>\n<p>要听最近的已经定位的祖先元素的，不一定是父亲，可能是爷爷。</p>\n<p>不一定是相对定位，任何定位，都可以作为儿子的参考点。</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t<span class=\"token selector\">.box</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 308px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 307px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #FF7E00<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>  <span class=\"token comment\">/*子绝父相*/</span>\n\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token selector\">.box .image img</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 308px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 196px<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token selector\">.box .dtc</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>  <span class=\"token comment\">/*转为块级元素，才能设置span的宽高*/</span>\n\t\t\t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 52px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 28px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>http://img.smyhvae.com/20180116_1115.png<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">background-position</span><span class=\"token punctuation\">:</span> -108px 0px<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*这里用到了精灵图*/</span>\n\t\t\t<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>  <span class=\"token comment\">/*采用绝对定位的方式，将精灵图盖在最上层*/</span>\n\t\t\t<span class=\"token property\">top</span><span class=\"token punctuation\">:</span> -9px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 13px<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token selector\">.box h4</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span>308px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 156px<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dtc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://img.smyhvae.com/20180116_1116.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">&gt;</span></span>广东深圳宝安区建安一路海雅缤纷城4楼<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220609214102.png\" alt=\"image-20220609204650705\"></p>\n<h4 id=\"固定定位\"><a href=\"#固定定位\" class=\"headerlink\" title=\"固定定位\"></a>固定定位</h4><p>固定定位：就是相对浏览器窗口进行定位。无论页面如何滚动，这个盒子显示的位置不变。</p>\n<p><strong>用途1</strong>：网页右下角的“返回到顶部”</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.backtop</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 60px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 60px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> gray<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span>30px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>   <span class=\"token comment\">/*去掉超链接的下划线*/</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><strong>用途2：</strong>顶部导航条</p>\n<h4 id=\"粘性定位\"><a href=\"#粘性定位\" class=\"headerlink\" title=\"粘性定位\"></a>粘性定位</h4><p>粘性定位的元素是依赖于用户的滚动，在 <strong>position:relative</strong> 与 <strong>position:fixed</strong> 定位之间切换。它的行为就像 <strong>position:relative;</strong> 而当页面滚动超出目标区域时，它的表现就像 <strong>position:fixed;</strong>，它会固定在目标位置。元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。这个特定阈值指的是 top, right, bottom 或 left 之一，换言之，指定 top, right, bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同</p>\n<h3 id=\"flex布局\"><a href=\"#flex布局\" class=\"headerlink\" title=\"flex布局\"></a>flex布局</h3><ol>\n<li><strong>flex 布局的子元素不会脱离文档流</strong>，很好地遵从了“流的特性”。</li>\n</ol>\n<p>但你如果用 float 来做布局，float 属性的元素会脱离文档流，而且会涉及到各种 BFC、清除浮动的问题。浮动相关的问题，比较麻烦，所以也成了面试必问的经典题目。但有了 flex 布局之后，这些问题都不存在的。</p>\n<ol>\n<li><strong>flex 是一种现代的布局方式，是 W3C 第一次提供真正用于布局的 CSS 规范</strong>。 flex 非常提供了丰富的属性，非常灵活，让布局的实现更佳多样化，且方便易用。</li>\n</ol>\n<p>flex 唯一的缺点就在于，它不支持低版本的 IE 浏览器。</p>\n<ul>\n<li><strong>弹性盒子</strong>：指的是使用 <code>display:flex</code> 或 <code>display:inline-flex</code> 声明的<strong>父容器</strong>。</li>\n<li><strong>子元素/弹性元素</strong>：指的是父容器里面的子元素们（父容器被声明为 flex 盒子的情况下）。</li>\n<li>主轴：flex容器的主轴，默认是水平方向，从左向右。</li>\n<li>侧轴：与主轴垂直的轴称作侧轴，默认是垂直方向，从上往下。</li>\n</ul>\n<h4 id=\"flex\"><a href=\"#flex\" class=\"headerlink\" title=\"flex\"></a>flex</h4><p>flex：定义子项目分配剩余空间</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.div</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"flex-wrap\"><a href=\"#flex-wrap\" class=\"headerlink\" title=\"flex-wrap\"></a>flex-wrap</h4><p><code>flex-wrap</code>：控制子元素溢出时的换行处理。</p>\n<p>flex-wrap: wrap 换行</p>\n<h4 id=\"flex-direction\"><a href=\"#flex-direction\" class=\"headerlink\" title=\"flex-direction\"></a>flex-direction</h4><p>设置主轴排列方向 默认从左到右排列</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">row</td>\n<td style=\"text-align:left\">从左到右水平排列子元素（默认值）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">column</td>\n<td style=\"text-align:left\">从上到下垂直排列子元素</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">row-reverse</td>\n<td style=\"text-align:left\">从右向左排列子元素</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">column-reverse</td>\n<td style=\"text-align:left\">从下到上垂直排列子元素</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"justify-content\"><a href=\"#justify-content\" class=\"headerlink\" title=\"justify-content\"></a>justify-content</h4><p><code>justify-content</code>：控制子元素在主轴上的排列方式。 默认为水平方向</p>\n<ul>\n<li><code>flex-start</code> 从主轴的起点对齐（默认值）</li>\n<li><code>flex-end</code> 从主轴的终点对齐</li>\n<li><code>center</code> 居中对齐</li>\n<li><code>space-around</code> 在父盒子里平分</li>\n<li><code>space-between</code> 两端对齐 平分</li>\n</ul>\n<h4 id=\"align-items\"><a href=\"#align-items\" class=\"headerlink\" title=\"align-items\"></a>align-items</h4><p><code>align-items</code>：设置子元素在<strong>侧轴上的对齐方式</strong>。 默认为垂直方向 <strong>单行情况</strong></p>\n<ul>\n<li><code>flex-start</code> 从侧轴开始的方向对齐 </li>\n<li><code>flex-end</code> 从侧轴结束的方向对齐 </li>\n<li><code>baseline</code> 基线 默认同flex-start </li>\n<li><code>center</code> 中间对齐 </li>\n<li><code>stretch</code> 拉伸</li>\n</ul>\n<h4 id=\"aligin-content\"><a href=\"#aligin-content\" class=\"headerlink\" title=\"aligin-content\"></a>aligin-content</h4><p><code>aligin-content</code>：设置子元素在<strong>侧轴上的对齐方式</strong>。 默认为垂直方向 <strong>只适用于多行</strong></p>\n<ul>\n<li><code>flex-start</code> 从侧轴开始的方向对齐 </li>\n<li><code>flex-end</code> 从侧轴结束的方向对齐 </li>\n<li><code>baseline</code> 基线 默认同flex-start </li>\n<li><code>center</code> 中间对齐 </li>\n<li><code>stretch</code> 拉伸</li>\n</ul>\n<h4 id=\"flex-1\"><a href=\"#flex-1\" class=\"headerlink\" title=\"flex\"></a>flex</h4><p> <code>flex</code>属性：设置子盒子的权重</p>\n<h3 id=\"水平垂直居中\"><a href=\"#水平垂直居中\" class=\"headerlink\" title=\"水平垂直居中\"></a>水平垂直居中</h3><h4 id=\"行内元素\"><a href=\"#行内元素\" class=\"headerlink\" title=\"行内元素\"></a>行内元素</h4><p>父容器设置</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.father</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/*水平居中*/</span>\n    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span>center<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/*垂直居中*/</span>\n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span>center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"块级元素\"><a href=\"#块级元素\" class=\"headerlink\" title=\"块级元素\"></a>块级元素</h4><p>1.绝对定位 + margin（需要指定子元素的宽高，不推荐）</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.father</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.son</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> -50px<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*高的一半*/</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> -100px<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*宽的一半*/</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ol>\n<li>绝对定位 + translate（无需指定子元素的宽高，推荐）</li>\n</ol>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.father</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.son</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">,</span> -50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>这种写法，在没有指定子元素宽高的情况下，也能让其在父容器中垂直居中。因为 translate() 函数中使用百分比值时，是以这个元素自身的宽度和高度为基准进行换算和移动的（<strong>动态计算宽高</strong>）.</p>\n<ol>\n<li>flex布局（待改进）</li>\n</ol>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.father</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.son</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>父容器里的所有子元素们都垂直居中了</p>\n<ol>\n<li>flex 布局 + margin: auto（推荐）</li>\n</ol>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.father</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.son</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>当我们给父容器使用 Flex 布局 时，子元素的<code>margin: auto</code>不仅能让其在水平方向上居中，<strong>垂直方向上也是居中的</strong>。</p>\n<h3 id=\"常规布局\"><a href=\"#常规布局\" class=\"headerlink\" title=\"常规布局\"></a>常规布局</h3><h4 id=\"单栏布局\"><a href=\"#单栏布局\" class=\"headerlink\" title=\"单栏布局\"></a>单栏布局</h4><p>实现：<code>max-width: 400px;</code></p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n.header {\n    max-width: 180px;\n    margin: 10px auto;\n    height: 30px;\n    background: lawngreen;\n}\n.content {\n    max-width: 180px;\n    height: 180px;\n    margin: 20px auto;\n    background: indianred;\n}\n.footer {\n    margin: 10px auto;\n    height: 30px;\n    max-width: 180px;\n    background: blue;\n}</code></pre>\n<h4 id=\"两栏布局-一栏固定-一栏自适应布局\"><a href=\"#两栏布局-一栏固定-一栏自适应布局\" class=\"headerlink\" title=\"两栏布局 (一栏固定 + 一栏自适应布局)\"></a>两栏布局 (一栏固定 + 一栏自适应布局)</h4><ol>\n<li>利用浮动，左边元素设置左浮动、固定宽度，右边元素设置<code>margin-left</code>为固定宽度，<code>width: auto;</code></li>\n</ol>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.left</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.right</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ol>\n<li>同样利用浮动，左边元素设置左浮动、固定宽度，右边元素设置<code>overflow: hidden</code>为固定宽度</li>\n</ol>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.right</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ol>\n<li>利用<code>flex</code>布局，左边元素固定宽度，右边的元素设置 <code>flex: 1</code></li>\n</ol>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.right</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"圣杯布局和双飞翼布局-三栏布局\"><a href=\"#圣杯布局和双飞翼布局-三栏布局\" class=\"headerlink\" title=\"圣杯布局和双飞翼布局 (三栏布局)\"></a>圣杯布局和双飞翼布局 (三栏布局)</h4><p>特点：两侧内容固定，中间内容随着宽度自适应</p>\n<p>实现：</p>\n<ul>\n<li><code>float</code>布局</li>\n<li>两侧使用<code>margin</code>负值，以便和中间内容横向重叠</li>\n<li>防止中间内容两侧覆盖，圣杯布局用<code>padding</code>，双飞翼布局用<code>margin</code></li>\n</ul>\n<h5 id=\"圣杯布局\"><a href=\"#圣杯布局\" class=\"headerlink\" title=\"圣杯布局\"></a>圣杯布局</h5><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>我是中间<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>我是左边<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>我是右边<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n.container{\n\tpadding-left: 200px;\n  \tpadding-right: 200px;\n  \toverflow: auto;\n}\n.center{ \n\tfloat: left;\n\twidth: 100%;\n}\n.left{\n\tfloat: left;\n\twidth: 200px;\n\tposition: relative;\n\tleft: -200px;\n\tmargin-left: -100%;\n}\n.right{ \n\tfloat: left;\n\twidth: 200px;\n\tposition: relative;\n\tmargin-right: -200px;\n}</code></pre>\n<h5 id=\"双飞翼布局\"><a href=\"#双飞翼布局\" class=\"headerlink\" title=\"双飞翼布局\"></a>双飞翼布局</h5><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>双飞翼布局<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n.center{\n\twidth: 100%;\n}\n.inner{\n\tmargin: 0 200px;\n}</code></pre>\n<h3 id=\"响应式布局\"><a href=\"#响应式布局\" class=\"headerlink\" title=\"响应式布局\"></a>响应式布局</h3><p><a href=\"https://juejin.cn/post/6844903814332432397\">响应式布局</a></p>\n<h3 id=\"element-ui\"><a href=\"#element-ui\" class=\"headerlink\" title=\"element-ui\"></a>element-ui</h3><ol>\n<li>表头、单元格样式设置</li>\n</ol>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-table</span>\n  <span class=\"token attr-name\">max-height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>500<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:cell-style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{ textAlign: <span class=\"token punctuation\">'</span>center<span class=\"token punctuation\">'</span> }<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:header-cell-style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{\n    textAlign: <span class=\"token punctuation\">'</span>center<span class=\"token punctuation\">'</span>,\n    background: <span class=\"token punctuation\">'</span>#E4EEF6<span class=\"token punctuation\">'</span>,\n    height: <span class=\"token punctuation\">'</span>21px<span class=\"token punctuation\">'</span>,\n  }<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">@row-click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enterpriseDetail<span class=\"token punctuation\">\"</span></span>\n  \n  <span class=\"token attr-name\">:data</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tableInfo<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">&gt;</span></span></code></pre>\n"},{"title":"GIS空间分析复习","date":"2021-11-16T12:59:18.000Z","mathjax":true,"description":"重点","_content":"\n## 地理学第一定律\n\n**地理学第一定律，即地理事物或属性在空间分布上互为相关，存在聚集、随机、规则分布**。即距离越近的地理事物，其性质也必相近\n\n## <a href=\"../空间分析与GIS#空间分析的一般过程\">空间分析的一般过程</a>\n\n1. 确定问题\n\n2. 选择分析工具\n\n3. 准备空间数据\n\n4. 制定空间分析流程\n\n5. 展示并解释分析结果\n\n   ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211116220555.png)\n\n## <a href=\"../空间分析与GIS#空间分析任务\">空间分析的任务</a>\n\n+ 基本任务\n\n  > 获取空间信息$\\rightarrow$解决空间问题\n\n+ 5类具体任务\n\n  + 位置分析\n    + 某一事物或现象在什么位置、在特定的位置有什么和是什么等\n  + 条件分析\n    + 符合某些条件的地理对象是什么、在哪里等问题\n  + 变化趋势分析\n    + 地理对象随时间变化而变化$\\rightarrow$预测未来的可能状况(根本目的)$\\rightarrow$发生机理和变化因子$\\rightarrow$做出科学的决策\n  + 模式认知\n    + 地理对象实体或对象之间的空间关系模式、地球系统内部各要素之间或各子系统之间的关系模式等\n  + 模拟与预测\n    + 对未发生或已发生的地理事件、现象、规律进行演变和反馈\n\n## Moran's统计量的定义，如何根据Moran's来判断空间相关性\n\n空间自相关系数：用来度量物理或生态学变量在**空间上的分布特征**及其对**邻域的影响程度**。常用来定量地描述事物在空间上的依赖关系。\n\n+ I值结果一定介于-1到1之间\n+ I>0为正相关，数值越大表示空间分布的相关性越大，即空间上聚集分布的现象越明显\n+ I<0为负相关，数值越小代表示相关性小\n+ I趋于0时，代表空间分布呈现随机分布的情形\n\n## <a href=\"../空间量算与数据探测#欧氏距离\">欧式距离</a>、曼哈顿距离、成本距离\n\n+ 欧式空间是对**物理空间**的一种**数学**理解与表达，是GIS中常用的一种重要空间。欧式空间擅长平面二维空间目标的空间**方位**、**规模**的表达\n+ 曼哈顿距离x、y方向距离之和\n+ 成本距离是每个栅格单元到源的最小费用距离\n\n## <a href=\"../空间量算与数据探测#基本几何参数量测\">中心要素、算术平均中心、中位数中心与重心</a>\n\n+ 中心要素：点、线、面要素类中位于**最中央**的要素,结果是样本中的一个要素\n+ 算术平均中心：描述数据**集中的位置**的统计量(对极值敏感)\n+ 中位数中心：数据集中要素之间的总欧氏距离最小的位置点\n+ 重心：通常用于宏观经济分析和市场区位选择，跟踪某些空间分布的变化，如人口迁徙，土地类型变化等\n\n## <a href=\"../空间量算与数据探测#地理空间目标形态量测\">线状地物、面状地物形态描述的参数</a>\n\n+ 线状：曲率、弯曲度、分形维数\n+ 面状：形状量算(周长、面积)、简单的图形概况(外接矩形、最大内切\\外接圆、最小凸多边形)、空间完整性(欧拉数)\n\n## <a href=\"../空间量算与数据探测#点模式\">点模式</a>和线模式的描述参数\n\n+ 点模式：分布密度、分布中心、分布轴线、离散度、样方分析\n\n+ 线模式：线密度、最近邻分析、线状对象的定向、连通度\n\n## <a href=\"../位置与几何关系分析#重分类\">重分类</a>、<a href=\"../位置与几何关系分析#地图代数\">局域运算(地图代数)</a>\n\n+ 重分类是将**属性数据的类别转换成新类**，即基于原有数值类型，对原有数值类型按照一定的原则**重新进行分类**，从而得到**一组新值**并输出\n+ 地图代数：两个以上层面的栅格数据系统，以某种**函数关系**作为复合分析依据进行**逐网格运算**，从而得到新的栅格数据系统的过程\n\n## <a href=\"../位置与几何关系分析#统计分析\">邻域运算(窗口分析)、分区运算(分带运算)</a>\n\n+ 邻域运算是以待**计算栅格为中心**，向其周围扩展**一定邻域**，在单元对应的**邻域范围指定的单元上**进行统计分析，然后将结果值输出到该单元位置\n+ 分区运算：将同一区域内具有相同值的像元看作一个整体进行分析运算\n\n## <a href=\"../位置与几何关系分析#距离分析\">源栅格、成本栅格、成本距离</a>\n\n> 源即距离分析中的目标或目的地\n\n+ 源栅格：记录距离分析中的目标或目的地的栅格\n\n+ 成本栅格：记录通过每一单元的通行成本的栅格\n\n+ 成本距离：**记录每一个单元到它最近源的最小累积成本**\n\n  ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211122114233.png)\n\n## 方向栅格、配置栅格、成本路径\n\n+ 方向栅格：从每一栅格单元出发，沿最低累积成本路径到达最近源的路线方向\n+ 配置栅格：记录每一单元点**隶属的最近源信息**，单元值就是其最近源的值\n+ 成本路径：记录每个栅格到距离最近、成本最低的源的最少累加成本路径\n\n## <a href=\"../位置与几何关系分析#缓冲区分析应用\">缓冲区查询</a>\n\n缓冲区查询，即在数据服务中的指定数据集集合中查找符合缓冲区的矢量要素，并在客户端中展示出来\n\n## <a href=\"../位置与几何关系分析#缓冲区\">缓冲区分析的参数</a>\n\n缓冲区半径、缓冲区要素、单侧缓冲区、均质缓冲区、融合\n\n## 统计查询\n\n统计分析：即空间数据的统计分析，核心就是认识与地理位置相关的数据间的**空间依赖、空间关联或空间自相关**，通过空间位置建立**数据间的统计关系**\n\n## <a href=\"../位置与几何关系分析#叠加分析\">矢量数据的叠加分析?叠加分析方法、区别、应用</a>\n\n> 矢量数据叠加分析：将同一区域的、具有同种空间坐标系统的两个或多个不同主题的矢量数据图层进行逻辑交、差、并等拓扑运算，生成一个具有多重属性的新图层的过程\n\n> 叠加分析方法、区别、应用\n\n>> 图层合并\n\n>>> 并集：保留两个输入层中所有多边形\n\n>> ![图层合并](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111185938.png)\n\n>> 交集操作\n\n>>> 交集：保留两个输入层中的公共区域\n\n>> ![交集](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190005.png)\n\n>> 图层擦除\n\n>> ![擦除](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190036.png)\n\n>> 识别叠加\n\n>>> 以输入图层为界，保留边界内的所有多边形\n\n>> ![识别叠加](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190240.png)\n\n>> 对称差值\n\n>> 修正更新\n\n>>> 输出层为一个经删除处理后的图层与一个新特征图层进行合并后的结果\n\n>> ![修正更新](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190437.png)\n\n>> 裁剪\n\n>>> 输出层为按一个图层的边界，对另外一个图层的内容要素进行截取后的结果\n\n>> ![擦除](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190621.png)\n\n>> 交集取反\n\n>>> 保留两个输入层中的公共区域的反\n\n>> ![交集取反](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111191207.png)\n\n## <a href=\"位置与几何关系分析#泰森多边形\">泰森多边形分析的原理与应用</a>\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211121092644.png)\n\n+ 原理：\n\n  > 由**点图层**生成其**近邻多边形图层**，来表示该标识点的影响范围，确保在一个多边形内的每个采样点与该多边形内的已知点更接近，而与其他的已知点相距较远，是**局部拟合插值法**的一种。每个点对应一个新生成的多边形，该输入点作为多边形的标识点，相邻标识点到其“公共边”的距离相等。\n\n+ 实现：\n\n  > 由输入点相连生成三角网\n  >\n  > 对每个三角形的边作垂直平分线\n  >\n  > 删除原三角形\n  >\n  > 而每个输入点作为多边形的标识点，垂直平分线作为泰森多边形的边\n\n+ 特点：\n\n  > 每个泰森多边形内仅含有一个控制点数据\n  >\n  > 泰森多边形内的点到相应控制点的距离最近\n  >\n  > 位于泰森多边形边上的点到其两边控制点的距离相等\n\n+ 应用：大气质量评估与污染气体分布、适用于生成专题之间明显边界的现象，而不会出现不同级别之间的中间现象、常用于多种设施特别是公共设施的服务区域分析\n\n## 密度分析类型，计算方法\n\n1.  简单密度\n\n+ 点密度计算：为每个输出栅格单元计算邻域内点特征的密度    计算方法：点的测量值除以指定邻域面积，点的邻域叠加处，其密度值也相加，每个输出栅格的密度均为叠加在栅格上的所有邻域密度值之和\n+ 线密度计算：每个输出栅格单元计算领域内线特征的密度   计算方法：以输出单元为中心，以搜索半径定义一个圆，每条线落入圆内的部分，其长度乘上其代表的值，然后对所有的值求和，再除以圆的面积，得到线的密度 \n\n2. 核密度分析\n\n+ 点对象：核密度分析曲面与下方的平面所围成空间的体积近似于此点的测量值\n+ 线对象：核密度曲面与下方的平面所围成空间近似于此线的测量值与线长度的乘积。点或线的领域叠加处，其密度值也相加，每个输出栅格的密度均为叠加在栅格上的所有核曲面之和\n\n## <a href=\"../空间相关性分析#探索性空间分析\">探索性空间数据分析的定义和作用</a>\n\n+ 定义：描述和显示空间分布、识别非常规的空间位置、发现隐含空间关系等的一系列技术的集合\n\n+ 作用：\n\n 1. 检验数据分布\n\n  用**直方图**或**QQ概率图**可以直观地检验数据分布的形状，并确定分布中心\n\n  2. 寻找数据离群值\n\n   用**直方图**和**半变异函数云图**都可以方便地找出离群值的样点\n\n  3. 全局趋势分析\n\n   通过用**趋势分析工具**可以直观地得到是否存在全局趋势\n\n## 探索性空间数据分析的可视化方法\n\n+ 直方图、散点图、茎叶图、箱线图、QQ图、趋势分析、半变异/协方差函数云图\n\n## <a href=\"../空间相关性分析\">空间自相关的定义和分析方法</a>\n\n1. 定义\n\n   同一个变量在不同空间位置上的相关性\n\n2. 分析方法\n\n   全局空间自相关分析\n\n   > 用来分析在整个研究范围内指定的属性是否具有自相关性\n\n   局部空间自相关分析\n\n   > 用来分析在特定的局部地点指定的属性是否具有自相关性\n\n   Moran's *I*、Geary's *I*、Getis、Join count\n\n## 区域化变量定义和特点\n\n1. 定义\n\n   一种在空间上具有数值的实函数\n\n2. 特点\n\n   空间局限性\n\n   > 区域化变量被限制于一定空间范围，这称为几何域。在几何域内，区域化变量的属性最为明显；在几何域外，不明显\n\n   连续性\n\n   > 不同的区域化变量具有不同程度的连续性，用区域化变量的半变异函数来描述\n\n   各向异性\n\n   > 当区域化变量在各个方向上具有相同性质时称各向同性，否则称为各向异性\n\n## <a href=\"../表面与三维空间分析\">地表起伏度</a>、粗糙度、切割深度\n\n+ 地形起伏度：指在一个特定区域内，最高点海拔高度与最低点海拔高度的差值\n+ 粗糙度：反映地表**起伏变化**和**侵蚀程度**的指标。一般定义为地表单元的**曲面面积**与其在水平面上的**投影面积**之比\n+ 切割深度：地面某点的**邻域范围的平均高程**与该邻域范围内的**最小高程的差值**\n\n## 表面积、体积、<a href=\"../表面与三维空间分析#坡度\">坡度</a>、坡向\n\n+ 面积：由一组闭合弧段所包围的空间区域\n\n+ 体积：指空间**曲面**与某**基准平面之**间的空间的体积\n\n+ 坡度：某点在曲面上的**法线方向**与**垂直方向**的夹角，是地面特定点高度变化比率的度量\n+ 坡向：**法线的正方向在平面上的投影**与**正北方向的夹角**，即法方向水平投影向量的方位角。取值范围从零方向(正北方向)顺时针到360度。\n\n## 水文分析主要过程、<a href=\"../表面与三维空间分析#水流方向\">水流方向</a>、汇聚量\n\n+ 水文分析一般流程：填充伪洼地、计算水流流向、计算累积汇水量、划分流域、提取水系网络\n\n+ 水流方向：水流离开每一个单元时的指向\n\n+ 汇聚量：区域地形每点的流水累积量\n\n## 山脊线提取、DEM提取河网的方法\n\n1. 山脊线提取\n\n+ 对DEM进行洼地填充\n+ 计算水流方向\n+ 计算汇流累计量\n+ 提取汇流累积量为0的区域(栅格计算器)\n\n2. 山谷线提取\n\n+ 计算反地形\n+ 对DEM进行洼地填充\n+ 计算水流方向\n+ 计算汇流累计量\n+ 提取汇流累积量为0的区域(栅格计算器)\n\n## 探索性空间数据分析的可视化方法\n\n+ 两点之间的可视性分析\n+ 点对线的可视性\n+ 点对区域通视\n\n## 实验\n\n1. 位置与几何关系分析\n\n   实验内容：根据提供的DEM、温度、湿度、道路、土地利用以及景点资源数据，选择地势平坦、气候舒适、交通便利、距离景点较近，且具有一定规模的区域，作为休闲度假开发区\n\n   实验方法：\n\n   + 利用DEM数据生成坡度数据和起伏度数据\n   + 利用距离分析生成交通便利度和景点距离数据\n   + 量化和标准化后加权叠加确定研究区综合得分\n   + 平滑处理，根据开发规模提取适宜的开发区域\n\n   ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211119094332.png)\n\n2. 水文分析\n\n   实验内容：根据某地的DEM数据，提取常用的地形特征要素，包括山顶顶点与洼地底点、山脊线与山谷线，以及鞍部\n\n   ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211119094646.png)\n\n## 题型：\n\n+ 单选：15 * 2\n\n+ 判断：15 * 1\n\n+ 简答：5 * 6\n\n+ 计算分析：10 + 15\n\n  \n","source":"_posts/GIS空间分析复习.md","raw":"---\ntitle: GIS空间分析复习\ndate: 2021-11-16 20:59:18\ntags: GIS空间分析\nmathjax: true\ncategories: [GIS,GIS空间分析]\ndescription: 重点\n---\n\n## 地理学第一定律\n\n**地理学第一定律，即地理事物或属性在空间分布上互为相关，存在聚集、随机、规则分布**。即距离越近的地理事物，其性质也必相近\n\n## <a href=\"../空间分析与GIS#空间分析的一般过程\">空间分析的一般过程</a>\n\n1. 确定问题\n\n2. 选择分析工具\n\n3. 准备空间数据\n\n4. 制定空间分析流程\n\n5. 展示并解释分析结果\n\n   ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211116220555.png)\n\n## <a href=\"../空间分析与GIS#空间分析任务\">空间分析的任务</a>\n\n+ 基本任务\n\n  > 获取空间信息$\\rightarrow$解决空间问题\n\n+ 5类具体任务\n\n  + 位置分析\n    + 某一事物或现象在什么位置、在特定的位置有什么和是什么等\n  + 条件分析\n    + 符合某些条件的地理对象是什么、在哪里等问题\n  + 变化趋势分析\n    + 地理对象随时间变化而变化$\\rightarrow$预测未来的可能状况(根本目的)$\\rightarrow$发生机理和变化因子$\\rightarrow$做出科学的决策\n  + 模式认知\n    + 地理对象实体或对象之间的空间关系模式、地球系统内部各要素之间或各子系统之间的关系模式等\n  + 模拟与预测\n    + 对未发生或已发生的地理事件、现象、规律进行演变和反馈\n\n## Moran's统计量的定义，如何根据Moran's来判断空间相关性\n\n空间自相关系数：用来度量物理或生态学变量在**空间上的分布特征**及其对**邻域的影响程度**。常用来定量地描述事物在空间上的依赖关系。\n\n+ I值结果一定介于-1到1之间\n+ I>0为正相关，数值越大表示空间分布的相关性越大，即空间上聚集分布的现象越明显\n+ I<0为负相关，数值越小代表示相关性小\n+ I趋于0时，代表空间分布呈现随机分布的情形\n\n## <a href=\"../空间量算与数据探测#欧氏距离\">欧式距离</a>、曼哈顿距离、成本距离\n\n+ 欧式空间是对**物理空间**的一种**数学**理解与表达，是GIS中常用的一种重要空间。欧式空间擅长平面二维空间目标的空间**方位**、**规模**的表达\n+ 曼哈顿距离x、y方向距离之和\n+ 成本距离是每个栅格单元到源的最小费用距离\n\n## <a href=\"../空间量算与数据探测#基本几何参数量测\">中心要素、算术平均中心、中位数中心与重心</a>\n\n+ 中心要素：点、线、面要素类中位于**最中央**的要素,结果是样本中的一个要素\n+ 算术平均中心：描述数据**集中的位置**的统计量(对极值敏感)\n+ 中位数中心：数据集中要素之间的总欧氏距离最小的位置点\n+ 重心：通常用于宏观经济分析和市场区位选择，跟踪某些空间分布的变化，如人口迁徙，土地类型变化等\n\n## <a href=\"../空间量算与数据探测#地理空间目标形态量测\">线状地物、面状地物形态描述的参数</a>\n\n+ 线状：曲率、弯曲度、分形维数\n+ 面状：形状量算(周长、面积)、简单的图形概况(外接矩形、最大内切\\外接圆、最小凸多边形)、空间完整性(欧拉数)\n\n## <a href=\"../空间量算与数据探测#点模式\">点模式</a>和线模式的描述参数\n\n+ 点模式：分布密度、分布中心、分布轴线、离散度、样方分析\n\n+ 线模式：线密度、最近邻分析、线状对象的定向、连通度\n\n## <a href=\"../位置与几何关系分析#重分类\">重分类</a>、<a href=\"../位置与几何关系分析#地图代数\">局域运算(地图代数)</a>\n\n+ 重分类是将**属性数据的类别转换成新类**，即基于原有数值类型，对原有数值类型按照一定的原则**重新进行分类**，从而得到**一组新值**并输出\n+ 地图代数：两个以上层面的栅格数据系统，以某种**函数关系**作为复合分析依据进行**逐网格运算**，从而得到新的栅格数据系统的过程\n\n## <a href=\"../位置与几何关系分析#统计分析\">邻域运算(窗口分析)、分区运算(分带运算)</a>\n\n+ 邻域运算是以待**计算栅格为中心**，向其周围扩展**一定邻域**，在单元对应的**邻域范围指定的单元上**进行统计分析，然后将结果值输出到该单元位置\n+ 分区运算：将同一区域内具有相同值的像元看作一个整体进行分析运算\n\n## <a href=\"../位置与几何关系分析#距离分析\">源栅格、成本栅格、成本距离</a>\n\n> 源即距离分析中的目标或目的地\n\n+ 源栅格：记录距离分析中的目标或目的地的栅格\n\n+ 成本栅格：记录通过每一单元的通行成本的栅格\n\n+ 成本距离：**记录每一个单元到它最近源的最小累积成本**\n\n  ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211122114233.png)\n\n## 方向栅格、配置栅格、成本路径\n\n+ 方向栅格：从每一栅格单元出发，沿最低累积成本路径到达最近源的路线方向\n+ 配置栅格：记录每一单元点**隶属的最近源信息**，单元值就是其最近源的值\n+ 成本路径：记录每个栅格到距离最近、成本最低的源的最少累加成本路径\n\n## <a href=\"../位置与几何关系分析#缓冲区分析应用\">缓冲区查询</a>\n\n缓冲区查询，即在数据服务中的指定数据集集合中查找符合缓冲区的矢量要素，并在客户端中展示出来\n\n## <a href=\"../位置与几何关系分析#缓冲区\">缓冲区分析的参数</a>\n\n缓冲区半径、缓冲区要素、单侧缓冲区、均质缓冲区、融合\n\n## 统计查询\n\n统计分析：即空间数据的统计分析，核心就是认识与地理位置相关的数据间的**空间依赖、空间关联或空间自相关**，通过空间位置建立**数据间的统计关系**\n\n## <a href=\"../位置与几何关系分析#叠加分析\">矢量数据的叠加分析?叠加分析方法、区别、应用</a>\n\n> 矢量数据叠加分析：将同一区域的、具有同种空间坐标系统的两个或多个不同主题的矢量数据图层进行逻辑交、差、并等拓扑运算，生成一个具有多重属性的新图层的过程\n\n> 叠加分析方法、区别、应用\n\n>> 图层合并\n\n>>> 并集：保留两个输入层中所有多边形\n\n>> ![图层合并](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111185938.png)\n\n>> 交集操作\n\n>>> 交集：保留两个输入层中的公共区域\n\n>> ![交集](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190005.png)\n\n>> 图层擦除\n\n>> ![擦除](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190036.png)\n\n>> 识别叠加\n\n>>> 以输入图层为界，保留边界内的所有多边形\n\n>> ![识别叠加](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190240.png)\n\n>> 对称差值\n\n>> 修正更新\n\n>>> 输出层为一个经删除处理后的图层与一个新特征图层进行合并后的结果\n\n>> ![修正更新](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190437.png)\n\n>> 裁剪\n\n>>> 输出层为按一个图层的边界，对另外一个图层的内容要素进行截取后的结果\n\n>> ![擦除](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190621.png)\n\n>> 交集取反\n\n>>> 保留两个输入层中的公共区域的反\n\n>> ![交集取反](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111191207.png)\n\n## <a href=\"位置与几何关系分析#泰森多边形\">泰森多边形分析的原理与应用</a>\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211121092644.png)\n\n+ 原理：\n\n  > 由**点图层**生成其**近邻多边形图层**，来表示该标识点的影响范围，确保在一个多边形内的每个采样点与该多边形内的已知点更接近，而与其他的已知点相距较远，是**局部拟合插值法**的一种。每个点对应一个新生成的多边形，该输入点作为多边形的标识点，相邻标识点到其“公共边”的距离相等。\n\n+ 实现：\n\n  > 由输入点相连生成三角网\n  >\n  > 对每个三角形的边作垂直平分线\n  >\n  > 删除原三角形\n  >\n  > 而每个输入点作为多边形的标识点，垂直平分线作为泰森多边形的边\n\n+ 特点：\n\n  > 每个泰森多边形内仅含有一个控制点数据\n  >\n  > 泰森多边形内的点到相应控制点的距离最近\n  >\n  > 位于泰森多边形边上的点到其两边控制点的距离相等\n\n+ 应用：大气质量评估与污染气体分布、适用于生成专题之间明显边界的现象，而不会出现不同级别之间的中间现象、常用于多种设施特别是公共设施的服务区域分析\n\n## 密度分析类型，计算方法\n\n1.  简单密度\n\n+ 点密度计算：为每个输出栅格单元计算邻域内点特征的密度    计算方法：点的测量值除以指定邻域面积，点的邻域叠加处，其密度值也相加，每个输出栅格的密度均为叠加在栅格上的所有邻域密度值之和\n+ 线密度计算：每个输出栅格单元计算领域内线特征的密度   计算方法：以输出单元为中心，以搜索半径定义一个圆，每条线落入圆内的部分，其长度乘上其代表的值，然后对所有的值求和，再除以圆的面积，得到线的密度 \n\n2. 核密度分析\n\n+ 点对象：核密度分析曲面与下方的平面所围成空间的体积近似于此点的测量值\n+ 线对象：核密度曲面与下方的平面所围成空间近似于此线的测量值与线长度的乘积。点或线的领域叠加处，其密度值也相加，每个输出栅格的密度均为叠加在栅格上的所有核曲面之和\n\n## <a href=\"../空间相关性分析#探索性空间分析\">探索性空间数据分析的定义和作用</a>\n\n+ 定义：描述和显示空间分布、识别非常规的空间位置、发现隐含空间关系等的一系列技术的集合\n\n+ 作用：\n\n 1. 检验数据分布\n\n  用**直方图**或**QQ概率图**可以直观地检验数据分布的形状，并确定分布中心\n\n  2. 寻找数据离群值\n\n   用**直方图**和**半变异函数云图**都可以方便地找出离群值的样点\n\n  3. 全局趋势分析\n\n   通过用**趋势分析工具**可以直观地得到是否存在全局趋势\n\n## 探索性空间数据分析的可视化方法\n\n+ 直方图、散点图、茎叶图、箱线图、QQ图、趋势分析、半变异/协方差函数云图\n\n## <a href=\"../空间相关性分析\">空间自相关的定义和分析方法</a>\n\n1. 定义\n\n   同一个变量在不同空间位置上的相关性\n\n2. 分析方法\n\n   全局空间自相关分析\n\n   > 用来分析在整个研究范围内指定的属性是否具有自相关性\n\n   局部空间自相关分析\n\n   > 用来分析在特定的局部地点指定的属性是否具有自相关性\n\n   Moran's *I*、Geary's *I*、Getis、Join count\n\n## 区域化变量定义和特点\n\n1. 定义\n\n   一种在空间上具有数值的实函数\n\n2. 特点\n\n   空间局限性\n\n   > 区域化变量被限制于一定空间范围，这称为几何域。在几何域内，区域化变量的属性最为明显；在几何域外，不明显\n\n   连续性\n\n   > 不同的区域化变量具有不同程度的连续性，用区域化变量的半变异函数来描述\n\n   各向异性\n\n   > 当区域化变量在各个方向上具有相同性质时称各向同性，否则称为各向异性\n\n## <a href=\"../表面与三维空间分析\">地表起伏度</a>、粗糙度、切割深度\n\n+ 地形起伏度：指在一个特定区域内，最高点海拔高度与最低点海拔高度的差值\n+ 粗糙度：反映地表**起伏变化**和**侵蚀程度**的指标。一般定义为地表单元的**曲面面积**与其在水平面上的**投影面积**之比\n+ 切割深度：地面某点的**邻域范围的平均高程**与该邻域范围内的**最小高程的差值**\n\n## 表面积、体积、<a href=\"../表面与三维空间分析#坡度\">坡度</a>、坡向\n\n+ 面积：由一组闭合弧段所包围的空间区域\n\n+ 体积：指空间**曲面**与某**基准平面之**间的空间的体积\n\n+ 坡度：某点在曲面上的**法线方向**与**垂直方向**的夹角，是地面特定点高度变化比率的度量\n+ 坡向：**法线的正方向在平面上的投影**与**正北方向的夹角**，即法方向水平投影向量的方位角。取值范围从零方向(正北方向)顺时针到360度。\n\n## 水文分析主要过程、<a href=\"../表面与三维空间分析#水流方向\">水流方向</a>、汇聚量\n\n+ 水文分析一般流程：填充伪洼地、计算水流流向、计算累积汇水量、划分流域、提取水系网络\n\n+ 水流方向：水流离开每一个单元时的指向\n\n+ 汇聚量：区域地形每点的流水累积量\n\n## 山脊线提取、DEM提取河网的方法\n\n1. 山脊线提取\n\n+ 对DEM进行洼地填充\n+ 计算水流方向\n+ 计算汇流累计量\n+ 提取汇流累积量为0的区域(栅格计算器)\n\n2. 山谷线提取\n\n+ 计算反地形\n+ 对DEM进行洼地填充\n+ 计算水流方向\n+ 计算汇流累计量\n+ 提取汇流累积量为0的区域(栅格计算器)\n\n## 探索性空间数据分析的可视化方法\n\n+ 两点之间的可视性分析\n+ 点对线的可视性\n+ 点对区域通视\n\n## 实验\n\n1. 位置与几何关系分析\n\n   实验内容：根据提供的DEM、温度、湿度、道路、土地利用以及景点资源数据，选择地势平坦、气候舒适、交通便利、距离景点较近，且具有一定规模的区域，作为休闲度假开发区\n\n   实验方法：\n\n   + 利用DEM数据生成坡度数据和起伏度数据\n   + 利用距离分析生成交通便利度和景点距离数据\n   + 量化和标准化后加权叠加确定研究区综合得分\n   + 平滑处理，根据开发规模提取适宜的开发区域\n\n   ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211119094332.png)\n\n2. 水文分析\n\n   实验内容：根据某地的DEM数据，提取常用的地形特征要素，包括山顶顶点与洼地底点、山脊线与山谷线，以及鞍部\n\n   ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211119094646.png)\n\n## 题型：\n\n+ 单选：15 * 2\n\n+ 判断：15 * 1\n\n+ 简答：5 * 6\n\n+ 计算分析：10 + 15\n\n  \n","slug":"GIS空间分析复习","published":1,"updated":"2021-12-27T08:07:30.488Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt270007jsvkh97a47be","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"地理学第一定律\"><a href=\"#地理学第一定律\" class=\"headerlink\" title=\"地理学第一定律\"></a>地理学第一定律</h2><p><strong>地理学第一定律，即地理事物或属性在空间分布上互为相关，存在聚集、随机、规则分布</strong>。即距离越近的地理事物，其性质也必相近</p>\n<h2 id=\"空间分析的一般过程\"><a href=\"#空间分析的一般过程\" class=\"headerlink\" title=\"空间分析的一般过程\"></a><a href=\"../空间分析与GIS#空间分析的一般过程\">空间分析的一般过程</a></h2><ol>\n<li><p>确定问题</p>\n</li>\n<li><p>选择分析工具</p>\n</li>\n<li><p>准备空间数据</p>\n</li>\n<li><p>制定空间分析流程</p>\n</li>\n<li><p>展示并解释分析结果</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211116220555.png\" alt=\"\"></p>\n</li>\n</ol>\n<h2 id=\"空间分析的任务\"><a href=\"#空间分析的任务\" class=\"headerlink\" title=\"空间分析的任务\"></a><a href=\"../空间分析与GIS#空间分析任务\">空间分析的任务</a></h2><ul>\n<li><p>基本任务</p>\n<blockquote>\n<p>获取空间信息<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>解决空间问题</p>\n</blockquote>\n</li>\n<li><p>5类具体任务</p>\n<ul>\n<li>位置分析<ul>\n<li>某一事物或现象在什么位置、在特定的位置有什么和是什么等</li>\n</ul>\n</li>\n<li>条件分析<ul>\n<li>符合某些条件的地理对象是什么、在哪里等问题</li>\n</ul>\n</li>\n<li>变化趋势分析<ul>\n<li>地理对象随时间变化而变化<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>预测未来的可能状况(根本目的)<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>发生机理和变化因子<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>做出科学的决策</li>\n</ul>\n</li>\n<li>模式认知<ul>\n<li>地理对象实体或对象之间的空间关系模式、地球系统内部各要素之间或各子系统之间的关系模式等</li>\n</ul>\n</li>\n<li>模拟与预测<ul>\n<li>对未发生或已发生的地理事件、现象、规律进行演变和反馈</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Moran’s统计量的定义，如何根据Moran’s来判断空间相关性\"><a href=\"#Moran’s统计量的定义，如何根据Moran’s来判断空间相关性\" class=\"headerlink\" title=\"Moran’s统计量的定义，如何根据Moran’s来判断空间相关性\"></a>Moran’s统计量的定义，如何根据Moran’s来判断空间相关性</h2><p>空间自相关系数：用来度量物理或生态学变量在<strong>空间上的分布特征</strong>及其对<strong>邻域的影响程度</strong>。常用来定量地描述事物在空间上的依赖关系。</p>\n<ul>\n<li>I值结果一定介于-1到1之间</li>\n<li>I&gt;0为正相关，数值越大表示空间分布的相关性越大，即空间上聚集分布的现象越明显</li>\n<li>I&lt;0为负相关，数值越小代表示相关性小</li>\n<li>I趋于0时，代表空间分布呈现随机分布的情形</li>\n</ul>\n<h2 id=\"欧式距离、曼哈顿距离、成本距离\"><a href=\"#欧式距离、曼哈顿距离、成本距离\" class=\"headerlink\" title=\"欧式距离、曼哈顿距离、成本距离\"></a><a href=\"../空间量算与数据探测#欧氏距离\">欧式距离</a>、曼哈顿距离、成本距离</h2><ul>\n<li>欧式空间是对<strong>物理空间</strong>的一种<strong>数学</strong>理解与表达，是GIS中常用的一种重要空间。欧式空间擅长平面二维空间目标的空间<strong>方位</strong>、<strong>规模</strong>的表达</li>\n<li>曼哈顿距离x、y方向距离之和</li>\n<li>成本距离是每个栅格单元到源的最小费用距离</li>\n</ul>\n<h2 id=\"中心要素、算术平均中心、中位数中心与重心\"><a href=\"#中心要素、算术平均中心、中位数中心与重心\" class=\"headerlink\" title=\"中心要素、算术平均中心、中位数中心与重心\"></a><a href=\"../空间量算与数据探测#基本几何参数量测\">中心要素、算术平均中心、中位数中心与重心</a></h2><ul>\n<li>中心要素：点、线、面要素类中位于<strong>最中央</strong>的要素,结果是样本中的一个要素</li>\n<li>算术平均中心：描述数据<strong>集中的位置</strong>的统计量(对极值敏感)</li>\n<li>中位数中心：数据集中要素之间的总欧氏距离最小的位置点</li>\n<li>重心：通常用于宏观经济分析和市场区位选择，跟踪某些空间分布的变化，如人口迁徙，土地类型变化等</li>\n</ul>\n<h2 id=\"线状地物、面状地物形态描述的参数\"><a href=\"#线状地物、面状地物形态描述的参数\" class=\"headerlink\" title=\"线状地物、面状地物形态描述的参数\"></a><a href=\"../空间量算与数据探测#地理空间目标形态量测\">线状地物、面状地物形态描述的参数</a></h2><ul>\n<li>线状：曲率、弯曲度、分形维数</li>\n<li>面状：形状量算(周长、面积)、简单的图形概况(外接矩形、最大内切\\外接圆、最小凸多边形)、空间完整性(欧拉数)</li>\n</ul>\n<h2 id=\"点模式和线模式的描述参数\"><a href=\"#点模式和线模式的描述参数\" class=\"headerlink\" title=\"点模式和线模式的描述参数\"></a><a href=\"../空间量算与数据探测#点模式\">点模式</a>和线模式的描述参数</h2><ul>\n<li><p>点模式：分布密度、分布中心、分布轴线、离散度、样方分析</p>\n</li>\n<li><p>线模式：线密度、最近邻分析、线状对象的定向、连通度</p>\n</li>\n</ul>\n<h2 id=\"重分类、局域运算-地图代数\"><a href=\"#重分类、局域运算-地图代数\" class=\"headerlink\" title=\"重分类、局域运算(地图代数)\"></a><a href=\"../位置与几何关系分析#重分类\">重分类</a>、<a href=\"../位置与几何关系分析#地图代数\">局域运算(地图代数)</a></h2><ul>\n<li>重分类是将<strong>属性数据的类别转换成新类</strong>，即基于原有数值类型，对原有数值类型按照一定的原则<strong>重新进行分类</strong>，从而得到<strong>一组新值</strong>并输出</li>\n<li>地图代数：两个以上层面的栅格数据系统，以某种<strong>函数关系</strong>作为复合分析依据进行<strong>逐网格运算</strong>，从而得到新的栅格数据系统的过程</li>\n</ul>\n<h2 id=\"邻域运算-窗口分析-、分区运算-分带运算\"><a href=\"#邻域运算-窗口分析-、分区运算-分带运算\" class=\"headerlink\" title=\"邻域运算(窗口分析)、分区运算(分带运算)\"></a><a href=\"../位置与几何关系分析#统计分析\">邻域运算(窗口分析)、分区运算(分带运算)</a></h2><ul>\n<li>邻域运算是以待<strong>计算栅格为中心</strong>，向其周围扩展<strong>一定邻域</strong>，在单元对应的<strong>邻域范围指定的单元上</strong>进行统计分析，然后将结果值输出到该单元位置</li>\n<li>分区运算：将同一区域内具有相同值的像元看作一个整体进行分析运算</li>\n</ul>\n<h2 id=\"源栅格、成本栅格、成本距离\"><a href=\"#源栅格、成本栅格、成本距离\" class=\"headerlink\" title=\"源栅格、成本栅格、成本距离\"></a><a href=\"../位置与几何关系分析#距离分析\">源栅格、成本栅格、成本距离</a></h2><blockquote>\n<p>源即距离分析中的目标或目的地</p>\n</blockquote>\n<ul>\n<li><p>源栅格：记录距离分析中的目标或目的地的栅格</p>\n</li>\n<li><p>成本栅格：记录通过每一单元的通行成本的栅格</p>\n</li>\n<li><p>成本距离：<strong>记录每一个单元到它最近源的最小累积成本</strong></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211122114233.png\" alt=\"\"></p>\n</li>\n</ul>\n<h2 id=\"方向栅格、配置栅格、成本路径\"><a href=\"#方向栅格、配置栅格、成本路径\" class=\"headerlink\" title=\"方向栅格、配置栅格、成本路径\"></a>方向栅格、配置栅格、成本路径</h2><ul>\n<li>方向栅格：从每一栅格单元出发，沿最低累积成本路径到达最近源的路线方向</li>\n<li>配置栅格：记录每一单元点<strong>隶属的最近源信息</strong>，单元值就是其最近源的值</li>\n<li>成本路径：记录每个栅格到距离最近、成本最低的源的最少累加成本路径</li>\n</ul>\n<h2 id=\"缓冲区查询\"><a href=\"#缓冲区查询\" class=\"headerlink\" title=\"缓冲区查询\"></a><a href=\"../位置与几何关系分析#缓冲区分析应用\">缓冲区查询</a></h2><p>缓冲区查询，即在数据服务中的指定数据集集合中查找符合缓冲区的矢量要素，并在客户端中展示出来</p>\n<h2 id=\"缓冲区分析的参数\"><a href=\"#缓冲区分析的参数\" class=\"headerlink\" title=\"缓冲区分析的参数\"></a><a href=\"../位置与几何关系分析#缓冲区\">缓冲区分析的参数</a></h2><p>缓冲区半径、缓冲区要素、单侧缓冲区、均质缓冲区、融合</p>\n<h2 id=\"统计查询\"><a href=\"#统计查询\" class=\"headerlink\" title=\"统计查询\"></a>统计查询</h2><p>统计分析：即空间数据的统计分析，核心就是认识与地理位置相关的数据间的<strong>空间依赖、空间关联或空间自相关</strong>，通过空间位置建立<strong>数据间的统计关系</strong></p>\n<h2 id=\"矢量数据的叠加分析-叠加分析方法、区别、应用\"><a href=\"#矢量数据的叠加分析-叠加分析方法、区别、应用\" class=\"headerlink\" title=\"矢量数据的叠加分析?叠加分析方法、区别、应用\"></a><a href=\"../位置与几何关系分析#叠加分析\">矢量数据的叠加分析?叠加分析方法、区别、应用</a></h2><blockquote>\n<p>矢量数据叠加分析：将同一区域的、具有同种空间坐标系统的两个或多个不同主题的矢量数据图层进行逻辑交、差、并等拓扑运算，生成一个具有多重属性的新图层的过程</p>\n<p>叠加分析方法、区别、应用</p>\n<blockquote>\n<p>图层合并</p>\n<blockquote>\n<p>并集：保留两个输入层中所有多边形</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111185938.png\" alt=\"图层合并\"></p>\n<p>交集操作</p>\n<blockquote>\n<p>交集：保留两个输入层中的公共区域</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190005.png\" alt=\"交集\"></p>\n<p>图层擦除</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190036.png\" alt=\"擦除\"></p>\n<p>识别叠加</p>\n<blockquote>\n<p>以输入图层为界，保留边界内的所有多边形</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190240.png\" alt=\"识别叠加\"></p>\n<p>对称差值</p>\n<p>修正更新</p>\n<blockquote>\n<p>输出层为一个经删除处理后的图层与一个新特征图层进行合并后的结果</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190437.png\" alt=\"修正更新\"></p>\n<p>裁剪</p>\n<blockquote>\n<p>输出层为按一个图层的边界，对另外一个图层的内容要素进行截取后的结果</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190621.png\" alt=\"擦除\"></p>\n<p>交集取反</p>\n<blockquote>\n<p>保留两个输入层中的公共区域的反</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111191207.png\" alt=\"交集取反\"></p>\n</blockquote>\n</blockquote>\n<h2 id=\"泰森多边形分析的原理与应用\"><a href=\"#泰森多边形分析的原理与应用\" class=\"headerlink\" title=\"泰森多边形分析的原理与应用\"></a><a href=\"位置与几何关系分析#泰森多边形\">泰森多边形分析的原理与应用</a></h2><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211121092644.png\" alt=\"\"></p>\n<ul>\n<li><p>原理：</p>\n<blockquote>\n<p>由<strong>点图层</strong>生成其<strong>近邻多边形图层</strong>，来表示该标识点的影响范围，确保在一个多边形内的每个采样点与该多边形内的已知点更接近，而与其他的已知点相距较远，是<strong>局部拟合插值法</strong>的一种。每个点对应一个新生成的多边形，该输入点作为多边形的标识点，相邻标识点到其“公共边”的距离相等。</p>\n</blockquote>\n</li>\n<li><p>实现：</p>\n<blockquote>\n<p>由输入点相连生成三角网</p>\n<p>对每个三角形的边作垂直平分线</p>\n<p>删除原三角形</p>\n<p>而每个输入点作为多边形的标识点，垂直平分线作为泰森多边形的边</p>\n</blockquote>\n</li>\n<li><p>特点：</p>\n<blockquote>\n<p>每个泰森多边形内仅含有一个控制点数据</p>\n<p>泰森多边形内的点到相应控制点的距离最近</p>\n<p>位于泰森多边形边上的点到其两边控制点的距离相等</p>\n</blockquote>\n</li>\n<li><p>应用：大气质量评估与污染气体分布、适用于生成专题之间明显边界的现象，而不会出现不同级别之间的中间现象、常用于多种设施特别是公共设施的服务区域分析</p>\n</li>\n</ul>\n<h2 id=\"密度分析类型，计算方法\"><a href=\"#密度分析类型，计算方法\" class=\"headerlink\" title=\"密度分析类型，计算方法\"></a>密度分析类型，计算方法</h2><ol>\n<li>简单密度</li>\n</ol>\n<ul>\n<li>点密度计算：为每个输出栅格单元计算邻域内点特征的密度    计算方法：点的测量值除以指定邻域面积，点的邻域叠加处，其密度值也相加，每个输出栅格的密度均为叠加在栅格上的所有邻域密度值之和</li>\n<li>线密度计算：每个输出栅格单元计算领域内线特征的密度   计算方法：以输出单元为中心，以搜索半径定义一个圆，每条线落入圆内的部分，其长度乘上其代表的值，然后对所有的值求和，再除以圆的面积，得到线的密度 </li>\n</ul>\n<ol>\n<li>核密度分析</li>\n</ol>\n<ul>\n<li>点对象：核密度分析曲面与下方的平面所围成空间的体积近似于此点的测量值</li>\n<li>线对象：核密度曲面与下方的平面所围成空间近似于此线的测量值与线长度的乘积。点或线的领域叠加处，其密度值也相加，每个输出栅格的密度均为叠加在栅格上的所有核曲面之和</li>\n</ul>\n<h2 id=\"探索性空间数据分析的定义和作用\"><a href=\"#探索性空间数据分析的定义和作用\" class=\"headerlink\" title=\"探索性空间数据分析的定义和作用\"></a><a href=\"../空间相关性分析#探索性空间分析\">探索性空间数据分析的定义和作用</a></h2><ul>\n<li><p>定义：描述和显示空间分布、识别非常规的空间位置、发现隐含空间关系等的一系列技术的集合</p>\n</li>\n<li><p>作用：</p>\n<ol>\n<li>检验数据分布</li>\n</ol>\n<p>用<strong>直方图</strong>或<strong>QQ概率图</strong>可以直观地检验数据分布的形状，并确定分布中心</p>\n<ol>\n<li><p>寻找数据离群值</p>\n<p>用<strong>直方图</strong>和<strong>半变异函数云图</strong>都可以方便地找出离群值的样点</p>\n</li>\n<li><p>全局趋势分析</p>\n<p>通过用<strong>趋势分析工具</strong>可以直观地得到是否存在全局趋势</p>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"探索性空间数据分析的可视化方法\"><a href=\"#探索性空间数据分析的可视化方法\" class=\"headerlink\" title=\"探索性空间数据分析的可视化方法\"></a>探索性空间数据分析的可视化方法</h2><ul>\n<li>直方图、散点图、茎叶图、箱线图、QQ图、趋势分析、半变异/协方差函数云图</li>\n</ul>\n<h2 id=\"空间自相关的定义和分析方法\"><a href=\"#空间自相关的定义和分析方法\" class=\"headerlink\" title=\"空间自相关的定义和分析方法\"></a><a href=\"../空间相关性分析\">空间自相关的定义和分析方法</a></h2><ol>\n<li><p>定义</p>\n<p>同一个变量在不同空间位置上的相关性</p>\n</li>\n<li><p>分析方法</p>\n<p>全局空间自相关分析</p>\n<blockquote>\n<p>用来分析在整个研究范围内指定的属性是否具有自相关性</p>\n</blockquote>\n<p>局部空间自相关分析</p>\n<blockquote>\n<p>用来分析在特定的局部地点指定的属性是否具有自相关性</p>\n</blockquote>\n<p>Moran’s <em>I</em>、Geary’s <em>I</em>、Getis、Join count</p>\n</li>\n</ol>\n<h2 id=\"区域化变量定义和特点\"><a href=\"#区域化变量定义和特点\" class=\"headerlink\" title=\"区域化变量定义和特点\"></a>区域化变量定义和特点</h2><ol>\n<li><p>定义</p>\n<p>一种在空间上具有数值的实函数</p>\n</li>\n<li><p>特点</p>\n<p>空间局限性</p>\n<blockquote>\n<p>区域化变量被限制于一定空间范围，这称为几何域。在几何域内，区域化变量的属性最为明显；在几何域外，不明显</p>\n</blockquote>\n<p>连续性</p>\n<blockquote>\n<p>不同的区域化变量具有不同程度的连续性，用区域化变量的半变异函数来描述</p>\n</blockquote>\n<p>各向异性</p>\n<blockquote>\n<p>当区域化变量在各个方向上具有相同性质时称各向同性，否则称为各向异性</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"地表起伏度、粗糙度、切割深度\"><a href=\"#地表起伏度、粗糙度、切割深度\" class=\"headerlink\" title=\"地表起伏度、粗糙度、切割深度\"></a><a href=\"../表面与三维空间分析\">地表起伏度</a>、粗糙度、切割深度</h2><ul>\n<li>地形起伏度：指在一个特定区域内，最高点海拔高度与最低点海拔高度的差值</li>\n<li>粗糙度：反映地表<strong>起伏变化</strong>和<strong>侵蚀程度</strong>的指标。一般定义为地表单元的<strong>曲面面积</strong>与其在水平面上的<strong>投影面积</strong>之比</li>\n<li>切割深度：地面某点的<strong>邻域范围的平均高程</strong>与该邻域范围内的<strong>最小高程的差值</strong></li>\n</ul>\n<h2 id=\"表面积、体积、坡度、坡向\"><a href=\"#表面积、体积、坡度、坡向\" class=\"headerlink\" title=\"表面积、体积、坡度、坡向\"></a>表面积、体积、<a href=\"../表面与三维空间分析#坡度\">坡度</a>、坡向</h2><ul>\n<li><p>面积：由一组闭合弧段所包围的空间区域</p>\n</li>\n<li><p>体积：指空间<strong>曲面</strong>与某<strong>基准平面之</strong>间的空间的体积</p>\n</li>\n<li><p>坡度：某点在曲面上的<strong>法线方向</strong>与<strong>垂直方向</strong>的夹角，是地面特定点高度变化比率的度量</p>\n</li>\n<li>坡向：<strong>法线的正方向在平面上的投影</strong>与<strong>正北方向的夹角</strong>，即法方向水平投影向量的方位角。取值范围从零方向(正北方向)顺时针到360度。</li>\n</ul>\n<h2 id=\"水文分析主要过程、水流方向、汇聚量\"><a href=\"#水文分析主要过程、水流方向、汇聚量\" class=\"headerlink\" title=\"水文分析主要过程、水流方向、汇聚量\"></a>水文分析主要过程、<a href=\"../表面与三维空间分析#水流方向\">水流方向</a>、汇聚量</h2><ul>\n<li><p>水文分析一般流程：填充伪洼地、计算水流流向、计算累积汇水量、划分流域、提取水系网络</p>\n</li>\n<li><p>水流方向：水流离开每一个单元时的指向</p>\n</li>\n<li><p>汇聚量：区域地形每点的流水累积量</p>\n</li>\n</ul>\n<h2 id=\"山脊线提取、DEM提取河网的方法\"><a href=\"#山脊线提取、DEM提取河网的方法\" class=\"headerlink\" title=\"山脊线提取、DEM提取河网的方法\"></a>山脊线提取、DEM提取河网的方法</h2><ol>\n<li>山脊线提取</li>\n</ol>\n<ul>\n<li>对DEM进行洼地填充</li>\n<li>计算水流方向</li>\n<li>计算汇流累计量</li>\n<li>提取汇流累积量为0的区域(栅格计算器)</li>\n</ul>\n<ol>\n<li>山谷线提取</li>\n</ol>\n<ul>\n<li>计算反地形</li>\n<li>对DEM进行洼地填充</li>\n<li>计算水流方向</li>\n<li>计算汇流累计量</li>\n<li>提取汇流累积量为0的区域(栅格计算器)</li>\n</ul>\n<h2 id=\"探索性空间数据分析的可视化方法-1\"><a href=\"#探索性空间数据分析的可视化方法-1\" class=\"headerlink\" title=\"探索性空间数据分析的可视化方法\"></a>探索性空间数据分析的可视化方法</h2><ul>\n<li>两点之间的可视性分析</li>\n<li>点对线的可视性</li>\n<li>点对区域通视</li>\n</ul>\n<h2 id=\"实验\"><a href=\"#实验\" class=\"headerlink\" title=\"实验\"></a>实验</h2><ol>\n<li><p>位置与几何关系分析</p>\n<p>实验内容：根据提供的DEM、温度、湿度、道路、土地利用以及景点资源数据，选择地势平坦、气候舒适、交通便利、距离景点较近，且具有一定规模的区域，作为休闲度假开发区</p>\n<p>实验方法：</p>\n<ul>\n<li>利用DEM数据生成坡度数据和起伏度数据</li>\n<li>利用距离分析生成交通便利度和景点距离数据</li>\n<li>量化和标准化后加权叠加确定研究区综合得分</li>\n<li>平滑处理，根据开发规模提取适宜的开发区域</li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211119094332.png\" alt=\"\"></p>\n</li>\n<li><p>水文分析</p>\n<p>实验内容：根据某地的DEM数据，提取常用的地形特征要素，包括山顶顶点与洼地底点、山脊线与山谷线，以及鞍部</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211119094646.png\" alt=\"\"></p>\n</li>\n</ol>\n<h2 id=\"题型：\"><a href=\"#题型：\" class=\"headerlink\" title=\"题型：\"></a>题型：</h2><ul>\n<li><p>单选：15 * 2</p>\n</li>\n<li><p>判断：15 * 1</p>\n</li>\n<li><p>简答：5 * 6</p>\n</li>\n<li><p>计算分析：10 + 15</p>\n</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160701.webp","length":3811,"excerpt":"","more":"<h2 id=\"地理学第一定律\"><a href=\"#地理学第一定律\" class=\"headerlink\" title=\"地理学第一定律\"></a>地理学第一定律</h2><p><strong>地理学第一定律，即地理事物或属性在空间分布上互为相关，存在聚集、随机、规则分布</strong>。即距离越近的地理事物，其性质也必相近</p>\n<h2 id=\"空间分析的一般过程\"><a href=\"#空间分析的一般过程\" class=\"headerlink\" title=\"空间分析的一般过程\"></a><a href=\"../空间分析与GIS#空间分析的一般过程\">空间分析的一般过程</a></h2><ol>\n<li><p>确定问题</p>\n</li>\n<li><p>选择分析工具</p>\n</li>\n<li><p>准备空间数据</p>\n</li>\n<li><p>制定空间分析流程</p>\n</li>\n<li><p>展示并解释分析结果</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211116220555.png\" alt=\"\"></p>\n</li>\n</ol>\n<h2 id=\"空间分析的任务\"><a href=\"#空间分析的任务\" class=\"headerlink\" title=\"空间分析的任务\"></a><a href=\"../空间分析与GIS#空间分析任务\">空间分析的任务</a></h2><ul>\n<li><p>基本任务</p>\n<blockquote>\n<p>获取空间信息<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>解决空间问题</p>\n</blockquote>\n</li>\n<li><p>5类具体任务</p>\n<ul>\n<li>位置分析<ul>\n<li>某一事物或现象在什么位置、在特定的位置有什么和是什么等</li>\n</ul>\n</li>\n<li>条件分析<ul>\n<li>符合某些条件的地理对象是什么、在哪里等问题</li>\n</ul>\n</li>\n<li>变化趋势分析<ul>\n<li>地理对象随时间变化而变化<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>预测未来的可能状况(根本目的)<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>发生机理和变化因子<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>做出科学的决策</li>\n</ul>\n</li>\n<li>模式认知<ul>\n<li>地理对象实体或对象之间的空间关系模式、地球系统内部各要素之间或各子系统之间的关系模式等</li>\n</ul>\n</li>\n<li>模拟与预测<ul>\n<li>对未发生或已发生的地理事件、现象、规律进行演变和反馈</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Moran’s统计量的定义，如何根据Moran’s来判断空间相关性\"><a href=\"#Moran’s统计量的定义，如何根据Moran’s来判断空间相关性\" class=\"headerlink\" title=\"Moran’s统计量的定义，如何根据Moran’s来判断空间相关性\"></a>Moran’s统计量的定义，如何根据Moran’s来判断空间相关性</h2><p>空间自相关系数：用来度量物理或生态学变量在<strong>空间上的分布特征</strong>及其对<strong>邻域的影响程度</strong>。常用来定量地描述事物在空间上的依赖关系。</p>\n<ul>\n<li>I值结果一定介于-1到1之间</li>\n<li>I&gt;0为正相关，数值越大表示空间分布的相关性越大，即空间上聚集分布的现象越明显</li>\n<li>I&lt;0为负相关，数值越小代表示相关性小</li>\n<li>I趋于0时，代表空间分布呈现随机分布的情形</li>\n</ul>\n<h2 id=\"欧式距离、曼哈顿距离、成本距离\"><a href=\"#欧式距离、曼哈顿距离、成本距离\" class=\"headerlink\" title=\"欧式距离、曼哈顿距离、成本距离\"></a><a href=\"../空间量算与数据探测#欧氏距离\">欧式距离</a>、曼哈顿距离、成本距离</h2><ul>\n<li>欧式空间是对<strong>物理空间</strong>的一种<strong>数学</strong>理解与表达，是GIS中常用的一种重要空间。欧式空间擅长平面二维空间目标的空间<strong>方位</strong>、<strong>规模</strong>的表达</li>\n<li>曼哈顿距离x、y方向距离之和</li>\n<li>成本距离是每个栅格单元到源的最小费用距离</li>\n</ul>\n<h2 id=\"中心要素、算术平均中心、中位数中心与重心\"><a href=\"#中心要素、算术平均中心、中位数中心与重心\" class=\"headerlink\" title=\"中心要素、算术平均中心、中位数中心与重心\"></a><a href=\"../空间量算与数据探测#基本几何参数量测\">中心要素、算术平均中心、中位数中心与重心</a></h2><ul>\n<li>中心要素：点、线、面要素类中位于<strong>最中央</strong>的要素,结果是样本中的一个要素</li>\n<li>算术平均中心：描述数据<strong>集中的位置</strong>的统计量(对极值敏感)</li>\n<li>中位数中心：数据集中要素之间的总欧氏距离最小的位置点</li>\n<li>重心：通常用于宏观经济分析和市场区位选择，跟踪某些空间分布的变化，如人口迁徙，土地类型变化等</li>\n</ul>\n<h2 id=\"线状地物、面状地物形态描述的参数\"><a href=\"#线状地物、面状地物形态描述的参数\" class=\"headerlink\" title=\"线状地物、面状地物形态描述的参数\"></a><a href=\"../空间量算与数据探测#地理空间目标形态量测\">线状地物、面状地物形态描述的参数</a></h2><ul>\n<li>线状：曲率、弯曲度、分形维数</li>\n<li>面状：形状量算(周长、面积)、简单的图形概况(外接矩形、最大内切\\外接圆、最小凸多边形)、空间完整性(欧拉数)</li>\n</ul>\n<h2 id=\"点模式和线模式的描述参数\"><a href=\"#点模式和线模式的描述参数\" class=\"headerlink\" title=\"点模式和线模式的描述参数\"></a><a href=\"../空间量算与数据探测#点模式\">点模式</a>和线模式的描述参数</h2><ul>\n<li><p>点模式：分布密度、分布中心、分布轴线、离散度、样方分析</p>\n</li>\n<li><p>线模式：线密度、最近邻分析、线状对象的定向、连通度</p>\n</li>\n</ul>\n<h2 id=\"重分类、局域运算-地图代数\"><a href=\"#重分类、局域运算-地图代数\" class=\"headerlink\" title=\"重分类、局域运算(地图代数)\"></a><a href=\"../位置与几何关系分析#重分类\">重分类</a>、<a href=\"../位置与几何关系分析#地图代数\">局域运算(地图代数)</a></h2><ul>\n<li>重分类是将<strong>属性数据的类别转换成新类</strong>，即基于原有数值类型，对原有数值类型按照一定的原则<strong>重新进行分类</strong>，从而得到<strong>一组新值</strong>并输出</li>\n<li>地图代数：两个以上层面的栅格数据系统，以某种<strong>函数关系</strong>作为复合分析依据进行<strong>逐网格运算</strong>，从而得到新的栅格数据系统的过程</li>\n</ul>\n<h2 id=\"邻域运算-窗口分析-、分区运算-分带运算\"><a href=\"#邻域运算-窗口分析-、分区运算-分带运算\" class=\"headerlink\" title=\"邻域运算(窗口分析)、分区运算(分带运算)\"></a><a href=\"../位置与几何关系分析#统计分析\">邻域运算(窗口分析)、分区运算(分带运算)</a></h2><ul>\n<li>邻域运算是以待<strong>计算栅格为中心</strong>，向其周围扩展<strong>一定邻域</strong>，在单元对应的<strong>邻域范围指定的单元上</strong>进行统计分析，然后将结果值输出到该单元位置</li>\n<li>分区运算：将同一区域内具有相同值的像元看作一个整体进行分析运算</li>\n</ul>\n<h2 id=\"源栅格、成本栅格、成本距离\"><a href=\"#源栅格、成本栅格、成本距离\" class=\"headerlink\" title=\"源栅格、成本栅格、成本距离\"></a><a href=\"../位置与几何关系分析#距离分析\">源栅格、成本栅格、成本距离</a></h2><blockquote>\n<p>源即距离分析中的目标或目的地</p>\n</blockquote>\n<ul>\n<li><p>源栅格：记录距离分析中的目标或目的地的栅格</p>\n</li>\n<li><p>成本栅格：记录通过每一单元的通行成本的栅格</p>\n</li>\n<li><p>成本距离：<strong>记录每一个单元到它最近源的最小累积成本</strong></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211122114233.png\" alt=\"\"></p>\n</li>\n</ul>\n<h2 id=\"方向栅格、配置栅格、成本路径\"><a href=\"#方向栅格、配置栅格、成本路径\" class=\"headerlink\" title=\"方向栅格、配置栅格、成本路径\"></a>方向栅格、配置栅格、成本路径</h2><ul>\n<li>方向栅格：从每一栅格单元出发，沿最低累积成本路径到达最近源的路线方向</li>\n<li>配置栅格：记录每一单元点<strong>隶属的最近源信息</strong>，单元值就是其最近源的值</li>\n<li>成本路径：记录每个栅格到距离最近、成本最低的源的最少累加成本路径</li>\n</ul>\n<h2 id=\"缓冲区查询\"><a href=\"#缓冲区查询\" class=\"headerlink\" title=\"缓冲区查询\"></a><a href=\"../位置与几何关系分析#缓冲区分析应用\">缓冲区查询</a></h2><p>缓冲区查询，即在数据服务中的指定数据集集合中查找符合缓冲区的矢量要素，并在客户端中展示出来</p>\n<h2 id=\"缓冲区分析的参数\"><a href=\"#缓冲区分析的参数\" class=\"headerlink\" title=\"缓冲区分析的参数\"></a><a href=\"../位置与几何关系分析#缓冲区\">缓冲区分析的参数</a></h2><p>缓冲区半径、缓冲区要素、单侧缓冲区、均质缓冲区、融合</p>\n<h2 id=\"统计查询\"><a href=\"#统计查询\" class=\"headerlink\" title=\"统计查询\"></a>统计查询</h2><p>统计分析：即空间数据的统计分析，核心就是认识与地理位置相关的数据间的<strong>空间依赖、空间关联或空间自相关</strong>，通过空间位置建立<strong>数据间的统计关系</strong></p>\n<h2 id=\"矢量数据的叠加分析-叠加分析方法、区别、应用\"><a href=\"#矢量数据的叠加分析-叠加分析方法、区别、应用\" class=\"headerlink\" title=\"矢量数据的叠加分析?叠加分析方法、区别、应用\"></a><a href=\"../位置与几何关系分析#叠加分析\">矢量数据的叠加分析?叠加分析方法、区别、应用</a></h2><blockquote>\n<p>矢量数据叠加分析：将同一区域的、具有同种空间坐标系统的两个或多个不同主题的矢量数据图层进行逻辑交、差、并等拓扑运算，生成一个具有多重属性的新图层的过程</p>\n<p>叠加分析方法、区别、应用</p>\n<blockquote>\n<p>图层合并</p>\n<blockquote>\n<p>并集：保留两个输入层中所有多边形</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111185938.png\" alt=\"图层合并\"></p>\n<p>交集操作</p>\n<blockquote>\n<p>交集：保留两个输入层中的公共区域</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190005.png\" alt=\"交集\"></p>\n<p>图层擦除</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190036.png\" alt=\"擦除\"></p>\n<p>识别叠加</p>\n<blockquote>\n<p>以输入图层为界，保留边界内的所有多边形</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190240.png\" alt=\"识别叠加\"></p>\n<p>对称差值</p>\n<p>修正更新</p>\n<blockquote>\n<p>输出层为一个经删除处理后的图层与一个新特征图层进行合并后的结果</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190437.png\" alt=\"修正更新\"></p>\n<p>裁剪</p>\n<blockquote>\n<p>输出层为按一个图层的边界，对另外一个图层的内容要素进行截取后的结果</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190621.png\" alt=\"擦除\"></p>\n<p>交集取反</p>\n<blockquote>\n<p>保留两个输入层中的公共区域的反</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111191207.png\" alt=\"交集取反\"></p>\n</blockquote>\n</blockquote>\n<h2 id=\"泰森多边形分析的原理与应用\"><a href=\"#泰森多边形分析的原理与应用\" class=\"headerlink\" title=\"泰森多边形分析的原理与应用\"></a><a href=\"位置与几何关系分析#泰森多边形\">泰森多边形分析的原理与应用</a></h2><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211121092644.png\" alt=\"\"></p>\n<ul>\n<li><p>原理：</p>\n<blockquote>\n<p>由<strong>点图层</strong>生成其<strong>近邻多边形图层</strong>，来表示该标识点的影响范围，确保在一个多边形内的每个采样点与该多边形内的已知点更接近，而与其他的已知点相距较远，是<strong>局部拟合插值法</strong>的一种。每个点对应一个新生成的多边形，该输入点作为多边形的标识点，相邻标识点到其“公共边”的距离相等。</p>\n</blockquote>\n</li>\n<li><p>实现：</p>\n<blockquote>\n<p>由输入点相连生成三角网</p>\n<p>对每个三角形的边作垂直平分线</p>\n<p>删除原三角形</p>\n<p>而每个输入点作为多边形的标识点，垂直平分线作为泰森多边形的边</p>\n</blockquote>\n</li>\n<li><p>特点：</p>\n<blockquote>\n<p>每个泰森多边形内仅含有一个控制点数据</p>\n<p>泰森多边形内的点到相应控制点的距离最近</p>\n<p>位于泰森多边形边上的点到其两边控制点的距离相等</p>\n</blockquote>\n</li>\n<li><p>应用：大气质量评估与污染气体分布、适用于生成专题之间明显边界的现象，而不会出现不同级别之间的中间现象、常用于多种设施特别是公共设施的服务区域分析</p>\n</li>\n</ul>\n<h2 id=\"密度分析类型，计算方法\"><a href=\"#密度分析类型，计算方法\" class=\"headerlink\" title=\"密度分析类型，计算方法\"></a>密度分析类型，计算方法</h2><ol>\n<li>简单密度</li>\n</ol>\n<ul>\n<li>点密度计算：为每个输出栅格单元计算邻域内点特征的密度    计算方法：点的测量值除以指定邻域面积，点的邻域叠加处，其密度值也相加，每个输出栅格的密度均为叠加在栅格上的所有邻域密度值之和</li>\n<li>线密度计算：每个输出栅格单元计算领域内线特征的密度   计算方法：以输出单元为中心，以搜索半径定义一个圆，每条线落入圆内的部分，其长度乘上其代表的值，然后对所有的值求和，再除以圆的面积，得到线的密度 </li>\n</ul>\n<ol>\n<li>核密度分析</li>\n</ol>\n<ul>\n<li>点对象：核密度分析曲面与下方的平面所围成空间的体积近似于此点的测量值</li>\n<li>线对象：核密度曲面与下方的平面所围成空间近似于此线的测量值与线长度的乘积。点或线的领域叠加处，其密度值也相加，每个输出栅格的密度均为叠加在栅格上的所有核曲面之和</li>\n</ul>\n<h2 id=\"探索性空间数据分析的定义和作用\"><a href=\"#探索性空间数据分析的定义和作用\" class=\"headerlink\" title=\"探索性空间数据分析的定义和作用\"></a><a href=\"../空间相关性分析#探索性空间分析\">探索性空间数据分析的定义和作用</a></h2><ul>\n<li><p>定义：描述和显示空间分布、识别非常规的空间位置、发现隐含空间关系等的一系列技术的集合</p>\n</li>\n<li><p>作用：</p>\n<ol>\n<li>检验数据分布</li>\n</ol>\n<p>用<strong>直方图</strong>或<strong>QQ概率图</strong>可以直观地检验数据分布的形状，并确定分布中心</p>\n<ol>\n<li><p>寻找数据离群值</p>\n<p>用<strong>直方图</strong>和<strong>半变异函数云图</strong>都可以方便地找出离群值的样点</p>\n</li>\n<li><p>全局趋势分析</p>\n<p>通过用<strong>趋势分析工具</strong>可以直观地得到是否存在全局趋势</p>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"探索性空间数据分析的可视化方法\"><a href=\"#探索性空间数据分析的可视化方法\" class=\"headerlink\" title=\"探索性空间数据分析的可视化方法\"></a>探索性空间数据分析的可视化方法</h2><ul>\n<li>直方图、散点图、茎叶图、箱线图、QQ图、趋势分析、半变异/协方差函数云图</li>\n</ul>\n<h2 id=\"空间自相关的定义和分析方法\"><a href=\"#空间自相关的定义和分析方法\" class=\"headerlink\" title=\"空间自相关的定义和分析方法\"></a><a href=\"../空间相关性分析\">空间自相关的定义和分析方法</a></h2><ol>\n<li><p>定义</p>\n<p>同一个变量在不同空间位置上的相关性</p>\n</li>\n<li><p>分析方法</p>\n<p>全局空间自相关分析</p>\n<blockquote>\n<p>用来分析在整个研究范围内指定的属性是否具有自相关性</p>\n</blockquote>\n<p>局部空间自相关分析</p>\n<blockquote>\n<p>用来分析在特定的局部地点指定的属性是否具有自相关性</p>\n</blockquote>\n<p>Moran’s <em>I</em>、Geary’s <em>I</em>、Getis、Join count</p>\n</li>\n</ol>\n<h2 id=\"区域化变量定义和特点\"><a href=\"#区域化变量定义和特点\" class=\"headerlink\" title=\"区域化变量定义和特点\"></a>区域化变量定义和特点</h2><ol>\n<li><p>定义</p>\n<p>一种在空间上具有数值的实函数</p>\n</li>\n<li><p>特点</p>\n<p>空间局限性</p>\n<blockquote>\n<p>区域化变量被限制于一定空间范围，这称为几何域。在几何域内，区域化变量的属性最为明显；在几何域外，不明显</p>\n</blockquote>\n<p>连续性</p>\n<blockquote>\n<p>不同的区域化变量具有不同程度的连续性，用区域化变量的半变异函数来描述</p>\n</blockquote>\n<p>各向异性</p>\n<blockquote>\n<p>当区域化变量在各个方向上具有相同性质时称各向同性，否则称为各向异性</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"地表起伏度、粗糙度、切割深度\"><a href=\"#地表起伏度、粗糙度、切割深度\" class=\"headerlink\" title=\"地表起伏度、粗糙度、切割深度\"></a><a href=\"../表面与三维空间分析\">地表起伏度</a>、粗糙度、切割深度</h2><ul>\n<li>地形起伏度：指在一个特定区域内，最高点海拔高度与最低点海拔高度的差值</li>\n<li>粗糙度：反映地表<strong>起伏变化</strong>和<strong>侵蚀程度</strong>的指标。一般定义为地表单元的<strong>曲面面积</strong>与其在水平面上的<strong>投影面积</strong>之比</li>\n<li>切割深度：地面某点的<strong>邻域范围的平均高程</strong>与该邻域范围内的<strong>最小高程的差值</strong></li>\n</ul>\n<h2 id=\"表面积、体积、坡度、坡向\"><a href=\"#表面积、体积、坡度、坡向\" class=\"headerlink\" title=\"表面积、体积、坡度、坡向\"></a>表面积、体积、<a href=\"../表面与三维空间分析#坡度\">坡度</a>、坡向</h2><ul>\n<li><p>面积：由一组闭合弧段所包围的空间区域</p>\n</li>\n<li><p>体积：指空间<strong>曲面</strong>与某<strong>基准平面之</strong>间的空间的体积</p>\n</li>\n<li><p>坡度：某点在曲面上的<strong>法线方向</strong>与<strong>垂直方向</strong>的夹角，是地面特定点高度变化比率的度量</p>\n</li>\n<li>坡向：<strong>法线的正方向在平面上的投影</strong>与<strong>正北方向的夹角</strong>，即法方向水平投影向量的方位角。取值范围从零方向(正北方向)顺时针到360度。</li>\n</ul>\n<h2 id=\"水文分析主要过程、水流方向、汇聚量\"><a href=\"#水文分析主要过程、水流方向、汇聚量\" class=\"headerlink\" title=\"水文分析主要过程、水流方向、汇聚量\"></a>水文分析主要过程、<a href=\"../表面与三维空间分析#水流方向\">水流方向</a>、汇聚量</h2><ul>\n<li><p>水文分析一般流程：填充伪洼地、计算水流流向、计算累积汇水量、划分流域、提取水系网络</p>\n</li>\n<li><p>水流方向：水流离开每一个单元时的指向</p>\n</li>\n<li><p>汇聚量：区域地形每点的流水累积量</p>\n</li>\n</ul>\n<h2 id=\"山脊线提取、DEM提取河网的方法\"><a href=\"#山脊线提取、DEM提取河网的方法\" class=\"headerlink\" title=\"山脊线提取、DEM提取河网的方法\"></a>山脊线提取、DEM提取河网的方法</h2><ol>\n<li>山脊线提取</li>\n</ol>\n<ul>\n<li>对DEM进行洼地填充</li>\n<li>计算水流方向</li>\n<li>计算汇流累计量</li>\n<li>提取汇流累积量为0的区域(栅格计算器)</li>\n</ul>\n<ol>\n<li>山谷线提取</li>\n</ol>\n<ul>\n<li>计算反地形</li>\n<li>对DEM进行洼地填充</li>\n<li>计算水流方向</li>\n<li>计算汇流累计量</li>\n<li>提取汇流累积量为0的区域(栅格计算器)</li>\n</ul>\n<h2 id=\"探索性空间数据分析的可视化方法-1\"><a href=\"#探索性空间数据分析的可视化方法-1\" class=\"headerlink\" title=\"探索性空间数据分析的可视化方法\"></a>探索性空间数据分析的可视化方法</h2><ul>\n<li>两点之间的可视性分析</li>\n<li>点对线的可视性</li>\n<li>点对区域通视</li>\n</ul>\n<h2 id=\"实验\"><a href=\"#实验\" class=\"headerlink\" title=\"实验\"></a>实验</h2><ol>\n<li><p>位置与几何关系分析</p>\n<p>实验内容：根据提供的DEM、温度、湿度、道路、土地利用以及景点资源数据，选择地势平坦、气候舒适、交通便利、距离景点较近，且具有一定规模的区域，作为休闲度假开发区</p>\n<p>实验方法：</p>\n<ul>\n<li>利用DEM数据生成坡度数据和起伏度数据</li>\n<li>利用距离分析生成交通便利度和景点距离数据</li>\n<li>量化和标准化后加权叠加确定研究区综合得分</li>\n<li>平滑处理，根据开发规模提取适宜的开发区域</li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211119094332.png\" alt=\"\"></p>\n</li>\n<li><p>水文分析</p>\n<p>实验内容：根据某地的DEM数据，提取常用的地形特征要素，包括山顶顶点与洼地底点、山脊线与山谷线，以及鞍部</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211119094646.png\" alt=\"\"></p>\n</li>\n</ol>\n<h2 id=\"题型：\"><a href=\"#题型：\" class=\"headerlink\" title=\"题型：\"></a>题型：</h2><ul>\n<li><p>单选：15 * 2</p>\n</li>\n<li><p>判断：15 * 1</p>\n</li>\n<li><p>简答：5 * 6</p>\n</li>\n<li><p>计算分析：10 + 15</p>\n</li>\n</ul>\n"},{"title":"GIS空间分析题目","date":"2021-11-14T02:17:55.000Z","description":"题目","_content":"\n## 空间分析与GIS\n\n1. 如何数字化一副纸质专题地图？或者扩展为“如何通过地形图或者土地利用图的扫描形式制作一副地图”？\n\n   > 1纸质图的准备与预处理；\n   >\n   > 2识图判图过程与分层和编码方案的创建；\n   >\n   > 3扫描纸质图，几何精纠正，与地理空间的定义，及坐标系统与投影类型；\n   >\n   > 4分层数字化与图形编辑，并定义坐标系统与投影；\n   >\n   > 5属性代码的输入与编辑：属性数据的输入或根据属性链接实现属性输入；\n   >\n   > 6添加地图要素，出图；\n\n2. 假如我们运用GPS在野外采集到各个森林区树木采样点的三维坐标，并在笔记本中对相应经纬度采样点的各种特征进行了记录，如何运用手头的纸质地形图与所采集数据得到DEM数据上叠加的GPS采样点图？如何进行分析各类树种的属性特征？\n\n   > 1）DEM数据的构建在前问题的基础上；（1）对所采集的点、线、面数据进行构建TIN；（2）将TIN数据转化为DEM栅格数据\n   >\n   > 2）GPS采样点的创建  \n   >\n   > 3）二者的叠加显示  涉及到坐标系统的转换\n   >\n   > 4）树种属性特征的表达与分析\n\n## 空间量算\n\n1. 如何描述空间对象的位置？\n2. 中心要素、算术平均重心、中位数中心与重心量测的区别？\n3. 线状地物、面状地物形态描述的参数有哪些？\n4. 点模式和线模式的描述参数有哪些？\n\n## 位置与几何关系分析\n\n1. 局域运算（地图代数）、邻域运算（窗口分析）、分区运算（分带运算）三者之间的异同？\n2. 什么是源栅格、成本栅格、成本距离、方向栅格、配置栅格、成本路径？\n3. 什么是矢量数据的叠加分析？绘图说明叠加分析有哪些类型和方法？\n4. 泰森多边形分析可以解决哪些实际问题？举例阐述\n5. 密度分析有哪几种类型？如何计算？\n","source":"_posts/GIS空间分析题目.md","raw":"---\ntitle: GIS空间分析题目\ndate: 2021-11-14 10:17:55\ntags: 题目\ncategories: [GIS,GIS空间分析]\ndescription: 题目\n---\n\n## 空间分析与GIS\n\n1. 如何数字化一副纸质专题地图？或者扩展为“如何通过地形图或者土地利用图的扫描形式制作一副地图”？\n\n   > 1纸质图的准备与预处理；\n   >\n   > 2识图判图过程与分层和编码方案的创建；\n   >\n   > 3扫描纸质图，几何精纠正，与地理空间的定义，及坐标系统与投影类型；\n   >\n   > 4分层数字化与图形编辑，并定义坐标系统与投影；\n   >\n   > 5属性代码的输入与编辑：属性数据的输入或根据属性链接实现属性输入；\n   >\n   > 6添加地图要素，出图；\n\n2. 假如我们运用GPS在野外采集到各个森林区树木采样点的三维坐标，并在笔记本中对相应经纬度采样点的各种特征进行了记录，如何运用手头的纸质地形图与所采集数据得到DEM数据上叠加的GPS采样点图？如何进行分析各类树种的属性特征？\n\n   > 1）DEM数据的构建在前问题的基础上；（1）对所采集的点、线、面数据进行构建TIN；（2）将TIN数据转化为DEM栅格数据\n   >\n   > 2）GPS采样点的创建  \n   >\n   > 3）二者的叠加显示  涉及到坐标系统的转换\n   >\n   > 4）树种属性特征的表达与分析\n\n## 空间量算\n\n1. 如何描述空间对象的位置？\n2. 中心要素、算术平均重心、中位数中心与重心量测的区别？\n3. 线状地物、面状地物形态描述的参数有哪些？\n4. 点模式和线模式的描述参数有哪些？\n\n## 位置与几何关系分析\n\n1. 局域运算（地图代数）、邻域运算（窗口分析）、分区运算（分带运算）三者之间的异同？\n2. 什么是源栅格、成本栅格、成本距离、方向栅格、配置栅格、成本路径？\n3. 什么是矢量数据的叠加分析？绘图说明叠加分析有哪些类型和方法？\n4. 泰森多边形分析可以解决哪些实际问题？举例阐述\n5. 密度分析有哪几种类型？如何计算？\n","slug":"GIS空间分析题目","published":1,"updated":"2021-11-16T14:43:28.733Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt290009jsvk0ssa5p4z","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"空间分析与GIS\"><a href=\"#空间分析与GIS\" class=\"headerlink\" title=\"空间分析与GIS\"></a>空间分析与GIS</h2><ol>\n<li><p>如何数字化一副纸质专题地图？或者扩展为“如何通过地形图或者土地利用图的扫描形式制作一副地图”？</p>\n<blockquote>\n<p>1纸质图的准备与预处理；</p>\n<p>2识图判图过程与分层和编码方案的创建；</p>\n<p>3扫描纸质图，几何精纠正，与地理空间的定义，及坐标系统与投影类型；</p>\n<p>4分层数字化与图形编辑，并定义坐标系统与投影；</p>\n<p>5属性代码的输入与编辑：属性数据的输入或根据属性链接实现属性输入；</p>\n<p>6添加地图要素，出图；</p>\n</blockquote>\n</li>\n<li><p>假如我们运用GPS在野外采集到各个森林区树木采样点的三维坐标，并在笔记本中对相应经纬度采样点的各种特征进行了记录，如何运用手头的纸质地形图与所采集数据得到DEM数据上叠加的GPS采样点图？如何进行分析各类树种的属性特征？</p>\n<blockquote>\n<p>1）DEM数据的构建在前问题的基础上；（1）对所采集的点、线、面数据进行构建TIN；（2）将TIN数据转化为DEM栅格数据</p>\n<p>2）GPS采样点的创建  </p>\n<p>3）二者的叠加显示  涉及到坐标系统的转换</p>\n<p>4）树种属性特征的表达与分析</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"空间量算\"><a href=\"#空间量算\" class=\"headerlink\" title=\"空间量算\"></a>空间量算</h2><ol>\n<li>如何描述空间对象的位置？</li>\n<li>中心要素、算术平均重心、中位数中心与重心量测的区别？</li>\n<li>线状地物、面状地物形态描述的参数有哪些？</li>\n<li>点模式和线模式的描述参数有哪些？</li>\n</ol>\n<h2 id=\"位置与几何关系分析\"><a href=\"#位置与几何关系分析\" class=\"headerlink\" title=\"位置与几何关系分析\"></a>位置与几何关系分析</h2><ol>\n<li>局域运算（地图代数）、邻域运算（窗口分析）、分区运算（分带运算）三者之间的异同？</li>\n<li>什么是源栅格、成本栅格、成本距离、方向栅格、配置栅格、成本路径？</li>\n<li>什么是矢量数据的叠加分析？绘图说明叠加分析有哪些类型和方法？</li>\n<li>泰森多边形分析可以解决哪些实际问题？举例阐述</li>\n<li>密度分析有哪几种类型？如何计算？</li>\n</ol>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160705.jpg","length":628,"excerpt":"","more":"<h2 id=\"空间分析与GIS\"><a href=\"#空间分析与GIS\" class=\"headerlink\" title=\"空间分析与GIS\"></a>空间分析与GIS</h2><ol>\n<li><p>如何数字化一副纸质专题地图？或者扩展为“如何通过地形图或者土地利用图的扫描形式制作一副地图”？</p>\n<blockquote>\n<p>1纸质图的准备与预处理；</p>\n<p>2识图判图过程与分层和编码方案的创建；</p>\n<p>3扫描纸质图，几何精纠正，与地理空间的定义，及坐标系统与投影类型；</p>\n<p>4分层数字化与图形编辑，并定义坐标系统与投影；</p>\n<p>5属性代码的输入与编辑：属性数据的输入或根据属性链接实现属性输入；</p>\n<p>6添加地图要素，出图；</p>\n</blockquote>\n</li>\n<li><p>假如我们运用GPS在野外采集到各个森林区树木采样点的三维坐标，并在笔记本中对相应经纬度采样点的各种特征进行了记录，如何运用手头的纸质地形图与所采集数据得到DEM数据上叠加的GPS采样点图？如何进行分析各类树种的属性特征？</p>\n<blockquote>\n<p>1）DEM数据的构建在前问题的基础上；（1）对所采集的点、线、面数据进行构建TIN；（2）将TIN数据转化为DEM栅格数据</p>\n<p>2）GPS采样点的创建  </p>\n<p>3）二者的叠加显示  涉及到坐标系统的转换</p>\n<p>4）树种属性特征的表达与分析</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"空间量算\"><a href=\"#空间量算\" class=\"headerlink\" title=\"空间量算\"></a>空间量算</h2><ol>\n<li>如何描述空间对象的位置？</li>\n<li>中心要素、算术平均重心、中位数中心与重心量测的区别？</li>\n<li>线状地物、面状地物形态描述的参数有哪些？</li>\n<li>点模式和线模式的描述参数有哪些？</li>\n</ol>\n<h2 id=\"位置与几何关系分析\"><a href=\"#位置与几何关系分析\" class=\"headerlink\" title=\"位置与几何关系分析\"></a>位置与几何关系分析</h2><ol>\n<li>局域运算（地图代数）、邻域运算（窗口分析）、分区运算（分带运算）三者之间的异同？</li>\n<li>什么是源栅格、成本栅格、成本距离、方向栅格、配置栅格、成本路径？</li>\n<li>什么是矢量数据的叠加分析？绘图说明叠加分析有哪些类型和方法？</li>\n<li>泰森多边形分析可以解决哪些实际问题？举例阐述</li>\n<li>密度分析有哪几种类型？如何计算？</li>\n</ol>\n"},{"title":"Google Search Tips","date":"2021-08-22T01:21:54.000Z","description":"谷歌搜索技巧","_content":"\n## Google search tips\n\n+ related:youtube.com\n+ 计算机filetype:doc\n+ keyword +/-keyword\n+ \"may the * be with you\"\n+ coffee nearby\n+ keyword site:github.com\n+ intitle: keyword :bow_and_arrow: allintitle:keyword\n","source":"_posts/Google Search tips.md","raw":"---\ntitle: Google Search tips\ndate: 2021-08-22 09:21:54\ntags: tips\ncategories: tips\ndescription: 谷歌搜索技巧\n---\n\n## Google search tips\n\n+ related:youtube.com\n+ 计算机filetype:doc\n+ keyword +/-keyword\n+ \"may the * be with you\"\n+ coffee nearby\n+ keyword site:github.com\n+ intitle: keyword :bow_and_arrow: allintitle:keyword\n","slug":"Google Search tips","published":1,"updated":"2021-12-27T08:05:55.747Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2a000bjsvkbfytg7zg","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"Google-search-tips\"><a href=\"#Google-search-tips\" class=\"headerlink\" title=\"Google search tips\"></a>Google search tips</h2><ul>\n<li>related:youtube.com</li>\n<li>计算机filetype:doc</li>\n<li>keyword +/-keyword</li>\n<li>“may the * be with you”</li>\n<li>coffee nearby</li>\n<li>keyword site:github.com</li>\n<li>intitle: keyword :bow_and_arrow: allintitle:keyword</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160704.jpeg","length":167,"excerpt":"","more":"<h2 id=\"Google-search-tips\"><a href=\"#Google-search-tips\" class=\"headerlink\" title=\"Google search tips\"></a>Google search tips</h2><ul>\n<li>related:youtube.com</li>\n<li>计算机filetype:doc</li>\n<li>keyword +/-keyword</li>\n<li>“may the * be with you”</li>\n<li>coffee nearby</li>\n<li>keyword site:github.com</li>\n<li>intitle: keyword :bow_and_arrow: allintitle:keyword</li>\n</ul>\n"},{"title":"PowerShell","date":"2021-08-22T01:16:18.000Z","description":"PowerShell基本用法","_content":"\n## 筛选\n\n\n\n### 列出所有包含的项 (-Recurse)\n\n ### 按名称筛选项 (-Name)\n\n ###  强制列出隐藏的项 (-Force)\n\n ### 使用通配符匹配项名称\n\n + (*) 匹配零个或多个出现的任何字符\n + ? 完全匹配一个字符\n + []一组要匹配的字符\n\n### 排除项 (-Exclude)\n\n```powershell\nGet-ChildItem -Path C:\\Windows\\*.dll -Recurse -Exclude [a-y]*.dll\n```\n\n## 计算机信息\n\n### 关闭重启计算机\n\n```powershell\nStop-Computer\nStop-Computer\nRestart-Computer -Force\n```\n\n### Get-CimInstance\n\n```powershell\n# 返回所有桌面的信息，无论它们是否正在使用中\nGet-CimInstance -ClassName Win32_Desktop\n# 列出 BIOS 信息\nGet-CimInstance -ClassName Win32_BIOS\n# 列出计算机制造商和型号\nGet-CimInstance -ClassName Win32_ComputerSystem\nGet-CimInstance -ClassName Win32_ComputerSystem -property model\n# 限制只返回model属性\nGet-CimInstance -ClassName Win32_ComputerSystem -property model | select-object -property model\n# model                                 # -----       \n# TUF Gaming FX505DT_FX95DT\n```\n\n```powershell\n# 列出操作系统版本信息\nGet-CimInstance -ClassName Win32_OperatingSystem |\n  Select-Object -Property BuildNumber,BuildType,OSType,ServicePackMajorVersion,ServicePackMinorVersion\nGet-CimInstance -ClassName Win32_OperatingSystem | Select-Object -Property Build*,OSType,ServicePack*\n# 本地用户和所有者\nGet-CimInstance -ClassName Win32_OperatingSystem | Select-Object -Property *user*\n# 获取可用磁盘空间\nGet-CimInstance -ClassName Win32_LogicalDisk -Filter \"DriveType=3\"\nGet-CimInstance -ClassName Win32_LogicalDisk -Filter \"DriveType=3\" |\n  Measure-Object -Property FreeSpace,Size -Sum |\n    Select-Object -Property Property,Sum\n```\n\n```powershell\n# 获取登录到计算机的用户\nGet-CimInstance -ClassName Win32_ComputerSystem -Property UserName\n# 获取计算机的本地时间\nGet-CimInstance -ClassName Win32_LocalTime\n#\nGet-CimInstance -ClassName Win32_Service | Select-Object -Property Status,Name,DisplayName\n# 使用具有 AutoSize 和 Wrap 参数的 Format-Table，用于优化列宽并允许较长名称换行而不是被截断\nGet-CimInstance -ClassName Win32_Service | Format-Table -Property Status,Name,DisplayName -AutoSize -Wrap\n```\n\n\n\n## 进程与服务\n\n### 获取进程\n\n```powershell\n# id 获取\nget-process -id 0\n# name 获取\nGet-Process -Name ex*\n# 多个name 参数\nGet-Process -Name exp*,power*\n# 管理员身份启动\nStart-Process PowerShell -Verb RunAs\n```\n\n### 停止进程\n\n```powershell\nStop-Process -Name Idle\n# 强制停止\nStop-Process -Name t*,e* -Confirm\n```\n\n### 服务\n\n```powershell\n# 获取服务\nGet-Service -Name se*\n# 按显示服务名称查找\nGet-Service -DisplayName se*\nStop-Service -Name spooler\nStart-Service -Name spooler\n# 暂停服务\nSuspend-Service -Name spooler\n```\n\n## 格式化输出\n\n```powershell\nGet-Command -Verb Format | Format-WideGet-Process -Name iexplore | Format-ListGet-Service -Name win* | Format-Table\n```\n\n## 文件\n\n\n```powershell\n# 获取当前路径\nGet-Location\n# 设置路径 \nSet-Location -Path C:\\Windows\n# 获取指定路径所有文件force 显示隐藏项 -Recurse 显示包含的子文件\nGet-ChildItem -Path C:\\ -Force\n# 复制文件 -Force覆盖已有目标文件\nCopy-Item -Path C:\\boot.ini -Destination C:\\boot.bak\n# 复制文件夹\nCopy-Item C:\\temp\\test1 -Recurse C:\\temp\\DeleteMe\n# 将 C:\\data 中任意位置包含的所有 .txt 文件都复制到 \nC:\\temp\\textCopy-Item -Filter *.txt -Path c:\\data -Recurse -Destination C:\\temp\\text\n# 创建文件和文件夹\nNew-Item -ForceNew-Item -Path 'C:\\temp\\New Folder' -ItemType DirectoryNew-Item -Path 'C:\\temp\\New Folder\\file.txt' -ItemType File\n# 删除文件夹\nRemove-Item -Path C:\\temp\\DeleteMe -Recurse\n```\n\n```powershell\n# 文本文件数据读取到数组中\n$Computers = Get-Content -Path C:\\temp\\DomainMembers.txt\n```\n\n```powershell\n# 启用自动填充命令\nSet-PSReadLineOption -PredictionSource History\n```\n\n","source":"_posts/PowerShell.md","raw":"---\ntitle: PowerShell\ndate: 2021-08-22 09:16:18\ntags: PowerShell\ncategories: PowerShell\ndescription: PowerShell基本用法\n---\n\n## 筛选\n\n\n\n### 列出所有包含的项 (-Recurse)\n\n ### 按名称筛选项 (-Name)\n\n ###  强制列出隐藏的项 (-Force)\n\n ### 使用通配符匹配项名称\n\n + (*) 匹配零个或多个出现的任何字符\n + ? 完全匹配一个字符\n + []一组要匹配的字符\n\n### 排除项 (-Exclude)\n\n```powershell\nGet-ChildItem -Path C:\\Windows\\*.dll -Recurse -Exclude [a-y]*.dll\n```\n\n## 计算机信息\n\n### 关闭重启计算机\n\n```powershell\nStop-Computer\nStop-Computer\nRestart-Computer -Force\n```\n\n### Get-CimInstance\n\n```powershell\n# 返回所有桌面的信息，无论它们是否正在使用中\nGet-CimInstance -ClassName Win32_Desktop\n# 列出 BIOS 信息\nGet-CimInstance -ClassName Win32_BIOS\n# 列出计算机制造商和型号\nGet-CimInstance -ClassName Win32_ComputerSystem\nGet-CimInstance -ClassName Win32_ComputerSystem -property model\n# 限制只返回model属性\nGet-CimInstance -ClassName Win32_ComputerSystem -property model | select-object -property model\n# model                                 # -----       \n# TUF Gaming FX505DT_FX95DT\n```\n\n```powershell\n# 列出操作系统版本信息\nGet-CimInstance -ClassName Win32_OperatingSystem |\n  Select-Object -Property BuildNumber,BuildType,OSType,ServicePackMajorVersion,ServicePackMinorVersion\nGet-CimInstance -ClassName Win32_OperatingSystem | Select-Object -Property Build*,OSType,ServicePack*\n# 本地用户和所有者\nGet-CimInstance -ClassName Win32_OperatingSystem | Select-Object -Property *user*\n# 获取可用磁盘空间\nGet-CimInstance -ClassName Win32_LogicalDisk -Filter \"DriveType=3\"\nGet-CimInstance -ClassName Win32_LogicalDisk -Filter \"DriveType=3\" |\n  Measure-Object -Property FreeSpace,Size -Sum |\n    Select-Object -Property Property,Sum\n```\n\n```powershell\n# 获取登录到计算机的用户\nGet-CimInstance -ClassName Win32_ComputerSystem -Property UserName\n# 获取计算机的本地时间\nGet-CimInstance -ClassName Win32_LocalTime\n#\nGet-CimInstance -ClassName Win32_Service | Select-Object -Property Status,Name,DisplayName\n# 使用具有 AutoSize 和 Wrap 参数的 Format-Table，用于优化列宽并允许较长名称换行而不是被截断\nGet-CimInstance -ClassName Win32_Service | Format-Table -Property Status,Name,DisplayName -AutoSize -Wrap\n```\n\n\n\n## 进程与服务\n\n### 获取进程\n\n```powershell\n# id 获取\nget-process -id 0\n# name 获取\nGet-Process -Name ex*\n# 多个name 参数\nGet-Process -Name exp*,power*\n# 管理员身份启动\nStart-Process PowerShell -Verb RunAs\n```\n\n### 停止进程\n\n```powershell\nStop-Process -Name Idle\n# 强制停止\nStop-Process -Name t*,e* -Confirm\n```\n\n### 服务\n\n```powershell\n# 获取服务\nGet-Service -Name se*\n# 按显示服务名称查找\nGet-Service -DisplayName se*\nStop-Service -Name spooler\nStart-Service -Name spooler\n# 暂停服务\nSuspend-Service -Name spooler\n```\n\n## 格式化输出\n\n```powershell\nGet-Command -Verb Format | Format-WideGet-Process -Name iexplore | Format-ListGet-Service -Name win* | Format-Table\n```\n\n## 文件\n\n\n```powershell\n# 获取当前路径\nGet-Location\n# 设置路径 \nSet-Location -Path C:\\Windows\n# 获取指定路径所有文件force 显示隐藏项 -Recurse 显示包含的子文件\nGet-ChildItem -Path C:\\ -Force\n# 复制文件 -Force覆盖已有目标文件\nCopy-Item -Path C:\\boot.ini -Destination C:\\boot.bak\n# 复制文件夹\nCopy-Item C:\\temp\\test1 -Recurse C:\\temp\\DeleteMe\n# 将 C:\\data 中任意位置包含的所有 .txt 文件都复制到 \nC:\\temp\\textCopy-Item -Filter *.txt -Path c:\\data -Recurse -Destination C:\\temp\\text\n# 创建文件和文件夹\nNew-Item -ForceNew-Item -Path 'C:\\temp\\New Folder' -ItemType DirectoryNew-Item -Path 'C:\\temp\\New Folder\\file.txt' -ItemType File\n# 删除文件夹\nRemove-Item -Path C:\\temp\\DeleteMe -Recurse\n```\n\n```powershell\n# 文本文件数据读取到数组中\n$Computers = Get-Content -Path C:\\temp\\DomainMembers.txt\n```\n\n```powershell\n# 启用自动填充命令\nSet-PSReadLineOption -PredictionSource History\n```\n\n","slug":"PowerShell","published":1,"updated":"2021-11-24T08:40:40.613Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2d000gjsvk3vgggoy7","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"筛选\"><a href=\"#筛选\" class=\"headerlink\" title=\"筛选\"></a>筛选</h2><h3 id=\"列出所有包含的项-Recurse\"><a href=\"#列出所有包含的项-Recurse\" class=\"headerlink\" title=\"列出所有包含的项 (-Recurse)\"></a>列出所有包含的项 (-Recurse)</h3><h3 id=\"按名称筛选项-Name\"><a href=\"#按名称筛选项-Name\" class=\"headerlink\" title=\"按名称筛选项 (-Name)\"></a>按名称筛选项 (-Name)</h3><h3 id=\"强制列出隐藏的项-Force\"><a href=\"#强制列出隐藏的项-Force\" class=\"headerlink\" title=\"强制列出隐藏的项 (-Force)\"></a>强制列出隐藏的项 (-Force)</h3><h3 id=\"使用通配符匹配项名称\"><a href=\"#使用通配符匹配项名称\" class=\"headerlink\" title=\"使用通配符匹配项名称\"></a>使用通配符匹配项名称</h3><ul>\n<li>(*) 匹配零个或多个出现的任何字符</li>\n<li>? 完全匹配一个字符</li>\n<li>[]一组要匹配的字符</li>\n</ul>\n<h3 id=\"排除项-Exclude\"><a href=\"#排除项-Exclude\" class=\"headerlink\" title=\"排除项 (-Exclude)\"></a>排除项 (-Exclude)</h3><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Get-ChildItem</span> <span class=\"token operator\">-</span>Path C:\\Windows\\<span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>dll <span class=\"token operator\">-</span>Recurse <span class=\"token operator\">-</span>Exclude <span class=\"token namespace\">[a-y]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>dll</code></pre>\n<h2 id=\"计算机信息\"><a href=\"#计算机信息\" class=\"headerlink\" title=\"计算机信息\"></a>计算机信息</h2><h3 id=\"关闭重启计算机\"><a href=\"#关闭重启计算机\" class=\"headerlink\" title=\"关闭重启计算机\"></a>关闭重启计算机</h3><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Stop-Computer</span>\n<span class=\"token function\">Stop-Computer</span>\n<span class=\"token function\">Restart-Computer</span> <span class=\"token operator\">-</span>Force</code></pre>\n<h3 id=\"Get-CimInstance\"><a href=\"#Get-CimInstance\" class=\"headerlink\" title=\"Get-CimInstance\"></a>Get-CimInstance</h3><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 返回所有桌面的信息，无论它们是否正在使用中</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_Desktop\n<span class=\"token comment\"># 列出 BIOS 信息</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_BIOS\n<span class=\"token comment\"># 列出计算机制造商和型号</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_ComputerSystem\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_ComputerSystem <span class=\"token operator\">-</span>property model\n<span class=\"token comment\"># 限制只返回model属性</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_ComputerSystem <span class=\"token operator\">-</span>property model <span class=\"token punctuation\">|</span> <span class=\"token function\">select-object</span> <span class=\"token operator\">-</span>property model\n<span class=\"token comment\"># model                                 # -----       </span>\n<span class=\"token comment\"># TUF Gaming FX505DT_FX95DT</span></code></pre>\n<pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 列出操作系统版本信息</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_OperatingSystem <span class=\"token punctuation\">|</span>\n  <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Property BuildNumber<span class=\"token punctuation\">,</span>BuildType<span class=\"token punctuation\">,</span>OSType<span class=\"token punctuation\">,</span>ServicePackMajorVersion<span class=\"token punctuation\">,</span>ServicePackMinorVersion\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_OperatingSystem <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Property Build<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>OSType<span class=\"token punctuation\">,</span>ServicePack<span class=\"token operator\">*</span>\n<span class=\"token comment\"># 本地用户和所有者</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_OperatingSystem <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Property <span class=\"token operator\">*</span>user<span class=\"token operator\">*</span>\n<span class=\"token comment\"># 获取可用磁盘空间</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_LogicalDisk <span class=\"token operator\">-</span><span class=\"token keyword\">Filter</span> <span class=\"token string\">\"DriveType=3\"</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_LogicalDisk <span class=\"token operator\">-</span><span class=\"token keyword\">Filter</span> <span class=\"token string\">\"DriveType=3\"</span> <span class=\"token punctuation\">|</span>\n  <span class=\"token function\">Measure-Object</span> <span class=\"token operator\">-</span>Property FreeSpace<span class=\"token punctuation\">,</span>Size <span class=\"token operator\">-</span>Sum <span class=\"token punctuation\">|</span>\n    <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Property Property<span class=\"token punctuation\">,</span>Sum</code></pre>\n<pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 获取登录到计算机的用户</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_ComputerSystem <span class=\"token operator\">-</span>Property UserName\n<span class=\"token comment\"># 获取计算机的本地时间</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_LocalTime\n<span class=\"token comment\">#</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_Service <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Property Status<span class=\"token punctuation\">,</span>Name<span class=\"token punctuation\">,</span>DisplayName\n<span class=\"token comment\"># 使用具有 AutoSize 和 Wrap 参数的 Format-Table，用于优化列宽并允许较长名称换行而不是被截断</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_Service <span class=\"token punctuation\">|</span> <span class=\"token function\">Format-Table</span> <span class=\"token operator\">-</span>Property Status<span class=\"token punctuation\">,</span>Name<span class=\"token punctuation\">,</span>DisplayName <span class=\"token operator\">-</span>AutoSize <span class=\"token operator\">-</span>Wrap</code></pre>\n<h2 id=\"进程与服务\"><a href=\"#进程与服务\" class=\"headerlink\" title=\"进程与服务\"></a>进程与服务</h2><h3 id=\"获取进程\"><a href=\"#获取进程\" class=\"headerlink\" title=\"获取进程\"></a>获取进程</h3><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># id 获取</span>\n<span class=\"token function\">get-process</span> <span class=\"token operator\">-</span>id 0\n<span class=\"token comment\"># name 获取</span>\n<span class=\"token function\">Get-Process</span> <span class=\"token operator\">-</span>Name ex<span class=\"token operator\">*</span>\n<span class=\"token comment\"># 多个name 参数</span>\n<span class=\"token function\">Get-Process</span> <span class=\"token operator\">-</span>Name exp<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>power<span class=\"token operator\">*</span>\n<span class=\"token comment\"># 管理员身份启动</span>\n<span class=\"token function\">Start-Process</span> PowerShell <span class=\"token operator\">-</span>Verb RunAs</code></pre>\n<h3 id=\"停止进程\"><a href=\"#停止进程\" class=\"headerlink\" title=\"停止进程\"></a>停止进程</h3><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Stop-Process</span> <span class=\"token operator\">-</span>Name Idle\n<span class=\"token comment\"># 强制停止</span>\n<span class=\"token function\">Stop-Process</span> <span class=\"token operator\">-</span>Name t<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>e<span class=\"token operator\">*</span> <span class=\"token operator\">-</span>Confirm</code></pre>\n<h3 id=\"服务\"><a href=\"#服务\" class=\"headerlink\" title=\"服务\"></a>服务</h3><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 获取服务</span>\n<span class=\"token function\">Get-Service</span> <span class=\"token operator\">-</span>Name se<span class=\"token operator\">*</span>\n<span class=\"token comment\"># 按显示服务名称查找</span>\n<span class=\"token function\">Get-Service</span> <span class=\"token operator\">-</span>DisplayName se<span class=\"token operator\">*</span>\n<span class=\"token function\">Stop-Service</span> <span class=\"token operator\">-</span>Name spooler\n<span class=\"token function\">Start-Service</span> <span class=\"token operator\">-</span>Name spooler\n<span class=\"token comment\"># 暂停服务</span>\n<span class=\"token function\">Suspend-Service</span> <span class=\"token operator\">-</span>Name spooler</code></pre>\n<h2 id=\"格式化输出\"><a href=\"#格式化输出\" class=\"headerlink\" title=\"格式化输出\"></a>格式化输出</h2><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Get-Command</span> <span class=\"token operator\">-</span>Verb Format <span class=\"token punctuation\">|</span> <span class=\"token function\">Format-WideGet</span><span class=\"token operator\">-</span><span class=\"token keyword\">Process</span> <span class=\"token operator\">-</span>Name iexplore <span class=\"token punctuation\">|</span> <span class=\"token function\">Format-ListGet</span><span class=\"token operator\">-</span>Service <span class=\"token operator\">-</span>Name win<span class=\"token operator\">*</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Format-Table</span></code></pre>\n<h2 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h2><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 获取当前路径</span>\n<span class=\"token function\">Get-Location</span>\n<span class=\"token comment\"># 设置路径 </span>\n<span class=\"token function\">Set-Location</span> <span class=\"token operator\">-</span>Path C:\\Windows\n<span class=\"token comment\"># 获取指定路径所有文件force 显示隐藏项 -Recurse 显示包含的子文件</span>\n<span class=\"token function\">Get-ChildItem</span> <span class=\"token operator\">-</span>Path C:\\ <span class=\"token operator\">-</span>Force\n<span class=\"token comment\"># 复制文件 -Force覆盖已有目标文件</span>\n<span class=\"token function\">Copy-Item</span> <span class=\"token operator\">-</span>Path C:\\boot<span class=\"token punctuation\">.</span>ini <span class=\"token operator\">-</span>Destination C:\\boot<span class=\"token punctuation\">.</span>bak\n<span class=\"token comment\"># 复制文件夹</span>\n<span class=\"token function\">Copy-Item</span> C:\\temp\\test1 <span class=\"token operator\">-</span>Recurse C:\\temp\\DeleteMe\n<span class=\"token comment\"># 将 C:\\data 中任意位置包含的所有 .txt 文件都复制到 </span>\nC:\\temp\\textCopy<span class=\"token operator\">-</span>Item <span class=\"token operator\">-</span><span class=\"token keyword\">Filter</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>txt <span class=\"token operator\">-</span>Path c:\\<span class=\"token keyword\">data</span> <span class=\"token operator\">-</span>Recurse <span class=\"token operator\">-</span>Destination C:\\temp\\text\n<span class=\"token comment\"># 创建文件和文件夹</span>\n<span class=\"token function\">New-Item</span> <span class=\"token operator\">-</span>ForceNew<span class=\"token operator\">-</span>Item <span class=\"token operator\">-</span>Path <span class=\"token string\">'C:\\temp\\New Folder'</span> <span class=\"token operator\">-</span>ItemType DirectoryNew<span class=\"token operator\">-</span>Item <span class=\"token operator\">-</span>Path <span class=\"token string\">'C:\\temp\\New Folder\\file.txt'</span> <span class=\"token operator\">-</span>ItemType File\n<span class=\"token comment\"># 删除文件夹</span>\n<span class=\"token function\">Remove-Item</span> <span class=\"token operator\">-</span>Path C:\\temp\\DeleteMe <span class=\"token operator\">-</span>Recurse</code></pre>\n<pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 文本文件数据读取到数组中</span>\n<span class=\"token variable\">$Computers</span> = <span class=\"token function\">Get-Content</span> <span class=\"token operator\">-</span>Path C:\\temp\\DomainMembers<span class=\"token punctuation\">.</span>txt</code></pre>\n<pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 启用自动填充命令</span>\n<span class=\"token function\">Set-PSReadLineOption</span> <span class=\"token operator\">-</span>PredictionSource History</code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160700.webp","length":2582,"excerpt":"","more":"<h2 id=\"筛选\"><a href=\"#筛选\" class=\"headerlink\" title=\"筛选\"></a>筛选</h2><h3 id=\"列出所有包含的项-Recurse\"><a href=\"#列出所有包含的项-Recurse\" class=\"headerlink\" title=\"列出所有包含的项 (-Recurse)\"></a>列出所有包含的项 (-Recurse)</h3><h3 id=\"按名称筛选项-Name\"><a href=\"#按名称筛选项-Name\" class=\"headerlink\" title=\"按名称筛选项 (-Name)\"></a>按名称筛选项 (-Name)</h3><h3 id=\"强制列出隐藏的项-Force\"><a href=\"#强制列出隐藏的项-Force\" class=\"headerlink\" title=\"强制列出隐藏的项 (-Force)\"></a>强制列出隐藏的项 (-Force)</h3><h3 id=\"使用通配符匹配项名称\"><a href=\"#使用通配符匹配项名称\" class=\"headerlink\" title=\"使用通配符匹配项名称\"></a>使用通配符匹配项名称</h3><ul>\n<li>(*) 匹配零个或多个出现的任何字符</li>\n<li>? 完全匹配一个字符</li>\n<li>[]一组要匹配的字符</li>\n</ul>\n<h3 id=\"排除项-Exclude\"><a href=\"#排除项-Exclude\" class=\"headerlink\" title=\"排除项 (-Exclude)\"></a>排除项 (-Exclude)</h3><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Get-ChildItem</span> <span class=\"token operator\">-</span>Path C:\\Windows\\<span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>dll <span class=\"token operator\">-</span>Recurse <span class=\"token operator\">-</span>Exclude <span class=\"token namespace\">[a-y]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>dll</code></pre>\n<h2 id=\"计算机信息\"><a href=\"#计算机信息\" class=\"headerlink\" title=\"计算机信息\"></a>计算机信息</h2><h3 id=\"关闭重启计算机\"><a href=\"#关闭重启计算机\" class=\"headerlink\" title=\"关闭重启计算机\"></a>关闭重启计算机</h3><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Stop-Computer</span>\n<span class=\"token function\">Stop-Computer</span>\n<span class=\"token function\">Restart-Computer</span> <span class=\"token operator\">-</span>Force</code></pre>\n<h3 id=\"Get-CimInstance\"><a href=\"#Get-CimInstance\" class=\"headerlink\" title=\"Get-CimInstance\"></a>Get-CimInstance</h3><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 返回所有桌面的信息，无论它们是否正在使用中</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_Desktop\n<span class=\"token comment\"># 列出 BIOS 信息</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_BIOS\n<span class=\"token comment\"># 列出计算机制造商和型号</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_ComputerSystem\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_ComputerSystem <span class=\"token operator\">-</span>property model\n<span class=\"token comment\"># 限制只返回model属性</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_ComputerSystem <span class=\"token operator\">-</span>property model <span class=\"token punctuation\">|</span> <span class=\"token function\">select-object</span> <span class=\"token operator\">-</span>property model\n<span class=\"token comment\"># model                                 # -----       </span>\n<span class=\"token comment\"># TUF Gaming FX505DT_FX95DT</span></code></pre>\n<pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 列出操作系统版本信息</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_OperatingSystem <span class=\"token punctuation\">|</span>\n  <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Property BuildNumber<span class=\"token punctuation\">,</span>BuildType<span class=\"token punctuation\">,</span>OSType<span class=\"token punctuation\">,</span>ServicePackMajorVersion<span class=\"token punctuation\">,</span>ServicePackMinorVersion\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_OperatingSystem <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Property Build<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>OSType<span class=\"token punctuation\">,</span>ServicePack<span class=\"token operator\">*</span>\n<span class=\"token comment\"># 本地用户和所有者</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_OperatingSystem <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Property <span class=\"token operator\">*</span>user<span class=\"token operator\">*</span>\n<span class=\"token comment\"># 获取可用磁盘空间</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_LogicalDisk <span class=\"token operator\">-</span><span class=\"token keyword\">Filter</span> <span class=\"token string\">\"DriveType=3\"</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_LogicalDisk <span class=\"token operator\">-</span><span class=\"token keyword\">Filter</span> <span class=\"token string\">\"DriveType=3\"</span> <span class=\"token punctuation\">|</span>\n  <span class=\"token function\">Measure-Object</span> <span class=\"token operator\">-</span>Property FreeSpace<span class=\"token punctuation\">,</span>Size <span class=\"token operator\">-</span>Sum <span class=\"token punctuation\">|</span>\n    <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Property Property<span class=\"token punctuation\">,</span>Sum</code></pre>\n<pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 获取登录到计算机的用户</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_ComputerSystem <span class=\"token operator\">-</span>Property UserName\n<span class=\"token comment\"># 获取计算机的本地时间</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_LocalTime\n<span class=\"token comment\">#</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_Service <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Property Status<span class=\"token punctuation\">,</span>Name<span class=\"token punctuation\">,</span>DisplayName\n<span class=\"token comment\"># 使用具有 AutoSize 和 Wrap 参数的 Format-Table，用于优化列宽并允许较长名称换行而不是被截断</span>\n<span class=\"token function\">Get-CimInstance</span> <span class=\"token operator\">-</span>ClassName Win32_Service <span class=\"token punctuation\">|</span> <span class=\"token function\">Format-Table</span> <span class=\"token operator\">-</span>Property Status<span class=\"token punctuation\">,</span>Name<span class=\"token punctuation\">,</span>DisplayName <span class=\"token operator\">-</span>AutoSize <span class=\"token operator\">-</span>Wrap</code></pre>\n<h2 id=\"进程与服务\"><a href=\"#进程与服务\" class=\"headerlink\" title=\"进程与服务\"></a>进程与服务</h2><h3 id=\"获取进程\"><a href=\"#获取进程\" class=\"headerlink\" title=\"获取进程\"></a>获取进程</h3><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># id 获取</span>\n<span class=\"token function\">get-process</span> <span class=\"token operator\">-</span>id 0\n<span class=\"token comment\"># name 获取</span>\n<span class=\"token function\">Get-Process</span> <span class=\"token operator\">-</span>Name ex<span class=\"token operator\">*</span>\n<span class=\"token comment\"># 多个name 参数</span>\n<span class=\"token function\">Get-Process</span> <span class=\"token operator\">-</span>Name exp<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>power<span class=\"token operator\">*</span>\n<span class=\"token comment\"># 管理员身份启动</span>\n<span class=\"token function\">Start-Process</span> PowerShell <span class=\"token operator\">-</span>Verb RunAs</code></pre>\n<h3 id=\"停止进程\"><a href=\"#停止进程\" class=\"headerlink\" title=\"停止进程\"></a>停止进程</h3><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Stop-Process</span> <span class=\"token operator\">-</span>Name Idle\n<span class=\"token comment\"># 强制停止</span>\n<span class=\"token function\">Stop-Process</span> <span class=\"token operator\">-</span>Name t<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>e<span class=\"token operator\">*</span> <span class=\"token operator\">-</span>Confirm</code></pre>\n<h3 id=\"服务\"><a href=\"#服务\" class=\"headerlink\" title=\"服务\"></a>服务</h3><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 获取服务</span>\n<span class=\"token function\">Get-Service</span> <span class=\"token operator\">-</span>Name se<span class=\"token operator\">*</span>\n<span class=\"token comment\"># 按显示服务名称查找</span>\n<span class=\"token function\">Get-Service</span> <span class=\"token operator\">-</span>DisplayName se<span class=\"token operator\">*</span>\n<span class=\"token function\">Stop-Service</span> <span class=\"token operator\">-</span>Name spooler\n<span class=\"token function\">Start-Service</span> <span class=\"token operator\">-</span>Name spooler\n<span class=\"token comment\"># 暂停服务</span>\n<span class=\"token function\">Suspend-Service</span> <span class=\"token operator\">-</span>Name spooler</code></pre>\n<h2 id=\"格式化输出\"><a href=\"#格式化输出\" class=\"headerlink\" title=\"格式化输出\"></a>格式化输出</h2><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Get-Command</span> <span class=\"token operator\">-</span>Verb Format <span class=\"token punctuation\">|</span> <span class=\"token function\">Format-WideGet</span><span class=\"token operator\">-</span><span class=\"token keyword\">Process</span> <span class=\"token operator\">-</span>Name iexplore <span class=\"token punctuation\">|</span> <span class=\"token function\">Format-ListGet</span><span class=\"token operator\">-</span>Service <span class=\"token operator\">-</span>Name win<span class=\"token operator\">*</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Format-Table</span></code></pre>\n<h2 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h2><pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 获取当前路径</span>\n<span class=\"token function\">Get-Location</span>\n<span class=\"token comment\"># 设置路径 </span>\n<span class=\"token function\">Set-Location</span> <span class=\"token operator\">-</span>Path C:\\Windows\n<span class=\"token comment\"># 获取指定路径所有文件force 显示隐藏项 -Recurse 显示包含的子文件</span>\n<span class=\"token function\">Get-ChildItem</span> <span class=\"token operator\">-</span>Path C:\\ <span class=\"token operator\">-</span>Force\n<span class=\"token comment\"># 复制文件 -Force覆盖已有目标文件</span>\n<span class=\"token function\">Copy-Item</span> <span class=\"token operator\">-</span>Path C:\\boot<span class=\"token punctuation\">.</span>ini <span class=\"token operator\">-</span>Destination C:\\boot<span class=\"token punctuation\">.</span>bak\n<span class=\"token comment\"># 复制文件夹</span>\n<span class=\"token function\">Copy-Item</span> C:\\temp\\test1 <span class=\"token operator\">-</span>Recurse C:\\temp\\DeleteMe\n<span class=\"token comment\"># 将 C:\\data 中任意位置包含的所有 .txt 文件都复制到 </span>\nC:\\temp\\textCopy<span class=\"token operator\">-</span>Item <span class=\"token operator\">-</span><span class=\"token keyword\">Filter</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>txt <span class=\"token operator\">-</span>Path c:\\<span class=\"token keyword\">data</span> <span class=\"token operator\">-</span>Recurse <span class=\"token operator\">-</span>Destination C:\\temp\\text\n<span class=\"token comment\"># 创建文件和文件夹</span>\n<span class=\"token function\">New-Item</span> <span class=\"token operator\">-</span>ForceNew<span class=\"token operator\">-</span>Item <span class=\"token operator\">-</span>Path <span class=\"token string\">'C:\\temp\\New Folder'</span> <span class=\"token operator\">-</span>ItemType DirectoryNew<span class=\"token operator\">-</span>Item <span class=\"token operator\">-</span>Path <span class=\"token string\">'C:\\temp\\New Folder\\file.txt'</span> <span class=\"token operator\">-</span>ItemType File\n<span class=\"token comment\"># 删除文件夹</span>\n<span class=\"token function\">Remove-Item</span> <span class=\"token operator\">-</span>Path C:\\temp\\DeleteMe <span class=\"token operator\">-</span>Recurse</code></pre>\n<pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 文本文件数据读取到数组中</span>\n<span class=\"token variable\">$Computers</span> = <span class=\"token function\">Get-Content</span> <span class=\"token operator\">-</span>Path C:\\temp\\DomainMembers<span class=\"token punctuation\">.</span>txt</code></pre>\n<pre class=\"language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 启用自动填充命令</span>\n<span class=\"token function\">Set-PSReadLineOption</span> <span class=\"token operator\">-</span>PredictionSource History</code></pre>\n"},{"title":"Markdown","date":"2021-10-30T12:59:30.000Z","description":"markdown基本语法","_content":"\nGigthub markdown语法\n==\n\n\n该文件用来测试和展示书写README的各种markdown语法。  \nGitHub的markdown语法在标准的markdown语法基础上做了扩充，  \n称之为`GitHub Flavored Markdown`，简称`GFM`。GFM在GitHub上有广泛应用，  \n除了README文件外，issues和wiki均支持markdown语法。\n\n****\n\n| Author | fortune           |\n| ------ | ----------------- |\n| E-mail | 2310298446@qq.com |\n\n\n****\n## 目录\n* [规范](#规范)\n* [横线](#横线)\n* [标题](#标题)\n* [文本](#文本)\n    * 普通文本\n    * 单行文本\n    * 多行文本\n    * 换行\n    * 文字高亮\n    * 斜体\n    * 粗体\n    * 删除线\n* [图片](#图片)\n    * 来源于网络的图片\n    * GitHub仓库中的图片\n* [链接](#链接) \n    * 文字超链接\n        *  链接外部URL\n        *  链接本仓库里的URL\n    *  锚点\n    * [图片链接](#图片链接)\n    * Reference索引超链\n    * 自动链接\n* [列表](#列表)\n    * 无序列表\n    * 有序列表\n    * 复选框列表\n* [块引用](#块引用)\n* [代码高亮](#代码高亮)\n* [表格](#表格) \n* [表情](#表情)\n* [diff语法](#diff语法)\n* [details折叠语法](#details折叠语法)\n* [注释](#注释)\n* [其他](#其他)\n    * github markdown暂不支持功能\n    * 上标\n    * 下标\n    * [自定义锚点](#自定义锚点)<span id=\"blog\">blog</span>\n    * 参考资料注解\n\n规范\n--\n\n### 文件后缀\n\n建议使用.md\n\n### 字符集\n建议使用UTF-8\n\n### 换行符\n建议使用LF，unix系统风格的换行符\n\n### 默认规定\n* README.md文件会被 github、gitlab等版本控制系统自动展示\n\n横线\n--\n```text\n\n***\n\n---\n\n___\n\n```\n都表示横线，效果是一样的，可以写把*、-、_ 重复三次以上，与其他内容前后都空一行，避免产生其他问题\n\n***\n\n---\n\n___\n\n\n标题\n--\n\n```text\n# 一级标题  \n## 二级标题  \n### 三级标题  \n#### 四级标题  \n##### 五级标题  \n###### 六级标题  \n```\n\n# 一级标题  \n## 二级标题  \n### 三级标题  \n#### 四级标题  \n##### 五级标题  \n###### 六级标题  \n\n* 一级标题--Setex风格\n\n下面的= 个数 >= 1，建议都写2个\n```text\n一级标题--Setex风格\n```\n\n一级标题--Setex风格\n==\n\n```text\n一级标题--Setex风格\n==\n\n等价于\n\n# 一级标题--Setex风格\n```\n前一种写法一般用于文件的第一行写大标题\n\n\n* 二级标题--Setex风格\n\n下面的- 个数 >= 1，建议都写2个\n```text\n二级标题--Setex风格\n--\n```\n\n二级标题--Setex风格\n--\n\n```text\n二级标题--Setex风格\n--\n\n特价于\n\n## 二级标题--Setex风格\n```\n\n\n文本\n--\n\n### 普通文本\n这是一段普通的文本，直接写，开头顶格\n\n### 单行文本\n    Hello,大家好，我是fortune。\n在一行开头加入1个Tab或者4个空格。\n\n### 文本块\n#### 语法1\n在连续几行的文本开头加入1个Tab或者4个空格。\n\n    欢迎到访\n    很高兴见到您\n    祝您，早上好，中午好，下午好，晚安\n\n#### 语法2\n文本首、尾各3个反引号：\n```\n欢迎到访\n我是码农\n你可以通过GitHub搜索[Faith-Hesper]找到我\n```\n该语法也可以实现代码高亮，见[代码高亮](#代码高亮)\n\n#### 换行\n直接回车不能换行  \n* 可以在上一行文本后面加两个空格，  \n这样下一行的文本就换行了。\n\n* 或者在两行之间加一个空行，\n\n也能实现换行效果，不过这个行间距有点大。\n\n#### 文字高亮\n文字高亮功能能使行内部分文字高亮，使用一对反引号，还可以避免转义  \n* 语法\n```\n`linux` `网络编程` `socket` `epoll` \n```\n效果：`linux` `网络编程` `socket` `epoll`\n\n也适合做一篇文章的tag\n\n#### 斜体、粗体、删除线\n| 语法                      | 效果                    |\n| ------------------------- | ----------------------- |\n| `*斜体1*`                 | *斜体1*                 |\n| `_斜体2_`                 | _斜体2_                 |\n| `**粗体1**`               | **粗体1**               |\n| `__粗体2__`               | __粗体2__               |\n| `这是一个 ~~删除线~~`     | 这是一个 ~~删除线~~     |\n| `***斜粗体1***`           | ***斜粗体1***           |\n| `___斜粗体2___`           | ___斜粗体2___           |\n| `***~~斜粗体删除线1~~***` | ***~~斜粗体删除线1~~*** |\n| `~~***斜粗体删除线2***~~` | ~~***斜粗体删除线2***~~ |\n| `___~~斜粗体删除线3~~___` | ___~~斜粗体删除线3~~___ |\n| `~~___斜粗体删除线4___~~` | ~~___斜粗体删除线4___~~ |\n\n    斜体、粗体、删除线可混合使用\n\n图片\n--\n基本格式：\n```\n![alt](URL \"title\")\n```\nalt和title即对应HTML中的alt和title属性（都可省略）：\n- alt表示图片显示失败时的替换文本\n- title表示鼠标悬停在图片时的显示文本（注意这里要加引号）\n\nURL即图片的url地址，如果引用本仓库中的图片，直接使用**相对路径**就可了，  \n如果引用其他github仓库中的图片要注意格式，即：`仓库地址/raw/分支名/图片路径`，如：\n```\nhttps://github.com/Faith-Hesper/Note/blob/master/img/20211030212947.png\n```\n\n| #    | 语法                                                       | 效果                                                     |\n| ---- | ---------------------------------------------------------- | -------------------------------------------------------- |\n| 1    | `![baidu](http://www.baidu.com/img/bdlogo.gif \"百度logo\")` | ![baidu](http://www.baidu.com/img/bdlogo.gif \"百度logo\") |\n| 2    | `![][code-past]`                                           | ![][code-past]                                           |\n\n注意例2的写法使用了**URL变量**的形式，在[链接](#链接)一节有介绍。\n>在文末有code-past的定义：\n```\n[code-past]:https://img-blog.csdnimg.cn/201908060004034.png\n```\n\n链接\n--\n### 链接外部URL\n\n| #    | 语法                                                     | 效果                                                  |\n| ---- | -------------------------------------------------------- | ----------------------------------------------------- |\n| 1    | `[我的博客](https://faith-hesper.github.io  \"悬停显示\")` | [我的博客](https://faith-hesper.github.io \"悬停显示\") |\n| 2    | `[我的github][github] `                                  | [我的github][github]                                  |\n\n引用链接由两个[]组成：\n```text\n* 非图片链接\n[链接文本][URL变量]\n\n* 图片链接\n![alt][URL变量]\n```\n- 第二个[]为实际的URL\n\n>使用URL变量能达到复用的目的，一般把全文所有的URL标识符统一放在文章末尾，这样看起来比较干净。\n\n\n### 链接本仓库里的URL\n\n| 语法                              | 效果                            |\n| --------------------------------- | ------------------------------- |\n| `[我的简介](/example/profile.md)` | [我的简介](/example/profile.md) |\n| `[example](./example)`            | [example](./example)            |\n\n### 图片链接\n给图片加链接的本质是混合图片显示语法和普通的链接语法。普通的链接中[ ]内部是链接要显示的文本，而图片链接[ ]里面则是要显示的图片。  \n直接混合两种语法当然可以，但是十分啰嗦，为此我们可以使用URL标识符的形式。\n\n| #    | 语法                                                |                       效果                        |\n| ---- | --------------------------------------------------- | :-----------------------------------------------: |\n| 1    | `[![github]](https://github.com/Faith-Hesper)`      | [![github-logo]](https://github.com/Faith-Hesper) |\n| 2    | `[![](/img/zhihu.png \"我的知乎，欢迎关注\")][zhihu]` | [![](img/zhihu.png \"我的知乎，欢迎关注\")][zhihu]  |\n| 3    | `[![csdn-logo]][csdn]`                              |               [![csdn-logo]][csdn]                |\n\n因为图片本身和链接本身都支持URL标识符的形式，所以图片链接也可以很简洁（见例3）。  \n注意，此时鼠标悬停时显示的文字是图片的title，而非链接本身的title了。\n>本文URL变量都放置于文末\n\n### 锚点\n每一个标题都是一个锚点，和HTML的锚点（`#`）类似\n* 锚点标记中含特殊符时，在链接中把特殊符去掉即可\n* 如果有空格使用`-`代替\n* `-` 可以用`\\-`转义\n\n| 语法                  | 效果                |\n| --------------------- | ------------------- |\n| `[回到顶部](#readme)` | [回到顶部](#readme) |\n\n不过要注意，标题中的英文字母都被转化为**小写字母**了。\n> 以前GitHub对中文支持的不好，所以中文标题不能正确识别为锚点，但是现在已经没问题啦！\n\n### Reference索引链接\n即引用链接\n\n```text\n[百度][b]  \n[b]:https://www.baidu.com\n```\n[b]:https://www.baidu.com 定义URL变量[b]，不会显示\n\n**效果**  \n[百度][b]  \n[b]:https://www.baidu.com\n\n### 自动链接\n尖括号\n```text\n<http://ibruce.info>  \n<bu.ru@qq.com>\n```\n<http://ibruce.info>  \n<bu.ru@qq.com>\n\n### 嵌入视频\n使用html中的video标签，github markdown暂不支持，Typora支持\n```html\n<video class=\"player\" \n    src=\"https://www.bilibili.com/video/BV14K4y1t7S4?t=141.8\" \n    poster=\"http://i0.hdslb.com/bfs/archive/19330ee5128ada930f1e288254fd83ef3e45974d.jpg@336w_190h.jpg\"\n    type=\"video/mp4\" \n    preload=\"auto\" \n    controls=\"controls\" \n    style=\"width: 100%;\"\n    >\n\n</video>\n```\n\n```text\nsrc: 指定视频资源的URL\nposter: 视频预览图片\ntype: 视频文件类型\npreload: 是否预加载，auto：自动预加载，none: 不预加载\n```\n\n<video class=\"player\" \n    src=\"https://www.bilibili.com/video/BV14K4y1t7S4?t=141.8\" \n    poster=\"http://i0.hdslb.com/bfs/archive/19330ee5128ada930f1e288254fd83ef3e45974d.jpg@336w_190h.jpg\"\n    type=\"video/mp4\" \n    preload=\"auto\" \n    controls=\"controls\" \n    style=\"width: 100%;\"\n    >\n</video>\n\n### 嵌入音频\n\n使用html中的audio标签，github markdown暂不支持，Typora支持\n```html\n<audio controls=\"\" preload=\"auto\" height=\"0\" width=\"0\" autoplay=\"false\"\n       src=\"http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983&amp;vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4&amp;uin=7078&amp;fromtag=66\"\n       >\n    <source id=\"mp3\" \n        src=\"http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983&amp;vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4&amp;uin=7078&amp;fromtag=66\"\n    >\n</audio>\n```\n\n```text\npreload: 是否预加载\naudio标签src属性：预加载音频资源的URL路径\nsource标签中的src属性：指定音频资源URL，需要与audio标签src属性性相同\n```\n\n<audio controls=\"\" preload=\"auto\" height=\"0\" width=\"0\" autoplay=\"false\"\n       src=\"http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983&amp;vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4&amp;uin=7078&amp;fromtag=66\"\n       >\n    <source id=\"mp3\" \n        src=\"http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983&amp;vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4&amp;uin=7078&amp;fromtag=66\"\n    >\n</audio>\n\n\n列表\n--\n### 无序列表\n* 语法  \n无序列表符: * - +\n```\n* 昵称：fortune\n- 别名：fortune\n+ 英文名：fortune\n```\n**效果**  \n* 昵称：fortune\n- 别名：fortune\n+ 英文名：fortune\n\n### 多级无序列表\n* 语法\n```\n* 编程语言\n    ```text\n    这时开发效率最高的语言\n    ...\n```\n    * 脚本语言\n        * Python\n```\n**效果**  \n* 编程语言\n    ```text\n    这时开发效率最高的语言\n    ...\n```\n    * 脚本语言\n        * Python\n\n### 一级有序列表\n* 语法\n    ```text\n    就是在数字后面加一个点，再加一个空格。  \n    序号可以全部写一个，如1，让其自动推断\n    ```\n    \n```\n面向对象的三个基本特征：\n\n1. 封装\n2. 继承\n3. 多态\n```\n\n**效果**  \n面向对象的三个基本特征：\n\n1. 封装\n2. 继承\n3. 多态\n\n**序号自行推断示例**  \n```text\n1. 封装\n1. 继承\n1. 多态\n```\n1. 封装\n1. 继承\n1. 多态\n\n### 多级有序列表\n和无序列表一样，有序列表也有多级结构。\n* 语法\n```\n1. 这是一级的有序列表，数字1还是1\n   1. 这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字\n      1. 这是三级的有序列表，数字在显示的时候变成了英文字母\n```\n\n**效果**\n1. 这是一级的有序列表，数字1还是1\n   1. 这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字\n      1. 这是三级的有序列表，数字在显示的时候变成了英文字母\n\t\n\n### 复选框列表\n* 语法\n```text\n- [ ] content \n-空格[空格]空格content \n\n解释: [ ]括号里面的空格可以换成[x],代表选中对话框\n```\n\n* 示例  \n```\n- [x] 需求分析\n- [x] 系统设计\n- [x] 详细设计\n- [ ] 编码\n- [ ] 测试\n- [ ] 交付\n```\n\n**效果**  \n- [x] 需求分析\n- [x] 系统设计\n- [x] 详细设计\n- [ ] 编码\n- [ ] 测试\n- [ ] 交付\n\n您可以使用这个功能来标注某个项目各项任务的完成情况。\n> Tip:\n>\n> > 在GitHub的**issue**中使用该语法是可以实时点击复选框来勾选或解除勾选的，而无需修改issue原文。\n\n\n块引用\n--\n\n### 常用于引用文本\n\n* 块引用示例\n```text\n文本摘自《深入理解计算机系统》P27  \n令人吃惊的是，在哪种字节顺序是合适的这个问题上，人们表现得非常情绪化。\n实际上术语“little endian”（小端）和“big endian”（大端）出自Jonathan Swift的\n《格利佛游记》一书，其中交战的两个派别无法就应该从哪一端打开一个半熟的鸡蛋达成一致。\n因此，争论沦为关于社会政治的争论。只要选择了一种规则并且始终如一的坚持，\n其实对于哪种字节排序的选择都是任意的。\n```\n>**“端”（endian）的起源**  \n>以下是Jonathan Swift在1726年关于大小端之争历史的描述：  \n>“……下面我要告诉你的是，Lilliput和Blefuscu这两大强国在过去36个月里一直在苦战。战争开始是由于以下的原因：我们大家都认为，吃鸡蛋前，原始的方法是打破鸡蛋较大的一端，可是当今的皇帝的祖父小时候吃鸡蛋，一次按古法打鸡蛋时碰巧将一个手指弄破了，因此他的父亲，当时的皇帝，就下了一道敕令，命令全体臣民吃鸡蛋时打破较小的一端，违令者重罚。”\n\n### 块引用有多级结构\n* 语法\n```\n> 数据结构\n>> 树\n>>> 二叉树\n>>>> 平衡二叉树\n>>>>> 满二叉树\n```\n**效果**  \n> 数据结构\n> > 树\n> > > 二叉树\n> > > > 平衡二叉树\n> > > >\n> > > > > 满二叉树\n\n\n代码高亮\n--\n\n* 代码高亮语法\n\n在三个反引号后面加上编程语言的名字，另起一行开始写代码，最后一行再加上三个反引号。\n\n    ```java\n    public static void main(String[]args){} //Java\n    ```\n    \n    ```c\n    int main(int argc, char *argv[]) //C\n    ```\n    \n    ```bash\n    echo \"hello GitHub\" #Bash\n    ```\n    \n    ```javascript\n    document.getElementById(\"myH1\").innerHTML=\"Welcome to my Homepage\"; //javascipt\n    &#96;&#96;&#96;\n    \n    ```cpp\n    string &operator+(const string& A,const string& B) //cpp\n    ```\n\n**代码高亮效果**  \n```java\npublic static void main(String[]args){} //Java\n```\n\n```c\nint main(int argc, char *argv[]) //C\n```\n\n```bash\necho \"hello GitHub\" #Bash\n```\n\n```javascript\ndocument.getElementById(\"myH1\").innerHTML=\"Welcome to my Homepage\"; //javascipt\n```\n\n```cpp\nstring &operator+(const string& A,const string& B) //cpp\n```\n\n表格\n--\n注意：表头上面一行为文本块时，需要在文本块与表头之间空一行\n\n```text\n|表头1 |表头2 |\n|--- |--- |\n|表格单元 |表格单元 |\n|表格单元 |表格单元 |\n```\n\n| 表头1    | 表头2    |\n| -------- | -------- |\n| 表格单元 | 表格单元 |\n| 表格单元 | 表格单元 |\n\n\n```text\n表头1 |表头2\n--- |---\n表格单元 |表格单元\n表格单元 |表格单元\n```\n| 表头1    | 表头2    |\n| -------- | -------- |\n| 表格单元 | 表格单元 |\n| 表格单元 | 表格单元 |\n\n### 表格对齐\n表格可以指定对齐方式\n\n```text\n左对齐 |居中  |右对齐\n:--- |:---: |---: \ncol 3 is      |some wordy text |$1600\ncol 2 is      |centered        |$12\nzebra stripes |are neat        |$1\n坚线特殊符    |在表格中使用\\转换无效 <br>需使用Unicode编码`&#124;`        |&#124;\n```\n\n| 左对齐        |                        居中                         | 右对齐 |\n| :------------ | :-------------------------------------------------: | -----: |\n| col 3 is      |                   some wordy text                   |  $1600 |\n| col 2 is      |                      centered                       |    $12 |\n| zebra stripes |                      are neat                       |     $1 |\n| 坚线特殊符    | 在表格中使用\\转换无效 <br>需使用Unicode编码`&#124;` | &#124; |\n\n\n### yaml风格表格\n必须写在文件的首行，见本文最上方  \n\n    ---\n    layout: page\n    title: \"Github markdown\"\n    author: fortune\n    permalink: /help/dns/\n    编号: \n        - 0001\n        - \"2222\"\n    ---\n\n\n### 混合其他语法\n表格单元中的内容可以和其他大多数GFM语法配合使用\n\n#### 使用普通文本的删除线，斜体等效果\n\n| 名字  | 描述                         |\n| ----- | ---------------------------- |\n| Help  | ~~Display the~~ help window. |\n| Close | _Closes_ a window            |\n\n#### 表格中嵌入图片（链接）\n其实前面介绍图片显示、图片链接的时候为了清晰就是放在在表格中显示的。\n\n| 图片                 | 描述 |\n| -------------------- | ---- |\n| ![baidu][baidu-logo] | 百度 |\n\n表情\n--\nGithub的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。\n\n比如`:blush:`，可以显示:blush:。\n\n具体每一个表情的符号码，可以查询GitHub的官方网页[http://www.emoji-cheat-sheet.com](http://www.emoji-cheat-sheet.com)。\n\n但是这个网页每次都打开**奇慢**。所以我整理到了本repo中，大家可以直接在此查看[emoji 表情](./emoji.md)。\n\ndiff语法\n--\n版本控制的系统中都少不了diff的功能，即展示一个文件内容的增加与删除。  \nGFM中可以显示的展示diff效果。使用绿色表示新增，红色表示删除。\n\n* 语法\n    ```text\n    其语法与代码高亮类似，指定语言类型为diff\n    + : 新增 (绿)\n    - : 删除 (红)\n    ! : 修改 (橙)\n    # : 未变动 (灰)\n    ```\n\n* diff示例  \n    ![](img/diff.png)  \n\n**效果**  \n```diff\n+ 人闲桂花落，\n- 夜静春山空。\n! 月出惊山鸟，\n# 时鸣春涧中。\n```\n\ndetails折叠语法\n--\n* `</summary>` 与下面的内容之间一定要空一行\n* `</details>` 与下面的内容之间一定要空一行，否则影响下面的内容格式\n\n```text\n<details>\n<summary>射雕英雄传</summary>\n\n1. 第一回 风雪惊变\n1. 第二回 江南七怪\n1. 第三回 黄沙莽莽\n1. 第四回 黑风双煞\n1. 第五回 弯弓射雕\n1. 第六回 崖顶疑阵\n1. 第七回 比武招亲\n</details>\n```\n\n<details>\n<summary>射雕英雄传</summary>\n\n1. 第一回 风雪惊变\n1. 第二回 江南七怪\n1. 第三回 黄沙莽莽\n1. 第四回 黑风双煞\n1. 第五回 弯弓射雕\n1. 第六回 崖顶疑阵\n1. 第七回 比武招亲\n</details>\n\n注释\n--\n* html块注释\n    ```text\n    <!--\n    哈哈我是注释，\n    不会在浏览器中显示。\n    -->\n    ```\n    <!--\n    哈哈我是注释，\n    不会在浏览器中显示。\n    -->\n\n* 行注释\n    ```text\n    [//]:#(注释内容...)\n    ```\n\n[//]:#(注释内容...)\n\n其他\n--\n### github markdown暂不支持的功能\n* 目前github暂时不支持markdown流程控制语法\n* 目前github暂时不支持css语法，如字体颜色、字体等\n* 目前github不支持文本块行号显示\n* [嵌入视频](#嵌入视频)\n* [嵌入音频](#嵌入音频)\n\n### 上标\n```text\n2<sup>3</sub>\n```\n**效果**  \n2<sup>3</sub>\n\n### 下标\n```text\nH<sub>2</sub>O\n```\n**效果**  \nH<sub>2</sub>O\n\n### <span id=\"自定义锚点\">自定义锚点</span>\n\n```text\n解析器会为标题分配一个锚点id。\n但有时候需要连接到不是标题的区域中\n这时用自定义锚点方法，再合适不过了\n```\n1. 标记要跳转到的位置\n    ```text\n    <span id=\"myjump\">提示信息</span>\n    如果不想显示 提示信息，可以什么都不写\n    如：\n    <span id=\"myjump\"></span>\n    <span id=\"blog\">blog</span>\n    ```\n2. 在需要连接到锚点的地方使用锚点\n    ```markdown\n    [说明文字](#myjump)\n    [blog](#blog) or <a href=\"#blog\">blog</a>\n    ```\n\n### 参考资料注解\n百科文章里，有些文字后有 <sup>[\\[1\\]]</sup>，表示参考资料引用，点击可跳转过去  \n这里可以用 自定义锚点 + 上标 方法来做\n\n```text\n百科文章里，有些文字后有 <sup>[\\[1\\]]</sup>，表示参考资料引用，点击可跳转过去  \n这里可以用 自定义锚点 + 上标 方法来做\n\n[\\[1\\]]:https://baike.baidu.com/ \"百度百科\"\n```\n\n--------------------------------\n<!--\n定义URL变量(URL标识)，方便上文引用\n\n* 语法\n\n[URL变量名]:URL地址\n\n变量名：支持数字、字母、-、_、中文的组合\n\n\n* 引用方法\n    * 非图片\n    [链接文本][已定义的URL变量]    \n    * 图片\n    ![alt][已定义的URL变量]\n\n定义位置：可以是文档的任意位置，建议放在文末\n\n* 定义的URL变量展示时不显示\n-->\n[blog]:https://faith-hesper.github.io/ \"我的博客\"\n\n```markdown\n// 定义URL变量\n[blog]:https://faith-hesper.github.io/ \"我的博客\"\n```\n\n[blog](#blog)\n","source":"_posts/Markdown.md","raw":"---\ntitle: Markdown\ndate: 2021-10-30 20:59:30\ntags: markdown\ncategories: markdown\ndescription: markdown基本语法\n---\n\nGigthub markdown语法\n==\n\n\n该文件用来测试和展示书写README的各种markdown语法。  \nGitHub的markdown语法在标准的markdown语法基础上做了扩充，  \n称之为`GitHub Flavored Markdown`，简称`GFM`。GFM在GitHub上有广泛应用，  \n除了README文件外，issues和wiki均支持markdown语法。\n\n****\n\n| Author | fortune           |\n| ------ | ----------------- |\n| E-mail | 2310298446@qq.com |\n\n\n****\n## 目录\n* [规范](#规范)\n* [横线](#横线)\n* [标题](#标题)\n* [文本](#文本)\n    * 普通文本\n    * 单行文本\n    * 多行文本\n    * 换行\n    * 文字高亮\n    * 斜体\n    * 粗体\n    * 删除线\n* [图片](#图片)\n    * 来源于网络的图片\n    * GitHub仓库中的图片\n* [链接](#链接) \n    * 文字超链接\n        *  链接外部URL\n        *  链接本仓库里的URL\n    *  锚点\n    * [图片链接](#图片链接)\n    * Reference索引超链\n    * 自动链接\n* [列表](#列表)\n    * 无序列表\n    * 有序列表\n    * 复选框列表\n* [块引用](#块引用)\n* [代码高亮](#代码高亮)\n* [表格](#表格) \n* [表情](#表情)\n* [diff语法](#diff语法)\n* [details折叠语法](#details折叠语法)\n* [注释](#注释)\n* [其他](#其他)\n    * github markdown暂不支持功能\n    * 上标\n    * 下标\n    * [自定义锚点](#自定义锚点)<span id=\"blog\">blog</span>\n    * 参考资料注解\n\n规范\n--\n\n### 文件后缀\n\n建议使用.md\n\n### 字符集\n建议使用UTF-8\n\n### 换行符\n建议使用LF，unix系统风格的换行符\n\n### 默认规定\n* README.md文件会被 github、gitlab等版本控制系统自动展示\n\n横线\n--\n```text\n\n***\n\n---\n\n___\n\n```\n都表示横线，效果是一样的，可以写把*、-、_ 重复三次以上，与其他内容前后都空一行，避免产生其他问题\n\n***\n\n---\n\n___\n\n\n标题\n--\n\n```text\n# 一级标题  \n## 二级标题  \n### 三级标题  \n#### 四级标题  \n##### 五级标题  \n###### 六级标题  \n```\n\n# 一级标题  \n## 二级标题  \n### 三级标题  \n#### 四级标题  \n##### 五级标题  \n###### 六级标题  \n\n* 一级标题--Setex风格\n\n下面的= 个数 >= 1，建议都写2个\n```text\n一级标题--Setex风格\n```\n\n一级标题--Setex风格\n==\n\n```text\n一级标题--Setex风格\n==\n\n等价于\n\n# 一级标题--Setex风格\n```\n前一种写法一般用于文件的第一行写大标题\n\n\n* 二级标题--Setex风格\n\n下面的- 个数 >= 1，建议都写2个\n```text\n二级标题--Setex风格\n--\n```\n\n二级标题--Setex风格\n--\n\n```text\n二级标题--Setex风格\n--\n\n特价于\n\n## 二级标题--Setex风格\n```\n\n\n文本\n--\n\n### 普通文本\n这是一段普通的文本，直接写，开头顶格\n\n### 单行文本\n    Hello,大家好，我是fortune。\n在一行开头加入1个Tab或者4个空格。\n\n### 文本块\n#### 语法1\n在连续几行的文本开头加入1个Tab或者4个空格。\n\n    欢迎到访\n    很高兴见到您\n    祝您，早上好，中午好，下午好，晚安\n\n#### 语法2\n文本首、尾各3个反引号：\n```\n欢迎到访\n我是码农\n你可以通过GitHub搜索[Faith-Hesper]找到我\n```\n该语法也可以实现代码高亮，见[代码高亮](#代码高亮)\n\n#### 换行\n直接回车不能换行  \n* 可以在上一行文本后面加两个空格，  \n这样下一行的文本就换行了。\n\n* 或者在两行之间加一个空行，\n\n也能实现换行效果，不过这个行间距有点大。\n\n#### 文字高亮\n文字高亮功能能使行内部分文字高亮，使用一对反引号，还可以避免转义  \n* 语法\n```\n`linux` `网络编程` `socket` `epoll` \n```\n效果：`linux` `网络编程` `socket` `epoll`\n\n也适合做一篇文章的tag\n\n#### 斜体、粗体、删除线\n| 语法                      | 效果                    |\n| ------------------------- | ----------------------- |\n| `*斜体1*`                 | *斜体1*                 |\n| `_斜体2_`                 | _斜体2_                 |\n| `**粗体1**`               | **粗体1**               |\n| `__粗体2__`               | __粗体2__               |\n| `这是一个 ~~删除线~~`     | 这是一个 ~~删除线~~     |\n| `***斜粗体1***`           | ***斜粗体1***           |\n| `___斜粗体2___`           | ___斜粗体2___           |\n| `***~~斜粗体删除线1~~***` | ***~~斜粗体删除线1~~*** |\n| `~~***斜粗体删除线2***~~` | ~~***斜粗体删除线2***~~ |\n| `___~~斜粗体删除线3~~___` | ___~~斜粗体删除线3~~___ |\n| `~~___斜粗体删除线4___~~` | ~~___斜粗体删除线4___~~ |\n\n    斜体、粗体、删除线可混合使用\n\n图片\n--\n基本格式：\n```\n![alt](URL \"title\")\n```\nalt和title即对应HTML中的alt和title属性（都可省略）：\n- alt表示图片显示失败时的替换文本\n- title表示鼠标悬停在图片时的显示文本（注意这里要加引号）\n\nURL即图片的url地址，如果引用本仓库中的图片，直接使用**相对路径**就可了，  \n如果引用其他github仓库中的图片要注意格式，即：`仓库地址/raw/分支名/图片路径`，如：\n```\nhttps://github.com/Faith-Hesper/Note/blob/master/img/20211030212947.png\n```\n\n| #    | 语法                                                       | 效果                                                     |\n| ---- | ---------------------------------------------------------- | -------------------------------------------------------- |\n| 1    | `![baidu](http://www.baidu.com/img/bdlogo.gif \"百度logo\")` | ![baidu](http://www.baidu.com/img/bdlogo.gif \"百度logo\") |\n| 2    | `![][code-past]`                                           | ![][code-past]                                           |\n\n注意例2的写法使用了**URL变量**的形式，在[链接](#链接)一节有介绍。\n>在文末有code-past的定义：\n```\n[code-past]:https://img-blog.csdnimg.cn/201908060004034.png\n```\n\n链接\n--\n### 链接外部URL\n\n| #    | 语法                                                     | 效果                                                  |\n| ---- | -------------------------------------------------------- | ----------------------------------------------------- |\n| 1    | `[我的博客](https://faith-hesper.github.io  \"悬停显示\")` | [我的博客](https://faith-hesper.github.io \"悬停显示\") |\n| 2    | `[我的github][github] `                                  | [我的github][github]                                  |\n\n引用链接由两个[]组成：\n```text\n* 非图片链接\n[链接文本][URL变量]\n\n* 图片链接\n![alt][URL变量]\n```\n- 第二个[]为实际的URL\n\n>使用URL变量能达到复用的目的，一般把全文所有的URL标识符统一放在文章末尾，这样看起来比较干净。\n\n\n### 链接本仓库里的URL\n\n| 语法                              | 效果                            |\n| --------------------------------- | ------------------------------- |\n| `[我的简介](/example/profile.md)` | [我的简介](/example/profile.md) |\n| `[example](./example)`            | [example](./example)            |\n\n### 图片链接\n给图片加链接的本质是混合图片显示语法和普通的链接语法。普通的链接中[ ]内部是链接要显示的文本，而图片链接[ ]里面则是要显示的图片。  \n直接混合两种语法当然可以，但是十分啰嗦，为此我们可以使用URL标识符的形式。\n\n| #    | 语法                                                |                       效果                        |\n| ---- | --------------------------------------------------- | :-----------------------------------------------: |\n| 1    | `[![github]](https://github.com/Faith-Hesper)`      | [![github-logo]](https://github.com/Faith-Hesper) |\n| 2    | `[![](/img/zhihu.png \"我的知乎，欢迎关注\")][zhihu]` | [![](img/zhihu.png \"我的知乎，欢迎关注\")][zhihu]  |\n| 3    | `[![csdn-logo]][csdn]`                              |               [![csdn-logo]][csdn]                |\n\n因为图片本身和链接本身都支持URL标识符的形式，所以图片链接也可以很简洁（见例3）。  \n注意，此时鼠标悬停时显示的文字是图片的title，而非链接本身的title了。\n>本文URL变量都放置于文末\n\n### 锚点\n每一个标题都是一个锚点，和HTML的锚点（`#`）类似\n* 锚点标记中含特殊符时，在链接中把特殊符去掉即可\n* 如果有空格使用`-`代替\n* `-` 可以用`\\-`转义\n\n| 语法                  | 效果                |\n| --------------------- | ------------------- |\n| `[回到顶部](#readme)` | [回到顶部](#readme) |\n\n不过要注意，标题中的英文字母都被转化为**小写字母**了。\n> 以前GitHub对中文支持的不好，所以中文标题不能正确识别为锚点，但是现在已经没问题啦！\n\n### Reference索引链接\n即引用链接\n\n```text\n[百度][b]  \n[b]:https://www.baidu.com\n```\n[b]:https://www.baidu.com 定义URL变量[b]，不会显示\n\n**效果**  \n[百度][b]  \n[b]:https://www.baidu.com\n\n### 自动链接\n尖括号\n```text\n<http://ibruce.info>  \n<bu.ru@qq.com>\n```\n<http://ibruce.info>  \n<bu.ru@qq.com>\n\n### 嵌入视频\n使用html中的video标签，github markdown暂不支持，Typora支持\n```html\n<video class=\"player\" \n    src=\"https://www.bilibili.com/video/BV14K4y1t7S4?t=141.8\" \n    poster=\"http://i0.hdslb.com/bfs/archive/19330ee5128ada930f1e288254fd83ef3e45974d.jpg@336w_190h.jpg\"\n    type=\"video/mp4\" \n    preload=\"auto\" \n    controls=\"controls\" \n    style=\"width: 100%;\"\n    >\n\n</video>\n```\n\n```text\nsrc: 指定视频资源的URL\nposter: 视频预览图片\ntype: 视频文件类型\npreload: 是否预加载，auto：自动预加载，none: 不预加载\n```\n\n<video class=\"player\" \n    src=\"https://www.bilibili.com/video/BV14K4y1t7S4?t=141.8\" \n    poster=\"http://i0.hdslb.com/bfs/archive/19330ee5128ada930f1e288254fd83ef3e45974d.jpg@336w_190h.jpg\"\n    type=\"video/mp4\" \n    preload=\"auto\" \n    controls=\"controls\" \n    style=\"width: 100%;\"\n    >\n</video>\n\n### 嵌入音频\n\n使用html中的audio标签，github markdown暂不支持，Typora支持\n```html\n<audio controls=\"\" preload=\"auto\" height=\"0\" width=\"0\" autoplay=\"false\"\n       src=\"http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983&amp;vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4&amp;uin=7078&amp;fromtag=66\"\n       >\n    <source id=\"mp3\" \n        src=\"http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983&amp;vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4&amp;uin=7078&amp;fromtag=66\"\n    >\n</audio>\n```\n\n```text\npreload: 是否预加载\naudio标签src属性：预加载音频资源的URL路径\nsource标签中的src属性：指定音频资源URL，需要与audio标签src属性性相同\n```\n\n<audio controls=\"\" preload=\"auto\" height=\"0\" width=\"0\" autoplay=\"false\"\n       src=\"http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983&amp;vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4&amp;uin=7078&amp;fromtag=66\"\n       >\n    <source id=\"mp3\" \n        src=\"http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983&amp;vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4&amp;uin=7078&amp;fromtag=66\"\n    >\n</audio>\n\n\n列表\n--\n### 无序列表\n* 语法  \n无序列表符: * - +\n```\n* 昵称：fortune\n- 别名：fortune\n+ 英文名：fortune\n```\n**效果**  \n* 昵称：fortune\n- 别名：fortune\n+ 英文名：fortune\n\n### 多级无序列表\n* 语法\n```\n* 编程语言\n    ```text\n    这时开发效率最高的语言\n    ...\n```\n    * 脚本语言\n        * Python\n```\n**效果**  \n* 编程语言\n    ```text\n    这时开发效率最高的语言\n    ...\n```\n    * 脚本语言\n        * Python\n\n### 一级有序列表\n* 语法\n    ```text\n    就是在数字后面加一个点，再加一个空格。  \n    序号可以全部写一个，如1，让其自动推断\n    ```\n    \n```\n面向对象的三个基本特征：\n\n1. 封装\n2. 继承\n3. 多态\n```\n\n**效果**  \n面向对象的三个基本特征：\n\n1. 封装\n2. 继承\n3. 多态\n\n**序号自行推断示例**  \n```text\n1. 封装\n1. 继承\n1. 多态\n```\n1. 封装\n1. 继承\n1. 多态\n\n### 多级有序列表\n和无序列表一样，有序列表也有多级结构。\n* 语法\n```\n1. 这是一级的有序列表，数字1还是1\n   1. 这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字\n      1. 这是三级的有序列表，数字在显示的时候变成了英文字母\n```\n\n**效果**\n1. 这是一级的有序列表，数字1还是1\n   1. 这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字\n      1. 这是三级的有序列表，数字在显示的时候变成了英文字母\n\t\n\n### 复选框列表\n* 语法\n```text\n- [ ] content \n-空格[空格]空格content \n\n解释: [ ]括号里面的空格可以换成[x],代表选中对话框\n```\n\n* 示例  \n```\n- [x] 需求分析\n- [x] 系统设计\n- [x] 详细设计\n- [ ] 编码\n- [ ] 测试\n- [ ] 交付\n```\n\n**效果**  \n- [x] 需求分析\n- [x] 系统设计\n- [x] 详细设计\n- [ ] 编码\n- [ ] 测试\n- [ ] 交付\n\n您可以使用这个功能来标注某个项目各项任务的完成情况。\n> Tip:\n>\n> > 在GitHub的**issue**中使用该语法是可以实时点击复选框来勾选或解除勾选的，而无需修改issue原文。\n\n\n块引用\n--\n\n### 常用于引用文本\n\n* 块引用示例\n```text\n文本摘自《深入理解计算机系统》P27  \n令人吃惊的是，在哪种字节顺序是合适的这个问题上，人们表现得非常情绪化。\n实际上术语“little endian”（小端）和“big endian”（大端）出自Jonathan Swift的\n《格利佛游记》一书，其中交战的两个派别无法就应该从哪一端打开一个半熟的鸡蛋达成一致。\n因此，争论沦为关于社会政治的争论。只要选择了一种规则并且始终如一的坚持，\n其实对于哪种字节排序的选择都是任意的。\n```\n>**“端”（endian）的起源**  \n>以下是Jonathan Swift在1726年关于大小端之争历史的描述：  \n>“……下面我要告诉你的是，Lilliput和Blefuscu这两大强国在过去36个月里一直在苦战。战争开始是由于以下的原因：我们大家都认为，吃鸡蛋前，原始的方法是打破鸡蛋较大的一端，可是当今的皇帝的祖父小时候吃鸡蛋，一次按古法打鸡蛋时碰巧将一个手指弄破了，因此他的父亲，当时的皇帝，就下了一道敕令，命令全体臣民吃鸡蛋时打破较小的一端，违令者重罚。”\n\n### 块引用有多级结构\n* 语法\n```\n> 数据结构\n>> 树\n>>> 二叉树\n>>>> 平衡二叉树\n>>>>> 满二叉树\n```\n**效果**  \n> 数据结构\n> > 树\n> > > 二叉树\n> > > > 平衡二叉树\n> > > >\n> > > > > 满二叉树\n\n\n代码高亮\n--\n\n* 代码高亮语法\n\n在三个反引号后面加上编程语言的名字，另起一行开始写代码，最后一行再加上三个反引号。\n\n    ```java\n    public static void main(String[]args){} //Java\n    ```\n    \n    ```c\n    int main(int argc, char *argv[]) //C\n    ```\n    \n    ```bash\n    echo \"hello GitHub\" #Bash\n    ```\n    \n    ```javascript\n    document.getElementById(\"myH1\").innerHTML=\"Welcome to my Homepage\"; //javascipt\n    &#96;&#96;&#96;\n    \n    ```cpp\n    string &operator+(const string& A,const string& B) //cpp\n    ```\n\n**代码高亮效果**  \n```java\npublic static void main(String[]args){} //Java\n```\n\n```c\nint main(int argc, char *argv[]) //C\n```\n\n```bash\necho \"hello GitHub\" #Bash\n```\n\n```javascript\ndocument.getElementById(\"myH1\").innerHTML=\"Welcome to my Homepage\"; //javascipt\n```\n\n```cpp\nstring &operator+(const string& A,const string& B) //cpp\n```\n\n表格\n--\n注意：表头上面一行为文本块时，需要在文本块与表头之间空一行\n\n```text\n|表头1 |表头2 |\n|--- |--- |\n|表格单元 |表格单元 |\n|表格单元 |表格单元 |\n```\n\n| 表头1    | 表头2    |\n| -------- | -------- |\n| 表格单元 | 表格单元 |\n| 表格单元 | 表格单元 |\n\n\n```text\n表头1 |表头2\n--- |---\n表格单元 |表格单元\n表格单元 |表格单元\n```\n| 表头1    | 表头2    |\n| -------- | -------- |\n| 表格单元 | 表格单元 |\n| 表格单元 | 表格单元 |\n\n### 表格对齐\n表格可以指定对齐方式\n\n```text\n左对齐 |居中  |右对齐\n:--- |:---: |---: \ncol 3 is      |some wordy text |$1600\ncol 2 is      |centered        |$12\nzebra stripes |are neat        |$1\n坚线特殊符    |在表格中使用\\转换无效 <br>需使用Unicode编码`&#124;`        |&#124;\n```\n\n| 左对齐        |                        居中                         | 右对齐 |\n| :------------ | :-------------------------------------------------: | -----: |\n| col 3 is      |                   some wordy text                   |  $1600 |\n| col 2 is      |                      centered                       |    $12 |\n| zebra stripes |                      are neat                       |     $1 |\n| 坚线特殊符    | 在表格中使用\\转换无效 <br>需使用Unicode编码`&#124;` | &#124; |\n\n\n### yaml风格表格\n必须写在文件的首行，见本文最上方  \n\n    ---\n    layout: page\n    title: \"Github markdown\"\n    author: fortune\n    permalink: /help/dns/\n    编号: \n        - 0001\n        - \"2222\"\n    ---\n\n\n### 混合其他语法\n表格单元中的内容可以和其他大多数GFM语法配合使用\n\n#### 使用普通文本的删除线，斜体等效果\n\n| 名字  | 描述                         |\n| ----- | ---------------------------- |\n| Help  | ~~Display the~~ help window. |\n| Close | _Closes_ a window            |\n\n#### 表格中嵌入图片（链接）\n其实前面介绍图片显示、图片链接的时候为了清晰就是放在在表格中显示的。\n\n| 图片                 | 描述 |\n| -------------------- | ---- |\n| ![baidu][baidu-logo] | 百度 |\n\n表情\n--\nGithub的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。\n\n比如`:blush:`，可以显示:blush:。\n\n具体每一个表情的符号码，可以查询GitHub的官方网页[http://www.emoji-cheat-sheet.com](http://www.emoji-cheat-sheet.com)。\n\n但是这个网页每次都打开**奇慢**。所以我整理到了本repo中，大家可以直接在此查看[emoji 表情](./emoji.md)。\n\ndiff语法\n--\n版本控制的系统中都少不了diff的功能，即展示一个文件内容的增加与删除。  \nGFM中可以显示的展示diff效果。使用绿色表示新增，红色表示删除。\n\n* 语法\n    ```text\n    其语法与代码高亮类似，指定语言类型为diff\n    + : 新增 (绿)\n    - : 删除 (红)\n    ! : 修改 (橙)\n    # : 未变动 (灰)\n    ```\n\n* diff示例  \n    ![](img/diff.png)  \n\n**效果**  \n```diff\n+ 人闲桂花落，\n- 夜静春山空。\n! 月出惊山鸟，\n# 时鸣春涧中。\n```\n\ndetails折叠语法\n--\n* `</summary>` 与下面的内容之间一定要空一行\n* `</details>` 与下面的内容之间一定要空一行，否则影响下面的内容格式\n\n```text\n<details>\n<summary>射雕英雄传</summary>\n\n1. 第一回 风雪惊变\n1. 第二回 江南七怪\n1. 第三回 黄沙莽莽\n1. 第四回 黑风双煞\n1. 第五回 弯弓射雕\n1. 第六回 崖顶疑阵\n1. 第七回 比武招亲\n</details>\n```\n\n<details>\n<summary>射雕英雄传</summary>\n\n1. 第一回 风雪惊变\n1. 第二回 江南七怪\n1. 第三回 黄沙莽莽\n1. 第四回 黑风双煞\n1. 第五回 弯弓射雕\n1. 第六回 崖顶疑阵\n1. 第七回 比武招亲\n</details>\n\n注释\n--\n* html块注释\n    ```text\n    <!--\n    哈哈我是注释，\n    不会在浏览器中显示。\n    -->\n    ```\n    <!--\n    哈哈我是注释，\n    不会在浏览器中显示。\n    -->\n\n* 行注释\n    ```text\n    [//]:#(注释内容...)\n    ```\n\n[//]:#(注释内容...)\n\n其他\n--\n### github markdown暂不支持的功能\n* 目前github暂时不支持markdown流程控制语法\n* 目前github暂时不支持css语法，如字体颜色、字体等\n* 目前github不支持文本块行号显示\n* [嵌入视频](#嵌入视频)\n* [嵌入音频](#嵌入音频)\n\n### 上标\n```text\n2<sup>3</sub>\n```\n**效果**  \n2<sup>3</sub>\n\n### 下标\n```text\nH<sub>2</sub>O\n```\n**效果**  \nH<sub>2</sub>O\n\n### <span id=\"自定义锚点\">自定义锚点</span>\n\n```text\n解析器会为标题分配一个锚点id。\n但有时候需要连接到不是标题的区域中\n这时用自定义锚点方法，再合适不过了\n```\n1. 标记要跳转到的位置\n    ```text\n    <span id=\"myjump\">提示信息</span>\n    如果不想显示 提示信息，可以什么都不写\n    如：\n    <span id=\"myjump\"></span>\n    <span id=\"blog\">blog</span>\n    ```\n2. 在需要连接到锚点的地方使用锚点\n    ```markdown\n    [说明文字](#myjump)\n    [blog](#blog) or <a href=\"#blog\">blog</a>\n    ```\n\n### 参考资料注解\n百科文章里，有些文字后有 <sup>[\\[1\\]]</sup>，表示参考资料引用，点击可跳转过去  \n这里可以用 自定义锚点 + 上标 方法来做\n\n```text\n百科文章里，有些文字后有 <sup>[\\[1\\]]</sup>，表示参考资料引用，点击可跳转过去  \n这里可以用 自定义锚点 + 上标 方法来做\n\n[\\[1\\]]:https://baike.baidu.com/ \"百度百科\"\n```\n\n--------------------------------\n<!--\n定义URL变量(URL标识)，方便上文引用\n\n* 语法\n\n[URL变量名]:URL地址\n\n变量名：支持数字、字母、-、_、中文的组合\n\n\n* 引用方法\n    * 非图片\n    [链接文本][已定义的URL变量]    \n    * 图片\n    ![alt][已定义的URL变量]\n\n定义位置：可以是文档的任意位置，建议放在文末\n\n* 定义的URL变量展示时不显示\n-->\n[blog]:https://faith-hesper.github.io/ \"我的博客\"\n\n```markdown\n// 定义URL变量\n[blog]:https://faith-hesper.github.io/ \"我的博客\"\n```\n\n[blog](#blog)\n","slug":"Markdown","published":1,"updated":"2021-11-19T13:32:44.431Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2f000ijsvkgkvg7csp","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"Gigthub-markdown语法\"><a href=\"#Gigthub-markdown语法\" class=\"headerlink\" title=\"Gigthub markdown语法\"></a>Gigthub markdown语法</h1><p>该文件用来测试和展示书写README的各种markdown语法。<br>GitHub的markdown语法在标准的markdown语法基础上做了扩充，<br>称之为<code>GitHub Flavored Markdown</code>，简称<code>GFM</code>。GFM在GitHub上有广泛应用，<br>除了README文件外，issues和wiki均支持markdown语法。</p>\n<hr>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Author</th>\n<th>fortune</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>E-mail</td>\n<td>2310298446@qq.com</td>\n</tr>\n</tbody>\n</table>\n</div>\n<hr>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#规范\">规范</a></li>\n<li><a href=\"#横线\">横线</a></li>\n<li><a href=\"#标题\">标题</a></li>\n<li><a href=\"#文本\">文本</a><ul>\n<li>普通文本</li>\n<li>单行文本</li>\n<li>多行文本</li>\n<li>换行</li>\n<li>文字高亮</li>\n<li>斜体</li>\n<li>粗体</li>\n<li>删除线</li>\n</ul>\n</li>\n<li><a href=\"#图片\">图片</a><ul>\n<li>来源于网络的图片</li>\n<li>GitHub仓库中的图片</li>\n</ul>\n</li>\n<li><a href=\"#链接\">链接</a> <ul>\n<li>文字超链接<ul>\n<li>链接外部URL</li>\n<li>链接本仓库里的URL</li>\n</ul>\n</li>\n<li>锚点</li>\n<li><a href=\"#图片链接\">图片链接</a></li>\n<li>Reference索引超链</li>\n<li>自动链接</li>\n</ul>\n</li>\n<li><a href=\"#列表\">列表</a><ul>\n<li>无序列表</li>\n<li>有序列表</li>\n<li>复选框列表</li>\n</ul>\n</li>\n<li><a href=\"#块引用\">块引用</a></li>\n<li><a href=\"#代码高亮\">代码高亮</a></li>\n<li><a href=\"#表格\">表格</a> </li>\n<li><a href=\"#表情\">表情</a></li>\n<li><a href=\"#diff语法\">diff语法</a></li>\n<li><a href=\"#details折叠语法\">details折叠语法</a></li>\n<li><a href=\"#注释\">注释</a></li>\n<li><a href=\"#其他\">其他</a><ul>\n<li>github markdown暂不支持功能</li>\n<li>上标</li>\n<li>下标</li>\n<li><a href=\"#自定义锚点\">自定义锚点</a><span id=\"blog\">blog</span></li>\n<li>参考资料注解</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"规范\"><a href=\"#规范\" class=\"headerlink\" title=\"规范\"></a>规范</h2><h3 id=\"文件后缀\"><a href=\"#文件后缀\" class=\"headerlink\" title=\"文件后缀\"></a>文件后缀</h3><p>建议使用.md</p>\n<h3 id=\"字符集\"><a href=\"#字符集\" class=\"headerlink\" title=\"字符集\"></a>字符集</h3><p>建议使用UTF-8</p>\n<h3 id=\"换行符\"><a href=\"#换行符\" class=\"headerlink\" title=\"换行符\"></a>换行符</h3><p>建议使用LF，unix系统风格的换行符</p>\n<h3 id=\"默认规定\"><a href=\"#默认规定\" class=\"headerlink\" title=\"默认规定\"></a>默认规定</h3><ul>\n<li>README.md文件会被 github、gitlab等版本控制系统自动展示</li>\n</ul>\n<h2 id=\"横线\"><a href=\"#横线\" class=\"headerlink\" title=\"横线\"></a>横线</h2><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">\n***\n\n---\n\n___\n</code></pre>\n<p>都表示横线，效果是一样的，可以写把*、-、_ 重复三次以上，与其他内容前后都空一行，避免产生其他问题</p>\n<hr>\n<hr>\n<hr>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\"># 一级标题  \n## 二级标题  \n### 三级标题  \n#### 四级标题  \n##### 五级标题  \n###### 六级标题  </code></pre>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><ul>\n<li>一级标题—Setex风格</li>\n</ul>\n<p>下面的= 个数 &gt;= 1，建议都写2个<br><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">一级标题--Setex风格</code></pre></p>\n<h1 id=\"一级标题—Setex风格\"><a href=\"#一级标题—Setex风格\" class=\"headerlink\" title=\"一级标题—Setex风格\"></a>一级标题—Setex风格</h1><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">一级标题--Setex风格\n==\n\n等价于\n\n# 一级标题--Setex风格</code></pre>\n<p>前一种写法一般用于文件的第一行写大标题</p>\n<ul>\n<li>二级标题—Setex风格</li>\n</ul>\n<p>下面的- 个数 &gt;= 1，建议都写2个<br><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">二级标题--Setex风格\n--</code></pre></p>\n<h2 id=\"二级标题—Setex风格\"><a href=\"#二级标题—Setex风格\" class=\"headerlink\" title=\"二级标题—Setex风格\"></a>二级标题—Setex风格</h2><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">二级标题--Setex风格\n--\n\n特价于\n\n## 二级标题--Setex风格</code></pre>\n<h2 id=\"文本\"><a href=\"#文本\" class=\"headerlink\" title=\"文本\"></a>文本</h2><h3 id=\"普通文本\"><a href=\"#普通文本\" class=\"headerlink\" title=\"普通文本\"></a>普通文本</h3><p>这是一段普通的文本，直接写，开头顶格</p>\n<h3 id=\"单行文本\"><a href=\"#单行文本\" class=\"headerlink\" title=\"单行文本\"></a>单行文本</h3><pre><code>Hello,大家好，我是fortune。\n</code></pre><p>在一行开头加入1个Tab或者4个空格。</p>\n<h3 id=\"文本块\"><a href=\"#文本块\" class=\"headerlink\" title=\"文本块\"></a>文本块</h3><h4 id=\"语法1\"><a href=\"#语法1\" class=\"headerlink\" title=\"语法1\"></a>语法1</h4><p>在连续几行的文本开头加入1个Tab或者4个空格。</p>\n<pre><code>欢迎到访\n很高兴见到您\n祝您，早上好，中午好，下午好，晚安\n</code></pre><h4 id=\"语法2\"><a href=\"#语法2\" class=\"headerlink\" title=\"语法2\"></a>语法2</h4><p>文本首、尾各3个反引号：<br><pre class=\"language-none\"><code class=\"language-none\">欢迎到访\n我是码农\n你可以通过GitHub搜索[Faith-Hesper]找到我</code></pre><br>该语法也可以实现代码高亮，见<a href=\"#代码高亮\">代码高亮</a></p>\n<h4 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h4><p>直接回车不能换行  </p>\n<ul>\n<li><p>可以在上一行文本后面加两个空格，<br>这样下一行的文本就换行了。</p>\n</li>\n<li><p>或者在两行之间加一个空行，</p>\n</li>\n</ul>\n<p>也能实现换行效果，不过这个行间距有点大。</p>\n<h4 id=\"文字高亮\"><a href=\"#文字高亮\" class=\"headerlink\" title=\"文字高亮\"></a>文字高亮</h4><p>文字高亮功能能使行内部分文字高亮，使用一对反引号，还可以避免转义  </p>\n<ul>\n<li>语法<pre class=\"language-none\"><code class=\"language-none\">&#96;linux&#96; &#96;网络编程&#96; &#96;socket&#96; &#96;epoll&#96; </code></pre>\n效果：<code>linux</code> <code>网络编程</code> <code>socket</code> <code>epoll</code></li>\n</ul>\n<p>也适合做一篇文章的tag</p>\n<h4 id=\"斜体、粗体、删除线\"><a href=\"#斜体、粗体、删除线\" class=\"headerlink\" title=\"斜体、粗体、删除线\"></a>斜体、粗体、删除线</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>*斜体1*</code></td>\n<td><em>斜体1</em></td>\n</tr>\n<tr>\n<td><code>_斜体2_</code></td>\n<td>_斜体2_</td>\n</tr>\n<tr>\n<td><code>**粗体1**</code></td>\n<td><strong>粗体1</strong></td>\n</tr>\n<tr>\n<td><code>__粗体2__</code></td>\n<td><strong>粗体2</strong></td>\n</tr>\n<tr>\n<td><code>这是一个 ~~删除线~~</code></td>\n<td>这是一个 <del>删除线</del></td>\n</tr>\n<tr>\n<td><code>***斜粗体1***</code></td>\n<td><strong><em>斜粗体1</em></strong></td>\n</tr>\n<tr>\n<td><code>___斜粗体2___</code></td>\n<td><strong>_斜粗体2_</strong></td>\n</tr>\n<tr>\n<td><code>***~~斜粗体删除线1~~***</code></td>\n<td><strong><em><del>斜粗体删除线1</del></em></strong></td>\n</tr>\n<tr>\n<td><code>~~***斜粗体删除线2***~~</code></td>\n<td><del><strong><em>斜粗体删除线2</em></strong></del></td>\n</tr>\n<tr>\n<td><code>___~~斜粗体删除线3~~___</code></td>\n<td><strong>_<del>斜粗体删除线3</del>_</strong></td>\n</tr>\n<tr>\n<td><code>~~___斜粗体删除线4___~~</code></td>\n<td><del><strong>_斜粗体删除线4_</strong></del></td>\n</tr>\n</tbody>\n</table>\n</div>\n<pre><code>斜体、粗体、删除线可混合使用\n</code></pre><h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p>基本格式：<br><pre class=\"language-none\"><code class=\"language-none\">![alt](URL &quot;title&quot;)</code></pre><br>alt和title即对应HTML中的alt和title属性（都可省略）：</p>\n<ul>\n<li>alt表示图片显示失败时的替换文本</li>\n<li>title表示鼠标悬停在图片时的显示文本（注意这里要加引号）</li>\n</ul>\n<p>URL即图片的url地址，如果引用本仓库中的图片，直接使用<strong>相对路径</strong>就可了，<br>如果引用其他github仓库中的图片要注意格式，即：<code>仓库地址/raw/分支名/图片路径</code>，如：<br><pre class=\"language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;github.com&#x2F;Faith-Hesper&#x2F;Note&#x2F;blob&#x2F;master&#x2F;img&#x2F;20211030212947.png</code></pre></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><code>![baidu](http://www.baidu.com/img/bdlogo.gif &quot;百度logo&quot;)</code></td>\n<td><img src=\"http://www.baidu.com/img/bdlogo.gif\" alt=\"baidu\" title=\"百度logo\"></td>\n</tr>\n<tr>\n<td>2</td>\n<td><code>![][code-past]</code></td>\n<td>![][code-past]</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>注意例2的写法使用了<strong>URL变量</strong>的形式，在<a href=\"#链接\">链接</a>一节有介绍。</p>\n<blockquote>\n<p>在文末有code-past的定义：<br><pre class=\"language-none\"><code class=\"language-none\">[code-past]:https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;201908060004034.png</code></pre></p>\n</blockquote>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><h3 id=\"链接外部URL\"><a href=\"#链接外部URL\" class=\"headerlink\" title=\"链接外部URL\"></a>链接外部URL</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><code>[我的博客](https://faith-hesper.github.io  &quot;悬停显示&quot;)</code></td>\n<td><a href=\"https://faith-hesper.github.io\" title=\"悬停显示\">我的博客</a></td>\n</tr>\n<tr>\n<td>2</td>\n<td><code>[我的github][github]</code></td>\n<td>[我的github][github]</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>引用链接由两个[]组成：<br><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">* 非图片链接\n[链接文本][URL变量]\n\n* 图片链接\n![alt][URL变量]</code></pre></p>\n<ul>\n<li>第二个[]为实际的URL</li>\n</ul>\n<blockquote>\n<p>使用URL变量能达到复用的目的，一般把全文所有的URL标识符统一放在文章末尾，这样看起来比较干净。</p>\n</blockquote>\n<h3 id=\"链接本仓库里的URL\"><a href=\"#链接本仓库里的URL\" class=\"headerlink\" title=\"链接本仓库里的URL\"></a>链接本仓库里的URL</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>[我的简介](/example/profile.md)</code></td>\n<td><a href=\"/example/profile.md\">我的简介</a></td>\n</tr>\n<tr>\n<td><code>[example](./example)</code></td>\n<td><a href=\"./example\">example</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"图片链接\"><a href=\"#图片链接\" class=\"headerlink\" title=\"图片链接\"></a>图片链接</h3><p>给图片加链接的本质是混合图片显示语法和普通的链接语法。普通的链接中[ ]内部是链接要显示的文本，而图片链接[ ]里面则是要显示的图片。<br>直接混合两种语法当然可以，但是十分啰嗦，为此我们可以使用URL标识符的形式。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>语法</th>\n<th style=\"text-align:center\">效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><code>[![github]](https://github.com/Faith-Hesper)</code></td>\n<td style=\"text-align:center\"><a href=\"https://github.com/Faith-Hesper\">![github-logo]</a></td>\n</tr>\n<tr>\n<td>2</td>\n<td><code>[![](/img/zhihu.png &quot;我的知乎，欢迎关注&quot;)][zhihu]</code></td>\n<td style=\"text-align:center\">[<img src=\"img/zhihu.png\" alt=\"\" title=\"我的知乎，欢迎关注\">][zhihu]</td>\n</tr>\n<tr>\n<td>3</td>\n<td><code>[![csdn-logo]][csdn]</code></td>\n<td style=\"text-align:center\">[![csdn-logo]][csdn]</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>因为图片本身和链接本身都支持URL标识符的形式，所以图片链接也可以很简洁（见例3）。<br>注意，此时鼠标悬停时显示的文字是图片的title，而非链接本身的title了。</p>\n<blockquote>\n<p>本文URL变量都放置于文末</p>\n</blockquote>\n<h3 id=\"锚点\"><a href=\"#锚点\" class=\"headerlink\" title=\"锚点\"></a>锚点</h3><p>每一个标题都是一个锚点，和HTML的锚点（<code>#</code>）类似</p>\n<ul>\n<li>锚点标记中含特殊符时，在链接中把特殊符去掉即可</li>\n<li>如果有空格使用<code>-</code>代替</li>\n<li><code>-</code> 可以用<code>\\-</code>转义</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>[回到顶部](#readme)</code></td>\n<td><a href=\"#readme\">回到顶部</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>不过要注意，标题中的英文字母都被转化为<strong>小写字母</strong>了。</p>\n<blockquote>\n<p>以前GitHub对中文支持的不好，所以中文标题不能正确识别为锚点，但是现在已经没问题啦！</p>\n</blockquote>\n<h3 id=\"Reference索引链接\"><a href=\"#Reference索引链接\" class=\"headerlink\" title=\"Reference索引链接\"></a>Reference索引链接</h3><p>即引用链接</p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">[百度][b]  \n[b]:https://www.baidu.com</code></pre>\n<p><a href=\"https://www.baidu.com\">b</a>:<a href=\"https://www.baidu.com\">https://www.baidu.com</a> 定义URL变量<a href=\"https://www.baidu.com\">b</a>，不会显示</p>\n<p><strong>效果</strong><br><a href=\"https://www.baidu.com\">百度</a>  </p>\n<h3 id=\"自动链接\"><a href=\"#自动链接\" class=\"headerlink\" title=\"自动链接\"></a>自动链接</h3><p>尖括号<br><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">&lt;http://ibruce.info>  \n&lt;bu.ru@qq.com></code></pre><br><a href=\"http://ibruce.info\">http://ibruce.info</a>  </p>\n<bu.ru@qq.com>\n\n<h3 id=\"嵌入视频\"><a href=\"#嵌入视频\" class=\"headerlink\" title=\"嵌入视频\"></a>嵌入视频</h3><p>使用html中的video标签，github markdown暂不支持，Typora支持<br><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>player<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://www.bilibili.com/video/BV14K4y1t7S4?t=141.8<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">poster</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://i0.hdslb.com/bfs/archive/19330ee5128ada930f1e288254fd83ef3e45974d.jpg@336w_190h.jpg<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video/mp4<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">preload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>auto<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>controls<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span>\n    <span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span></code></pre></p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">src: 指定视频资源的URL\nposter: 视频预览图片\ntype: 视频文件类型\npreload: 是否预加载，auto：自动预加载，none: 不预加载</code></pre>\n<video class=\"player\" \n    src=\"https://www.bilibili.com/video/BV14K4y1t7S4?t=141.8\" \n    poster=\"http://i0.hdslb.com/bfs/archive/19330ee5128ada930f1e288254fd83ef3e45974d.jpg@336w_190h.jpg\"\n    type=\"video/mp4\" \n    preload=\"auto\" \n    controls=\"controls\" \n    style=\"width: 100%;\"\n    >\n</video>\n\n<h3 id=\"嵌入音频\"><a href=\"#嵌入音频\" class=\"headerlink\" title=\"嵌入音频\"></a>嵌入音频</h3><p>使用html中的audio标签，github markdown暂不支持，Typora支持<br><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">preload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>auto<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autoplay</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>uin=7078<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>fromtag=66<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mp3<span class=\"token punctuation\">\"</span></span> \n        <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>uin=7078<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>fromtag=66<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>audio</span><span class=\"token punctuation\">></span></span></code></pre></p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">preload: 是否预加载\naudio标签src属性：预加载音频资源的URL路径\nsource标签中的src属性：指定音频资源URL，需要与audio标签src属性性相同</code></pre>\n<audio controls=\"\" preload=\"auto\" height=\"0\" width=\"0\" autoplay=\"false\"\n       src=\"http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983&amp;vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4&amp;uin=7078&amp;fromtag=66\"\n       >\n    <source id=\"mp3\" \n        src=\"http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983&amp;vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4&amp;uin=7078&amp;fromtag=66\"\n    >\n</audio>\n\n\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><ul>\n<li>语法<br>无序列表符: * - +<pre class=\"language-none\"><code class=\"language-none\">* 昵称：fortune\n- 别名：fortune\n+ 英文名：fortune</code></pre>\n<strong>效果</strong>  </li>\n<li>昵称：fortune</li>\n</ul>\n<ul>\n<li>别名：fortune</li>\n</ul>\n<ul>\n<li>英文名：fortune</li>\n</ul>\n<h3 id=\"多级无序列表\"><a href=\"#多级无序列表\" class=\"headerlink\" title=\"多级无序列表\"></a>多级无序列表</h3><ul>\n<li>语法<pre class=\"language-none\"><code class=\"language-none\">* 编程语言\n    &#96;&#96;&#96;text\n    这时开发效率最高的语言\n    ...</code></pre>\n<ul>\n<li>脚本语言<ul>\n<li>Python<pre class=\"language-none\"><code class=\"language-none\">**效果**  \n* 编程语言\n    &#96;&#96;&#96;text\n    这时开发效率最高的语言\n    ...</code></pre></li>\n</ul>\n</li>\n<li>脚本语言<ul>\n<li>Python</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"一级有序列表\"><a href=\"#一级有序列表\" class=\"headerlink\" title=\"一级有序列表\"></a>一级有序列表</h3><ul>\n<li>语法  <pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">就是在数字后面加一个点，再加一个空格。  \n序号可以全部写一个，如1，让其自动推断</code></pre>\n</li>\n</ul>\n<pre class=\"language-none\"><code class=\"language-none\">面向对象的三个基本特征：\n\n1. 封装\n2. 继承\n3. 多态</code></pre>\n<p><strong>效果</strong><br>面向对象的三个基本特征：</p>\n<ol>\n<li>封装</li>\n<li>继承</li>\n<li>多态</li>\n</ol>\n<p><strong>序号自行推断示例</strong><br><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">1. 封装\n1. 继承\n1. 多态</code></pre></p>\n<ol>\n<li>封装</li>\n<li>继承</li>\n<li>多态</li>\n</ol>\n<h3 id=\"多级有序列表\"><a href=\"#多级有序列表\" class=\"headerlink\" title=\"多级有序列表\"></a>多级有序列表</h3><p>和无序列表一样，有序列表也有多级结构。</p>\n<ul>\n<li>语法<pre class=\"language-none\"><code class=\"language-none\">1. 这是一级的有序列表，数字1还是1\n   1. 这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字\n      1. 这是三级的有序列表，数字在显示的时候变成了英文字母</code></pre>\n</li>\n</ul>\n<p><strong>效果</strong></p>\n<ol>\n<li>这是一级的有序列表，数字1还是1<ol>\n<li>这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字<ol>\n<li>这是三级的有序列表，数字在显示的时候变成了英文字母</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"复选框列表\"><a href=\"#复选框列表\" class=\"headerlink\" title=\"复选框列表\"></a>复选框列表</h3><ul>\n<li><p>语法</p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">- [ ] content \n-空格[空格]空格content \n\n解释: [ ]括号里面的空格可以换成[x],代表选中对话框</code></pre>\n</li>\n<li><p>示例  </p>\n<pre class=\"language-none\"><code class=\"language-none\">- [x] 需求分析\n- [x] 系统设计\n- [x] 详细设计\n- [ ] 编码\n- [ ] 测试\n- [ ] 交付</code></pre>\n</li>\n</ul>\n<p><strong>效果</strong>  </p>\n<ul>\n<li>[x] 需求分析</li>\n<li>[x] 系统设计</li>\n<li>[x] 详细设计</li>\n<li>[ ] 编码</li>\n<li>[ ] 测试</li>\n<li>[ ] 交付</li>\n</ul>\n<p>您可以使用这个功能来标注某个项目各项任务的完成情况。</p>\n<blockquote>\n<p>Tip:</p>\n<blockquote>\n<p>在GitHub的<strong>issue</strong>中使用该语法是可以实时点击复选框来勾选或解除勾选的，而无需修改issue原文。</p>\n</blockquote>\n</blockquote>\n<h2 id=\"块引用\"><a href=\"#块引用\" class=\"headerlink\" title=\"块引用\"></a>块引用</h2><h3 id=\"常用于引用文本\"><a href=\"#常用于引用文本\" class=\"headerlink\" title=\"常用于引用文本\"></a>常用于引用文本</h3><ul>\n<li>块引用示例<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">文本摘自《深入理解计算机系统》P27  \n令人吃惊的是，在哪种字节顺序是合适的这个问题上，人们表现得非常情绪化。\n实际上术语“little endian”（小端）和“big endian”（大端）出自Jonathan Swift的\n《格利佛游记》一书，其中交战的两个派别无法就应该从哪一端打开一个半熟的鸡蛋达成一致。\n因此，争论沦为关于社会政治的争论。只要选择了一种规则并且始终如一的坚持，\n其实对于哪种字节排序的选择都是任意的。</code></pre>\n<blockquote>\n<p><strong>“端”（endian）的起源</strong><br>以下是Jonathan Swift在1726年关于大小端之争历史的描述：<br>“……下面我要告诉你的是，Lilliput和Blefuscu这两大强国在过去36个月里一直在苦战。战争开始是由于以下的原因：我们大家都认为，吃鸡蛋前，原始的方法是打破鸡蛋较大的一端，可是当今的皇帝的祖父小时候吃鸡蛋，一次按古法打鸡蛋时碰巧将一个手指弄破了，因此他的父亲，当时的皇帝，就下了一道敕令，命令全体臣民吃鸡蛋时打破较小的一端，违令者重罚。”</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"块引用有多级结构\"><a href=\"#块引用有多级结构\" class=\"headerlink\" title=\"块引用有多级结构\"></a>块引用有多级结构</h3><ul>\n<li>语法<pre class=\"language-none\"><code class=\"language-none\">&gt; 数据结构\n&gt;&gt; 树\n&gt;&gt;&gt; 二叉树\n&gt;&gt;&gt;&gt; 平衡二叉树\n&gt;&gt;&gt;&gt;&gt; 满二叉树</code></pre>\n<strong>效果</strong>  <blockquote>\n<p>数据结构</p>\n<blockquote>\n<p>树</p>\n<blockquote>\n<p>二叉树</p>\n<blockquote>\n<p>平衡二叉树</p>\n<blockquote>\n<p>满二叉树</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h2><ul>\n<li>代码高亮语法</li>\n</ul>\n<p>在三个反引号后面加上编程语言的名字，另起一行开始写代码，最后一行再加上三个反引号。</p>\n<pre><code><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">//Java</span></code></pre>\n\n<pre class=\"language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//C</span></code></pre>\n\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello GitHub\"</span> <span class=\"token comment\">#Bash</span></code></pre>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myH1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span><span class=\"token string\">\"Welcome to my Homepage\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//javascipt</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">96</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">96</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">96</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`cpp\nstring <span class=\"token operator\">&amp;</span>operator<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//cpp</span></code></pre>\n</code></pre><p><strong>代码高亮效果</strong><br><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">//Java</span></code></pre></p>\n<pre class=\"language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//C</span></code></pre>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello GitHub\"</span> <span class=\"token comment\">#Bash</span></code></pre>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myH1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span><span class=\"token string\">\"Welcome to my Homepage\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//javascipt</span></code></pre>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">string <span class=\"token operator\">&amp;</span><span class=\"token keyword\">operator</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> A<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">)</span> <span class=\"token comment\">//cpp</span></code></pre>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p>注意：表头上面一行为文本块时，需要在文本块与表头之间空一行</p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">|表头1 |表头2 |\n|--- |--- |\n|表格单元 |表格单元 |\n|表格单元 |表格单元 |</code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>表头1</th>\n<th>表头2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>表格单元</td>\n<td>表格单元</td>\n</tr>\n<tr>\n<td>表格单元</td>\n<td>表格单元</td>\n</tr>\n</tbody>\n</table>\n</div>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">表头1 |表头2\n--- |---\n表格单元 |表格单元\n表格单元 |表格单元</code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>表头1</th>\n<th>表头2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>表格单元</td>\n<td>表格单元</td>\n</tr>\n<tr>\n<td>表格单元</td>\n<td>表格单元</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"表格对齐\"><a href=\"#表格对齐\" class=\"headerlink\" title=\"表格对齐\"></a>表格对齐</h3><p>表格可以指定对齐方式</p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">左对齐 |居中  |右对齐\n:--- |:---: |---: \ncol 3 is      |some wordy text |$1600\ncol 2 is      |centered        |$12\nzebra stripes |are neat        |$1\n坚线特殊符    |在表格中使用\\转换无效 &lt;br>需使用Unicode编码`&amp;#124;`        |&amp;#124;</code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">左对齐</th>\n<th style=\"text-align:center\">居中</th>\n<th style=\"text-align:right\">右对齐</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">col 3 is</td>\n<td style=\"text-align:center\">some wordy text</td>\n<td style=\"text-align:right\">$1600</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">col 2 is</td>\n<td style=\"text-align:center\">centered</td>\n<td style=\"text-align:right\">$12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">zebra stripes</td>\n<td style=\"text-align:center\">are neat</td>\n<td style=\"text-align:right\">$1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">坚线特殊符</td>\n<td style=\"text-align:center\">在表格中使用\\转换无效 <br>需使用Unicode编码<code>&amp;#124;</code></td>\n<td style=\"text-align:right\">&#124;</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"yaml风格表格\"><a href=\"#yaml风格表格\" class=\"headerlink\" title=\"yaml风格表格\"></a>yaml风格表格</h3><p>必须写在文件的首行，见本文最上方  </p>\n<pre><code>---\nlayout: page\ntitle: &quot;Github markdown&quot;\nauthor: fortune\npermalink: /help/dns/\n编号: \n    - 0001\n    - &quot;2222&quot;\n---\n</code></pre><h3 id=\"混合其他语法\"><a href=\"#混合其他语法\" class=\"headerlink\" title=\"混合其他语法\"></a>混合其他语法</h3><p>表格单元中的内容可以和其他大多数GFM语法配合使用</p>\n<h4 id=\"使用普通文本的删除线，斜体等效果\"><a href=\"#使用普通文本的删除线，斜体等效果\" class=\"headerlink\" title=\"使用普通文本的删除线，斜体等效果\"></a>使用普通文本的删除线，斜体等效果</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Help</td>\n<td><del>Display the</del> help window.</td>\n</tr>\n<tr>\n<td>Close</td>\n<td>_Closes_ a window</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"表格中嵌入图片（链接）\"><a href=\"#表格中嵌入图片（链接）\" class=\"headerlink\" title=\"表格中嵌入图片（链接）\"></a>表格中嵌入图片（链接）</h4><p>其实前面介绍图片显示、图片链接的时候为了清晰就是放在在表格中显示的。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>图片</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>![baidu][baidu-logo]</td>\n<td>百度</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"表情\"><a href=\"#表情\" class=\"headerlink\" title=\"表情\"></a>表情</h2><p>Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。</p>\n<p>比如<code>:blush:</code>，可以显示:blush:。</p>\n<p>具体每一个表情的符号码，可以查询GitHub的官方网页<a href=\"http://www.emoji-cheat-sheet.com\">http://www.emoji-cheat-sheet.com</a>。</p>\n<p>但是这个网页每次都打开<strong>奇慢</strong>。所以我整理到了本repo中，大家可以直接在此查看<a href=\"./emoji.md\">emoji 表情</a>。</p>\n<h2 id=\"diff语法\"><a href=\"#diff语法\" class=\"headerlink\" title=\"diff语法\"></a>diff语法</h2><p>版本控制的系统中都少不了diff的功能，即展示一个文件内容的增加与删除。<br>GFM中可以显示的展示diff效果。使用绿色表示新增，红色表示删除。</p>\n<ul>\n<li><p>语法</p>\n  <pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">其语法与代码高亮类似，指定语言类型为diff\n+ : 新增 (绿)\n- : 删除 (红)\n! : 修改 (橙)\n# : 未变动 (灰)</code></pre>\n</li>\n<li><p>diff示例<br>  <img src=\"img/diff.png\" alt=\"\">  </p>\n</li>\n</ul>\n<p><strong>效果</strong><br><pre class=\"language-diff\" data-language=\"diff\"><code class=\"language-diff\"><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\"> 人闲桂花落，\n</span></span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span><span class=\"token line\"> 夜静春山空。\n</span></span><span class=\"token diff bold\"><span class=\"token prefix diff\">!</span><span class=\"token line\"> 月出惊山鸟，\n</span></span># 时鸣春涧中。</code></pre></p>\n<h2 id=\"details折叠语法\"><a href=\"#details折叠语法\" class=\"headerlink\" title=\"details折叠语法\"></a>details折叠语法</h2><ul>\n<li><code>&lt;/summary&gt;</code> 与下面的内容之间一定要空一行</li>\n<li><code>&lt;/details&gt;</code> 与下面的内容之间一定要空一行，否则影响下面的内容格式</li>\n</ul>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">&lt;details>\n&lt;summary>射雕英雄传&lt;/summary>\n\n1. 第一回 风雪惊变\n1. 第二回 江南七怪\n1. 第三回 黄沙莽莽\n1. 第四回 黑风双煞\n1. 第五回 弯弓射雕\n1. 第六回 崖顶疑阵\n1. 第七回 比武招亲\n&lt;/details></code></pre>\n<details>\n<summary>射雕英雄传</summary>\n\n1. 第一回 风雪惊变\n1. 第二回 江南七怪\n1. 第三回 黄沙莽莽\n1. 第四回 黑风双煞\n1. 第五回 弯弓射雕\n1. 第六回 崖顶疑阵\n1. 第七回 比武招亲\n</details>\n\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><ul>\n<li><p>html块注释</p>\n  <pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">&lt;!--\n哈哈我是注释，\n不会在浏览器中显示。\n--></code></pre>\n  <!--\n  哈哈我是注释，\n  不会在浏览器中显示。\n  -->\n</li>\n<li><p>行注释</p>\n  <pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">[//]:#(注释内容...)</code></pre>\n</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"github-markdown暂不支持的功能\"><a href=\"#github-markdown暂不支持的功能\" class=\"headerlink\" title=\"github markdown暂不支持的功能\"></a>github markdown暂不支持的功能</h3><ul>\n<li>目前github暂时不支持markdown流程控制语法</li>\n<li>目前github暂时不支持css语法，如字体颜色、字体等</li>\n<li>目前github不支持文本块行号显示</li>\n<li><a href=\"#嵌入视频\">嵌入视频</a></li>\n<li><a href=\"#嵌入音频\">嵌入音频</a></li>\n</ul>\n<h3 id=\"上标\"><a href=\"#上标\" class=\"headerlink\" title=\"上标\"></a>上标</h3><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">2&lt;sup>3&lt;/sub></code></pre>\n<p><strong>效果</strong><br>2<sup>3&lt;/sub&gt;</p>\n<h3 id=\"下标\"><a href=\"#下标\" class=\"headerlink\" title=\"下标\"></a>下标</h3><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">H&lt;sub>2&lt;/sub>O</code></pre>\n<p><strong>效果</strong><br>H<sub>2</sub>O</p>\n<h3 id=\"自定义锚点\"><a href=\"#自定义锚点\" class=\"headerlink\" title=\"自定义锚点\"></a><span id=\"自定义锚点\">自定义锚点</span></h3><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">解析器会为标题分配一个锚点id。\n但有时候需要连接到不是标题的区域中\n这时用自定义锚点方法，再合适不过了</code></pre>\n<ol>\n<li>标记要跳转到的位置 <pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">&lt;span id=\"myjump\">提示信息&lt;/span>\n如果不想显示 提示信息，可以什么都不写\n如：\n&lt;span id=\"myjump\">&lt;/span>\n&lt;span id=\"blog\">blog&lt;/span></code></pre></li>\n<li>在需要连接到锚点的地方使用锚点 <pre class=\"language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\"><span class=\"token url\">[<span class=\"token content\">说明文字</span>](<span class=\"token url\">#myjump</span>)</span>\n<span class=\"token url\">[<span class=\"token content\">blog</span>](<span class=\"token url\">#blog</span>)</span> or <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#blog<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>blog<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre>\n</li>\n</ol>\n<h3 id=\"参考资料注解\"><a href=\"#参考资料注解\" class=\"headerlink\" title=\"参考资料注解\"></a>参考资料注解</h3><p>百科文章里，有些文字后有 <sup>[[1]]</sup>，表示参考资料引用，点击可跳转过去<br>这里可以用 自定义锚点 + 上标 方法来做</p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">百科文章里，有些文字后有 &lt;sup>[\\[1\\]]&lt;/sup>，表示参考资料引用，点击可跳转过去  \n这里可以用 自定义锚点 + 上标 方法来做\n\n[\\[1\\]]:https://baike.baidu.com/ \"百度百科\"</code></pre>\n<hr>\n<!--\n定义URL变量(URL标识)，方便上文引用\n\n* 语法\n\n[URL变量名]:URL地址\n\n变量名：支持数字、字母、-、_、中文的组合\n\n\n* 引用方法\n    * 非图片\n    [链接文本][已定义的URL变量]    \n    * 图片\n    ![alt][已定义的URL变量]\n\n定义位置：可以是文档的任意位置，建议放在文末\n\n* 定义的URL变量展示时不显示\n-->\n<pre class=\"language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">// 定义URL变量\n[blog]:https://faith-hesper.github.io/ \"我的博客\"</code></pre>\n<p><a href=\"#blog\">blog</a></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220124161839.webp","length":7914,"excerpt":"","more":"<h1 id=\"Gigthub-markdown语法\"><a href=\"#Gigthub-markdown语法\" class=\"headerlink\" title=\"Gigthub markdown语法\"></a>Gigthub markdown语法</h1><p>该文件用来测试和展示书写README的各种markdown语法。<br>GitHub的markdown语法在标准的markdown语法基础上做了扩充，<br>称之为<code>GitHub Flavored Markdown</code>，简称<code>GFM</code>。GFM在GitHub上有广泛应用，<br>除了README文件外，issues和wiki均支持markdown语法。</p>\n<hr>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Author</th>\n<th>fortune</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>E-mail</td>\n<td>2310298446@qq.com</td>\n</tr>\n</tbody>\n</table>\n</div>\n<hr>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#规范\">规范</a></li>\n<li><a href=\"#横线\">横线</a></li>\n<li><a href=\"#标题\">标题</a></li>\n<li><a href=\"#文本\">文本</a><ul>\n<li>普通文本</li>\n<li>单行文本</li>\n<li>多行文本</li>\n<li>换行</li>\n<li>文字高亮</li>\n<li>斜体</li>\n<li>粗体</li>\n<li>删除线</li>\n</ul>\n</li>\n<li><a href=\"#图片\">图片</a><ul>\n<li>来源于网络的图片</li>\n<li>GitHub仓库中的图片</li>\n</ul>\n</li>\n<li><a href=\"#链接\">链接</a> <ul>\n<li>文字超链接<ul>\n<li>链接外部URL</li>\n<li>链接本仓库里的URL</li>\n</ul>\n</li>\n<li>锚点</li>\n<li><a href=\"#图片链接\">图片链接</a></li>\n<li>Reference索引超链</li>\n<li>自动链接</li>\n</ul>\n</li>\n<li><a href=\"#列表\">列表</a><ul>\n<li>无序列表</li>\n<li>有序列表</li>\n<li>复选框列表</li>\n</ul>\n</li>\n<li><a href=\"#块引用\">块引用</a></li>\n<li><a href=\"#代码高亮\">代码高亮</a></li>\n<li><a href=\"#表格\">表格</a> </li>\n<li><a href=\"#表情\">表情</a></li>\n<li><a href=\"#diff语法\">diff语法</a></li>\n<li><a href=\"#details折叠语法\">details折叠语法</a></li>\n<li><a href=\"#注释\">注释</a></li>\n<li><a href=\"#其他\">其他</a><ul>\n<li>github markdown暂不支持功能</li>\n<li>上标</li>\n<li>下标</li>\n<li><a href=\"#自定义锚点\">自定义锚点</a><span id=\"blog\">blog</span></li>\n<li>参考资料注解</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"规范\"><a href=\"#规范\" class=\"headerlink\" title=\"规范\"></a>规范</h2><h3 id=\"文件后缀\"><a href=\"#文件后缀\" class=\"headerlink\" title=\"文件后缀\"></a>文件后缀</h3><p>建议使用.md</p>\n<h3 id=\"字符集\"><a href=\"#字符集\" class=\"headerlink\" title=\"字符集\"></a>字符集</h3><p>建议使用UTF-8</p>\n<h3 id=\"换行符\"><a href=\"#换行符\" class=\"headerlink\" title=\"换行符\"></a>换行符</h3><p>建议使用LF，unix系统风格的换行符</p>\n<h3 id=\"默认规定\"><a href=\"#默认规定\" class=\"headerlink\" title=\"默认规定\"></a>默认规定</h3><ul>\n<li>README.md文件会被 github、gitlab等版本控制系统自动展示</li>\n</ul>\n<h2 id=\"横线\"><a href=\"#横线\" class=\"headerlink\" title=\"横线\"></a>横线</h2><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">\n***\n\n---\n\n___\n</code></pre>\n<p>都表示横线，效果是一样的，可以写把*、-、_ 重复三次以上，与其他内容前后都空一行，避免产生其他问题</p>\n<hr>\n<hr>\n<hr>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\"># 一级标题  \n## 二级标题  \n### 三级标题  \n#### 四级标题  \n##### 五级标题  \n###### 六级标题  </code></pre>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><ul>\n<li>一级标题—Setex风格</li>\n</ul>\n<p>下面的= 个数 &gt;= 1，建议都写2个<br><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">一级标题--Setex风格</code></pre></p>\n<h1 id=\"一级标题—Setex风格\"><a href=\"#一级标题—Setex风格\" class=\"headerlink\" title=\"一级标题—Setex风格\"></a>一级标题—Setex风格</h1><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">一级标题--Setex风格\n==\n\n等价于\n\n# 一级标题--Setex风格</code></pre>\n<p>前一种写法一般用于文件的第一行写大标题</p>\n<ul>\n<li>二级标题—Setex风格</li>\n</ul>\n<p>下面的- 个数 &gt;= 1，建议都写2个<br><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">二级标题--Setex风格\n--</code></pre></p>\n<h2 id=\"二级标题—Setex风格\"><a href=\"#二级标题—Setex风格\" class=\"headerlink\" title=\"二级标题—Setex风格\"></a>二级标题—Setex风格</h2><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">二级标题--Setex风格\n--\n\n特价于\n\n## 二级标题--Setex风格</code></pre>\n<h2 id=\"文本\"><a href=\"#文本\" class=\"headerlink\" title=\"文本\"></a>文本</h2><h3 id=\"普通文本\"><a href=\"#普通文本\" class=\"headerlink\" title=\"普通文本\"></a>普通文本</h3><p>这是一段普通的文本，直接写，开头顶格</p>\n<h3 id=\"单行文本\"><a href=\"#单行文本\" class=\"headerlink\" title=\"单行文本\"></a>单行文本</h3><pre><code>Hello,大家好，我是fortune。\n</code></pre><p>在一行开头加入1个Tab或者4个空格。</p>\n<h3 id=\"文本块\"><a href=\"#文本块\" class=\"headerlink\" title=\"文本块\"></a>文本块</h3><h4 id=\"语法1\"><a href=\"#语法1\" class=\"headerlink\" title=\"语法1\"></a>语法1</h4><p>在连续几行的文本开头加入1个Tab或者4个空格。</p>\n<pre><code>欢迎到访\n很高兴见到您\n祝您，早上好，中午好，下午好，晚安\n</code></pre><h4 id=\"语法2\"><a href=\"#语法2\" class=\"headerlink\" title=\"语法2\"></a>语法2</h4><p>文本首、尾各3个反引号：<br><pre class=\"language-none\"><code class=\"language-none\">欢迎到访\n我是码农\n你可以通过GitHub搜索[Faith-Hesper]找到我</code></pre><br>该语法也可以实现代码高亮，见<a href=\"#代码高亮\">代码高亮</a></p>\n<h4 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h4><p>直接回车不能换行  </p>\n<ul>\n<li><p>可以在上一行文本后面加两个空格，<br>这样下一行的文本就换行了。</p>\n</li>\n<li><p>或者在两行之间加一个空行，</p>\n</li>\n</ul>\n<p>也能实现换行效果，不过这个行间距有点大。</p>\n<h4 id=\"文字高亮\"><a href=\"#文字高亮\" class=\"headerlink\" title=\"文字高亮\"></a>文字高亮</h4><p>文字高亮功能能使行内部分文字高亮，使用一对反引号，还可以避免转义  </p>\n<ul>\n<li>语法<pre class=\"language-none\"><code class=\"language-none\">&#96;linux&#96; &#96;网络编程&#96; &#96;socket&#96; &#96;epoll&#96; </code></pre>\n效果：<code>linux</code> <code>网络编程</code> <code>socket</code> <code>epoll</code></li>\n</ul>\n<p>也适合做一篇文章的tag</p>\n<h4 id=\"斜体、粗体、删除线\"><a href=\"#斜体、粗体、删除线\" class=\"headerlink\" title=\"斜体、粗体、删除线\"></a>斜体、粗体、删除线</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>*斜体1*</code></td>\n<td><em>斜体1</em></td>\n</tr>\n<tr>\n<td><code>_斜体2_</code></td>\n<td>_斜体2_</td>\n</tr>\n<tr>\n<td><code>**粗体1**</code></td>\n<td><strong>粗体1</strong></td>\n</tr>\n<tr>\n<td><code>__粗体2__</code></td>\n<td><strong>粗体2</strong></td>\n</tr>\n<tr>\n<td><code>这是一个 ~~删除线~~</code></td>\n<td>这是一个 <del>删除线</del></td>\n</tr>\n<tr>\n<td><code>***斜粗体1***</code></td>\n<td><strong><em>斜粗体1</em></strong></td>\n</tr>\n<tr>\n<td><code>___斜粗体2___</code></td>\n<td><strong>_斜粗体2_</strong></td>\n</tr>\n<tr>\n<td><code>***~~斜粗体删除线1~~***</code></td>\n<td><strong><em><del>斜粗体删除线1</del></em></strong></td>\n</tr>\n<tr>\n<td><code>~~***斜粗体删除线2***~~</code></td>\n<td><del><strong><em>斜粗体删除线2</em></strong></del></td>\n</tr>\n<tr>\n<td><code>___~~斜粗体删除线3~~___</code></td>\n<td><strong>_<del>斜粗体删除线3</del>_</strong></td>\n</tr>\n<tr>\n<td><code>~~___斜粗体删除线4___~~</code></td>\n<td><del><strong>_斜粗体删除线4_</strong></del></td>\n</tr>\n</tbody>\n</table>\n</div>\n<pre><code>斜体、粗体、删除线可混合使用\n</code></pre><h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p>基本格式：<br><pre class=\"language-none\"><code class=\"language-none\">![alt](URL &quot;title&quot;)</code></pre><br>alt和title即对应HTML中的alt和title属性（都可省略）：</p>\n<ul>\n<li>alt表示图片显示失败时的替换文本</li>\n<li>title表示鼠标悬停在图片时的显示文本（注意这里要加引号）</li>\n</ul>\n<p>URL即图片的url地址，如果引用本仓库中的图片，直接使用<strong>相对路径</strong>就可了，<br>如果引用其他github仓库中的图片要注意格式，即：<code>仓库地址/raw/分支名/图片路径</code>，如：<br><pre class=\"language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;github.com&#x2F;Faith-Hesper&#x2F;Note&#x2F;blob&#x2F;master&#x2F;img&#x2F;20211030212947.png</code></pre></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><code>![baidu](http://www.baidu.com/img/bdlogo.gif &quot;百度logo&quot;)</code></td>\n<td><img src=\"http://www.baidu.com/img/bdlogo.gif\" alt=\"baidu\" title=\"百度logo\"></td>\n</tr>\n<tr>\n<td>2</td>\n<td><code>![][code-past]</code></td>\n<td>![][code-past]</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>注意例2的写法使用了<strong>URL变量</strong>的形式，在<a href=\"#链接\">链接</a>一节有介绍。</p>\n<blockquote>\n<p>在文末有code-past的定义：<br><pre class=\"language-none\"><code class=\"language-none\">[code-past]:https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;201908060004034.png</code></pre></p>\n</blockquote>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><h3 id=\"链接外部URL\"><a href=\"#链接外部URL\" class=\"headerlink\" title=\"链接外部URL\"></a>链接外部URL</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><code>[我的博客](https://faith-hesper.github.io  &quot;悬停显示&quot;)</code></td>\n<td><a href=\"https://faith-hesper.github.io\" title=\"悬停显示\">我的博客</a></td>\n</tr>\n<tr>\n<td>2</td>\n<td><code>[我的github][github]</code></td>\n<td>[我的github][github]</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>引用链接由两个[]组成：<br><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">* 非图片链接\n[链接文本][URL变量]\n\n* 图片链接\n![alt][URL变量]</code></pre></p>\n<ul>\n<li>第二个[]为实际的URL</li>\n</ul>\n<blockquote>\n<p>使用URL变量能达到复用的目的，一般把全文所有的URL标识符统一放在文章末尾，这样看起来比较干净。</p>\n</blockquote>\n<h3 id=\"链接本仓库里的URL\"><a href=\"#链接本仓库里的URL\" class=\"headerlink\" title=\"链接本仓库里的URL\"></a>链接本仓库里的URL</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>[我的简介](/example/profile.md)</code></td>\n<td><a href=\"/example/profile.md\">我的简介</a></td>\n</tr>\n<tr>\n<td><code>[example](./example)</code></td>\n<td><a href=\"./example\">example</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"图片链接\"><a href=\"#图片链接\" class=\"headerlink\" title=\"图片链接\"></a>图片链接</h3><p>给图片加链接的本质是混合图片显示语法和普通的链接语法。普通的链接中[ ]内部是链接要显示的文本，而图片链接[ ]里面则是要显示的图片。<br>直接混合两种语法当然可以，但是十分啰嗦，为此我们可以使用URL标识符的形式。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>语法</th>\n<th style=\"text-align:center\">效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><code>[![github]](https://github.com/Faith-Hesper)</code></td>\n<td style=\"text-align:center\"><a href=\"https://github.com/Faith-Hesper\">![github-logo]</a></td>\n</tr>\n<tr>\n<td>2</td>\n<td><code>[![](/img/zhihu.png &quot;我的知乎，欢迎关注&quot;)][zhihu]</code></td>\n<td style=\"text-align:center\">[<img src=\"img/zhihu.png\" alt=\"\" title=\"我的知乎，欢迎关注\">][zhihu]</td>\n</tr>\n<tr>\n<td>3</td>\n<td><code>[![csdn-logo]][csdn]</code></td>\n<td style=\"text-align:center\">[![csdn-logo]][csdn]</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>因为图片本身和链接本身都支持URL标识符的形式，所以图片链接也可以很简洁（见例3）。<br>注意，此时鼠标悬停时显示的文字是图片的title，而非链接本身的title了。</p>\n<blockquote>\n<p>本文URL变量都放置于文末</p>\n</blockquote>\n<h3 id=\"锚点\"><a href=\"#锚点\" class=\"headerlink\" title=\"锚点\"></a>锚点</h3><p>每一个标题都是一个锚点，和HTML的锚点（<code>#</code>）类似</p>\n<ul>\n<li>锚点标记中含特殊符时，在链接中把特殊符去掉即可</li>\n<li>如果有空格使用<code>-</code>代替</li>\n<li><code>-</code> 可以用<code>\\-</code>转义</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>[回到顶部](#readme)</code></td>\n<td><a href=\"#readme\">回到顶部</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>不过要注意，标题中的英文字母都被转化为<strong>小写字母</strong>了。</p>\n<blockquote>\n<p>以前GitHub对中文支持的不好，所以中文标题不能正确识别为锚点，但是现在已经没问题啦！</p>\n</blockquote>\n<h3 id=\"Reference索引链接\"><a href=\"#Reference索引链接\" class=\"headerlink\" title=\"Reference索引链接\"></a>Reference索引链接</h3><p>即引用链接</p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">[百度][b]  \n[b]:https://www.baidu.com</code></pre>\n<p><a href=\"https://www.baidu.com\">b</a>:<a href=\"https://www.baidu.com\">https://www.baidu.com</a> 定义URL变量<a href=\"https://www.baidu.com\">b</a>，不会显示</p>\n<p><strong>效果</strong><br><a href=\"https://www.baidu.com\">百度</a>  </p>\n<h3 id=\"自动链接\"><a href=\"#自动链接\" class=\"headerlink\" title=\"自动链接\"></a>自动链接</h3><p>尖括号<br><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">&lt;http://ibruce.info>  \n&lt;bu.ru@qq.com></code></pre><br><a href=\"http://ibruce.info\">http://ibruce.info</a>  </p>\n<bu.ru@qq.com>\n\n<h3 id=\"嵌入视频\"><a href=\"#嵌入视频\" class=\"headerlink\" title=\"嵌入视频\"></a>嵌入视频</h3><p>使用html中的video标签，github markdown暂不支持，Typora支持<br><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>player<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://www.bilibili.com/video/BV14K4y1t7S4?t=141.8<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">poster</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://i0.hdslb.com/bfs/archive/19330ee5128ada930f1e288254fd83ef3e45974d.jpg@336w_190h.jpg<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video/mp4<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">preload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>auto<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>controls<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span>\n    <span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span></code></pre></p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">src: 指定视频资源的URL\nposter: 视频预览图片\ntype: 视频文件类型\npreload: 是否预加载，auto：自动预加载，none: 不预加载</code></pre>\n<video class=\"player\" \n    src=\"https://www.bilibili.com/video/BV14K4y1t7S4?t=141.8\" \n    poster=\"http://i0.hdslb.com/bfs/archive/19330ee5128ada930f1e288254fd83ef3e45974d.jpg@336w_190h.jpg\"\n    type=\"video/mp4\" \n    preload=\"auto\" \n    controls=\"controls\" \n    style=\"width: 100%;\"\n    >\n</video>\n\n<h3 id=\"嵌入音频\"><a href=\"#嵌入音频\" class=\"headerlink\" title=\"嵌入音频\"></a>嵌入音频</h3><p>使用html中的audio标签，github markdown暂不支持，Typora支持<br><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">preload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>auto<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autoplay</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>uin=7078<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>fromtag=66<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mp3<span class=\"token punctuation\">\"</span></span> \n        <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>uin=7078<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>fromtag=66<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>audio</span><span class=\"token punctuation\">></span></span></code></pre></p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">preload: 是否预加载\naudio标签src属性：预加载音频资源的URL路径\nsource标签中的src属性：指定音频资源URL，需要与audio标签src属性性相同</code></pre>\n<audio controls=\"\" preload=\"auto\" height=\"0\" width=\"0\" autoplay=\"false\"\n       src=\"http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983&amp;vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4&amp;uin=7078&amp;fromtag=66\"\n       >\n    <source id=\"mp3\" \n        src=\"http://119.147.228.28/amobile.music.tc.qq.com/C400001R8Zeo1tf1fS.m4a?guid=3070280983&amp;vkey=D73F717249D433A37DF1E10D13FC530839A5C96FEF39B46B40CA4F50EF784ABB9D7CD5DDA90A668847F1E0FAAFC3AA3060B043C62B22B2E4&amp;uin=7078&amp;fromtag=66\"\n    >\n</audio>\n\n\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><ul>\n<li>语法<br>无序列表符: * - +<pre class=\"language-none\"><code class=\"language-none\">* 昵称：fortune\n- 别名：fortune\n+ 英文名：fortune</code></pre>\n<strong>效果</strong>  </li>\n<li>昵称：fortune</li>\n</ul>\n<ul>\n<li>别名：fortune</li>\n</ul>\n<ul>\n<li>英文名：fortune</li>\n</ul>\n<h3 id=\"多级无序列表\"><a href=\"#多级无序列表\" class=\"headerlink\" title=\"多级无序列表\"></a>多级无序列表</h3><ul>\n<li>语法<pre class=\"language-none\"><code class=\"language-none\">* 编程语言\n    &#96;&#96;&#96;text\n    这时开发效率最高的语言\n    ...</code></pre>\n<ul>\n<li>脚本语言<ul>\n<li>Python<pre class=\"language-none\"><code class=\"language-none\">**效果**  \n* 编程语言\n    &#96;&#96;&#96;text\n    这时开发效率最高的语言\n    ...</code></pre></li>\n</ul>\n</li>\n<li>脚本语言<ul>\n<li>Python</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"一级有序列表\"><a href=\"#一级有序列表\" class=\"headerlink\" title=\"一级有序列表\"></a>一级有序列表</h3><ul>\n<li>语法  <pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">就是在数字后面加一个点，再加一个空格。  \n序号可以全部写一个，如1，让其自动推断</code></pre>\n</li>\n</ul>\n<pre class=\"language-none\"><code class=\"language-none\">面向对象的三个基本特征：\n\n1. 封装\n2. 继承\n3. 多态</code></pre>\n<p><strong>效果</strong><br>面向对象的三个基本特征：</p>\n<ol>\n<li>封装</li>\n<li>继承</li>\n<li>多态</li>\n</ol>\n<p><strong>序号自行推断示例</strong><br><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">1. 封装\n1. 继承\n1. 多态</code></pre></p>\n<ol>\n<li>封装</li>\n<li>继承</li>\n<li>多态</li>\n</ol>\n<h3 id=\"多级有序列表\"><a href=\"#多级有序列表\" class=\"headerlink\" title=\"多级有序列表\"></a>多级有序列表</h3><p>和无序列表一样，有序列表也有多级结构。</p>\n<ul>\n<li>语法<pre class=\"language-none\"><code class=\"language-none\">1. 这是一级的有序列表，数字1还是1\n   1. 这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字\n      1. 这是三级的有序列表，数字在显示的时候变成了英文字母</code></pre>\n</li>\n</ul>\n<p><strong>效果</strong></p>\n<ol>\n<li>这是一级的有序列表，数字1还是1<ol>\n<li>这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字<ol>\n<li>这是三级的有序列表，数字在显示的时候变成了英文字母</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"复选框列表\"><a href=\"#复选框列表\" class=\"headerlink\" title=\"复选框列表\"></a>复选框列表</h3><ul>\n<li><p>语法</p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">- [ ] content \n-空格[空格]空格content \n\n解释: [ ]括号里面的空格可以换成[x],代表选中对话框</code></pre>\n</li>\n<li><p>示例  </p>\n<pre class=\"language-none\"><code class=\"language-none\">- [x] 需求分析\n- [x] 系统设计\n- [x] 详细设计\n- [ ] 编码\n- [ ] 测试\n- [ ] 交付</code></pre>\n</li>\n</ul>\n<p><strong>效果</strong>  </p>\n<ul>\n<li>[x] 需求分析</li>\n<li>[x] 系统设计</li>\n<li>[x] 详细设计</li>\n<li>[ ] 编码</li>\n<li>[ ] 测试</li>\n<li>[ ] 交付</li>\n</ul>\n<p>您可以使用这个功能来标注某个项目各项任务的完成情况。</p>\n<blockquote>\n<p>Tip:</p>\n<blockquote>\n<p>在GitHub的<strong>issue</strong>中使用该语法是可以实时点击复选框来勾选或解除勾选的，而无需修改issue原文。</p>\n</blockquote>\n</blockquote>\n<h2 id=\"块引用\"><a href=\"#块引用\" class=\"headerlink\" title=\"块引用\"></a>块引用</h2><h3 id=\"常用于引用文本\"><a href=\"#常用于引用文本\" class=\"headerlink\" title=\"常用于引用文本\"></a>常用于引用文本</h3><ul>\n<li>块引用示例<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">文本摘自《深入理解计算机系统》P27  \n令人吃惊的是，在哪种字节顺序是合适的这个问题上，人们表现得非常情绪化。\n实际上术语“little endian”（小端）和“big endian”（大端）出自Jonathan Swift的\n《格利佛游记》一书，其中交战的两个派别无法就应该从哪一端打开一个半熟的鸡蛋达成一致。\n因此，争论沦为关于社会政治的争论。只要选择了一种规则并且始终如一的坚持，\n其实对于哪种字节排序的选择都是任意的。</code></pre>\n<blockquote>\n<p><strong>“端”（endian）的起源</strong><br>以下是Jonathan Swift在1726年关于大小端之争历史的描述：<br>“……下面我要告诉你的是，Lilliput和Blefuscu这两大强国在过去36个月里一直在苦战。战争开始是由于以下的原因：我们大家都认为，吃鸡蛋前，原始的方法是打破鸡蛋较大的一端，可是当今的皇帝的祖父小时候吃鸡蛋，一次按古法打鸡蛋时碰巧将一个手指弄破了，因此他的父亲，当时的皇帝，就下了一道敕令，命令全体臣民吃鸡蛋时打破较小的一端，违令者重罚。”</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"块引用有多级结构\"><a href=\"#块引用有多级结构\" class=\"headerlink\" title=\"块引用有多级结构\"></a>块引用有多级结构</h3><ul>\n<li>语法<pre class=\"language-none\"><code class=\"language-none\">&gt; 数据结构\n&gt;&gt; 树\n&gt;&gt;&gt; 二叉树\n&gt;&gt;&gt;&gt; 平衡二叉树\n&gt;&gt;&gt;&gt;&gt; 满二叉树</code></pre>\n<strong>效果</strong>  <blockquote>\n<p>数据结构</p>\n<blockquote>\n<p>树</p>\n<blockquote>\n<p>二叉树</p>\n<blockquote>\n<p>平衡二叉树</p>\n<blockquote>\n<p>满二叉树</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h2><ul>\n<li>代码高亮语法</li>\n</ul>\n<p>在三个反引号后面加上编程语言的名字，另起一行开始写代码，最后一行再加上三个反引号。</p>\n<pre><code><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">//Java</span></code></pre>\n\n<pre class=\"language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//C</span></code></pre>\n\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello GitHub\"</span> <span class=\"token comment\">#Bash</span></code></pre>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myH1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span><span class=\"token string\">\"Welcome to my Homepage\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//javascipt</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">96</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">96</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">96</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`cpp\nstring <span class=\"token operator\">&amp;</span>operator<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//cpp</span></code></pre>\n</code></pre><p><strong>代码高亮效果</strong><br><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">//Java</span></code></pre></p>\n<pre class=\"language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//C</span></code></pre>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello GitHub\"</span> <span class=\"token comment\">#Bash</span></code></pre>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myH1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span><span class=\"token string\">\"Welcome to my Homepage\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//javascipt</span></code></pre>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">string <span class=\"token operator\">&amp;</span><span class=\"token keyword\">operator</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> A<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">)</span> <span class=\"token comment\">//cpp</span></code></pre>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p>注意：表头上面一行为文本块时，需要在文本块与表头之间空一行</p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">|表头1 |表头2 |\n|--- |--- |\n|表格单元 |表格单元 |\n|表格单元 |表格单元 |</code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>表头1</th>\n<th>表头2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>表格单元</td>\n<td>表格单元</td>\n</tr>\n<tr>\n<td>表格单元</td>\n<td>表格单元</td>\n</tr>\n</tbody>\n</table>\n</div>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">表头1 |表头2\n--- |---\n表格单元 |表格单元\n表格单元 |表格单元</code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>表头1</th>\n<th>表头2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>表格单元</td>\n<td>表格单元</td>\n</tr>\n<tr>\n<td>表格单元</td>\n<td>表格单元</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"表格对齐\"><a href=\"#表格对齐\" class=\"headerlink\" title=\"表格对齐\"></a>表格对齐</h3><p>表格可以指定对齐方式</p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">左对齐 |居中  |右对齐\n:--- |:---: |---: \ncol 3 is      |some wordy text |$1600\ncol 2 is      |centered        |$12\nzebra stripes |are neat        |$1\n坚线特殊符    |在表格中使用\\转换无效 &lt;br>需使用Unicode编码`&amp;#124;`        |&amp;#124;</code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">左对齐</th>\n<th style=\"text-align:center\">居中</th>\n<th style=\"text-align:right\">右对齐</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">col 3 is</td>\n<td style=\"text-align:center\">some wordy text</td>\n<td style=\"text-align:right\">$1600</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">col 2 is</td>\n<td style=\"text-align:center\">centered</td>\n<td style=\"text-align:right\">$12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">zebra stripes</td>\n<td style=\"text-align:center\">are neat</td>\n<td style=\"text-align:right\">$1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">坚线特殊符</td>\n<td style=\"text-align:center\">在表格中使用\\转换无效 <br>需使用Unicode编码<code>&amp;#124;</code></td>\n<td style=\"text-align:right\">&#124;</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"yaml风格表格\"><a href=\"#yaml风格表格\" class=\"headerlink\" title=\"yaml风格表格\"></a>yaml风格表格</h3><p>必须写在文件的首行，见本文最上方  </p>\n<pre><code>---\nlayout: page\ntitle: &quot;Github markdown&quot;\nauthor: fortune\npermalink: /help/dns/\n编号: \n    - 0001\n    - &quot;2222&quot;\n---\n</code></pre><h3 id=\"混合其他语法\"><a href=\"#混合其他语法\" class=\"headerlink\" title=\"混合其他语法\"></a>混合其他语法</h3><p>表格单元中的内容可以和其他大多数GFM语法配合使用</p>\n<h4 id=\"使用普通文本的删除线，斜体等效果\"><a href=\"#使用普通文本的删除线，斜体等效果\" class=\"headerlink\" title=\"使用普通文本的删除线，斜体等效果\"></a>使用普通文本的删除线，斜体等效果</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Help</td>\n<td><del>Display the</del> help window.</td>\n</tr>\n<tr>\n<td>Close</td>\n<td>_Closes_ a window</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"表格中嵌入图片（链接）\"><a href=\"#表格中嵌入图片（链接）\" class=\"headerlink\" title=\"表格中嵌入图片（链接）\"></a>表格中嵌入图片（链接）</h4><p>其实前面介绍图片显示、图片链接的时候为了清晰就是放在在表格中显示的。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>图片</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>![baidu][baidu-logo]</td>\n<td>百度</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"表情\"><a href=\"#表情\" class=\"headerlink\" title=\"表情\"></a>表情</h2><p>Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。</p>\n<p>比如<code>:blush:</code>，可以显示:blush:。</p>\n<p>具体每一个表情的符号码，可以查询GitHub的官方网页<a href=\"http://www.emoji-cheat-sheet.com\">http://www.emoji-cheat-sheet.com</a>。</p>\n<p>但是这个网页每次都打开<strong>奇慢</strong>。所以我整理到了本repo中，大家可以直接在此查看<a href=\"./emoji.md\">emoji 表情</a>。</p>\n<h2 id=\"diff语法\"><a href=\"#diff语法\" class=\"headerlink\" title=\"diff语法\"></a>diff语法</h2><p>版本控制的系统中都少不了diff的功能，即展示一个文件内容的增加与删除。<br>GFM中可以显示的展示diff效果。使用绿色表示新增，红色表示删除。</p>\n<ul>\n<li><p>语法</p>\n  <pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">其语法与代码高亮类似，指定语言类型为diff\n+ : 新增 (绿)\n- : 删除 (红)\n! : 修改 (橙)\n# : 未变动 (灰)</code></pre>\n</li>\n<li><p>diff示例<br>  <img src=\"img/diff.png\" alt=\"\">  </p>\n</li>\n</ul>\n<p><strong>效果</strong><br><pre class=\"language-diff\" data-language=\"diff\"><code class=\"language-diff\"><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\"> 人闲桂花落，\n</span></span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span><span class=\"token line\"> 夜静春山空。\n</span></span><span class=\"token diff bold\"><span class=\"token prefix diff\">!</span><span class=\"token line\"> 月出惊山鸟，\n</span></span># 时鸣春涧中。</code></pre></p>\n<h2 id=\"details折叠语法\"><a href=\"#details折叠语法\" class=\"headerlink\" title=\"details折叠语法\"></a>details折叠语法</h2><ul>\n<li><code>&lt;/summary&gt;</code> 与下面的内容之间一定要空一行</li>\n<li><code>&lt;/details&gt;</code> 与下面的内容之间一定要空一行，否则影响下面的内容格式</li>\n</ul>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">&lt;details>\n&lt;summary>射雕英雄传&lt;/summary>\n\n1. 第一回 风雪惊变\n1. 第二回 江南七怪\n1. 第三回 黄沙莽莽\n1. 第四回 黑风双煞\n1. 第五回 弯弓射雕\n1. 第六回 崖顶疑阵\n1. 第七回 比武招亲\n&lt;/details></code></pre>\n<details>\n<summary>射雕英雄传</summary>\n\n1. 第一回 风雪惊变\n1. 第二回 江南七怪\n1. 第三回 黄沙莽莽\n1. 第四回 黑风双煞\n1. 第五回 弯弓射雕\n1. 第六回 崖顶疑阵\n1. 第七回 比武招亲\n</details>\n\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><ul>\n<li><p>html块注释</p>\n  <pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">&lt;!--\n哈哈我是注释，\n不会在浏览器中显示。\n--></code></pre>\n  <!--\n  哈哈我是注释，\n  不会在浏览器中显示。\n  -->\n</li>\n<li><p>行注释</p>\n  <pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">[//]:#(注释内容...)</code></pre>\n</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"github-markdown暂不支持的功能\"><a href=\"#github-markdown暂不支持的功能\" class=\"headerlink\" title=\"github markdown暂不支持的功能\"></a>github markdown暂不支持的功能</h3><ul>\n<li>目前github暂时不支持markdown流程控制语法</li>\n<li>目前github暂时不支持css语法，如字体颜色、字体等</li>\n<li>目前github不支持文本块行号显示</li>\n<li><a href=\"#嵌入视频\">嵌入视频</a></li>\n<li><a href=\"#嵌入音频\">嵌入音频</a></li>\n</ul>\n<h3 id=\"上标\"><a href=\"#上标\" class=\"headerlink\" title=\"上标\"></a>上标</h3><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">2&lt;sup>3&lt;/sub></code></pre>\n<p><strong>效果</strong><br>2<sup>3&lt;/sub&gt;</p>\n<h3 id=\"下标\"><a href=\"#下标\" class=\"headerlink\" title=\"下标\"></a>下标</h3><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">H&lt;sub>2&lt;/sub>O</code></pre>\n<p><strong>效果</strong><br>H<sub>2</sub>O</p>\n<h3 id=\"自定义锚点\"><a href=\"#自定义锚点\" class=\"headerlink\" title=\"自定义锚点\"></a><span id=\"自定义锚点\">自定义锚点</span></h3><pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">解析器会为标题分配一个锚点id。\n但有时候需要连接到不是标题的区域中\n这时用自定义锚点方法，再合适不过了</code></pre>\n<ol>\n<li>标记要跳转到的位置 <pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">&lt;span id=\"myjump\">提示信息&lt;/span>\n如果不想显示 提示信息，可以什么都不写\n如：\n&lt;span id=\"myjump\">&lt;/span>\n&lt;span id=\"blog\">blog&lt;/span></code></pre></li>\n<li>在需要连接到锚点的地方使用锚点 <pre class=\"language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\"><span class=\"token url\">[<span class=\"token content\">说明文字</span>](<span class=\"token url\">#myjump</span>)</span>\n<span class=\"token url\">[<span class=\"token content\">blog</span>](<span class=\"token url\">#blog</span>)</span> or <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#blog<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>blog<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre>\n</li>\n</ol>\n<h3 id=\"参考资料注解\"><a href=\"#参考资料注解\" class=\"headerlink\" title=\"参考资料注解\"></a>参考资料注解</h3><p>百科文章里，有些文字后有 <sup>[[1]]</sup>，表示参考资料引用，点击可跳转过去<br>这里可以用 自定义锚点 + 上标 方法来做</p>\n<pre class=\"language-text\" data-language=\"text\"><code class=\"language-text\">百科文章里，有些文字后有 &lt;sup>[\\[1\\]]&lt;/sup>，表示参考资料引用，点击可跳转过去  \n这里可以用 自定义锚点 + 上标 方法来做\n\n[\\[1\\]]:https://baike.baidu.com/ \"百度百科\"</code></pre>\n<hr>\n<!--\n定义URL变量(URL标识)，方便上文引用\n\n* 语法\n\n[URL变量名]:URL地址\n\n变量名：支持数字、字母、-、_、中文的组合\n\n\n* 引用方法\n    * 非图片\n    [链接文本][已定义的URL变量]    \n    * 图片\n    ![alt][已定义的URL变量]\n\n定义位置：可以是文档的任意位置，建议放在文末\n\n* 定义的URL变量展示时不显示\n-->\n<pre class=\"language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">// 定义URL变量\n[blog]:https://faith-hesper.github.io/ \"我的博客\"</code></pre>\n<p><a href=\"#blog\">blog</a></p>\n"},{"title":"SQL查询","date":"2021-07-05T11:13:32.000Z","description":"SQL查询","_content":"\n```sql\nselect < 属性列表 attribute list >\n\nfrom < 关系表 relation >\n\nwhere < 条件 condition >\n\nAND (交集) OR(并集) XOR(异或) NOT (补集)\n```\n\n### 模糊查询\n\n\n\n部分匹配 *\n\n+ 数据集属性名 Like \"a*\"\n\n完全匹配\n\n+ 数据集属性名 Like \"Beijing\"\n\n单字匹配 ？\n\n+ 数据集属性名 Like \"A?\"\n\n### 查询特定值\n\n+ in，确定表达式的值是否等于指定列表内若干值中任意一个值\n+ 数据集属性名 in (1,4)\n\n### 派生字段\n\n+ as 取临时字段名\n\n  \n","source":"_posts/SQL查询.md","raw":"---\ntitle: SQL查询\ndate: 2021-07-05 19:13:32\ncategories: [GIS,SQL] \ntags: GIS\ndescription: SQL查询\n---\n\n```sql\nselect < 属性列表 attribute list >\n\nfrom < 关系表 relation >\n\nwhere < 条件 condition >\n\nAND (交集) OR(并集) XOR(异或) NOT (补集)\n```\n\n### 模糊查询\n\n\n\n部分匹配 *\n\n+ 数据集属性名 Like \"a*\"\n\n完全匹配\n\n+ 数据集属性名 Like \"Beijing\"\n\n单字匹配 ？\n\n+ 数据集属性名 Like \"A?\"\n\n### 查询特定值\n\n+ in，确定表达式的值是否等于指定列表内若干值中任意一个值\n+ 数据集属性名 in (1,4)\n\n### 派生字段\n\n+ as 取临时字段名\n\n  \n","slug":"SQL查询","published":1,"updated":"2021-11-10T11:13:06.218Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2i000mjsvk5h7f8yir","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">&lt;</span> 属性列表 attribute list <span class=\"token operator\">></span>\n\n<span class=\"token keyword\">from</span> <span class=\"token operator\">&lt;</span> 关系表 relation <span class=\"token operator\">></span>\n\n<span class=\"token keyword\">where</span> <span class=\"token operator\">&lt;</span> 条件 condition <span class=\"token operator\">></span>\n\n<span class=\"token operator\">AND</span> <span class=\"token punctuation\">(</span>交集<span class=\"token punctuation\">)</span> <span class=\"token operator\">OR</span><span class=\"token punctuation\">(</span>并集<span class=\"token punctuation\">)</span> <span class=\"token operator\">XOR</span><span class=\"token punctuation\">(</span>异或<span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token punctuation\">(</span>补集<span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"模糊查询\"><a href=\"#模糊查询\" class=\"headerlink\" title=\"模糊查询\"></a>模糊查询</h3><p>部分匹配 *</p>\n<ul>\n<li>数据集属性名 Like “a*”</li>\n</ul>\n<p>完全匹配</p>\n<ul>\n<li>数据集属性名 Like “Beijing”</li>\n</ul>\n<p>单字匹配 ？</p>\n<ul>\n<li>数据集属性名 Like “A?”</li>\n</ul>\n<h3 id=\"查询特定值\"><a href=\"#查询特定值\" class=\"headerlink\" title=\"查询特定值\"></a>查询特定值</h3><ul>\n<li>in，确定表达式的值是否等于指定列表内若干值中任意一个值</li>\n<li>数据集属性名 in (1,4)</li>\n</ul>\n<h3 id=\"派生字段\"><a href=\"#派生字段\" class=\"headerlink\" title=\"派生字段\"></a>派生字段</h3><ul>\n<li>as 取临时字段名</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160701.webp","length":219,"excerpt":"","more":"<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">&lt;</span> 属性列表 attribute list <span class=\"token operator\">></span>\n\n<span class=\"token keyword\">from</span> <span class=\"token operator\">&lt;</span> 关系表 relation <span class=\"token operator\">></span>\n\n<span class=\"token keyword\">where</span> <span class=\"token operator\">&lt;</span> 条件 condition <span class=\"token operator\">></span>\n\n<span class=\"token operator\">AND</span> <span class=\"token punctuation\">(</span>交集<span class=\"token punctuation\">)</span> <span class=\"token operator\">OR</span><span class=\"token punctuation\">(</span>并集<span class=\"token punctuation\">)</span> <span class=\"token operator\">XOR</span><span class=\"token punctuation\">(</span>异或<span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token punctuation\">(</span>补集<span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"模糊查询\"><a href=\"#模糊查询\" class=\"headerlink\" title=\"模糊查询\"></a>模糊查询</h3><p>部分匹配 *</p>\n<ul>\n<li>数据集属性名 Like “a*”</li>\n</ul>\n<p>完全匹配</p>\n<ul>\n<li>数据集属性名 Like “Beijing”</li>\n</ul>\n<p>单字匹配 ？</p>\n<ul>\n<li>数据集属性名 Like “A?”</li>\n</ul>\n<h3 id=\"查询特定值\"><a href=\"#查询特定值\" class=\"headerlink\" title=\"查询特定值\"></a>查询特定值</h3><ul>\n<li>in，确定表达式的值是否等于指定列表内若干值中任意一个值</li>\n<li>数据集属性名 in (1,4)</li>\n</ul>\n<h3 id=\"派生字段\"><a href=\"#派生字段\" class=\"headerlink\" title=\"派生字段\"></a>派生字段</h3><ul>\n<li>as 取临时字段名</li>\n</ul>\n"},{"title":"SuperMapObjects开发","date":"2021-11-26T11:46:27.000Z","description":"SuperMapObjects开发","_content":"\n# SuperMapObjects\n\n## 工作空间(SuperWorkspace)\n\n### 概念\n\n+ SuperWorkspace工作空间控件创建\n\n+ 扩展名为*.smw\n\n+ 系统初始会创建一个空的工作空间\n\n  <div class=\"danger\">\n\n\n  > 该工作空间不存在数据源、地图和布局，只有系统默认的资源\n\n  </div>\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211125210757.png)\n\n\n![image-20211125215343863](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211125215344.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211202132028.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211202132402.png)\n\n### 方法\n方法\n<div class=\"warning\">\n\n> SuperWorkspace 为SuperWorkspace(工作空间) 控件的实际Name值\n>\n> SuperWorkspaceManager 为SuperWorkspaceManager(工作空间管理器) 控件的实际Name值\n>\n> SuperMap 为SuperMap(地图) 控件的实际Name值\n>\n> SuperLengend 为SuperLengend(图例管理器) 控件的实际Name值\n\n</div>\n\n1. 打开\n\n```c#\n/*SuperWorkspace 为SuperWorkspace 控件的实际Name值\nOpen()两个重载\nOpen(strOpenPath) 文件路径\nOpen(strOpenPath,password) 设置密码\nOpen() 返回值为bool类型值\n\nOpenDataSource()1个重载\nOpenDataSource(strSavePath, strAlias, seEngineType.sceSDBPlus, false) 数据源存储路径、数据源别名、引擎类型、是否只读\nOpenDataSource() 返回值为soDataSource 数据源类型对象\n\n*/\nSuperWorkspace.Open()\t// 打开工作空间\nSuperWorkspace.OpenDataSource()\t// 打开数据源\n/*控件关联\n工作空间--->地图\n工作空间--->3D\n工作空间--->工作空间管理器\n地图--->图例管理器\n*/\nthis.SuperWorkspace.Open(strOpenPath);\t// 打开\nprivate void ConnectSuperMap()\n{\n    object objWSHandle = this.SuperWorkspace.ObjectHandle; //工作空间\n    object objMapHandle = this.SuperMap.CtlHandle; //地图\n    this.Super3D.Connect(objWSHandle);\t// 将3D控件与工作空间关联\n    this.SuperMap.Connect(objWSHandle);\t    // 将地图与工作空间关联\n    this.SuperWkspManager.Connect(objWSHandle);\t//将关联工作空间管理器控件与工作空间控件\n    this.SuperLegend.Connect(objMapHandle);\t//将图例管理器与地图控件关联\n}\n```\n\n2. 保存\n\n```c#\n/*\nSave()无参数\nSaveAs()两个重载\nSaveAs(strSavePath, true) 设置另存路径、是否覆盖原有文件\nSaveAs(strSavePath, true, format, \"\") 设置另存路径、是否覆盖原有文件、形式、密码\nSaveAs() 返回值为bool类型值\n*/\nSuperWorkspace.Save()\t// 保存工作空间\nSuperWorkspace.SaveAs()\t//另存工作空间\n```\n\n3. 创建\n\n```c#\n/*\nCreate()两个重载\nCreate(strSavePath, TempFileName, false) 设置存储路径、临时文件路径、是否覆盖原有文件\nCreate(strSavePath, TempFileName, false, \"\") 设置存储路径、临时文件路径、是否覆盖原有文件、密码\nCreate() 返回值为bool类型值\n\nCreateDataSource()1个重载\nCreateDataSource(strSavePath, strAlias, seEngineType.sceSDBPlus, false, false, false, \"\") 设置数据源存储路径、数据源别名、引擎类型、是否事务、是否独占、是否加密、密码\nCreate() 返回值为soDataSource 数据源类型对象\n*/\nSuperWorkspace.Create()\t// 创建工作空间\nSuperWorkspace.CreateDataSource()\t// 新建数据源\n```\n\n4. 关闭\n\n```c#\nSuperWorkspace.Close()\t// 关闭工作空间\n/*关闭工作空间实例\n1.使用完记录集应及时关闭\n2.关闭地图控件之前，先把地图的全部图层清除\n3.关闭工作空间控件之前，先关闭所有使用工作空间控件中数据的控件(SuperMap控件、Super3D控件、SuperWorkspaceMannger控件)\n*/\nprivate void closeWspace()\n{\n\t// 清除图层\n\tsoLayers objLys = this.SuperMap.Layers;\n\tif(objLys.Count !=0 && objLys.Count != null)\n\t{\n    \tobjLys.RemoveAll();\t// 清除所有图层\n    \tthis.SuperMap.Refresh();\n\t}\n\tSystem.Runtime.InteropServices.Marshal.ReleaseComObject(objLys);\n\tobjLys = null;\n\tsoDataSources objDss = this.SuperWorkspace.Datasources;\n\tif(objDss != null && objDss.Count != 0)\n\t{\n    \tobjDss.RemoveAll();\n\t}\n\tSystem.Runtime.InteropServices.Marshal.ReleaseComObject(objDss);\n\tthis.DisconnectSuperMap();\n}\n/*控件的断开\n程序退出之前，除要释放全局变量外，还需按顺序断开控件连接\n*/\nprivate void FormClose()\n{\n    this.Super3D.Disconnect();\n    this.SuperLengend.Disconnect();\n    this.SuperMap.Disconnect();\n    this.SuperMap.Close();\n    this.SuperWorkspaceManager.Disconnect();\n    this.SuperWorkspace.Close();\n}\n```\n\n5. 获取\n\n```c#\nSuperWorkspace.GetWorkspaceName();\t// 获取当前工作空间对应的文件名\n```\n\n### 属性\n\n1. Handle 属性\n\n   > **用于指定Supermap与SuperWorkspace的连接**，即使地图与工作空间连接，使其能从工作空间获取数据。返回值为工作空间的句柄\n\n2. Datasources 数据源的集合\n\n   > 返回数据源集合对象(**soDatasources**)，只读属性。工作空间中**有且仅有一个**soDatasources对象，使用数据源都存放在当中\n\n3. Maps 属性\t\n\n   > 返回SuperWorkspace的地图名集合对象 (**soMaps**)\n\n4. Layouts 属性\n\n   > 返回SuperWorkspace的布局名集合对象 (**soLayouts**)\n\n5. Resoures 属性\n\n   > 返回SuperWorkspace的资源对象 (**soResoures**)\n\n6. Modified 属性\n\n   > 返回数据源是否有改动，返回值为 bool 类型的值\n\n\n\n## 地图(soMaps)\n\n### 概念\n\n+ **地图由一个或多个图层组成**，**存储于工作空间中**\n\n+ 保存地图必须把工作空间同时保存下来\n\n+ 地图中没有存储数据集\n\n+ **地图中的数据来源于数据源**\n\n  > Map对象保存的是当前地图窗口中地图所打开的**数据集的索引**、**地图风格设置**、**地图显示范围等信息**\n  >\n  > 保存时所用的地图名称必须与当前工作空间中已有的地图名不同，否则会保存失败\n  >\n  > 保存地图后，还需保存工作空间\n  \n  > 在制作地图并保存后，如将对应的数据源删除，则相应的地图也会清除\n\n![image-20211126211212542](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211126211212.png)\n\n### 方法\n\n1. 地图浏览\n\n```c#\n/*SuperMap 为实际添加的 SuperMap Ctrl控件的Name值\nViewEntire();\t//全图显示\nClose();\t// 关闭地图窗口\nConnect();\t// 建立SuperMap与SuperWorkspace控件的连接(bool)\nDisconnect();\t// 断开SuperMap与SuperWorkspace控件的连接\nOpenMap(strSavePath);\t// 打开工作空间中保存的地图(bool)\nSaveMap();\t// 保存工作空间中保存的地图(bool)\nSaveMapAs(strSavePath);\t// 另存地图(bool)\nRefresh()\t// 刷新地图窗口\nZoom(num)\t// num>1放大或num<1缩小地图窗口\n*/\nthis.SuperMap.ViewEntire();\t//全图显示\nthis.SuperMap.Close();\t// 关闭地图窗口\nthis.SuperMap.Connect();\t// 建立SuperMap与SuperWorkspace控件的连接\nthis.SuperMap.Disconnect();\t// 断开SuperMap与SuperWorkspace控件的连接\nthis.SuperMap.OpenMap(strSavePath);\t// 打开工作空间中保存的地图\nthis.SuperMap.SaveMap();\t// 保存工作空间中保存的地图\nthis.SuperMap.SaveMapAs(strSavePath);\t// 另存工作空间中保存的地图\nthis.SuperMap.Refresh()\t// 刷新地图窗口\nthis.SuperMap.Zoom(num)\t// 放大或缩小地图窗口\n```\n\n### 属性\n\n地图浏览\n\n```c#\n/*!important\nSuperMap.Action 返回/设置对SuperMap 控件的当前操作状态\n(SuperMap.ViewEnire())\n*/\nthis.SuperMap.Action\nthis.SuperMap.Action = seAction.scaZoomIn;   // 放大(scaZoomIn)\nthis.SuperMap.Action = seAction.scaZoomOut;\t// 缩小(scaZoomOut)\nthis.SuperMap.Action = seAction.scaZoomFree;  // 自由缩放(scaZoomFree)\nthis.SuperMap.Action = seAction.scaPan;  // 漫游(scaPan)\nthis.SuperMap.Action = seActionscaSelect;\t//点选(scaSelect)\nthis.SuperMap.Action = seAction.scaRectSelect;\t//矩形方式选(scaRectSelect)\nthis.SuperMap.Action = seAction.scaCircleSelect;\t//圆形选(scaCircleSelect)\nthis.SuperMap.Action = seAction.scaRegionSelect;\t//多边形选(scaRegionSelect)\n/*Bounds 返回值为 soRect类型对象 (SuperMap 地图的坐标范围)\nViewBounds 返回值为 soRect类型对象 (SuperMap 地图的可视范围)\nCenterX、CenterY 返回值为 Double类型 (SuperMap 地图窗口的中心点坐标)\n*/\nSuperMap.Bounds\t// 地图坐标范围(Bounds)\nSuperMap.ViewBounds\t// 可视地图范围(Bounds)\nSuperMap.CenterX\t// 返回/设置SuperMap地图窗口的中心点X坐标值(CenterX)\nSuperMap.CenterY\t// 返回/设置SuperMap地图窗口的中心点Y坐标值(CenterY)\n/* !important\nLayers 返回值为 soLayers类型对象 (SuperMap 地图窗口的图层集合)\nSelection 返回值为 soSelection类型对象 (SuperMap 被选中的空间对象集合)\nModified 返回值为 Bool类型值\n*/\nSuperMap.Layers\t// 图层集合(Layers)\nSuperMap.Selection\t// 返回/设置SuperMap 地图窗口中被选中的空间对象集合(Selection)\nsoSelection objSelection = this.SuperMap.selection;\t// 获取数据集\nSuperMap.Modified\t// 返回地图窗口中的数据、图层以及显示是否被修改(Modified)\n```\n\n## 工作空间管理器(SuperWkspManager)\n\n统一管理SuperWorkspace中的所有资源，以**树的方式**显示工作空间中的所有资源，如**数据源、数据集、地图、布局、符号库和线型库**等\n\n1. seSelectedItemFlag 常量\n\n```c\nscsDatasource\t// 选中数据源\nscsDataset\t// 选中数据集\nscsSubDataset\t// 选中子数据集\nscsMap\t// 选中地图\nscsLayout\t// 选中布局\nscsSene\t// 选中三维场景\nscsLayer\t// 选中图层\nscsSymboLib\t// 选中符号库\nscsLineStyleLib\t// 选中线型库\nscsFillStyleLib\t// 选中填充库\nscsNothing\t// 没有任何节点选中\n```\n\n2. strSelected 选中项的文本\n\n   如果选中的是数据源，则返回数据源的别名；如果是数据集或者地图、布局则是其名称\n\n3. strParent 选中项的父节点名称\n\n   对数据集来说就是数据源的别名，其他类型选中则参数无效\n\n### 事件\n\n1. LDbClick 工作空间管理器窗口双击\n\n```c#\n/*\n工作空间-->数据源集合--->数据源-->数据集集合-->数据集\n*/\nprivate void axSuperWkspManager1_LDbClick(object sender, AxSuperWkspManagerLib._DSuperWkspManagerEvents_LDbClickEvent e)\n{\n\tswitch (e.nFlag)\n    {\n        // 双击数据集名称\n        case seSelectedItemFlag.scsDataset:\n            soDataSuorces objDss = axSuperWorkspace.Datasources;\t// 获取工作空间中的数据源集合\n            soDataSource objDs = objDss[e.strParent];\t// 通过当前选中数据集的父节点获取数据集所在数据源\n            soDatasets objDts = objDs.Datasets;\t// 获取该数据源下的数据集集合\n            soDataset objDt = objDts[e.strSelected];\t// 通过当前选中数据集名称获得该数据集\n            soLayers objLys = axSuperMap.Layers;\t// 获取地图窗口的图层集合\n            soLayer objLy = objLys.AddDataset(objDt,true);\t// 添加指定数据集到地图窗口\n            axSuperMap.Refresh();\n            break;\n        // 双击地图名称\n        case seSelectedItemFlag.scsMap:\n            soLayers objLys = axSuperMap.Layers;\n            objLys.RemoveAll();\t//移除地图窗口所有图层\n            axSuperMap.OpenMap(e.strSelected)\t// 打开所双击的地图\n            axSuperMap.Refresh();\n            break;\n        // 双击点符号\n        case seSelectedItemFlag.scsSymboLib:\n            axSuperWorkspace1.Resources.SymbolLib.ShowEditor();\t// 显示点符号编辑器\n            break;\n        // 双击地线符号\n        case seSelectedItemFlag.scsLineStyleLib:\n            axSuperWorkspace1.Resources.LineStyleLib.ShowEditor();\t// 显示线符号编辑器\n            break;\n        // 双击填充符号\n        case seSelectedItemFlag.scsFillStyleLib:\n            axSuperWorkspace1.Resources.FillStyleLib.ShowEditor();\t// 显示填充符号编辑器\n            break;\n    }\n }\n```\n\n\n\n## 数据源(soDataSource)\n\n数据源是存储空间数据的场所。空间数据存放于数据源中，**任何对空间数据的操作**都需要先**打开或者获得**数据源\n\t空间数据的存储方式有两种:\n\n> *文件存储与关系数据库存储*\n\n## 数据集(soDataset)\n\n1. 数据集\n\n+ 数据集是SuperMap Objects**基本组织单位**\n+ 一个数据源通常由多个不同类型数据集组成\n+ 分为栅格数据集、矢量数据集、非空间数据集(属性数据集)\n\n2. **获取数据集方法**\n\n+ 从数据源获取\n+ 从工作空间获取\n+ 从打开的图层获取\n+ 从选择集获取\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211201160335.png)\n\n### 记录集(soRecordset)\n\n+ 记录是处理和存储实体信息的基本单位，记录的集合叫记录集\n+ **每一个矢量数据集对应一个完整的记录集，每一个空间几何对象对应一条记录**\n\n## 图层(soLayer)\n\n+ 一个图层必然对应一个数据集\n+ 同一个**数据集可以对应多个图层**\n+ **数据集的显示**是在地图窗口中以**图层的方式显示**\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211125212307.png)\n\n## 布局(soLayout)\n\n+ SuperLayout控件创建\n\n  > 确切的说,把一个或者多个地图放置在SuperLayout布局窗口中，并辅以其他的辅助制图要素如图名﹑图例就成为布局\n\n+ 布局主要用于**空间数据的输出**\n\n+ 一个工作空间可以有多个布局\n\n+ 同地图保存一样，**布局的保存依赖于工作空间保存**\n\n\n## 三维场景(soScenes)\n\n主要存放保存的三维地图窗口。**三维场景地图由一个或多个三维图层组成，存储于工作空间中**。三维图层用so3DLayer表示，一个三维地图窗口上可以添加多个图层，即so3DLayers\n\n## 资源(soResoures)\n\n+ 存放了系统中打开和制作的符号、线型和填充符\n+ 资源用于管理符号库( **soSymbolLib** )、线型库( **soLineStyleLib** )和填充库( **soFillStyleLib** )\n+ 线型库文件 后缀(*.lsl)、符号库文件 后缀(*.sym)\n\n## 几何对象(soGeometry)\n\n1. 几何对象\n\n+ 点、线、面、文本、复合几何对象、参数化几何对象\n\n2. soGeometry 获得途径\n\n+ 从记录集中获取\n+ 从符号转化而来\n+ 从参数化的几何对象通过ConvertToLine或者ConvertToRegion方法转化而来\n\n\n+ 选择题30分 15题 设计 开发(方法、参数、返回值)\n+ 简答题30分 5题\n+ 编程题40分 4题 5个句子\n","source":"_posts/SuperMapObjects开发.md","raw":"---\ntitle: SuperMapObjects开发\ndate: 2021-11-26 19:46:27\ntags: SuperMapObjects\ncategories:\ndescription: SuperMapObjects开发\n---\n\n# SuperMapObjects\n\n## 工作空间(SuperWorkspace)\n\n### 概念\n\n+ SuperWorkspace工作空间控件创建\n\n+ 扩展名为*.smw\n\n+ 系统初始会创建一个空的工作空间\n\n  <div class=\"danger\">\n\n\n  > 该工作空间不存在数据源、地图和布局，只有系统默认的资源\n\n  </div>\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211125210757.png)\n\n\n![image-20211125215343863](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211125215344.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211202132028.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211202132402.png)\n\n### 方法\n方法\n<div class=\"warning\">\n\n> SuperWorkspace 为SuperWorkspace(工作空间) 控件的实际Name值\n>\n> SuperWorkspaceManager 为SuperWorkspaceManager(工作空间管理器) 控件的实际Name值\n>\n> SuperMap 为SuperMap(地图) 控件的实际Name值\n>\n> SuperLengend 为SuperLengend(图例管理器) 控件的实际Name值\n\n</div>\n\n1. 打开\n\n```c#\n/*SuperWorkspace 为SuperWorkspace 控件的实际Name值\nOpen()两个重载\nOpen(strOpenPath) 文件路径\nOpen(strOpenPath,password) 设置密码\nOpen() 返回值为bool类型值\n\nOpenDataSource()1个重载\nOpenDataSource(strSavePath, strAlias, seEngineType.sceSDBPlus, false) 数据源存储路径、数据源别名、引擎类型、是否只读\nOpenDataSource() 返回值为soDataSource 数据源类型对象\n\n*/\nSuperWorkspace.Open()\t// 打开工作空间\nSuperWorkspace.OpenDataSource()\t// 打开数据源\n/*控件关联\n工作空间--->地图\n工作空间--->3D\n工作空间--->工作空间管理器\n地图--->图例管理器\n*/\nthis.SuperWorkspace.Open(strOpenPath);\t// 打开\nprivate void ConnectSuperMap()\n{\n    object objWSHandle = this.SuperWorkspace.ObjectHandle; //工作空间\n    object objMapHandle = this.SuperMap.CtlHandle; //地图\n    this.Super3D.Connect(objWSHandle);\t// 将3D控件与工作空间关联\n    this.SuperMap.Connect(objWSHandle);\t    // 将地图与工作空间关联\n    this.SuperWkspManager.Connect(objWSHandle);\t//将关联工作空间管理器控件与工作空间控件\n    this.SuperLegend.Connect(objMapHandle);\t//将图例管理器与地图控件关联\n}\n```\n\n2. 保存\n\n```c#\n/*\nSave()无参数\nSaveAs()两个重载\nSaveAs(strSavePath, true) 设置另存路径、是否覆盖原有文件\nSaveAs(strSavePath, true, format, \"\") 设置另存路径、是否覆盖原有文件、形式、密码\nSaveAs() 返回值为bool类型值\n*/\nSuperWorkspace.Save()\t// 保存工作空间\nSuperWorkspace.SaveAs()\t//另存工作空间\n```\n\n3. 创建\n\n```c#\n/*\nCreate()两个重载\nCreate(strSavePath, TempFileName, false) 设置存储路径、临时文件路径、是否覆盖原有文件\nCreate(strSavePath, TempFileName, false, \"\") 设置存储路径、临时文件路径、是否覆盖原有文件、密码\nCreate() 返回值为bool类型值\n\nCreateDataSource()1个重载\nCreateDataSource(strSavePath, strAlias, seEngineType.sceSDBPlus, false, false, false, \"\") 设置数据源存储路径、数据源别名、引擎类型、是否事务、是否独占、是否加密、密码\nCreate() 返回值为soDataSource 数据源类型对象\n*/\nSuperWorkspace.Create()\t// 创建工作空间\nSuperWorkspace.CreateDataSource()\t// 新建数据源\n```\n\n4. 关闭\n\n```c#\nSuperWorkspace.Close()\t// 关闭工作空间\n/*关闭工作空间实例\n1.使用完记录集应及时关闭\n2.关闭地图控件之前，先把地图的全部图层清除\n3.关闭工作空间控件之前，先关闭所有使用工作空间控件中数据的控件(SuperMap控件、Super3D控件、SuperWorkspaceMannger控件)\n*/\nprivate void closeWspace()\n{\n\t// 清除图层\n\tsoLayers objLys = this.SuperMap.Layers;\n\tif(objLys.Count !=0 && objLys.Count != null)\n\t{\n    \tobjLys.RemoveAll();\t// 清除所有图层\n    \tthis.SuperMap.Refresh();\n\t}\n\tSystem.Runtime.InteropServices.Marshal.ReleaseComObject(objLys);\n\tobjLys = null;\n\tsoDataSources objDss = this.SuperWorkspace.Datasources;\n\tif(objDss != null && objDss.Count != 0)\n\t{\n    \tobjDss.RemoveAll();\n\t}\n\tSystem.Runtime.InteropServices.Marshal.ReleaseComObject(objDss);\n\tthis.DisconnectSuperMap();\n}\n/*控件的断开\n程序退出之前，除要释放全局变量外，还需按顺序断开控件连接\n*/\nprivate void FormClose()\n{\n    this.Super3D.Disconnect();\n    this.SuperLengend.Disconnect();\n    this.SuperMap.Disconnect();\n    this.SuperMap.Close();\n    this.SuperWorkspaceManager.Disconnect();\n    this.SuperWorkspace.Close();\n}\n```\n\n5. 获取\n\n```c#\nSuperWorkspace.GetWorkspaceName();\t// 获取当前工作空间对应的文件名\n```\n\n### 属性\n\n1. Handle 属性\n\n   > **用于指定Supermap与SuperWorkspace的连接**，即使地图与工作空间连接，使其能从工作空间获取数据。返回值为工作空间的句柄\n\n2. Datasources 数据源的集合\n\n   > 返回数据源集合对象(**soDatasources**)，只读属性。工作空间中**有且仅有一个**soDatasources对象，使用数据源都存放在当中\n\n3. Maps 属性\t\n\n   > 返回SuperWorkspace的地图名集合对象 (**soMaps**)\n\n4. Layouts 属性\n\n   > 返回SuperWorkspace的布局名集合对象 (**soLayouts**)\n\n5. Resoures 属性\n\n   > 返回SuperWorkspace的资源对象 (**soResoures**)\n\n6. Modified 属性\n\n   > 返回数据源是否有改动，返回值为 bool 类型的值\n\n\n\n## 地图(soMaps)\n\n### 概念\n\n+ **地图由一个或多个图层组成**，**存储于工作空间中**\n\n+ 保存地图必须把工作空间同时保存下来\n\n+ 地图中没有存储数据集\n\n+ **地图中的数据来源于数据源**\n\n  > Map对象保存的是当前地图窗口中地图所打开的**数据集的索引**、**地图风格设置**、**地图显示范围等信息**\n  >\n  > 保存时所用的地图名称必须与当前工作空间中已有的地图名不同，否则会保存失败\n  >\n  > 保存地图后，还需保存工作空间\n  \n  > 在制作地图并保存后，如将对应的数据源删除，则相应的地图也会清除\n\n![image-20211126211212542](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211126211212.png)\n\n### 方法\n\n1. 地图浏览\n\n```c#\n/*SuperMap 为实际添加的 SuperMap Ctrl控件的Name值\nViewEntire();\t//全图显示\nClose();\t// 关闭地图窗口\nConnect();\t// 建立SuperMap与SuperWorkspace控件的连接(bool)\nDisconnect();\t// 断开SuperMap与SuperWorkspace控件的连接\nOpenMap(strSavePath);\t// 打开工作空间中保存的地图(bool)\nSaveMap();\t// 保存工作空间中保存的地图(bool)\nSaveMapAs(strSavePath);\t// 另存地图(bool)\nRefresh()\t// 刷新地图窗口\nZoom(num)\t// num>1放大或num<1缩小地图窗口\n*/\nthis.SuperMap.ViewEntire();\t//全图显示\nthis.SuperMap.Close();\t// 关闭地图窗口\nthis.SuperMap.Connect();\t// 建立SuperMap与SuperWorkspace控件的连接\nthis.SuperMap.Disconnect();\t// 断开SuperMap与SuperWorkspace控件的连接\nthis.SuperMap.OpenMap(strSavePath);\t// 打开工作空间中保存的地图\nthis.SuperMap.SaveMap();\t// 保存工作空间中保存的地图\nthis.SuperMap.SaveMapAs(strSavePath);\t// 另存工作空间中保存的地图\nthis.SuperMap.Refresh()\t// 刷新地图窗口\nthis.SuperMap.Zoom(num)\t// 放大或缩小地图窗口\n```\n\n### 属性\n\n地图浏览\n\n```c#\n/*!important\nSuperMap.Action 返回/设置对SuperMap 控件的当前操作状态\n(SuperMap.ViewEnire())\n*/\nthis.SuperMap.Action\nthis.SuperMap.Action = seAction.scaZoomIn;   // 放大(scaZoomIn)\nthis.SuperMap.Action = seAction.scaZoomOut;\t// 缩小(scaZoomOut)\nthis.SuperMap.Action = seAction.scaZoomFree;  // 自由缩放(scaZoomFree)\nthis.SuperMap.Action = seAction.scaPan;  // 漫游(scaPan)\nthis.SuperMap.Action = seActionscaSelect;\t//点选(scaSelect)\nthis.SuperMap.Action = seAction.scaRectSelect;\t//矩形方式选(scaRectSelect)\nthis.SuperMap.Action = seAction.scaCircleSelect;\t//圆形选(scaCircleSelect)\nthis.SuperMap.Action = seAction.scaRegionSelect;\t//多边形选(scaRegionSelect)\n/*Bounds 返回值为 soRect类型对象 (SuperMap 地图的坐标范围)\nViewBounds 返回值为 soRect类型对象 (SuperMap 地图的可视范围)\nCenterX、CenterY 返回值为 Double类型 (SuperMap 地图窗口的中心点坐标)\n*/\nSuperMap.Bounds\t// 地图坐标范围(Bounds)\nSuperMap.ViewBounds\t// 可视地图范围(Bounds)\nSuperMap.CenterX\t// 返回/设置SuperMap地图窗口的中心点X坐标值(CenterX)\nSuperMap.CenterY\t// 返回/设置SuperMap地图窗口的中心点Y坐标值(CenterY)\n/* !important\nLayers 返回值为 soLayers类型对象 (SuperMap 地图窗口的图层集合)\nSelection 返回值为 soSelection类型对象 (SuperMap 被选中的空间对象集合)\nModified 返回值为 Bool类型值\n*/\nSuperMap.Layers\t// 图层集合(Layers)\nSuperMap.Selection\t// 返回/设置SuperMap 地图窗口中被选中的空间对象集合(Selection)\nsoSelection objSelection = this.SuperMap.selection;\t// 获取数据集\nSuperMap.Modified\t// 返回地图窗口中的数据、图层以及显示是否被修改(Modified)\n```\n\n## 工作空间管理器(SuperWkspManager)\n\n统一管理SuperWorkspace中的所有资源，以**树的方式**显示工作空间中的所有资源，如**数据源、数据集、地图、布局、符号库和线型库**等\n\n1. seSelectedItemFlag 常量\n\n```c\nscsDatasource\t// 选中数据源\nscsDataset\t// 选中数据集\nscsSubDataset\t// 选中子数据集\nscsMap\t// 选中地图\nscsLayout\t// 选中布局\nscsSene\t// 选中三维场景\nscsLayer\t// 选中图层\nscsSymboLib\t// 选中符号库\nscsLineStyleLib\t// 选中线型库\nscsFillStyleLib\t// 选中填充库\nscsNothing\t// 没有任何节点选中\n```\n\n2. strSelected 选中项的文本\n\n   如果选中的是数据源，则返回数据源的别名；如果是数据集或者地图、布局则是其名称\n\n3. strParent 选中项的父节点名称\n\n   对数据集来说就是数据源的别名，其他类型选中则参数无效\n\n### 事件\n\n1. LDbClick 工作空间管理器窗口双击\n\n```c#\n/*\n工作空间-->数据源集合--->数据源-->数据集集合-->数据集\n*/\nprivate void axSuperWkspManager1_LDbClick(object sender, AxSuperWkspManagerLib._DSuperWkspManagerEvents_LDbClickEvent e)\n{\n\tswitch (e.nFlag)\n    {\n        // 双击数据集名称\n        case seSelectedItemFlag.scsDataset:\n            soDataSuorces objDss = axSuperWorkspace.Datasources;\t// 获取工作空间中的数据源集合\n            soDataSource objDs = objDss[e.strParent];\t// 通过当前选中数据集的父节点获取数据集所在数据源\n            soDatasets objDts = objDs.Datasets;\t// 获取该数据源下的数据集集合\n            soDataset objDt = objDts[e.strSelected];\t// 通过当前选中数据集名称获得该数据集\n            soLayers objLys = axSuperMap.Layers;\t// 获取地图窗口的图层集合\n            soLayer objLy = objLys.AddDataset(objDt,true);\t// 添加指定数据集到地图窗口\n            axSuperMap.Refresh();\n            break;\n        // 双击地图名称\n        case seSelectedItemFlag.scsMap:\n            soLayers objLys = axSuperMap.Layers;\n            objLys.RemoveAll();\t//移除地图窗口所有图层\n            axSuperMap.OpenMap(e.strSelected)\t// 打开所双击的地图\n            axSuperMap.Refresh();\n            break;\n        // 双击点符号\n        case seSelectedItemFlag.scsSymboLib:\n            axSuperWorkspace1.Resources.SymbolLib.ShowEditor();\t// 显示点符号编辑器\n            break;\n        // 双击地线符号\n        case seSelectedItemFlag.scsLineStyleLib:\n            axSuperWorkspace1.Resources.LineStyleLib.ShowEditor();\t// 显示线符号编辑器\n            break;\n        // 双击填充符号\n        case seSelectedItemFlag.scsFillStyleLib:\n            axSuperWorkspace1.Resources.FillStyleLib.ShowEditor();\t// 显示填充符号编辑器\n            break;\n    }\n }\n```\n\n\n\n## 数据源(soDataSource)\n\n数据源是存储空间数据的场所。空间数据存放于数据源中，**任何对空间数据的操作**都需要先**打开或者获得**数据源\n\t空间数据的存储方式有两种:\n\n> *文件存储与关系数据库存储*\n\n## 数据集(soDataset)\n\n1. 数据集\n\n+ 数据集是SuperMap Objects**基本组织单位**\n+ 一个数据源通常由多个不同类型数据集组成\n+ 分为栅格数据集、矢量数据集、非空间数据集(属性数据集)\n\n2. **获取数据集方法**\n\n+ 从数据源获取\n+ 从工作空间获取\n+ 从打开的图层获取\n+ 从选择集获取\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211201160335.png)\n\n### 记录集(soRecordset)\n\n+ 记录是处理和存储实体信息的基本单位，记录的集合叫记录集\n+ **每一个矢量数据集对应一个完整的记录集，每一个空间几何对象对应一条记录**\n\n## 图层(soLayer)\n\n+ 一个图层必然对应一个数据集\n+ 同一个**数据集可以对应多个图层**\n+ **数据集的显示**是在地图窗口中以**图层的方式显示**\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211125212307.png)\n\n## 布局(soLayout)\n\n+ SuperLayout控件创建\n\n  > 确切的说,把一个或者多个地图放置在SuperLayout布局窗口中，并辅以其他的辅助制图要素如图名﹑图例就成为布局\n\n+ 布局主要用于**空间数据的输出**\n\n+ 一个工作空间可以有多个布局\n\n+ 同地图保存一样，**布局的保存依赖于工作空间保存**\n\n\n## 三维场景(soScenes)\n\n主要存放保存的三维地图窗口。**三维场景地图由一个或多个三维图层组成，存储于工作空间中**。三维图层用so3DLayer表示，一个三维地图窗口上可以添加多个图层，即so3DLayers\n\n## 资源(soResoures)\n\n+ 存放了系统中打开和制作的符号、线型和填充符\n+ 资源用于管理符号库( **soSymbolLib** )、线型库( **soLineStyleLib** )和填充库( **soFillStyleLib** )\n+ 线型库文件 后缀(*.lsl)、符号库文件 后缀(*.sym)\n\n## 几何对象(soGeometry)\n\n1. 几何对象\n\n+ 点、线、面、文本、复合几何对象、参数化几何对象\n\n2. soGeometry 获得途径\n\n+ 从记录集中获取\n+ 从符号转化而来\n+ 从参数化的几何对象通过ConvertToLine或者ConvertToRegion方法转化而来\n\n\n+ 选择题30分 15题 设计 开发(方法、参数、返回值)\n+ 简答题30分 5题\n+ 编程题40分 4题 5个句子\n","slug":"SuperMapObjects开发","published":1,"updated":"2021-12-27T05:41:14.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2j000njsvk7wey5uo1","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"SuperMapObjects\"><a href=\"#SuperMapObjects\" class=\"headerlink\" title=\"SuperMapObjects\"></a>SuperMapObjects</h1><h2 id=\"工作空间-SuperWorkspace\"><a href=\"#工作空间-SuperWorkspace\" class=\"headerlink\" title=\"工作空间(SuperWorkspace)\"></a>工作空间(SuperWorkspace)</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li><p>SuperWorkspace工作空间控件创建</p>\n</li>\n<li><p>扩展名为*.smw</p>\n</li>\n<li><p>系统初始会创建一个空的工作空间</p>\n<div class=\"danger\">\n\n\n</li>\n</ul>\n<blockquote>\n<p>该工作空间不存在数据源、地图和布局，只有系统默认的资源</p>\n</blockquote>\n<p>  &lt;/div&gt;</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211125210757.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211125215344.png\" alt=\"image-20211125215343863\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211202132028.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211202132402.png\" alt=\"\"></p>\n<h3 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h3><p>方法</p>\n<div class=\"warning\">\n\n> SuperWorkspace 为SuperWorkspace(工作空间) 控件的实际Name值\n>\n> SuperWorkspaceManager 为SuperWorkspaceManager(工作空间管理器) 控件的实际Name值\n>\n> SuperMap 为SuperMap(地图) 控件的实际Name值\n>\n> SuperLengend 为SuperLengend(图例管理器) 控件的实际Name值\n\n</div>\n\n<ol>\n<li>打开</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;*SuperWorkspace 为SuperWorkspace 控件的实际Name值\nOpen()两个重载\nOpen(strOpenPath) 文件路径\nOpen(strOpenPath,password) 设置密码\nOpen() 返回值为bool类型值\n\nOpenDataSource()1个重载\nOpenDataSource(strSavePath, strAlias, seEngineType.sceSDBPlus, false) 数据源存储路径、数据源别名、引擎类型、是否只读\nOpenDataSource() 返回值为soDataSource 数据源类型对象\n\n*&#x2F;\nSuperWorkspace.Open()\t&#x2F;&#x2F; 打开工作空间\nSuperWorkspace.OpenDataSource()\t&#x2F;&#x2F; 打开数据源\n&#x2F;*控件关联\n工作空间---&gt;地图\n工作空间---&gt;3D\n工作空间---&gt;工作空间管理器\n地图---&gt;图例管理器\n*&#x2F;\nthis.SuperWorkspace.Open(strOpenPath);\t&#x2F;&#x2F; 打开\nprivate void ConnectSuperMap()\n&#123;\n    object objWSHandle &#x3D; this.SuperWorkspace.ObjectHandle; &#x2F;&#x2F;工作空间\n    object objMapHandle &#x3D; this.SuperMap.CtlHandle; &#x2F;&#x2F;地图\n    this.Super3D.Connect(objWSHandle);\t&#x2F;&#x2F; 将3D控件与工作空间关联\n    this.SuperMap.Connect(objWSHandle);\t    &#x2F;&#x2F; 将地图与工作空间关联\n    this.SuperWkspManager.Connect(objWSHandle);\t&#x2F;&#x2F;将关联工作空间管理器控件与工作空间控件\n    this.SuperLegend.Connect(objMapHandle);\t&#x2F;&#x2F;将图例管理器与地图控件关联\n&#125;</code></pre>\n<ol>\n<li>保存</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;*\nSave()无参数\nSaveAs()两个重载\nSaveAs(strSavePath, true) 设置另存路径、是否覆盖原有文件\nSaveAs(strSavePath, true, format, &quot;&quot;) 设置另存路径、是否覆盖原有文件、形式、密码\nSaveAs() 返回值为bool类型值\n*&#x2F;\nSuperWorkspace.Save()\t&#x2F;&#x2F; 保存工作空间\nSuperWorkspace.SaveAs()\t&#x2F;&#x2F;另存工作空间</code></pre>\n<ol>\n<li>创建</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;*\nCreate()两个重载\nCreate(strSavePath, TempFileName, false) 设置存储路径、临时文件路径、是否覆盖原有文件\nCreate(strSavePath, TempFileName, false, &quot;&quot;) 设置存储路径、临时文件路径、是否覆盖原有文件、密码\nCreate() 返回值为bool类型值\n\nCreateDataSource()1个重载\nCreateDataSource(strSavePath, strAlias, seEngineType.sceSDBPlus, false, false, false, &quot;&quot;) 设置数据源存储路径、数据源别名、引擎类型、是否事务、是否独占、是否加密、密码\nCreate() 返回值为soDataSource 数据源类型对象\n*&#x2F;\nSuperWorkspace.Create()\t&#x2F;&#x2F; 创建工作空间\nSuperWorkspace.CreateDataSource()\t&#x2F;&#x2F; 新建数据源</code></pre>\n<ol>\n<li>关闭</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">SuperWorkspace.Close()\t&#x2F;&#x2F; 关闭工作空间\n&#x2F;*关闭工作空间实例\n1.使用完记录集应及时关闭\n2.关闭地图控件之前，先把地图的全部图层清除\n3.关闭工作空间控件之前，先关闭所有使用工作空间控件中数据的控件(SuperMap控件、Super3D控件、SuperWorkspaceMannger控件)\n*&#x2F;\nprivate void closeWspace()\n&#123;\n\t&#x2F;&#x2F; 清除图层\n\tsoLayers objLys &#x3D; this.SuperMap.Layers;\n\tif(objLys.Count !&#x3D;0 &amp;&amp; objLys.Count !&#x3D; null)\n\t&#123;\n    \tobjLys.RemoveAll();\t&#x2F;&#x2F; 清除所有图层\n    \tthis.SuperMap.Refresh();\n\t&#125;\n\tSystem.Runtime.InteropServices.Marshal.ReleaseComObject(objLys);\n\tobjLys &#x3D; null;\n\tsoDataSources objDss &#x3D; this.SuperWorkspace.Datasources;\n\tif(objDss !&#x3D; null &amp;&amp; objDss.Count !&#x3D; 0)\n\t&#123;\n    \tobjDss.RemoveAll();\n\t&#125;\n\tSystem.Runtime.InteropServices.Marshal.ReleaseComObject(objDss);\n\tthis.DisconnectSuperMap();\n&#125;\n&#x2F;*控件的断开\n程序退出之前，除要释放全局变量外，还需按顺序断开控件连接\n*&#x2F;\nprivate void FormClose()\n&#123;\n    this.Super3D.Disconnect();\n    this.SuperLengend.Disconnect();\n    this.SuperMap.Disconnect();\n    this.SuperMap.Close();\n    this.SuperWorkspaceManager.Disconnect();\n    this.SuperWorkspace.Close();\n&#125;</code></pre>\n<ol>\n<li>获取</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">SuperWorkspace.GetWorkspaceName();\t&#x2F;&#x2F; 获取当前工作空间对应的文件名</code></pre>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><ol>\n<li><p>Handle 属性</p>\n<blockquote>\n<p><strong>用于指定Supermap与SuperWorkspace的连接</strong>，即使地图与工作空间连接，使其能从工作空间获取数据。返回值为工作空间的句柄</p>\n</blockquote>\n</li>\n<li><p>Datasources 数据源的集合</p>\n<blockquote>\n<p>返回数据源集合对象(<strong>soDatasources</strong>)，只读属性。工作空间中<strong>有且仅有一个</strong>soDatasources对象，使用数据源都存放在当中</p>\n</blockquote>\n</li>\n<li><p>Maps 属性    </p>\n<blockquote>\n<p>返回SuperWorkspace的地图名集合对象 (<strong>soMaps</strong>)</p>\n</blockquote>\n</li>\n<li><p>Layouts 属性</p>\n<blockquote>\n<p>返回SuperWorkspace的布局名集合对象 (<strong>soLayouts</strong>)</p>\n</blockquote>\n</li>\n<li><p>Resoures 属性</p>\n<blockquote>\n<p>返回SuperWorkspace的资源对象 (<strong>soResoures</strong>)</p>\n</blockquote>\n</li>\n<li><p>Modified 属性</p>\n<blockquote>\n<p>返回数据源是否有改动，返回值为 bool 类型的值</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"地图-soMaps\"><a href=\"#地图-soMaps\" class=\"headerlink\" title=\"地图(soMaps)\"></a>地图(soMaps)</h2><h3 id=\"概念-1\"><a href=\"#概念-1\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li><p><strong>地图由一个或多个图层组成</strong>，<strong>存储于工作空间中</strong></p>\n</li>\n<li><p>保存地图必须把工作空间同时保存下来</p>\n</li>\n<li><p>地图中没有存储数据集</p>\n</li>\n<li><p><strong>地图中的数据来源于数据源</strong></p>\n<blockquote>\n<p>Map对象保存的是当前地图窗口中地图所打开的<strong>数据集的索引</strong>、<strong>地图风格设置</strong>、<strong>地图显示范围等信息</strong></p>\n<p>保存时所用的地图名称必须与当前工作空间中已有的地图名不同，否则会保存失败</p>\n<p>保存地图后，还需保存工作空间</p>\n<p>在制作地图并保存后，如将对应的数据源删除，则相应的地图也会清除</p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211126211212.png\" alt=\"image-20211126211212542\"></p>\n<h3 id=\"方法-1\"><a href=\"#方法-1\" class=\"headerlink\" title=\"方法\"></a>方法</h3><ol>\n<li>地图浏览</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;*SuperMap 为实际添加的 SuperMap Ctrl控件的Name值\nViewEntire();\t&#x2F;&#x2F;全图显示\nClose();\t&#x2F;&#x2F; 关闭地图窗口\nConnect();\t&#x2F;&#x2F; 建立SuperMap与SuperWorkspace控件的连接(bool)\nDisconnect();\t&#x2F;&#x2F; 断开SuperMap与SuperWorkspace控件的连接\nOpenMap(strSavePath);\t&#x2F;&#x2F; 打开工作空间中保存的地图(bool)\nSaveMap();\t&#x2F;&#x2F; 保存工作空间中保存的地图(bool)\nSaveMapAs(strSavePath);\t&#x2F;&#x2F; 另存地图(bool)\nRefresh()\t&#x2F;&#x2F; 刷新地图窗口\nZoom(num)\t&#x2F;&#x2F; num&gt;1放大或num&lt;1缩小地图窗口\n*&#x2F;\nthis.SuperMap.ViewEntire();\t&#x2F;&#x2F;全图显示\nthis.SuperMap.Close();\t&#x2F;&#x2F; 关闭地图窗口\nthis.SuperMap.Connect();\t&#x2F;&#x2F; 建立SuperMap与SuperWorkspace控件的连接\nthis.SuperMap.Disconnect();\t&#x2F;&#x2F; 断开SuperMap与SuperWorkspace控件的连接\nthis.SuperMap.OpenMap(strSavePath);\t&#x2F;&#x2F; 打开工作空间中保存的地图\nthis.SuperMap.SaveMap();\t&#x2F;&#x2F; 保存工作空间中保存的地图\nthis.SuperMap.SaveMapAs(strSavePath);\t&#x2F;&#x2F; 另存工作空间中保存的地图\nthis.SuperMap.Refresh()\t&#x2F;&#x2F; 刷新地图窗口\nthis.SuperMap.Zoom(num)\t&#x2F;&#x2F; 放大或缩小地图窗口</code></pre>\n<h3 id=\"属性-1\"><a href=\"#属性-1\" class=\"headerlink\" title=\"属性\"></a>属性</h3><p>地图浏览</p>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;*!important\nSuperMap.Action 返回&#x2F;设置对SuperMap 控件的当前操作状态\n(SuperMap.ViewEnire())\n*&#x2F;\nthis.SuperMap.Action\nthis.SuperMap.Action &#x3D; seAction.scaZoomIn;   &#x2F;&#x2F; 放大(scaZoomIn)\nthis.SuperMap.Action &#x3D; seAction.scaZoomOut;\t&#x2F;&#x2F; 缩小(scaZoomOut)\nthis.SuperMap.Action &#x3D; seAction.scaZoomFree;  &#x2F;&#x2F; 自由缩放(scaZoomFree)\nthis.SuperMap.Action &#x3D; seAction.scaPan;  &#x2F;&#x2F; 漫游(scaPan)\nthis.SuperMap.Action &#x3D; seActionscaSelect;\t&#x2F;&#x2F;点选(scaSelect)\nthis.SuperMap.Action &#x3D; seAction.scaRectSelect;\t&#x2F;&#x2F;矩形方式选(scaRectSelect)\nthis.SuperMap.Action &#x3D; seAction.scaCircleSelect;\t&#x2F;&#x2F;圆形选(scaCircleSelect)\nthis.SuperMap.Action &#x3D; seAction.scaRegionSelect;\t&#x2F;&#x2F;多边形选(scaRegionSelect)\n&#x2F;*Bounds 返回值为 soRect类型对象 (SuperMap 地图的坐标范围)\nViewBounds 返回值为 soRect类型对象 (SuperMap 地图的可视范围)\nCenterX、CenterY 返回值为 Double类型 (SuperMap 地图窗口的中心点坐标)\n*&#x2F;\nSuperMap.Bounds\t&#x2F;&#x2F; 地图坐标范围(Bounds)\nSuperMap.ViewBounds\t&#x2F;&#x2F; 可视地图范围(Bounds)\nSuperMap.CenterX\t&#x2F;&#x2F; 返回&#x2F;设置SuperMap地图窗口的中心点X坐标值(CenterX)\nSuperMap.CenterY\t&#x2F;&#x2F; 返回&#x2F;设置SuperMap地图窗口的中心点Y坐标值(CenterY)\n&#x2F;* !important\nLayers 返回值为 soLayers类型对象 (SuperMap 地图窗口的图层集合)\nSelection 返回值为 soSelection类型对象 (SuperMap 被选中的空间对象集合)\nModified 返回值为 Bool类型值\n*&#x2F;\nSuperMap.Layers\t&#x2F;&#x2F; 图层集合(Layers)\nSuperMap.Selection\t&#x2F;&#x2F; 返回&#x2F;设置SuperMap 地图窗口中被选中的空间对象集合(Selection)\nsoSelection objSelection &#x3D; this.SuperMap.selection;\t&#x2F;&#x2F; 获取数据集\nSuperMap.Modified\t&#x2F;&#x2F; 返回地图窗口中的数据、图层以及显示是否被修改(Modified)</code></pre>\n<h2 id=\"工作空间管理器-SuperWkspManager\"><a href=\"#工作空间管理器-SuperWkspManager\" class=\"headerlink\" title=\"工作空间管理器(SuperWkspManager)\"></a>工作空间管理器(SuperWkspManager)</h2><p>统一管理SuperWorkspace中的所有资源，以<strong>树的方式</strong>显示工作空间中的所有资源，如<strong>数据源、数据集、地图、布局、符号库和线型库</strong>等</p>\n<ol>\n<li>seSelectedItemFlag 常量</li>\n</ol>\n<pre class=\"language-c\" data-language=\"c\"><code class=\"language-c\">scsDatasource\t<span class=\"token comment\">// 选中数据源</span>\nscsDataset\t<span class=\"token comment\">// 选中数据集</span>\nscsSubDataset\t<span class=\"token comment\">// 选中子数据集</span>\nscsMap\t<span class=\"token comment\">// 选中地图</span>\nscsLayout\t<span class=\"token comment\">// 选中布局</span>\nscsSene\t<span class=\"token comment\">// 选中三维场景</span>\nscsLayer\t<span class=\"token comment\">// 选中图层</span>\nscsSymboLib\t<span class=\"token comment\">// 选中符号库</span>\nscsLineStyleLib\t<span class=\"token comment\">// 选中线型库</span>\nscsFillStyleLib\t<span class=\"token comment\">// 选中填充库</span>\nscsNothing\t<span class=\"token comment\">// 没有任何节点选中</span></code></pre>\n<ol>\n<li><p>strSelected 选中项的文本</p>\n<p>如果选中的是数据源，则返回数据源的别名；如果是数据集或者地图、布局则是其名称</p>\n</li>\n<li><p>strParent 选中项的父节点名称</p>\n<p>对数据集来说就是数据源的别名，其他类型选中则参数无效</p>\n</li>\n</ol>\n<h3 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h3><ol>\n<li>LDbClick 工作空间管理器窗口双击</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;*\n工作空间--&gt;数据源集合---&gt;数据源--&gt;数据集集合--&gt;数据集\n*&#x2F;\nprivate void axSuperWkspManager1_LDbClick(object sender, AxSuperWkspManagerLib._DSuperWkspManagerEvents_LDbClickEvent e)\n&#123;\n\tswitch (e.nFlag)\n    &#123;\n        &#x2F;&#x2F; 双击数据集名称\n        case seSelectedItemFlag.scsDataset:\n            soDataSuorces objDss &#x3D; axSuperWorkspace.Datasources;\t&#x2F;&#x2F; 获取工作空间中的数据源集合\n            soDataSource objDs &#x3D; objDss[e.strParent];\t&#x2F;&#x2F; 通过当前选中数据集的父节点获取数据集所在数据源\n            soDatasets objDts &#x3D; objDs.Datasets;\t&#x2F;&#x2F; 获取该数据源下的数据集集合\n            soDataset objDt &#x3D; objDts[e.strSelected];\t&#x2F;&#x2F; 通过当前选中数据集名称获得该数据集\n            soLayers objLys &#x3D; axSuperMap.Layers;\t&#x2F;&#x2F; 获取地图窗口的图层集合\n            soLayer objLy &#x3D; objLys.AddDataset(objDt,true);\t&#x2F;&#x2F; 添加指定数据集到地图窗口\n            axSuperMap.Refresh();\n            break;\n        &#x2F;&#x2F; 双击地图名称\n        case seSelectedItemFlag.scsMap:\n            soLayers objLys &#x3D; axSuperMap.Layers;\n            objLys.RemoveAll();\t&#x2F;&#x2F;移除地图窗口所有图层\n            axSuperMap.OpenMap(e.strSelected)\t&#x2F;&#x2F; 打开所双击的地图\n            axSuperMap.Refresh();\n            break;\n        &#x2F;&#x2F; 双击点符号\n        case seSelectedItemFlag.scsSymboLib:\n            axSuperWorkspace1.Resources.SymbolLib.ShowEditor();\t&#x2F;&#x2F; 显示点符号编辑器\n            break;\n        &#x2F;&#x2F; 双击地线符号\n        case seSelectedItemFlag.scsLineStyleLib:\n            axSuperWorkspace1.Resources.LineStyleLib.ShowEditor();\t&#x2F;&#x2F; 显示线符号编辑器\n            break;\n        &#x2F;&#x2F; 双击填充符号\n        case seSelectedItemFlag.scsFillStyleLib:\n            axSuperWorkspace1.Resources.FillStyleLib.ShowEditor();\t&#x2F;&#x2F; 显示填充符号编辑器\n            break;\n    &#125;\n &#125;</code></pre>\n<h2 id=\"数据源-soDataSource\"><a href=\"#数据源-soDataSource\" class=\"headerlink\" title=\"数据源(soDataSource)\"></a>数据源(soDataSource)</h2><p>数据源是存储空间数据的场所。空间数据存放于数据源中，<strong>任何对空间数据的操作</strong>都需要先<strong>打开或者获得</strong>数据源<br>    空间数据的存储方式有两种:</p>\n<blockquote>\n<p><em>文件存储与关系数据库存储</em></p>\n</blockquote>\n<h2 id=\"数据集-soDataset\"><a href=\"#数据集-soDataset\" class=\"headerlink\" title=\"数据集(soDataset)\"></a>数据集(soDataset)</h2><ol>\n<li>数据集</li>\n</ol>\n<ul>\n<li>数据集是SuperMap Objects<strong>基本组织单位</strong></li>\n<li>一个数据源通常由多个不同类型数据集组成</li>\n<li>分为栅格数据集、矢量数据集、非空间数据集(属性数据集)</li>\n</ul>\n<ol>\n<li><strong>获取数据集方法</strong></li>\n</ol>\n<ul>\n<li>从数据源获取</li>\n<li>从工作空间获取</li>\n<li>从打开的图层获取</li>\n<li>从选择集获取</li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211201160335.png\" alt=\"\"></p>\n<h3 id=\"记录集-soRecordset\"><a href=\"#记录集-soRecordset\" class=\"headerlink\" title=\"记录集(soRecordset)\"></a>记录集(soRecordset)</h3><ul>\n<li>记录是处理和存储实体信息的基本单位，记录的集合叫记录集</li>\n<li><strong>每一个矢量数据集对应一个完整的记录集，每一个空间几何对象对应一条记录</strong></li>\n</ul>\n<h2 id=\"图层-soLayer\"><a href=\"#图层-soLayer\" class=\"headerlink\" title=\"图层(soLayer)\"></a>图层(soLayer)</h2><ul>\n<li>一个图层必然对应一个数据集</li>\n<li>同一个<strong>数据集可以对应多个图层</strong></li>\n<li><strong>数据集的显示</strong>是在地图窗口中以<strong>图层的方式显示</strong></li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211125212307.png\" alt=\"\"></p>\n<h2 id=\"布局-soLayout\"><a href=\"#布局-soLayout\" class=\"headerlink\" title=\"布局(soLayout)\"></a>布局(soLayout)</h2><ul>\n<li><p>SuperLayout控件创建</p>\n<blockquote>\n<p>确切的说,把一个或者多个地图放置在SuperLayout布局窗口中，并辅以其他的辅助制图要素如图名﹑图例就成为布局</p>\n</blockquote>\n</li>\n<li><p>布局主要用于<strong>空间数据的输出</strong></p>\n</li>\n<li><p>一个工作空间可以有多个布局</p>\n</li>\n<li><p>同地图保存一样，<strong>布局的保存依赖于工作空间保存</strong></p>\n</li>\n</ul>\n<h2 id=\"三维场景-soScenes\"><a href=\"#三维场景-soScenes\" class=\"headerlink\" title=\"三维场景(soScenes)\"></a>三维场景(soScenes)</h2><p>主要存放保存的三维地图窗口。<strong>三维场景地图由一个或多个三维图层组成，存储于工作空间中</strong>。三维图层用so3DLayer表示，一个三维地图窗口上可以添加多个图层，即so3DLayers</p>\n<h2 id=\"资源-soResoures\"><a href=\"#资源-soResoures\" class=\"headerlink\" title=\"资源(soResoures)\"></a>资源(soResoures)</h2><ul>\n<li>存放了系统中打开和制作的符号、线型和填充符</li>\n<li>资源用于管理符号库( <strong>soSymbolLib</strong> )、线型库( <strong>soLineStyleLib</strong> )和填充库( <strong>soFillStyleLib</strong> )</li>\n<li>线型库文件 后缀(<em>.lsl)、符号库文件 后缀(</em>.sym)</li>\n</ul>\n<h2 id=\"几何对象-soGeometry\"><a href=\"#几何对象-soGeometry\" class=\"headerlink\" title=\"几何对象(soGeometry)\"></a>几何对象(soGeometry)</h2><ol>\n<li>几何对象</li>\n</ol>\n<ul>\n<li>点、线、面、文本、复合几何对象、参数化几何对象</li>\n</ul>\n<ol>\n<li>soGeometry 获得途径</li>\n</ol>\n<ul>\n<li>从记录集中获取</li>\n<li>从符号转化而来</li>\n<li>从参数化的几何对象通过ConvertToLine或者ConvertToRegion方法转化而来</li>\n</ul>\n<ul>\n<li>选择题30分 15题 设计 开发(方法、参数、返回值)</li>\n<li>简答题30分 5题</li>\n<li>编程题40分 4题 5个句子</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160700.webp","length":8453,"excerpt":"","more":"<h1 id=\"SuperMapObjects\"><a href=\"#SuperMapObjects\" class=\"headerlink\" title=\"SuperMapObjects\"></a>SuperMapObjects</h1><h2 id=\"工作空间-SuperWorkspace\"><a href=\"#工作空间-SuperWorkspace\" class=\"headerlink\" title=\"工作空间(SuperWorkspace)\"></a>工作空间(SuperWorkspace)</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li><p>SuperWorkspace工作空间控件创建</p>\n</li>\n<li><p>扩展名为*.smw</p>\n</li>\n<li><p>系统初始会创建一个空的工作空间</p>\n<div class=\"danger\">\n\n\n</li>\n</ul>\n<blockquote>\n<p>该工作空间不存在数据源、地图和布局，只有系统默认的资源</p>\n</blockquote>\n<p>  &lt;/div&gt;</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211125210757.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211125215344.png\" alt=\"image-20211125215343863\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211202132028.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211202132402.png\" alt=\"\"></p>\n<h3 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h3><p>方法</p>\n<div class=\"warning\">\n\n> SuperWorkspace 为SuperWorkspace(工作空间) 控件的实际Name值\n>\n> SuperWorkspaceManager 为SuperWorkspaceManager(工作空间管理器) 控件的实际Name值\n>\n> SuperMap 为SuperMap(地图) 控件的实际Name值\n>\n> SuperLengend 为SuperLengend(图例管理器) 控件的实际Name值\n\n</div>\n\n<ol>\n<li>打开</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;*SuperWorkspace 为SuperWorkspace 控件的实际Name值\nOpen()两个重载\nOpen(strOpenPath) 文件路径\nOpen(strOpenPath,password) 设置密码\nOpen() 返回值为bool类型值\n\nOpenDataSource()1个重载\nOpenDataSource(strSavePath, strAlias, seEngineType.sceSDBPlus, false) 数据源存储路径、数据源别名、引擎类型、是否只读\nOpenDataSource() 返回值为soDataSource 数据源类型对象\n\n*&#x2F;\nSuperWorkspace.Open()\t&#x2F;&#x2F; 打开工作空间\nSuperWorkspace.OpenDataSource()\t&#x2F;&#x2F; 打开数据源\n&#x2F;*控件关联\n工作空间---&gt;地图\n工作空间---&gt;3D\n工作空间---&gt;工作空间管理器\n地图---&gt;图例管理器\n*&#x2F;\nthis.SuperWorkspace.Open(strOpenPath);\t&#x2F;&#x2F; 打开\nprivate void ConnectSuperMap()\n&#123;\n    object objWSHandle &#x3D; this.SuperWorkspace.ObjectHandle; &#x2F;&#x2F;工作空间\n    object objMapHandle &#x3D; this.SuperMap.CtlHandle; &#x2F;&#x2F;地图\n    this.Super3D.Connect(objWSHandle);\t&#x2F;&#x2F; 将3D控件与工作空间关联\n    this.SuperMap.Connect(objWSHandle);\t    &#x2F;&#x2F; 将地图与工作空间关联\n    this.SuperWkspManager.Connect(objWSHandle);\t&#x2F;&#x2F;将关联工作空间管理器控件与工作空间控件\n    this.SuperLegend.Connect(objMapHandle);\t&#x2F;&#x2F;将图例管理器与地图控件关联\n&#125;</code></pre>\n<ol>\n<li>保存</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;*\nSave()无参数\nSaveAs()两个重载\nSaveAs(strSavePath, true) 设置另存路径、是否覆盖原有文件\nSaveAs(strSavePath, true, format, &quot;&quot;) 设置另存路径、是否覆盖原有文件、形式、密码\nSaveAs() 返回值为bool类型值\n*&#x2F;\nSuperWorkspace.Save()\t&#x2F;&#x2F; 保存工作空间\nSuperWorkspace.SaveAs()\t&#x2F;&#x2F;另存工作空间</code></pre>\n<ol>\n<li>创建</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;*\nCreate()两个重载\nCreate(strSavePath, TempFileName, false) 设置存储路径、临时文件路径、是否覆盖原有文件\nCreate(strSavePath, TempFileName, false, &quot;&quot;) 设置存储路径、临时文件路径、是否覆盖原有文件、密码\nCreate() 返回值为bool类型值\n\nCreateDataSource()1个重载\nCreateDataSource(strSavePath, strAlias, seEngineType.sceSDBPlus, false, false, false, &quot;&quot;) 设置数据源存储路径、数据源别名、引擎类型、是否事务、是否独占、是否加密、密码\nCreate() 返回值为soDataSource 数据源类型对象\n*&#x2F;\nSuperWorkspace.Create()\t&#x2F;&#x2F; 创建工作空间\nSuperWorkspace.CreateDataSource()\t&#x2F;&#x2F; 新建数据源</code></pre>\n<ol>\n<li>关闭</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">SuperWorkspace.Close()\t&#x2F;&#x2F; 关闭工作空间\n&#x2F;*关闭工作空间实例\n1.使用完记录集应及时关闭\n2.关闭地图控件之前，先把地图的全部图层清除\n3.关闭工作空间控件之前，先关闭所有使用工作空间控件中数据的控件(SuperMap控件、Super3D控件、SuperWorkspaceMannger控件)\n*&#x2F;\nprivate void closeWspace()\n&#123;\n\t&#x2F;&#x2F; 清除图层\n\tsoLayers objLys &#x3D; this.SuperMap.Layers;\n\tif(objLys.Count !&#x3D;0 &amp;&amp; objLys.Count !&#x3D; null)\n\t&#123;\n    \tobjLys.RemoveAll();\t&#x2F;&#x2F; 清除所有图层\n    \tthis.SuperMap.Refresh();\n\t&#125;\n\tSystem.Runtime.InteropServices.Marshal.ReleaseComObject(objLys);\n\tobjLys &#x3D; null;\n\tsoDataSources objDss &#x3D; this.SuperWorkspace.Datasources;\n\tif(objDss !&#x3D; null &amp;&amp; objDss.Count !&#x3D; 0)\n\t&#123;\n    \tobjDss.RemoveAll();\n\t&#125;\n\tSystem.Runtime.InteropServices.Marshal.ReleaseComObject(objDss);\n\tthis.DisconnectSuperMap();\n&#125;\n&#x2F;*控件的断开\n程序退出之前，除要释放全局变量外，还需按顺序断开控件连接\n*&#x2F;\nprivate void FormClose()\n&#123;\n    this.Super3D.Disconnect();\n    this.SuperLengend.Disconnect();\n    this.SuperMap.Disconnect();\n    this.SuperMap.Close();\n    this.SuperWorkspaceManager.Disconnect();\n    this.SuperWorkspace.Close();\n&#125;</code></pre>\n<ol>\n<li>获取</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">SuperWorkspace.GetWorkspaceName();\t&#x2F;&#x2F; 获取当前工作空间对应的文件名</code></pre>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><ol>\n<li><p>Handle 属性</p>\n<blockquote>\n<p><strong>用于指定Supermap与SuperWorkspace的连接</strong>，即使地图与工作空间连接，使其能从工作空间获取数据。返回值为工作空间的句柄</p>\n</blockquote>\n</li>\n<li><p>Datasources 数据源的集合</p>\n<blockquote>\n<p>返回数据源集合对象(<strong>soDatasources</strong>)，只读属性。工作空间中<strong>有且仅有一个</strong>soDatasources对象，使用数据源都存放在当中</p>\n</blockquote>\n</li>\n<li><p>Maps 属性    </p>\n<blockquote>\n<p>返回SuperWorkspace的地图名集合对象 (<strong>soMaps</strong>)</p>\n</blockquote>\n</li>\n<li><p>Layouts 属性</p>\n<blockquote>\n<p>返回SuperWorkspace的布局名集合对象 (<strong>soLayouts</strong>)</p>\n</blockquote>\n</li>\n<li><p>Resoures 属性</p>\n<blockquote>\n<p>返回SuperWorkspace的资源对象 (<strong>soResoures</strong>)</p>\n</blockquote>\n</li>\n<li><p>Modified 属性</p>\n<blockquote>\n<p>返回数据源是否有改动，返回值为 bool 类型的值</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"地图-soMaps\"><a href=\"#地图-soMaps\" class=\"headerlink\" title=\"地图(soMaps)\"></a>地图(soMaps)</h2><h3 id=\"概念-1\"><a href=\"#概念-1\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li><p><strong>地图由一个或多个图层组成</strong>，<strong>存储于工作空间中</strong></p>\n</li>\n<li><p>保存地图必须把工作空间同时保存下来</p>\n</li>\n<li><p>地图中没有存储数据集</p>\n</li>\n<li><p><strong>地图中的数据来源于数据源</strong></p>\n<blockquote>\n<p>Map对象保存的是当前地图窗口中地图所打开的<strong>数据集的索引</strong>、<strong>地图风格设置</strong>、<strong>地图显示范围等信息</strong></p>\n<p>保存时所用的地图名称必须与当前工作空间中已有的地图名不同，否则会保存失败</p>\n<p>保存地图后，还需保存工作空间</p>\n<p>在制作地图并保存后，如将对应的数据源删除，则相应的地图也会清除</p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211126211212.png\" alt=\"image-20211126211212542\"></p>\n<h3 id=\"方法-1\"><a href=\"#方法-1\" class=\"headerlink\" title=\"方法\"></a>方法</h3><ol>\n<li>地图浏览</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;*SuperMap 为实际添加的 SuperMap Ctrl控件的Name值\nViewEntire();\t&#x2F;&#x2F;全图显示\nClose();\t&#x2F;&#x2F; 关闭地图窗口\nConnect();\t&#x2F;&#x2F; 建立SuperMap与SuperWorkspace控件的连接(bool)\nDisconnect();\t&#x2F;&#x2F; 断开SuperMap与SuperWorkspace控件的连接\nOpenMap(strSavePath);\t&#x2F;&#x2F; 打开工作空间中保存的地图(bool)\nSaveMap();\t&#x2F;&#x2F; 保存工作空间中保存的地图(bool)\nSaveMapAs(strSavePath);\t&#x2F;&#x2F; 另存地图(bool)\nRefresh()\t&#x2F;&#x2F; 刷新地图窗口\nZoom(num)\t&#x2F;&#x2F; num&gt;1放大或num&lt;1缩小地图窗口\n*&#x2F;\nthis.SuperMap.ViewEntire();\t&#x2F;&#x2F;全图显示\nthis.SuperMap.Close();\t&#x2F;&#x2F; 关闭地图窗口\nthis.SuperMap.Connect();\t&#x2F;&#x2F; 建立SuperMap与SuperWorkspace控件的连接\nthis.SuperMap.Disconnect();\t&#x2F;&#x2F; 断开SuperMap与SuperWorkspace控件的连接\nthis.SuperMap.OpenMap(strSavePath);\t&#x2F;&#x2F; 打开工作空间中保存的地图\nthis.SuperMap.SaveMap();\t&#x2F;&#x2F; 保存工作空间中保存的地图\nthis.SuperMap.SaveMapAs(strSavePath);\t&#x2F;&#x2F; 另存工作空间中保存的地图\nthis.SuperMap.Refresh()\t&#x2F;&#x2F; 刷新地图窗口\nthis.SuperMap.Zoom(num)\t&#x2F;&#x2F; 放大或缩小地图窗口</code></pre>\n<h3 id=\"属性-1\"><a href=\"#属性-1\" class=\"headerlink\" title=\"属性\"></a>属性</h3><p>地图浏览</p>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;*!important\nSuperMap.Action 返回&#x2F;设置对SuperMap 控件的当前操作状态\n(SuperMap.ViewEnire())\n*&#x2F;\nthis.SuperMap.Action\nthis.SuperMap.Action &#x3D; seAction.scaZoomIn;   &#x2F;&#x2F; 放大(scaZoomIn)\nthis.SuperMap.Action &#x3D; seAction.scaZoomOut;\t&#x2F;&#x2F; 缩小(scaZoomOut)\nthis.SuperMap.Action &#x3D; seAction.scaZoomFree;  &#x2F;&#x2F; 自由缩放(scaZoomFree)\nthis.SuperMap.Action &#x3D; seAction.scaPan;  &#x2F;&#x2F; 漫游(scaPan)\nthis.SuperMap.Action &#x3D; seActionscaSelect;\t&#x2F;&#x2F;点选(scaSelect)\nthis.SuperMap.Action &#x3D; seAction.scaRectSelect;\t&#x2F;&#x2F;矩形方式选(scaRectSelect)\nthis.SuperMap.Action &#x3D; seAction.scaCircleSelect;\t&#x2F;&#x2F;圆形选(scaCircleSelect)\nthis.SuperMap.Action &#x3D; seAction.scaRegionSelect;\t&#x2F;&#x2F;多边形选(scaRegionSelect)\n&#x2F;*Bounds 返回值为 soRect类型对象 (SuperMap 地图的坐标范围)\nViewBounds 返回值为 soRect类型对象 (SuperMap 地图的可视范围)\nCenterX、CenterY 返回值为 Double类型 (SuperMap 地图窗口的中心点坐标)\n*&#x2F;\nSuperMap.Bounds\t&#x2F;&#x2F; 地图坐标范围(Bounds)\nSuperMap.ViewBounds\t&#x2F;&#x2F; 可视地图范围(Bounds)\nSuperMap.CenterX\t&#x2F;&#x2F; 返回&#x2F;设置SuperMap地图窗口的中心点X坐标值(CenterX)\nSuperMap.CenterY\t&#x2F;&#x2F; 返回&#x2F;设置SuperMap地图窗口的中心点Y坐标值(CenterY)\n&#x2F;* !important\nLayers 返回值为 soLayers类型对象 (SuperMap 地图窗口的图层集合)\nSelection 返回值为 soSelection类型对象 (SuperMap 被选中的空间对象集合)\nModified 返回值为 Bool类型值\n*&#x2F;\nSuperMap.Layers\t&#x2F;&#x2F; 图层集合(Layers)\nSuperMap.Selection\t&#x2F;&#x2F; 返回&#x2F;设置SuperMap 地图窗口中被选中的空间对象集合(Selection)\nsoSelection objSelection &#x3D; this.SuperMap.selection;\t&#x2F;&#x2F; 获取数据集\nSuperMap.Modified\t&#x2F;&#x2F; 返回地图窗口中的数据、图层以及显示是否被修改(Modified)</code></pre>\n<h2 id=\"工作空间管理器-SuperWkspManager\"><a href=\"#工作空间管理器-SuperWkspManager\" class=\"headerlink\" title=\"工作空间管理器(SuperWkspManager)\"></a>工作空间管理器(SuperWkspManager)</h2><p>统一管理SuperWorkspace中的所有资源，以<strong>树的方式</strong>显示工作空间中的所有资源，如<strong>数据源、数据集、地图、布局、符号库和线型库</strong>等</p>\n<ol>\n<li>seSelectedItemFlag 常量</li>\n</ol>\n<pre class=\"language-c\" data-language=\"c\"><code class=\"language-c\">scsDatasource\t<span class=\"token comment\">// 选中数据源</span>\nscsDataset\t<span class=\"token comment\">// 选中数据集</span>\nscsSubDataset\t<span class=\"token comment\">// 选中子数据集</span>\nscsMap\t<span class=\"token comment\">// 选中地图</span>\nscsLayout\t<span class=\"token comment\">// 选中布局</span>\nscsSene\t<span class=\"token comment\">// 选中三维场景</span>\nscsLayer\t<span class=\"token comment\">// 选中图层</span>\nscsSymboLib\t<span class=\"token comment\">// 选中符号库</span>\nscsLineStyleLib\t<span class=\"token comment\">// 选中线型库</span>\nscsFillStyleLib\t<span class=\"token comment\">// 选中填充库</span>\nscsNothing\t<span class=\"token comment\">// 没有任何节点选中</span></code></pre>\n<ol>\n<li><p>strSelected 选中项的文本</p>\n<p>如果选中的是数据源，则返回数据源的别名；如果是数据集或者地图、布局则是其名称</p>\n</li>\n<li><p>strParent 选中项的父节点名称</p>\n<p>对数据集来说就是数据源的别名，其他类型选中则参数无效</p>\n</li>\n</ol>\n<h3 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h3><ol>\n<li>LDbClick 工作空间管理器窗口双击</li>\n</ol>\n<pre class=\"language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;*\n工作空间--&gt;数据源集合---&gt;数据源--&gt;数据集集合--&gt;数据集\n*&#x2F;\nprivate void axSuperWkspManager1_LDbClick(object sender, AxSuperWkspManagerLib._DSuperWkspManagerEvents_LDbClickEvent e)\n&#123;\n\tswitch (e.nFlag)\n    &#123;\n        &#x2F;&#x2F; 双击数据集名称\n        case seSelectedItemFlag.scsDataset:\n            soDataSuorces objDss &#x3D; axSuperWorkspace.Datasources;\t&#x2F;&#x2F; 获取工作空间中的数据源集合\n            soDataSource objDs &#x3D; objDss[e.strParent];\t&#x2F;&#x2F; 通过当前选中数据集的父节点获取数据集所在数据源\n            soDatasets objDts &#x3D; objDs.Datasets;\t&#x2F;&#x2F; 获取该数据源下的数据集集合\n            soDataset objDt &#x3D; objDts[e.strSelected];\t&#x2F;&#x2F; 通过当前选中数据集名称获得该数据集\n            soLayers objLys &#x3D; axSuperMap.Layers;\t&#x2F;&#x2F; 获取地图窗口的图层集合\n            soLayer objLy &#x3D; objLys.AddDataset(objDt,true);\t&#x2F;&#x2F; 添加指定数据集到地图窗口\n            axSuperMap.Refresh();\n            break;\n        &#x2F;&#x2F; 双击地图名称\n        case seSelectedItemFlag.scsMap:\n            soLayers objLys &#x3D; axSuperMap.Layers;\n            objLys.RemoveAll();\t&#x2F;&#x2F;移除地图窗口所有图层\n            axSuperMap.OpenMap(e.strSelected)\t&#x2F;&#x2F; 打开所双击的地图\n            axSuperMap.Refresh();\n            break;\n        &#x2F;&#x2F; 双击点符号\n        case seSelectedItemFlag.scsSymboLib:\n            axSuperWorkspace1.Resources.SymbolLib.ShowEditor();\t&#x2F;&#x2F; 显示点符号编辑器\n            break;\n        &#x2F;&#x2F; 双击地线符号\n        case seSelectedItemFlag.scsLineStyleLib:\n            axSuperWorkspace1.Resources.LineStyleLib.ShowEditor();\t&#x2F;&#x2F; 显示线符号编辑器\n            break;\n        &#x2F;&#x2F; 双击填充符号\n        case seSelectedItemFlag.scsFillStyleLib:\n            axSuperWorkspace1.Resources.FillStyleLib.ShowEditor();\t&#x2F;&#x2F; 显示填充符号编辑器\n            break;\n    &#125;\n &#125;</code></pre>\n<h2 id=\"数据源-soDataSource\"><a href=\"#数据源-soDataSource\" class=\"headerlink\" title=\"数据源(soDataSource)\"></a>数据源(soDataSource)</h2><p>数据源是存储空间数据的场所。空间数据存放于数据源中，<strong>任何对空间数据的操作</strong>都需要先<strong>打开或者获得</strong>数据源<br>    空间数据的存储方式有两种:</p>\n<blockquote>\n<p><em>文件存储与关系数据库存储</em></p>\n</blockquote>\n<h2 id=\"数据集-soDataset\"><a href=\"#数据集-soDataset\" class=\"headerlink\" title=\"数据集(soDataset)\"></a>数据集(soDataset)</h2><ol>\n<li>数据集</li>\n</ol>\n<ul>\n<li>数据集是SuperMap Objects<strong>基本组织单位</strong></li>\n<li>一个数据源通常由多个不同类型数据集组成</li>\n<li>分为栅格数据集、矢量数据集、非空间数据集(属性数据集)</li>\n</ul>\n<ol>\n<li><strong>获取数据集方法</strong></li>\n</ol>\n<ul>\n<li>从数据源获取</li>\n<li>从工作空间获取</li>\n<li>从打开的图层获取</li>\n<li>从选择集获取</li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211201160335.png\" alt=\"\"></p>\n<h3 id=\"记录集-soRecordset\"><a href=\"#记录集-soRecordset\" class=\"headerlink\" title=\"记录集(soRecordset)\"></a>记录集(soRecordset)</h3><ul>\n<li>记录是处理和存储实体信息的基本单位，记录的集合叫记录集</li>\n<li><strong>每一个矢量数据集对应一个完整的记录集，每一个空间几何对象对应一条记录</strong></li>\n</ul>\n<h2 id=\"图层-soLayer\"><a href=\"#图层-soLayer\" class=\"headerlink\" title=\"图层(soLayer)\"></a>图层(soLayer)</h2><ul>\n<li>一个图层必然对应一个数据集</li>\n<li>同一个<strong>数据集可以对应多个图层</strong></li>\n<li><strong>数据集的显示</strong>是在地图窗口中以<strong>图层的方式显示</strong></li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211125212307.png\" alt=\"\"></p>\n<h2 id=\"布局-soLayout\"><a href=\"#布局-soLayout\" class=\"headerlink\" title=\"布局(soLayout)\"></a>布局(soLayout)</h2><ul>\n<li><p>SuperLayout控件创建</p>\n<blockquote>\n<p>确切的说,把一个或者多个地图放置在SuperLayout布局窗口中，并辅以其他的辅助制图要素如图名﹑图例就成为布局</p>\n</blockquote>\n</li>\n<li><p>布局主要用于<strong>空间数据的输出</strong></p>\n</li>\n<li><p>一个工作空间可以有多个布局</p>\n</li>\n<li><p>同地图保存一样，<strong>布局的保存依赖于工作空间保存</strong></p>\n</li>\n</ul>\n<h2 id=\"三维场景-soScenes\"><a href=\"#三维场景-soScenes\" class=\"headerlink\" title=\"三维场景(soScenes)\"></a>三维场景(soScenes)</h2><p>主要存放保存的三维地图窗口。<strong>三维场景地图由一个或多个三维图层组成，存储于工作空间中</strong>。三维图层用so3DLayer表示，一个三维地图窗口上可以添加多个图层，即so3DLayers</p>\n<h2 id=\"资源-soResoures\"><a href=\"#资源-soResoures\" class=\"headerlink\" title=\"资源(soResoures)\"></a>资源(soResoures)</h2><ul>\n<li>存放了系统中打开和制作的符号、线型和填充符</li>\n<li>资源用于管理符号库( <strong>soSymbolLib</strong> )、线型库( <strong>soLineStyleLib</strong> )和填充库( <strong>soFillStyleLib</strong> )</li>\n<li>线型库文件 后缀(<em>.lsl)、符号库文件 后缀(</em>.sym)</li>\n</ul>\n<h2 id=\"几何对象-soGeometry\"><a href=\"#几何对象-soGeometry\" class=\"headerlink\" title=\"几何对象(soGeometry)\"></a>几何对象(soGeometry)</h2><ol>\n<li>几何对象</li>\n</ol>\n<ul>\n<li>点、线、面、文本、复合几何对象、参数化几何对象</li>\n</ul>\n<ol>\n<li>soGeometry 获得途径</li>\n</ol>\n<ul>\n<li>从记录集中获取</li>\n<li>从符号转化而来</li>\n<li>从参数化的几何对象通过ConvertToLine或者ConvertToRegion方法转化而来</li>\n</ul>\n<ul>\n<li>选择题30分 15题 设计 开发(方法、参数、返回值)</li>\n<li>简答题30分 5题</li>\n<li>编程题40分 4题 5个句子</li>\n</ul>\n"},{"title":"Supermap","date":"2021-07-13T07:18:56.000Z","_content":"\n# iServer食用方法🤔:\n\n<!-- more -->\n\n## iSever帮助文档路径\n\n`root\\supermap-iserver-10.1.1-win64-zip\\docs`\n\n## 示例代码路径\n\n`root\\supermap-iserver-10.1.1-win64-zip\\iClient`\n\n## 启动iServer服务\n\n`root\\supermap-iserver-10.1.1-win64-zip\\bin\\startup.bat`\n\n出现\n```basic\n13-Jul-2021 15:40:49.375 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Web应用程序目录[D:\\GIS\\supermap-iserver-10.1.1-win64-zip\\webapps\\iserver]的部署已在[101,950]毫秒内完成\n13-Jul-2021 15:40:49.376 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory 把web 应用 程序部署到目录 [D:\\GIS\\supermap-iserver-10.1.1-win64-zip\\webapps\\ROOT]\n13-Jul-2021 15:40:49.402 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Web应用程序目录[D:\\GIS\\supermap-iserver-10.1.1-win64-zip\\webapps\\ROOT]的部署已在[26]毫秒内完成\n13-Jul-2021 15:40:49.402 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory 把web 应用 程序部署到目录 [D:\\GIS\\supermap-iserver-10.1.1-win64-zip\\webapps\\study]\n13-Jul-2021 15:40:49.426 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Web应用程序目录[D:\\GIS\\supermap-iserver-10.1.1-win64-zip\\webapps\\study]的部署已在[24]毫秒内完成\n13-Jul-2021 15:40:49.432 信息 [main] org.apache.coyote.AbstractProtocol.start 开始协议处理句柄[\"http-nio-8090\"]\n13-Jul-2021 15:40:49.448 信息 [main] org.apache.catalina.startup.Catalina.start Server startup in 103077 ms\n13-Jul-2021 15:43:09.858 信息 [http-nio-8090-exec-8] org.restlet.Application.start Starting com.supermap.services.rest.RestApplication application\n```\n\n启动成功\n\n浏览器打开 http://localhost:8090/iserver/ 默认端口号为8090\n\n## 终止iServer服务\n\n`root\\supermap-iserver-10.1.1-win64-zip\\bin\\shutdown`\n\n[官方教学网址](https://wx.vzan.com/live/pc/index?liveId=1149463133&shareuid=0)\n\n# Map\n\n创建一幅地图\n\n```html\n// initialize the map on the \"map\" div with a given center and zoom\nvar map = L.map('map', {\n    center: [51.505, -0.09],\n    zoom: 13\n});\n```\n\n[用法](https://leafletjs.com/reference-1.7.1.html#map-option)\n\n```html\nL.map(<String> id, <Map options> options?)\nL.map(<HTMLElement> el, <Map options> options?)\n```\n\nOptions\n\ncrs 坐标系\n\ncenter 初始化地图位置\n\nzoom 设置缩放级别\n\n# [L](https://iclient.supermap.io/docs/leaflet/L.html)[.supermap](https://iclient.supermap.io/docs/leaflet/L.supermap.html).themeService\n\n`专题图服务`\n\n#### L.supermap.themeService(url, options)\n\n```html\nL.supermap.themeService(url,{\n     projection:projection\n }).getThemeInfo(params,function(result){\n     //doSomething\n});\n```\n\n## [L](https://iclient.supermap.io/docs/leaflet/L.html)[.supermap](https://iclient.supermap.io/docs/leaflet/L.supermap.html).tiledVectorLayer\n\n矢量瓦片图层\n\n```html\nL.supermap.tiledVectorLayer(url).addTo(map);\n```\n\ncontrol.layers\n\n图层控制\n\n  leaflet有两种类型的图层：\n\n   （1）**base layer**：互斥的图层（在地图上同一时间只能有一个图层可见），比如tile layers；\n\n   （2）**overlayers**：在base layer之上放置的其他东西。\n\n我们将前面找的图层资源以base layer形式加载，那么我们一次就只能显示其中一个（而overlayers可以同时显示多个），可以通过 layerControl 切换图层\n\n第一个添加的图层作为底图，后面添加的地图对其覆盖\n\n```html\nL.control.layers(<Object> *baselayers?*, <Object> *overlays?*, <[Control.Layers options]> options)\n```\n\n```javascript\nvar baseLayers = {\n    \"Mapbox\": mapbox,\n    \"OpenStreetMap\": osm\n};\n\nvar overlays = {\n    \"Marker\": marker,\n    \"Roads\": roadsLayer\n};\n```\n\n```javascript\nL.control.layers(baseLayers, overlays).addTo(map);\n```\n\n```javascript\ncollapsed // 折叠\n```\n\n## [GEOJSON](https://leafletjs.com/reference-1.7.1.html#geojson)\n\n地图Json数据解析\n\nexample\n\n```javascript\nL.geoJSON(data, {\n    style: function (feature) {\n        return {color: feature.properties.color};\n    }\n}).bindPopup(function (layer) {\n    return layer.feature.properties.description;\n}).addTo(map);\n```\n\n\n\n| Options       | Creation                                   | Description            |\n| ------------- | ------------------------------------------ | ---------------------- |\n| onEachFeature | function (feature, layer) {}               | 新创建事件是调用函数   |\n| style         | function (geoJsonFeature) {    return {} } | 添加数据时定义Json样式 |\n\n","source":"_posts/Supermap.md","raw":"---\ntitle: Supermap\ndate: 2021-07-13 15:18:56\ntags: Supermap\ncategories: Supermap\n---\n\n# iServer食用方法🤔:\n\n<!-- more -->\n\n## iSever帮助文档路径\n\n`root\\supermap-iserver-10.1.1-win64-zip\\docs`\n\n## 示例代码路径\n\n`root\\supermap-iserver-10.1.1-win64-zip\\iClient`\n\n## 启动iServer服务\n\n`root\\supermap-iserver-10.1.1-win64-zip\\bin\\startup.bat`\n\n出现\n```basic\n13-Jul-2021 15:40:49.375 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Web应用程序目录[D:\\GIS\\supermap-iserver-10.1.1-win64-zip\\webapps\\iserver]的部署已在[101,950]毫秒内完成\n13-Jul-2021 15:40:49.376 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory 把web 应用 程序部署到目录 [D:\\GIS\\supermap-iserver-10.1.1-win64-zip\\webapps\\ROOT]\n13-Jul-2021 15:40:49.402 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Web应用程序目录[D:\\GIS\\supermap-iserver-10.1.1-win64-zip\\webapps\\ROOT]的部署已在[26]毫秒内完成\n13-Jul-2021 15:40:49.402 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory 把web 应用 程序部署到目录 [D:\\GIS\\supermap-iserver-10.1.1-win64-zip\\webapps\\study]\n13-Jul-2021 15:40:49.426 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Web应用程序目录[D:\\GIS\\supermap-iserver-10.1.1-win64-zip\\webapps\\study]的部署已在[24]毫秒内完成\n13-Jul-2021 15:40:49.432 信息 [main] org.apache.coyote.AbstractProtocol.start 开始协议处理句柄[\"http-nio-8090\"]\n13-Jul-2021 15:40:49.448 信息 [main] org.apache.catalina.startup.Catalina.start Server startup in 103077 ms\n13-Jul-2021 15:43:09.858 信息 [http-nio-8090-exec-8] org.restlet.Application.start Starting com.supermap.services.rest.RestApplication application\n```\n\n启动成功\n\n浏览器打开 http://localhost:8090/iserver/ 默认端口号为8090\n\n## 终止iServer服务\n\n`root\\supermap-iserver-10.1.1-win64-zip\\bin\\shutdown`\n\n[官方教学网址](https://wx.vzan.com/live/pc/index?liveId=1149463133&shareuid=0)\n\n# Map\n\n创建一幅地图\n\n```html\n// initialize the map on the \"map\" div with a given center and zoom\nvar map = L.map('map', {\n    center: [51.505, -0.09],\n    zoom: 13\n});\n```\n\n[用法](https://leafletjs.com/reference-1.7.1.html#map-option)\n\n```html\nL.map(<String> id, <Map options> options?)\nL.map(<HTMLElement> el, <Map options> options?)\n```\n\nOptions\n\ncrs 坐标系\n\ncenter 初始化地图位置\n\nzoom 设置缩放级别\n\n# [L](https://iclient.supermap.io/docs/leaflet/L.html)[.supermap](https://iclient.supermap.io/docs/leaflet/L.supermap.html).themeService\n\n`专题图服务`\n\n#### L.supermap.themeService(url, options)\n\n```html\nL.supermap.themeService(url,{\n     projection:projection\n }).getThemeInfo(params,function(result){\n     //doSomething\n});\n```\n\n## [L](https://iclient.supermap.io/docs/leaflet/L.html)[.supermap](https://iclient.supermap.io/docs/leaflet/L.supermap.html).tiledVectorLayer\n\n矢量瓦片图层\n\n```html\nL.supermap.tiledVectorLayer(url).addTo(map);\n```\n\ncontrol.layers\n\n图层控制\n\n  leaflet有两种类型的图层：\n\n   （1）**base layer**：互斥的图层（在地图上同一时间只能有一个图层可见），比如tile layers；\n\n   （2）**overlayers**：在base layer之上放置的其他东西。\n\n我们将前面找的图层资源以base layer形式加载，那么我们一次就只能显示其中一个（而overlayers可以同时显示多个），可以通过 layerControl 切换图层\n\n第一个添加的图层作为底图，后面添加的地图对其覆盖\n\n```html\nL.control.layers(<Object> *baselayers?*, <Object> *overlays?*, <[Control.Layers options]> options)\n```\n\n```javascript\nvar baseLayers = {\n    \"Mapbox\": mapbox,\n    \"OpenStreetMap\": osm\n};\n\nvar overlays = {\n    \"Marker\": marker,\n    \"Roads\": roadsLayer\n};\n```\n\n```javascript\nL.control.layers(baseLayers, overlays).addTo(map);\n```\n\n```javascript\ncollapsed // 折叠\n```\n\n## [GEOJSON](https://leafletjs.com/reference-1.7.1.html#geojson)\n\n地图Json数据解析\n\nexample\n\n```javascript\nL.geoJSON(data, {\n    style: function (feature) {\n        return {color: feature.properties.color};\n    }\n}).bindPopup(function (layer) {\n    return layer.feature.properties.description;\n}).addTo(map);\n```\n\n\n\n| Options       | Creation                                   | Description            |\n| ------------- | ------------------------------------------ | ---------------------- |\n| onEachFeature | function (feature, layer) {}               | 新创建事件是调用函数   |\n| style         | function (geoJsonFeature) {    return {} } | 添加数据时定义Json样式 |\n\n","slug":"Supermap","published":1,"updated":"2021-07-16T11:00:04.881Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2l000qjsvkgw8ogtss","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"iServer食用方法🤔\"><a href=\"#iServer食用方法🤔\" class=\"headerlink\" title=\"iServer食用方法🤔:\"></a>iServer食用方法🤔:</h1><span id=\"more\"></span>\n<h2 id=\"iSever帮助文档路径\"><a href=\"#iSever帮助文档路径\" class=\"headerlink\" title=\"iSever帮助文档路径\"></a>iSever帮助文档路径</h2><p><code>root\\supermap-iserver-10.1.1-win64-zip\\docs</code></p>\n<h2 id=\"示例代码路径\"><a href=\"#示例代码路径\" class=\"headerlink\" title=\"示例代码路径\"></a>示例代码路径</h2><p><code>root\\supermap-iserver-10.1.1-win64-zip\\iClient</code></p>\n<h2 id=\"启动iServer服务\"><a href=\"#启动iServer服务\" class=\"headerlink\" title=\"启动iServer服务\"></a>启动iServer服务</h2><p><code>root\\supermap-iserver-10.1.1-win64-zip\\bin\\startup.bat</code></p>\n<p>出现<br><pre class=\"language-basic\" data-language=\"basic\"><code class=\"language-basic\"><span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.375</span> 信息 [localhost<span class=\"token operator\">-</span>startStop<span class=\"token operator\">-</span><span class=\"token number\">1</span>] org.apache.catalina.startup.HostConfig.deployDirectory Web应用程序目录[D<span class=\"token punctuation\">:</span>\\GIS\\supermap<span class=\"token operator\">-</span>iserver<span class=\"token operator\">-</span><span class=\"token number\">10.1</span><span class=\"token number\">.1</span><span class=\"token operator\">-</span>win64<span class=\"token operator\">-</span>zip\\webapps\\iserver]的部署已在[<span class=\"token number\">101</span><span class=\"token punctuation\">,</span><span class=\"token number\">950</span>]毫秒内完成\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.376</span> 信息 [localhost<span class=\"token operator\">-</span>startStop<span class=\"token operator\">-</span><span class=\"token number\">1</span>] org.apache.catalina.startup.HostConfig.deployDirectory 把web 应用 程序部署到目录 [D<span class=\"token punctuation\">:</span>\\GIS\\supermap<span class=\"token operator\">-</span>iserver<span class=\"token operator\">-</span><span class=\"token number\">10.1</span><span class=\"token number\">.1</span><span class=\"token operator\">-</span>win64<span class=\"token operator\">-</span>zip\\webapps\\ROOT]\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.402</span> 信息 [localhost<span class=\"token operator\">-</span>startStop<span class=\"token operator\">-</span><span class=\"token number\">1</span>] org.apache.catalina.startup.HostConfig.deployDirectory Web应用程序目录[D<span class=\"token punctuation\">:</span>\\GIS\\supermap<span class=\"token operator\">-</span>iserver<span class=\"token operator\">-</span><span class=\"token number\">10.1</span><span class=\"token number\">.1</span><span class=\"token operator\">-</span>win64<span class=\"token operator\">-</span>zip\\webapps\\ROOT]的部署已在[<span class=\"token number\">26</span>]毫秒内完成\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.402</span> 信息 [localhost<span class=\"token operator\">-</span>startStop<span class=\"token operator\">-</span><span class=\"token number\">1</span>] org.apache.catalina.startup.HostConfig.deployDirectory 把web 应用 程序部署到目录 [D<span class=\"token punctuation\">:</span>\\GIS\\supermap<span class=\"token operator\">-</span>iserver<span class=\"token operator\">-</span><span class=\"token number\">10.1</span><span class=\"token number\">.1</span><span class=\"token operator\">-</span>win64<span class=\"token operator\">-</span>zip\\webapps\\study]\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.426</span> 信息 [localhost<span class=\"token operator\">-</span>startStop<span class=\"token operator\">-</span><span class=\"token number\">1</span>] org.apache.catalina.startup.HostConfig.deployDirectory Web应用程序目录[D<span class=\"token punctuation\">:</span>\\GIS\\supermap<span class=\"token operator\">-</span>iserver<span class=\"token operator\">-</span><span class=\"token number\">10.1</span><span class=\"token number\">.1</span><span class=\"token operator\">-</span>win64<span class=\"token operator\">-</span>zip\\webapps\\study]的部署已在[<span class=\"token number\">24</span>]毫秒内完成\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.432</span> 信息 [main] org.apache.coyote.AbstractProtocol.start 开始协议处理句柄[<span class=\"token string\">\"http-nio-8090\"</span>]\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.448</span> 信息 [main] org.apache.catalina.startup.Catalina.start Server startup <span class=\"token function\">in</span> <span class=\"token number\">103077</span> ms\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">43</span><span class=\"token punctuation\">:</span><span class=\"token number\">09.858</span> 信息 [http<span class=\"token operator\">-</span>nio<span class=\"token operator\">-</span><span class=\"token number\">8090</span><span class=\"token operator\">-</span>exec<span class=\"token operator\">-</span><span class=\"token number\">8</span>] org.restlet.Application.start Starting <span class=\"token keyword\">com</span>.supermap.services.<span class=\"token function\">rest</span>.RestApplication application</code></pre></p>\n<p>启动成功</p>\n<p>浏览器打开 <a href=\"http://localhost:8090/iserver/\">http://localhost:8090/iserver/</a> 默认端口号为8090</p>\n<h2 id=\"终止iServer服务\"><a href=\"#终止iServer服务\" class=\"headerlink\" title=\"终止iServer服务\"></a>终止iServer服务</h2><p><code>root\\supermap-iserver-10.1.1-win64-zip\\bin\\shutdown</code></p>\n<p><a href=\"https://wx.vzan.com/live/pc/index?liveId=1149463133&amp;shareuid=0\">官方教学网址</a></p>\n<h1 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h1><p>创建一幅地图</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">// initialize the map on the \"map\" div with a given center and zoom\nvar map = L.map('map', &#123;\n    center: [51.505, -0.09],\n    zoom: 13\n&#125;);</code></pre>\n<p><a href=\"https://leafletjs.com/reference-1.7.1.html#map-option\">用法</a></p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">L.map(<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>String</span><span class=\"token punctuation\">></span></span> id, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Map</span> <span class=\"token attr-name\">options</span><span class=\"token punctuation\">></span></span> options?)\nL.map(<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>HTMLElement</span><span class=\"token punctuation\">></span></span> el, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Map</span> <span class=\"token attr-name\">options</span><span class=\"token punctuation\">></span></span> options?)</code></pre>\n<p>Options</p>\n<p>crs 坐标系</p>\n<p>center 初始化地图位置</p>\n<p>zoom 设置缩放级别</p>\n<h1 id=\"L-supermap-themeService\"><a href=\"#L-supermap-themeService\" class=\"headerlink\" title=\"L.supermap.themeService\"></a><a href=\"https://iclient.supermap.io/docs/leaflet/L.html\">L</a><a href=\"https://iclient.supermap.io/docs/leaflet/L.supermap.html\">.supermap</a>.themeService</h1><p><code>专题图服务</code></p>\n<h4 id=\"L-supermap-themeService-url-options\"><a href=\"#L-supermap-themeService-url-options\" class=\"headerlink\" title=\"L.supermap.themeService(url, options)\"></a>L.supermap.themeService(url, options)</h4><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">L.supermap.themeService(url,&#123;\n     projection:projection\n &#125;).getThemeInfo(params,function(result)&#123;\n     //doSomething\n&#125;);</code></pre>\n<h2 id=\"L-supermap-tiledVectorLayer\"><a href=\"#L-supermap-tiledVectorLayer\" class=\"headerlink\" title=\"L.supermap.tiledVectorLayer\"></a><a href=\"https://iclient.supermap.io/docs/leaflet/L.html\">L</a><a href=\"https://iclient.supermap.io/docs/leaflet/L.supermap.html\">.supermap</a>.tiledVectorLayer</h2><p>矢量瓦片图层</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">L.supermap.tiledVectorLayer(url).addTo(map);</code></pre>\n<p>control.layers</p>\n<p>图层控制</p>\n<p>  leaflet有两种类型的图层：</p>\n<p>   （1）<strong>base layer</strong>：互斥的图层（在地图上同一时间只能有一个图层可见），比如tile layers；</p>\n<p>   （2）<strong>overlayers</strong>：在base layer之上放置的其他东西。</p>\n<p>我们将前面找的图层资源以base layer形式加载，那么我们一次就只能显示其中一个（而overlayers可以同时显示多个），可以通过 layerControl 切换图层</p>\n<p>第一个添加的图层作为底图，后面添加的地图对其覆盖</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">L.control.layers(<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Object</span><span class=\"token punctuation\">></span></span> *baselayers?*, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Object</span><span class=\"token punctuation\">></span></span> *overlays?*, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>[Control.Layers</span> <span class=\"token attr-name\">options]</span><span class=\"token punctuation\">></span></span> options)</code></pre>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> baseLayers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"Mapbox\"</span><span class=\"token operator\">:</span> mapbox<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"OpenStreetMap\"</span><span class=\"token operator\">:</span> osm\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> overlays <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"Marker\"</span><span class=\"token operator\">:</span> marker<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Roads\"</span><span class=\"token operator\">:</span> roadsLayer\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></code></pre>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">.</span><span class=\"token function\">layers</span><span class=\"token punctuation\">(</span>baseLayers<span class=\"token punctuation\">,</span> overlays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">collapsed <span class=\"token comment\">// 折叠</span></code></pre>\n<h2 id=\"GEOJSON\"><a href=\"#GEOJSON\" class=\"headerlink\" title=\"GEOJSON\"></a><a href=\"https://leafletjs.com/reference-1.7.1.html#geojson\">GEOJSON</a></h2><p>地图Json数据解析</p>\n<p>example</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">geoJSON</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">style</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">feature</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>color<span class=\"token operator\">:</span> feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bindPopup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">layer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> layer<span class=\"token punctuation\">.</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Options</th>\n<th>Creation</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onEachFeature</td>\n<td>function (feature, layer) {}</td>\n<td>新创建事件是调用函数</td>\n</tr>\n<tr>\n<td>style</td>\n<td>function (geoJsonFeature) {    return {} }</td>\n<td>添加数据时定义Json样式</td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220124161839.webp","length":2913,"excerpt":"<h1 id=\"iServer食用方法🤔\"><a href=\"#iServer食用方法🤔\" class=\"headerlink\" title=\"iServer食用方法🤔:\"></a>iServer食用方法🤔:</h1>","more":"<h2 id=\"iSever帮助文档路径\"><a href=\"#iSever帮助文档路径\" class=\"headerlink\" title=\"iSever帮助文档路径\"></a>iSever帮助文档路径</h2><p><code>root\\supermap-iserver-10.1.1-win64-zip\\docs</code></p>\n<h2 id=\"示例代码路径\"><a href=\"#示例代码路径\" class=\"headerlink\" title=\"示例代码路径\"></a>示例代码路径</h2><p><code>root\\supermap-iserver-10.1.1-win64-zip\\iClient</code></p>\n<h2 id=\"启动iServer服务\"><a href=\"#启动iServer服务\" class=\"headerlink\" title=\"启动iServer服务\"></a>启动iServer服务</h2><p><code>root\\supermap-iserver-10.1.1-win64-zip\\bin\\startup.bat</code></p>\n<p>出现<br><pre class=\"language-basic\" data-language=\"basic\"><code class=\"language-basic\"><span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.375</span> 信息 [localhost<span class=\"token operator\">-</span>startStop<span class=\"token operator\">-</span><span class=\"token number\">1</span>] org.apache.catalina.startup.HostConfig.deployDirectory Web应用程序目录[D<span class=\"token punctuation\">:</span>\\GIS\\supermap<span class=\"token operator\">-</span>iserver<span class=\"token operator\">-</span><span class=\"token number\">10.1</span><span class=\"token number\">.1</span><span class=\"token operator\">-</span>win64<span class=\"token operator\">-</span>zip\\webapps\\iserver]的部署已在[<span class=\"token number\">101</span><span class=\"token punctuation\">,</span><span class=\"token number\">950</span>]毫秒内完成\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.376</span> 信息 [localhost<span class=\"token operator\">-</span>startStop<span class=\"token operator\">-</span><span class=\"token number\">1</span>] org.apache.catalina.startup.HostConfig.deployDirectory 把web 应用 程序部署到目录 [D<span class=\"token punctuation\">:</span>\\GIS\\supermap<span class=\"token operator\">-</span>iserver<span class=\"token operator\">-</span><span class=\"token number\">10.1</span><span class=\"token number\">.1</span><span class=\"token operator\">-</span>win64<span class=\"token operator\">-</span>zip\\webapps\\ROOT]\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.402</span> 信息 [localhost<span class=\"token operator\">-</span>startStop<span class=\"token operator\">-</span><span class=\"token number\">1</span>] org.apache.catalina.startup.HostConfig.deployDirectory Web应用程序目录[D<span class=\"token punctuation\">:</span>\\GIS\\supermap<span class=\"token operator\">-</span>iserver<span class=\"token operator\">-</span><span class=\"token number\">10.1</span><span class=\"token number\">.1</span><span class=\"token operator\">-</span>win64<span class=\"token operator\">-</span>zip\\webapps\\ROOT]的部署已在[<span class=\"token number\">26</span>]毫秒内完成\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.402</span> 信息 [localhost<span class=\"token operator\">-</span>startStop<span class=\"token operator\">-</span><span class=\"token number\">1</span>] org.apache.catalina.startup.HostConfig.deployDirectory 把web 应用 程序部署到目录 [D<span class=\"token punctuation\">:</span>\\GIS\\supermap<span class=\"token operator\">-</span>iserver<span class=\"token operator\">-</span><span class=\"token number\">10.1</span><span class=\"token number\">.1</span><span class=\"token operator\">-</span>win64<span class=\"token operator\">-</span>zip\\webapps\\study]\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.426</span> 信息 [localhost<span class=\"token operator\">-</span>startStop<span class=\"token operator\">-</span><span class=\"token number\">1</span>] org.apache.catalina.startup.HostConfig.deployDirectory Web应用程序目录[D<span class=\"token punctuation\">:</span>\\GIS\\supermap<span class=\"token operator\">-</span>iserver<span class=\"token operator\">-</span><span class=\"token number\">10.1</span><span class=\"token number\">.1</span><span class=\"token operator\">-</span>win64<span class=\"token operator\">-</span>zip\\webapps\\study]的部署已在[<span class=\"token number\">24</span>]毫秒内完成\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.432</span> 信息 [main] org.apache.coyote.AbstractProtocol.start 开始协议处理句柄[<span class=\"token string\">\"http-nio-8090\"</span>]\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">49.448</span> 信息 [main] org.apache.catalina.startup.Catalina.start Server startup <span class=\"token function\">in</span> <span class=\"token number\">103077</span> ms\n<span class=\"token number\">13</span><span class=\"token operator\">-</span>Jul<span class=\"token operator\">-</span><span class=\"token number\">2021</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">43</span><span class=\"token punctuation\">:</span><span class=\"token number\">09.858</span> 信息 [http<span class=\"token operator\">-</span>nio<span class=\"token operator\">-</span><span class=\"token number\">8090</span><span class=\"token operator\">-</span>exec<span class=\"token operator\">-</span><span class=\"token number\">8</span>] org.restlet.Application.start Starting <span class=\"token keyword\">com</span>.supermap.services.<span class=\"token function\">rest</span>.RestApplication application</code></pre></p>\n<p>启动成功</p>\n<p>浏览器打开 <a href=\"http://localhost:8090/iserver/\">http://localhost:8090/iserver/</a> 默认端口号为8090</p>\n<h2 id=\"终止iServer服务\"><a href=\"#终止iServer服务\" class=\"headerlink\" title=\"终止iServer服务\"></a>终止iServer服务</h2><p><code>root\\supermap-iserver-10.1.1-win64-zip\\bin\\shutdown</code></p>\n<p><a href=\"https://wx.vzan.com/live/pc/index?liveId=1149463133&amp;shareuid=0\">官方教学网址</a></p>\n<h1 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h1><p>创建一幅地图</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">// initialize the map on the \"map\" div with a given center and zoom\nvar map = L.map('map', &#123;\n    center: [51.505, -0.09],\n    zoom: 13\n&#125;);</code></pre>\n<p><a href=\"https://leafletjs.com/reference-1.7.1.html#map-option\">用法</a></p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">L.map(<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>String</span><span class=\"token punctuation\">></span></span> id, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Map</span> <span class=\"token attr-name\">options</span><span class=\"token punctuation\">></span></span> options?)\nL.map(<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>HTMLElement</span><span class=\"token punctuation\">></span></span> el, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Map</span> <span class=\"token attr-name\">options</span><span class=\"token punctuation\">></span></span> options?)</code></pre>\n<p>Options</p>\n<p>crs 坐标系</p>\n<p>center 初始化地图位置</p>\n<p>zoom 设置缩放级别</p>\n<h1 id=\"L-supermap-themeService\"><a href=\"#L-supermap-themeService\" class=\"headerlink\" title=\"L.supermap.themeService\"></a><a href=\"https://iclient.supermap.io/docs/leaflet/L.html\">L</a><a href=\"https://iclient.supermap.io/docs/leaflet/L.supermap.html\">.supermap</a>.themeService</h1><p><code>专题图服务</code></p>\n<h4 id=\"L-supermap-themeService-url-options\"><a href=\"#L-supermap-themeService-url-options\" class=\"headerlink\" title=\"L.supermap.themeService(url, options)\"></a>L.supermap.themeService(url, options)</h4><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">L.supermap.themeService(url,&#123;\n     projection:projection\n &#125;).getThemeInfo(params,function(result)&#123;\n     //doSomething\n&#125;);</code></pre>\n<h2 id=\"L-supermap-tiledVectorLayer\"><a href=\"#L-supermap-tiledVectorLayer\" class=\"headerlink\" title=\"L.supermap.tiledVectorLayer\"></a><a href=\"https://iclient.supermap.io/docs/leaflet/L.html\">L</a><a href=\"https://iclient.supermap.io/docs/leaflet/L.supermap.html\">.supermap</a>.tiledVectorLayer</h2><p>矢量瓦片图层</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">L.supermap.tiledVectorLayer(url).addTo(map);</code></pre>\n<p>control.layers</p>\n<p>图层控制</p>\n<p>  leaflet有两种类型的图层：</p>\n<p>   （1）<strong>base layer</strong>：互斥的图层（在地图上同一时间只能有一个图层可见），比如tile layers；</p>\n<p>   （2）<strong>overlayers</strong>：在base layer之上放置的其他东西。</p>\n<p>我们将前面找的图层资源以base layer形式加载，那么我们一次就只能显示其中一个（而overlayers可以同时显示多个），可以通过 layerControl 切换图层</p>\n<p>第一个添加的图层作为底图，后面添加的地图对其覆盖</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">L.control.layers(<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Object</span><span class=\"token punctuation\">></span></span> *baselayers?*, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Object</span><span class=\"token punctuation\">></span></span> *overlays?*, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>[Control.Layers</span> <span class=\"token attr-name\">options]</span><span class=\"token punctuation\">></span></span> options)</code></pre>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> baseLayers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"Mapbox\"</span><span class=\"token operator\">:</span> mapbox<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"OpenStreetMap\"</span><span class=\"token operator\">:</span> osm\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> overlays <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"Marker\"</span><span class=\"token operator\">:</span> marker<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Roads\"</span><span class=\"token operator\">:</span> roadsLayer\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></code></pre>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">.</span><span class=\"token function\">layers</span><span class=\"token punctuation\">(</span>baseLayers<span class=\"token punctuation\">,</span> overlays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">collapsed <span class=\"token comment\">// 折叠</span></code></pre>\n<h2 id=\"GEOJSON\"><a href=\"#GEOJSON\" class=\"headerlink\" title=\"GEOJSON\"></a><a href=\"https://leafletjs.com/reference-1.7.1.html#geojson\">GEOJSON</a></h2><p>地图Json数据解析</p>\n<p>example</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">geoJSON</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">style</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">feature</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>color<span class=\"token operator\">:</span> feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bindPopup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">layer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> layer<span class=\"token punctuation\">.</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Options</th>\n<th>Creation</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onEachFeature</td>\n<td>function (feature, layer) {}</td>\n<td>新创建事件是调用函数</td>\n</tr>\n<tr>\n<td>style</td>\n<td>function (geoJsonFeature) {    return {} }</td>\n<td>添加数据时定义Json样式</td>\n</tr>\n</tbody>\n</table>\n</div>"},{"title":"Supermap代码编写原则","date":"2021-07-13T07:34:52.000Z","_content":"\n\n\n## 范例编写原则说明\n\n<!-- more -->\n\n1. [目录结构](#example-1)\n2. [完整步骤](#example-2)\n3. [范例创建](#example-3)\n   * [脚本引用](#example-3-1)\n   * [服务地址](#example-3-2)\n   * [统一样式](#example-3-3)  \n4. [缩略图规范](#example-4)\n5. [配置文件](#example-5)\n6. [离线开发](#example-6)\n   * [克隆代码](#example-6-1)\n   * [开发](#example-6-2)\n7. [注意事项](#example-7)\n\n\n<h3 id=\"example-1\">目录结构</h3>\n\n范例目录结构：\n\n``` \n          /example\n              ├─css         公共css目录\n              ├─fonts       公共字体目录\n              ├─img         公共图片目录\n              ├─js          公共js目录\n              ├─section     公共模板目录(包括范例站点的公共头部和主体框架等)\n              ├─data        范例中使用的公共数据\n              │\n              ├─leaflet         leaflet范例目录\n              │   ├─img             缩略图目录\n              │   └─config.js       配置文件\n              ├─mapboxgl        mapboxgl范例目录\n              │   ├─img             缩略图目录\n              │   └─config.js       配置文件\n              ├─openlay         openlay范例目录\n              │   ├─img             缩略图目录\n              │   └─config.js       配置文件\n              ├─classic         classic范例目录\n              │   ├─img             缩略图目录\n              │   └─config.js       配置文件\n              └─3dwebgl         3dwebgl范例目录\n                  ├─img             缩略图目录\n                  └─config.js       配置文件  \n  \n  \n```\n\n<h3 id=\"example-2\">完整步骤</h3>\n\n      1. 在对应的客户端根目录下创建范例(具体规范请参考：[范例创建](#example-3))\n      2. 截取范例缩略图(具体规范请参考：[缩略图规范](#example-4))，并存放到对应的客户端目录下img目录\n      3. 修改对应的客户端根目录下的`config.js`文件(具体参数请参考：[配置文件](#example-5))\n\n<h3 id=\"example-3\">范例创建</h3>\n\n 示例如下：\n\n ```html\n   <!DOCTYPE html>\n   <html>\n   <head>\n       <meta charset=\"utf-8\"/>\n       <title>quick start</title>\n       <script type=\"text/javascript\" include=\"bootstrap-css\" src=\"../js/include-web.js\"></script>\n       <style>\n           html, body {\n               width: 100%;  height: 100%;  margin: 0;  padding: 0;\n           }\n           #map {\n               width: 100%;  height: 100%;\n           }\n       </style>\n   </head>\n   <body>\n   <div id=\"map\"></div>\n   <script type=\"text/javascript\" src=\"../../dist/include-leaflet.js\"></script>\n   <script>\n       //your code\n   </script>\n   </body>\n   </html>\n ```\n\n 为满足多元化使用需求，请将示例中的服务地址修改如下：\n\n  ```javascript\n \n        var host = window.isLocal \n                 ? window.server\n                 : \"http://[public iServer domain/ip]:8090\";\n        var mapUrl=host+\"/iserver/services/map-world/rest/maps/World\";\n        //other code \n        //...   \n  ```\n\n <h4 id=\"example-3-1\">脚本引用</h4>\n\n   以leaflet为例\n      \n   引入脚本主要有两个：\n      \n   `/example/js/include-web.js`: 引入web相关库（如：jquery，bootstrap），所有库都使用公共CDN地址\n      \n   `/dist/include-xxx.js`: 引入gis相关库（如：leaflet，iclient-leaflet，d3,echarts），除iclient的库之外，所有库都建议使用公共CDN地址\n\n\n   * web相关库: 如果需要jquery，bootstrap等web相关库，引入`/example/js`公共目录下的`include-web.js`，引入格式如下：\n\n     ```html\n       <script type='text/javascript' include='XXX,XXX'  src='../js/include-web.js'></script>\n     ```\n\n     * `include`属性: 引入需要使用的库。多个库用\",\"号隔开。没有默认引入的库\n     * 没有`exclude`属性\n     * include中参数的具体值参考`include-web.js`\n\n   * gis相关库：script标签引入`dist`目录下的`include-leaflet.js`脚本，格式如下：\n\n     ```html\n       <script type='text/javascript' include='XXX,XXX' exclude='XXXX,XXXX' src='../../dist/include-leaflet.js'></script>\n     ```\n\n     * `include`属性: 需要使用的库(如leaflet相关插件,d3,mapv等)，多个库用\",\"号隔开。默认引入的库不用再次填加。\n       默认引入的库：客户端（leflet/openlayers/mapboxgl/iclient8c）相关库以及其对应的iclient相关库。如在本例(leaflet)中，默认引入的是：\n       `leaflet.js`,`leaflet.css` ,`iclient-leaflet`，`iclient-leaflet-css`\n     * `exclude`属性: 排除默认引入的库，多个库用\",\"号隔开。\n     * `include`和`exclude`中参数的具体值参考`include-xxx.js`\n\n   * 新增库：如果`include-web.js`或者`include-xxx.js`中没有需要的库，则参照以下方法引入三方库：\n\n     * 找到`include-web.js`或者`include-xxx.js`中的load方法\n     * 在load方法末尾添加如下代码:\n\n   ```javascript\n      if (inArray(includes, 'xxxx')) {//'xxxx'为引入include-XXX.js的script标签中include属性的值\n         inputCSS(\" libs CDN url\");\n         inputScript(\"libs CDN url\");\n      }\n   ```\n\n   * 建议使用CDN地址。 推荐的公共CDN：[BootCDN](https://www.bootcdn.cn) ([https://www.bootcdn.cn](https://www.bootcdn.cn))\n\n<h4 id=\"example-3-2\">服务地址</h4>\n\n   公共iServer服务地址: [https://iserver.supermap.io](https://iserver.supermap.io)\n\n   可指定其他公网可访问的iServer地址\n\n\n <h4 id=\"example-3-3\">统一样式</h4>\n\n   * 底图建议全屏\n   * 页面样式优先使用bootstrap，建议不要使用原生的HTML样式\n   * 等待加载界面\n     * 引入`include-web.js`脚本的script标签include属性中添加loader\n     * 显示loader: ```showLoader()```\n     * 移除loader: ```removeLoader()```\n   * ...等待补充\n\n\n\n\n<h3 id=\"example-4\">缩略图规范</h3>\n\n   * 建议大小：260*208（1:0.8），PNG8格式压缩\n   * 有动态效果的界面缩略图建议也使用gif格式动图\n   * 存放目录：对应客户端下的img目录（如`/example/leaflet/img`）\n\n\n<h3 id=\"example-5\">配置文件</h3> \n\n 每个客户端范例目录(如：`/example/leaflet`)下都有一个`config.js`文件，文件在站点初始化时读取。\n\n `config.js`中范例相关的配置项为`exampleConfig`，参数如下：\n\n 左边为侧边栏菜单，右边为示例列表\n\n ![config](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210713153504.png)\n\n\n<h3 id=\"example-6\">离线开发</h3> \n\n<div style=\"color:red\">离线开发需要内部权限，非授权用户请直接忽略。</div>\n\n为了使站点和示例在离线状态(如iServer中)能够正常使用，需要增加并修改另一个项目\n\n<h4 id=\"example-6-1\">克隆代码</h4>\n\n  离线开发项目地址：[https://gitee.com/isupermap/iclient-web](https://gitee.com/isupermap/iclient-web)\n\n  * clone代码到本地\n  * 更改项目目录名为web\n  * 将项目移动到你的iclient项目的根目录下,与example同级\n\n<h4 id=\"example-6-2\">开发</h4>\n\n**【脚本的使用跟在线的脚本一样，区别在于三方库全部为本地托管（`/web/libs`)】**\n\n离线开发涉及修改的相关的目录为：`/example`目录，`/web/build`目录，`/web/libs`目录\n\n* `/web`: 站点目录\n\n  * `/web/build`：离线引用脚本目录   \n\n  * `/web/libs`：离线三方库存放目录\n\n* `/example`：范例目录 \n\n\n#### /web\n\n脚本的使用跟在线的脚本一样，只不过路径不同，在具体范例中通过script标签引入`/web/build/`下的脚本\n\n相关的脚本为 `/web/build/include-xxx.js`和 `/web/build/include-web.js`,\n\n* `/web/build/include-web.js`: 引入web相关库（如：jquery，bootstrap）(使用相对路径)，相关库的存放目录为`/web/libs`\n\n* `/web/build/include-xxx.js`: 引入gis相关库（如：iclient-leaflet，leaflet）(使用相对路径)，相关库的存放目录为`/web/libs`\n\n\n* 新增库：如果`include-web.js`或者`include-xxx.js`中没有需要的库，则参照以下方法引入三方库：\n  * 下载三方库到本地\n  * 将三方库按文件夹移动到`/web/libs`目录\n  * 在三方库中的js文件中加上三方自己的版权标识(如果原先没有的话)，版权标识包括但不限于版权所有者，开源协议，软件版本等\n  * 找到`include-web.js`或者`include-xxx.js`中的load方法\n  * 在load方法末尾添加如下代码，注意路径必须是：`../../web/libs`\n\n ```javascript\n       if (inArray(includes, \"xxx\")) {//\"xxx\"为引入include-XXX.js的script标签中include属性的值\n          inputCSS(\"../../web/libs/name.css\");//name为插件的名称\n          inputScript(\"../../web/libs/name.min.js\");//name为插件的名称,使用压缩后的脚本\n       }\n ```\n\n#### /example\n\n   离线环境下范例除了修改引入的脚本（引入/web/build目录下的脚本）外，还需要修改范例服务地址。\n\n   ```html\n    <!DOCTYPE html>\n          <html>\n          <head>\n              <meta charset=\"utf-8\"/>\n              <title>quick start</title>\n              <script type=\"text/javascript\" include=\"bootstrap-css\" src=\"../../web/build/include-web.js\"></script>\n              <style>\n                  html, body {\n                      width: 100%;  height: 100%;  margin: 0;  padding: 0;\n                  }\n                  #map {\n                      width: 100%;  height: 100%;\n                  }\n              </style>\n          </head>\n          <body>\n          <div id=\"map\"></div>\n          <script type=\"text/javascript\" src=\"../../web/build/include-leaflet.js\"></script>\n          <script>\n              //your code\n          </script>\n          </body>\n          </html>\n   ```\n\n\n   离线环境中，范例与服务【一般】在同一域下。保证范例在离线时使用的是本地的服务，所以需要修改范例中使用的地址（如地图服务，数据服务等地址）为：`http://localhost:port/xxx`。\n\n   而为保证范例同时在离线和在线状态都能正常使用，建议修改示例中的服务地址如下：\n\n   ```javascript\n       var host = window.isLocal \n                ? window.server\n                : \"http://[public iServer domain/ip]:8090\";\n       var mapUrl=host+\"/iserver/services/map-world/rest/maps/World\";\n       //other code \n       //...   \n   ```\n\n<h3 id=\"example-7\">注意事项</h3>\n\n暂无\n\n​                               \n\n\n\n","source":"_posts/Supermap代码编写原则.md","raw":"---\ntitle: Supermap代码编写原则\ndate: 2021-07-13 15:34:52\ntags: Supermap\ncategories: Supermap\n---\n\n\n\n## 范例编写原则说明\n\n<!-- more -->\n\n1. [目录结构](#example-1)\n2. [完整步骤](#example-2)\n3. [范例创建](#example-3)\n   * [脚本引用](#example-3-1)\n   * [服务地址](#example-3-2)\n   * [统一样式](#example-3-3)  \n4. [缩略图规范](#example-4)\n5. [配置文件](#example-5)\n6. [离线开发](#example-6)\n   * [克隆代码](#example-6-1)\n   * [开发](#example-6-2)\n7. [注意事项](#example-7)\n\n\n<h3 id=\"example-1\">目录结构</h3>\n\n范例目录结构：\n\n``` \n          /example\n              ├─css         公共css目录\n              ├─fonts       公共字体目录\n              ├─img         公共图片目录\n              ├─js          公共js目录\n              ├─section     公共模板目录(包括范例站点的公共头部和主体框架等)\n              ├─data        范例中使用的公共数据\n              │\n              ├─leaflet         leaflet范例目录\n              │   ├─img             缩略图目录\n              │   └─config.js       配置文件\n              ├─mapboxgl        mapboxgl范例目录\n              │   ├─img             缩略图目录\n              │   └─config.js       配置文件\n              ├─openlay         openlay范例目录\n              │   ├─img             缩略图目录\n              │   └─config.js       配置文件\n              ├─classic         classic范例目录\n              │   ├─img             缩略图目录\n              │   └─config.js       配置文件\n              └─3dwebgl         3dwebgl范例目录\n                  ├─img             缩略图目录\n                  └─config.js       配置文件  \n  \n  \n```\n\n<h3 id=\"example-2\">完整步骤</h3>\n\n      1. 在对应的客户端根目录下创建范例(具体规范请参考：[范例创建](#example-3))\n      2. 截取范例缩略图(具体规范请参考：[缩略图规范](#example-4))，并存放到对应的客户端目录下img目录\n      3. 修改对应的客户端根目录下的`config.js`文件(具体参数请参考：[配置文件](#example-5))\n\n<h3 id=\"example-3\">范例创建</h3>\n\n 示例如下：\n\n ```html\n   <!DOCTYPE html>\n   <html>\n   <head>\n       <meta charset=\"utf-8\"/>\n       <title>quick start</title>\n       <script type=\"text/javascript\" include=\"bootstrap-css\" src=\"../js/include-web.js\"></script>\n       <style>\n           html, body {\n               width: 100%;  height: 100%;  margin: 0;  padding: 0;\n           }\n           #map {\n               width: 100%;  height: 100%;\n           }\n       </style>\n   </head>\n   <body>\n   <div id=\"map\"></div>\n   <script type=\"text/javascript\" src=\"../../dist/include-leaflet.js\"></script>\n   <script>\n       //your code\n   </script>\n   </body>\n   </html>\n ```\n\n 为满足多元化使用需求，请将示例中的服务地址修改如下：\n\n  ```javascript\n \n        var host = window.isLocal \n                 ? window.server\n                 : \"http://[public iServer domain/ip]:8090\";\n        var mapUrl=host+\"/iserver/services/map-world/rest/maps/World\";\n        //other code \n        //...   \n  ```\n\n <h4 id=\"example-3-1\">脚本引用</h4>\n\n   以leaflet为例\n      \n   引入脚本主要有两个：\n      \n   `/example/js/include-web.js`: 引入web相关库（如：jquery，bootstrap），所有库都使用公共CDN地址\n      \n   `/dist/include-xxx.js`: 引入gis相关库（如：leaflet，iclient-leaflet，d3,echarts），除iclient的库之外，所有库都建议使用公共CDN地址\n\n\n   * web相关库: 如果需要jquery，bootstrap等web相关库，引入`/example/js`公共目录下的`include-web.js`，引入格式如下：\n\n     ```html\n       <script type='text/javascript' include='XXX,XXX'  src='../js/include-web.js'></script>\n     ```\n\n     * `include`属性: 引入需要使用的库。多个库用\",\"号隔开。没有默认引入的库\n     * 没有`exclude`属性\n     * include中参数的具体值参考`include-web.js`\n\n   * gis相关库：script标签引入`dist`目录下的`include-leaflet.js`脚本，格式如下：\n\n     ```html\n       <script type='text/javascript' include='XXX,XXX' exclude='XXXX,XXXX' src='../../dist/include-leaflet.js'></script>\n     ```\n\n     * `include`属性: 需要使用的库(如leaflet相关插件,d3,mapv等)，多个库用\",\"号隔开。默认引入的库不用再次填加。\n       默认引入的库：客户端（leflet/openlayers/mapboxgl/iclient8c）相关库以及其对应的iclient相关库。如在本例(leaflet)中，默认引入的是：\n       `leaflet.js`,`leaflet.css` ,`iclient-leaflet`，`iclient-leaflet-css`\n     * `exclude`属性: 排除默认引入的库，多个库用\",\"号隔开。\n     * `include`和`exclude`中参数的具体值参考`include-xxx.js`\n\n   * 新增库：如果`include-web.js`或者`include-xxx.js`中没有需要的库，则参照以下方法引入三方库：\n\n     * 找到`include-web.js`或者`include-xxx.js`中的load方法\n     * 在load方法末尾添加如下代码:\n\n   ```javascript\n      if (inArray(includes, 'xxxx')) {//'xxxx'为引入include-XXX.js的script标签中include属性的值\n         inputCSS(\" libs CDN url\");\n         inputScript(\"libs CDN url\");\n      }\n   ```\n\n   * 建议使用CDN地址。 推荐的公共CDN：[BootCDN](https://www.bootcdn.cn) ([https://www.bootcdn.cn](https://www.bootcdn.cn))\n\n<h4 id=\"example-3-2\">服务地址</h4>\n\n   公共iServer服务地址: [https://iserver.supermap.io](https://iserver.supermap.io)\n\n   可指定其他公网可访问的iServer地址\n\n\n <h4 id=\"example-3-3\">统一样式</h4>\n\n   * 底图建议全屏\n   * 页面样式优先使用bootstrap，建议不要使用原生的HTML样式\n   * 等待加载界面\n     * 引入`include-web.js`脚本的script标签include属性中添加loader\n     * 显示loader: ```showLoader()```\n     * 移除loader: ```removeLoader()```\n   * ...等待补充\n\n\n\n\n<h3 id=\"example-4\">缩略图规范</h3>\n\n   * 建议大小：260*208（1:0.8），PNG8格式压缩\n   * 有动态效果的界面缩略图建议也使用gif格式动图\n   * 存放目录：对应客户端下的img目录（如`/example/leaflet/img`）\n\n\n<h3 id=\"example-5\">配置文件</h3> \n\n 每个客户端范例目录(如：`/example/leaflet`)下都有一个`config.js`文件，文件在站点初始化时读取。\n\n `config.js`中范例相关的配置项为`exampleConfig`，参数如下：\n\n 左边为侧边栏菜单，右边为示例列表\n\n ![config](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210713153504.png)\n\n\n<h3 id=\"example-6\">离线开发</h3> \n\n<div style=\"color:red\">离线开发需要内部权限，非授权用户请直接忽略。</div>\n\n为了使站点和示例在离线状态(如iServer中)能够正常使用，需要增加并修改另一个项目\n\n<h4 id=\"example-6-1\">克隆代码</h4>\n\n  离线开发项目地址：[https://gitee.com/isupermap/iclient-web](https://gitee.com/isupermap/iclient-web)\n\n  * clone代码到本地\n  * 更改项目目录名为web\n  * 将项目移动到你的iclient项目的根目录下,与example同级\n\n<h4 id=\"example-6-2\">开发</h4>\n\n**【脚本的使用跟在线的脚本一样，区别在于三方库全部为本地托管（`/web/libs`)】**\n\n离线开发涉及修改的相关的目录为：`/example`目录，`/web/build`目录，`/web/libs`目录\n\n* `/web`: 站点目录\n\n  * `/web/build`：离线引用脚本目录   \n\n  * `/web/libs`：离线三方库存放目录\n\n* `/example`：范例目录 \n\n\n#### /web\n\n脚本的使用跟在线的脚本一样，只不过路径不同，在具体范例中通过script标签引入`/web/build/`下的脚本\n\n相关的脚本为 `/web/build/include-xxx.js`和 `/web/build/include-web.js`,\n\n* `/web/build/include-web.js`: 引入web相关库（如：jquery，bootstrap）(使用相对路径)，相关库的存放目录为`/web/libs`\n\n* `/web/build/include-xxx.js`: 引入gis相关库（如：iclient-leaflet，leaflet）(使用相对路径)，相关库的存放目录为`/web/libs`\n\n\n* 新增库：如果`include-web.js`或者`include-xxx.js`中没有需要的库，则参照以下方法引入三方库：\n  * 下载三方库到本地\n  * 将三方库按文件夹移动到`/web/libs`目录\n  * 在三方库中的js文件中加上三方自己的版权标识(如果原先没有的话)，版权标识包括但不限于版权所有者，开源协议，软件版本等\n  * 找到`include-web.js`或者`include-xxx.js`中的load方法\n  * 在load方法末尾添加如下代码，注意路径必须是：`../../web/libs`\n\n ```javascript\n       if (inArray(includes, \"xxx\")) {//\"xxx\"为引入include-XXX.js的script标签中include属性的值\n          inputCSS(\"../../web/libs/name.css\");//name为插件的名称\n          inputScript(\"../../web/libs/name.min.js\");//name为插件的名称,使用压缩后的脚本\n       }\n ```\n\n#### /example\n\n   离线环境下范例除了修改引入的脚本（引入/web/build目录下的脚本）外，还需要修改范例服务地址。\n\n   ```html\n    <!DOCTYPE html>\n          <html>\n          <head>\n              <meta charset=\"utf-8\"/>\n              <title>quick start</title>\n              <script type=\"text/javascript\" include=\"bootstrap-css\" src=\"../../web/build/include-web.js\"></script>\n              <style>\n                  html, body {\n                      width: 100%;  height: 100%;  margin: 0;  padding: 0;\n                  }\n                  #map {\n                      width: 100%;  height: 100%;\n                  }\n              </style>\n          </head>\n          <body>\n          <div id=\"map\"></div>\n          <script type=\"text/javascript\" src=\"../../web/build/include-leaflet.js\"></script>\n          <script>\n              //your code\n          </script>\n          </body>\n          </html>\n   ```\n\n\n   离线环境中，范例与服务【一般】在同一域下。保证范例在离线时使用的是本地的服务，所以需要修改范例中使用的地址（如地图服务，数据服务等地址）为：`http://localhost:port/xxx`。\n\n   而为保证范例同时在离线和在线状态都能正常使用，建议修改示例中的服务地址如下：\n\n   ```javascript\n       var host = window.isLocal \n                ? window.server\n                : \"http://[public iServer domain/ip]:8090\";\n       var mapUrl=host+\"/iserver/services/map-world/rest/maps/World\";\n       //other code \n       //...   \n   ```\n\n<h3 id=\"example-7\">注意事项</h3>\n\n暂无\n\n​                               \n\n\n\n","slug":"Supermap代码编写原则","published":1,"updated":"2021-07-13T08:02:13.116Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2m000sjsvkehj0ffof","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"范例编写原则说明\"><a href=\"#范例编写原则说明\" class=\"headerlink\" title=\"范例编写原则说明\"></a>范例编写原则说明</h2><span id=\"more\"></span>\n<ol>\n<li><a href=\"#example-1\">目录结构</a></li>\n<li><a href=\"#example-2\">完整步骤</a></li>\n<li><a href=\"#example-3\">范例创建</a><ul>\n<li><a href=\"#example-3-1\">脚本引用</a></li>\n<li><a href=\"#example-3-2\">服务地址</a></li>\n<li><a href=\"#example-3-3\">统一样式</a>  </li>\n</ul>\n</li>\n<li><a href=\"#example-4\">缩略图规范</a></li>\n<li><a href=\"#example-5\">配置文件</a></li>\n<li><a href=\"#example-6\">离线开发</a><ul>\n<li><a href=\"#example-6-1\">克隆代码</a></li>\n<li><a href=\"#example-6-2\">开发</a></li>\n</ul>\n</li>\n<li><a href=\"#example-7\">注意事项</a></li>\n</ol>\n<h3 id=\"example-1\">目录结构</h3>\n\n<p>范例目录结构：</p>\n<pre class=\"language-none\"><code class=\"language-none\">&#x2F;example\n    ├─css         公共css目录\n    ├─fonts       公共字体目录\n    ├─img         公共图片目录\n    ├─js          公共js目录\n    ├─section     公共模板目录(包括范例站点的公共头部和主体框架等)\n    ├─data        范例中使用的公共数据\n    │\n    ├─leaflet         leaflet范例目录\n    │   ├─img             缩略图目录\n    │   └─config.js       配置文件\n    ├─mapboxgl        mapboxgl范例目录\n    │   ├─img             缩略图目录\n    │   └─config.js       配置文件\n    ├─openlay         openlay范例目录\n    │   ├─img             缩略图目录\n    │   └─config.js       配置文件\n    ├─classic         classic范例目录\n    │   ├─img             缩略图目录\n    │   └─config.js       配置文件\n    └─3dwebgl         3dwebgl范例目录\n        ├─img             缩略图目录\n        └─config.js       配置文件  \n  \n  </code></pre>\n<h3 id=\"example-2\">完整步骤</h3>\n\n<pre><code>  1. 在对应的客户端根目录下创建范例(具体规范请参考：[范例创建](#example-3))\n  2. 截取范例缩略图(具体规范请参考：[缩略图规范](#example-4))，并存放到对应的客户端目录下img目录\n  3. 修改对应的客户端根目录下的`config.js`文件(具体参数请参考：[配置文件](#example-5))\n</code></pre><h3 id=\"example-3\">范例创建</h3>\n\n<p> 示例如下：</p>\n <pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>quick start<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bootstrap-css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../js/include-web.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n        <span class=\"token selector\">html, body</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token selector\">#map</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../../dist/include-leaflet.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token comment\">//your code</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p> 为满足多元化使用需求，请将示例中的服务地址修改如下：</p>\n  <pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"> \n<span class=\"token keyword\">var</span> host <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>isLocal \n         <span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span>server\n         <span class=\"token operator\">:</span> <span class=\"token string\">\"http://[public iServer domain/ip]:8090\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> mapUrl<span class=\"token operator\">=</span>host<span class=\"token operator\">+</span><span class=\"token string\">\"/iserver/services/map-world/rest/maps/World\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//other code </span>\n<span class=\"token comment\">//...   </span></code></pre>\n <h4 id=\"example-3-1\">脚本引用</h4>\n\n<p>   以leaflet为例</p>\n<p>   引入脚本主要有两个：</p>\n<p>   <code>/example/js/include-web.js</code>: 引入web相关库（如：jquery，bootstrap），所有库都使用公共CDN地址</p>\n<p>   <code>/dist/include-xxx.js</code>: 引入gis相关库（如：leaflet，iclient-leaflet，d3,echarts），除iclient的库之外，所有库都建议使用公共CDN地址</p>\n<ul>\n<li><p>web相关库: 如果需要jquery，bootstrap等web相关库，引入<code>/example/js</code>公共目录下的<code>include-web.js</code>，引入格式如下：</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>text/javascript<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>XXX,XXX<span class=\"token punctuation\">'</span></span>  <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>../js/include-web.js<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<ul>\n<li><code>include</code>属性: 引入需要使用的库。多个库用”,”号隔开。没有默认引入的库</li>\n<li>没有<code>exclude</code>属性</li>\n<li>include中参数的具体值参考<code>include-web.js</code></li>\n</ul>\n</li>\n<li><p>gis相关库：script标签引入<code>dist</code>目录下的<code>include-leaflet.js</code>脚本，格式如下：</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>text/javascript<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>XXX,XXX<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">exclude</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>XXXX,XXXX<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>../../dist/include-leaflet.js<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<ul>\n<li><code>include</code>属性: 需要使用的库(如leaflet相关插件,d3,mapv等)，多个库用”,”号隔开。默认引入的库不用再次填加。<br>默认引入的库：客户端（leflet/openlayers/mapboxgl/iclient8c）相关库以及其对应的iclient相关库。如在本例(leaflet)中，默认引入的是：<br><code>leaflet.js</code>,<code>leaflet.css</code> ,<code>iclient-leaflet</code>，<code>iclient-leaflet-css</code></li>\n<li><code>exclude</code>属性: 排除默认引入的库，多个库用”,”号隔开。</li>\n<li><code>include</code>和<code>exclude</code>中参数的具体值参考<code>include-xxx.js</code></li>\n</ul>\n</li>\n<li><p>新增库：如果<code>include-web.js</code>或者<code>include-xxx.js</code>中没有需要的库，则参照以下方法引入三方库：</p>\n<ul>\n<li>找到<code>include-web.js</code>或者<code>include-xxx.js</code>中的load方法</li>\n<li>在load方法末尾添加如下代码:</li>\n</ul>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">inArray</span><span class=\"token punctuation\">(</span>includes<span class=\"token punctuation\">,</span> <span class=\"token string\">'xxxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//'xxxx'为引入include-XXX.js的script标签中include属性的值</span>\n   <span class=\"token function\">inputCSS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" libs CDN url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">inputScript</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libs CDN url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n</li>\n<li><p>建议使用CDN地址。 推荐的公共CDN：<a href=\"https://www.bootcdn.cn\">BootCDN</a> (<a href=\"https://www.bootcdn.cn\">https://www.bootcdn.cn</a>)</p>\n</li>\n</ul>\n<h4 id=\"example-3-2\">服务地址</h4>\n\n<p>   公共iServer服务地址: <a href=\"https://iserver.supermap.io\">https://iserver.supermap.io</a></p>\n<p>   可指定其他公网可访问的iServer地址</p>\n <h4 id=\"example-3-3\">统一样式</h4>\n\n<ul>\n<li>底图建议全屏</li>\n<li>页面样式优先使用bootstrap，建议不要使用原生的HTML样式</li>\n<li>等待加载界面<ul>\n<li>引入<code>include-web.js</code>脚本的script标签include属性中添加loader</li>\n<li>显示loader: <code>showLoader()</code></li>\n<li>移除loader: <code>removeLoader()</code></li>\n</ul>\n</li>\n<li>…等待补充</li>\n</ul>\n<h3 id=\"example-4\">缩略图规范</h3>\n\n<ul>\n<li>建议大小：260*208（1:0.8），PNG8格式压缩</li>\n<li>有动态效果的界面缩略图建议也使用gif格式动图</li>\n<li>存放目录：对应客户端下的img目录（如<code>/example/leaflet/img</code>）</li>\n</ul>\n<h3 id=\"example-5\">配置文件</h3> \n\n<p> 每个客户端范例目录(如：<code>/example/leaflet</code>)下都有一个<code>config.js</code>文件，文件在站点初始化时读取。</p>\n<p> <code>config.js</code>中范例相关的配置项为<code>exampleConfig</code>，参数如下：</p>\n<p> 左边为侧边栏菜单，右边为示例列表</p>\n<p> <img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210713153504.png\" alt=\"config\"></p>\n<h3 id=\"example-6\">离线开发</h3> \n\n<div style=\"color:red\">离线开发需要内部权限，非授权用户请直接忽略。</div>\n\n<p>为了使站点和示例在离线状态(如iServer中)能够正常使用，需要增加并修改另一个项目</p>\n<h4 id=\"example-6-1\">克隆代码</h4>\n\n<p>  离线开发项目地址：<a href=\"https://gitee.com/isupermap/iclient-web\">https://gitee.com/isupermap/iclient-web</a></p>\n<ul>\n<li>clone代码到本地</li>\n<li>更改项目目录名为web</li>\n<li>将项目移动到你的iclient项目的根目录下,与example同级</li>\n</ul>\n<h4 id=\"example-6-2\">开发</h4>\n\n<p><strong>【脚本的使用跟在线的脚本一样，区别在于三方库全部为本地托管（<code>/web/libs</code>)】</strong></p>\n<p>离线开发涉及修改的相关的目录为：<code>/example</code>目录，<code>/web/build</code>目录，<code>/web/libs</code>目录</p>\n<ul>\n<li><p><code>/web</code>: 站点目录</p>\n<ul>\n<li><p><code>/web/build</code>：离线引用脚本目录   </p>\n</li>\n<li><p><code>/web/libs</code>：离线三方库存放目录</p>\n</li>\n</ul>\n</li>\n<li><p><code>/example</code>：范例目录 </p>\n</li>\n</ul>\n<h4 id=\"web\"><a href=\"#web\" class=\"headerlink\" title=\"/web\"></a>/web</h4><p>脚本的使用跟在线的脚本一样，只不过路径不同，在具体范例中通过script标签引入<code>/web/build/</code>下的脚本</p>\n<p>相关的脚本为 <code>/web/build/include-xxx.js</code>和 <code>/web/build/include-web.js</code>,</p>\n<ul>\n<li><p><code>/web/build/include-web.js</code>: 引入web相关库（如：jquery，bootstrap）(使用相对路径)，相关库的存放目录为<code>/web/libs</code></p>\n</li>\n<li><p><code>/web/build/include-xxx.js</code>: 引入gis相关库（如：iclient-leaflet，leaflet）(使用相对路径)，相关库的存放目录为<code>/web/libs</code></p>\n</li>\n</ul>\n<ul>\n<li><p>新增库：如果<code>include-web.js</code>或者<code>include-xxx.js</code>中没有需要的库，则参照以下方法引入三方库：</p>\n<ul>\n<li>下载三方库到本地</li>\n<li>将三方库按文件夹移动到<code>/web/libs</code>目录</li>\n<li>在三方库中的js文件中加上三方自己的版权标识(如果原先没有的话)，版权标识包括但不限于版权所有者，开源协议，软件版本等</li>\n<li>找到<code>include-web.js</code>或者<code>include-xxx.js</code>中的load方法</li>\n<li>在load方法末尾添加如下代码，注意路径必须是：<code>../../web/libs</code></li>\n</ul>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">inArray</span><span class=\"token punctuation\">(</span>includes<span class=\"token punctuation\">,</span> <span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//\"xxx\"为引入include-XXX.js的script标签中include属性的值</span>\n   <span class=\"token function\">inputCSS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../../web/libs/name.css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//name为插件的名称</span>\n   <span class=\"token function\">inputScript</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../../web/libs/name.min.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//name为插件的名称,使用压缩后的脚本</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n</li>\n</ul>\n<h4 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"/example\"></a>/example</h4><p>   离线环境下范例除了修改引入的脚本（引入/web/build目录下的脚本）外，还需要修改范例服务地址。</p>\n   <pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>quick start<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bootstrap-css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../../web/build/include-web.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n              <span class=\"token selector\">html, body</span> <span class=\"token punctuation\">&#123;</span>\n                  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">&#125;</span>\n              <span class=\"token selector\">#map</span> <span class=\"token punctuation\">&#123;</span>\n                  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">&#125;</span>\n          </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../../web/build/include-leaflet.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n          <span class=\"token comment\">//your code</span>\n      </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>   离线环境中，范例与服务【一般】在同一域下。保证范例在离线时使用的是本地的服务，所以需要修改范例中使用的地址（如地图服务，数据服务等地址）为：<code>http://localhost:port/xxx</code>。</p>\n<p>   而为保证范例同时在离线和在线状态都能正常使用，建议修改示例中的服务地址如下：</p>\n   <pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> host <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>isLocal \n         <span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span>server\n         <span class=\"token operator\">:</span> <span class=\"token string\">\"http://[public iServer domain/ip]:8090\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> mapUrl<span class=\"token operator\">=</span>host<span class=\"token operator\">+</span><span class=\"token string\">\"/iserver/services/map-world/rest/maps/World\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//other code </span>\n<span class=\"token comment\">//...   </span></code></pre>\n<h3 id=\"example-7\">注意事项</h3>\n\n<p>暂无</p>\n<p>​                               </p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160700.webp","length":4729,"excerpt":"<h2 id=\"范例编写原则说明\"><a href=\"#范例编写原则说明\" class=\"headerlink\" title=\"范例编写原则说明\"></a>范例编写原则说明</h2>","more":"<ol>\n<li><a href=\"#example-1\">目录结构</a></li>\n<li><a href=\"#example-2\">完整步骤</a></li>\n<li><a href=\"#example-3\">范例创建</a><ul>\n<li><a href=\"#example-3-1\">脚本引用</a></li>\n<li><a href=\"#example-3-2\">服务地址</a></li>\n<li><a href=\"#example-3-3\">统一样式</a>  </li>\n</ul>\n</li>\n<li><a href=\"#example-4\">缩略图规范</a></li>\n<li><a href=\"#example-5\">配置文件</a></li>\n<li><a href=\"#example-6\">离线开发</a><ul>\n<li><a href=\"#example-6-1\">克隆代码</a></li>\n<li><a href=\"#example-6-2\">开发</a></li>\n</ul>\n</li>\n<li><a href=\"#example-7\">注意事项</a></li>\n</ol>\n<h3 id=\"example-1\">目录结构</h3>\n\n<p>范例目录结构：</p>\n<pre class=\"language-none\"><code class=\"language-none\">&#x2F;example\n    ├─css         公共css目录\n    ├─fonts       公共字体目录\n    ├─img         公共图片目录\n    ├─js          公共js目录\n    ├─section     公共模板目录(包括范例站点的公共头部和主体框架等)\n    ├─data        范例中使用的公共数据\n    │\n    ├─leaflet         leaflet范例目录\n    │   ├─img             缩略图目录\n    │   └─config.js       配置文件\n    ├─mapboxgl        mapboxgl范例目录\n    │   ├─img             缩略图目录\n    │   └─config.js       配置文件\n    ├─openlay         openlay范例目录\n    │   ├─img             缩略图目录\n    │   └─config.js       配置文件\n    ├─classic         classic范例目录\n    │   ├─img             缩略图目录\n    │   └─config.js       配置文件\n    └─3dwebgl         3dwebgl范例目录\n        ├─img             缩略图目录\n        └─config.js       配置文件  \n  \n  </code></pre>\n<h3 id=\"example-2\">完整步骤</h3>\n\n<pre><code>  1. 在对应的客户端根目录下创建范例(具体规范请参考：[范例创建](#example-3))\n  2. 截取范例缩略图(具体规范请参考：[缩略图规范](#example-4))，并存放到对应的客户端目录下img目录\n  3. 修改对应的客户端根目录下的`config.js`文件(具体参数请参考：[配置文件](#example-5))\n</code></pre><h3 id=\"example-3\">范例创建</h3>\n\n<p> 示例如下：</p>\n <pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>quick start<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bootstrap-css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../js/include-web.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n        <span class=\"token selector\">html, body</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token selector\">#map</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../../dist/include-leaflet.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token comment\">//your code</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p> 为满足多元化使用需求，请将示例中的服务地址修改如下：</p>\n  <pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"> \n<span class=\"token keyword\">var</span> host <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>isLocal \n         <span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span>server\n         <span class=\"token operator\">:</span> <span class=\"token string\">\"http://[public iServer domain/ip]:8090\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> mapUrl<span class=\"token operator\">=</span>host<span class=\"token operator\">+</span><span class=\"token string\">\"/iserver/services/map-world/rest/maps/World\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//other code </span>\n<span class=\"token comment\">//...   </span></code></pre>\n <h4 id=\"example-3-1\">脚本引用</h4>\n\n<p>   以leaflet为例</p>\n<p>   引入脚本主要有两个：</p>\n<p>   <code>/example/js/include-web.js</code>: 引入web相关库（如：jquery，bootstrap），所有库都使用公共CDN地址</p>\n<p>   <code>/dist/include-xxx.js</code>: 引入gis相关库（如：leaflet，iclient-leaflet，d3,echarts），除iclient的库之外，所有库都建议使用公共CDN地址</p>\n<ul>\n<li><p>web相关库: 如果需要jquery，bootstrap等web相关库，引入<code>/example/js</code>公共目录下的<code>include-web.js</code>，引入格式如下：</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>text/javascript<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>XXX,XXX<span class=\"token punctuation\">'</span></span>  <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>../js/include-web.js<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<ul>\n<li><code>include</code>属性: 引入需要使用的库。多个库用”,”号隔开。没有默认引入的库</li>\n<li>没有<code>exclude</code>属性</li>\n<li>include中参数的具体值参考<code>include-web.js</code></li>\n</ul>\n</li>\n<li><p>gis相关库：script标签引入<code>dist</code>目录下的<code>include-leaflet.js</code>脚本，格式如下：</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>text/javascript<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>XXX,XXX<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">exclude</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>XXXX,XXXX<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>../../dist/include-leaflet.js<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<ul>\n<li><code>include</code>属性: 需要使用的库(如leaflet相关插件,d3,mapv等)，多个库用”,”号隔开。默认引入的库不用再次填加。<br>默认引入的库：客户端（leflet/openlayers/mapboxgl/iclient8c）相关库以及其对应的iclient相关库。如在本例(leaflet)中，默认引入的是：<br><code>leaflet.js</code>,<code>leaflet.css</code> ,<code>iclient-leaflet</code>，<code>iclient-leaflet-css</code></li>\n<li><code>exclude</code>属性: 排除默认引入的库，多个库用”,”号隔开。</li>\n<li><code>include</code>和<code>exclude</code>中参数的具体值参考<code>include-xxx.js</code></li>\n</ul>\n</li>\n<li><p>新增库：如果<code>include-web.js</code>或者<code>include-xxx.js</code>中没有需要的库，则参照以下方法引入三方库：</p>\n<ul>\n<li>找到<code>include-web.js</code>或者<code>include-xxx.js</code>中的load方法</li>\n<li>在load方法末尾添加如下代码:</li>\n</ul>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">inArray</span><span class=\"token punctuation\">(</span>includes<span class=\"token punctuation\">,</span> <span class=\"token string\">'xxxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//'xxxx'为引入include-XXX.js的script标签中include属性的值</span>\n   <span class=\"token function\">inputCSS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" libs CDN url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">inputScript</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libs CDN url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n</li>\n<li><p>建议使用CDN地址。 推荐的公共CDN：<a href=\"https://www.bootcdn.cn\">BootCDN</a> (<a href=\"https://www.bootcdn.cn\">https://www.bootcdn.cn</a>)</p>\n</li>\n</ul>\n<h4 id=\"example-3-2\">服务地址</h4>\n\n<p>   公共iServer服务地址: <a href=\"https://iserver.supermap.io\">https://iserver.supermap.io</a></p>\n<p>   可指定其他公网可访问的iServer地址</p>\n <h4 id=\"example-3-3\">统一样式</h4>\n\n<ul>\n<li>底图建议全屏</li>\n<li>页面样式优先使用bootstrap，建议不要使用原生的HTML样式</li>\n<li>等待加载界面<ul>\n<li>引入<code>include-web.js</code>脚本的script标签include属性中添加loader</li>\n<li>显示loader: <code>showLoader()</code></li>\n<li>移除loader: <code>removeLoader()</code></li>\n</ul>\n</li>\n<li>…等待补充</li>\n</ul>\n<h3 id=\"example-4\">缩略图规范</h3>\n\n<ul>\n<li>建议大小：260*208（1:0.8），PNG8格式压缩</li>\n<li>有动态效果的界面缩略图建议也使用gif格式动图</li>\n<li>存放目录：对应客户端下的img目录（如<code>/example/leaflet/img</code>）</li>\n</ul>\n<h3 id=\"example-5\">配置文件</h3> \n\n<p> 每个客户端范例目录(如：<code>/example/leaflet</code>)下都有一个<code>config.js</code>文件，文件在站点初始化时读取。</p>\n<p> <code>config.js</code>中范例相关的配置项为<code>exampleConfig</code>，参数如下：</p>\n<p> 左边为侧边栏菜单，右边为示例列表</p>\n<p> <img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210713153504.png\" alt=\"config\"></p>\n<h3 id=\"example-6\">离线开发</h3> \n\n<div style=\"color:red\">离线开发需要内部权限，非授权用户请直接忽略。</div>\n\n<p>为了使站点和示例在离线状态(如iServer中)能够正常使用，需要增加并修改另一个项目</p>\n<h4 id=\"example-6-1\">克隆代码</h4>\n\n<p>  离线开发项目地址：<a href=\"https://gitee.com/isupermap/iclient-web\">https://gitee.com/isupermap/iclient-web</a></p>\n<ul>\n<li>clone代码到本地</li>\n<li>更改项目目录名为web</li>\n<li>将项目移动到你的iclient项目的根目录下,与example同级</li>\n</ul>\n<h4 id=\"example-6-2\">开发</h4>\n\n<p><strong>【脚本的使用跟在线的脚本一样，区别在于三方库全部为本地托管（<code>/web/libs</code>)】</strong></p>\n<p>离线开发涉及修改的相关的目录为：<code>/example</code>目录，<code>/web/build</code>目录，<code>/web/libs</code>目录</p>\n<ul>\n<li><p><code>/web</code>: 站点目录</p>\n<ul>\n<li><p><code>/web/build</code>：离线引用脚本目录   </p>\n</li>\n<li><p><code>/web/libs</code>：离线三方库存放目录</p>\n</li>\n</ul>\n</li>\n<li><p><code>/example</code>：范例目录 </p>\n</li>\n</ul>\n<h4 id=\"web\"><a href=\"#web\" class=\"headerlink\" title=\"/web\"></a>/web</h4><p>脚本的使用跟在线的脚本一样，只不过路径不同，在具体范例中通过script标签引入<code>/web/build/</code>下的脚本</p>\n<p>相关的脚本为 <code>/web/build/include-xxx.js</code>和 <code>/web/build/include-web.js</code>,</p>\n<ul>\n<li><p><code>/web/build/include-web.js</code>: 引入web相关库（如：jquery，bootstrap）(使用相对路径)，相关库的存放目录为<code>/web/libs</code></p>\n</li>\n<li><p><code>/web/build/include-xxx.js</code>: 引入gis相关库（如：iclient-leaflet，leaflet）(使用相对路径)，相关库的存放目录为<code>/web/libs</code></p>\n</li>\n</ul>\n<ul>\n<li><p>新增库：如果<code>include-web.js</code>或者<code>include-xxx.js</code>中没有需要的库，则参照以下方法引入三方库：</p>\n<ul>\n<li>下载三方库到本地</li>\n<li>将三方库按文件夹移动到<code>/web/libs</code>目录</li>\n<li>在三方库中的js文件中加上三方自己的版权标识(如果原先没有的话)，版权标识包括但不限于版权所有者，开源协议，软件版本等</li>\n<li>找到<code>include-web.js</code>或者<code>include-xxx.js</code>中的load方法</li>\n<li>在load方法末尾添加如下代码，注意路径必须是：<code>../../web/libs</code></li>\n</ul>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">inArray</span><span class=\"token punctuation\">(</span>includes<span class=\"token punctuation\">,</span> <span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//\"xxx\"为引入include-XXX.js的script标签中include属性的值</span>\n   <span class=\"token function\">inputCSS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../../web/libs/name.css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//name为插件的名称</span>\n   <span class=\"token function\">inputScript</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../../web/libs/name.min.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//name为插件的名称,使用压缩后的脚本</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n</li>\n</ul>\n<h4 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"/example\"></a>/example</h4><p>   离线环境下范例除了修改引入的脚本（引入/web/build目录下的脚本）外，还需要修改范例服务地址。</p>\n   <pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>quick start<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bootstrap-css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../../web/build/include-web.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n              <span class=\"token selector\">html, body</span> <span class=\"token punctuation\">&#123;</span>\n                  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">&#125;</span>\n              <span class=\"token selector\">#map</span> <span class=\"token punctuation\">&#123;</span>\n                  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">&#125;</span>\n          </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../../web/build/include-leaflet.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n          <span class=\"token comment\">//your code</span>\n      </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>   离线环境中，范例与服务【一般】在同一域下。保证范例在离线时使用的是本地的服务，所以需要修改范例中使用的地址（如地图服务，数据服务等地址）为：<code>http://localhost:port/xxx</code>。</p>\n<p>   而为保证范例同时在离线和在线状态都能正常使用，建议修改示例中的服务地址如下：</p>\n   <pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> host <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>isLocal \n         <span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span>server\n         <span class=\"token operator\">:</span> <span class=\"token string\">\"http://[public iServer domain/ip]:8090\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> mapUrl<span class=\"token operator\">=</span>host<span class=\"token operator\">+</span><span class=\"token string\">\"/iserver/services/map-world/rest/maps/World\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//other code </span>\n<span class=\"token comment\">//...   </span></code></pre>\n<h3 id=\"example-7\">注意事项</h3>\n\n<p>暂无</p>\n<p>​                               </p>"},{"title":"Supermap实例","date":"2021-07-16T08:00:31.000Z","description":"leaflet引用","_content":"\n## leaflet引用\n\n引入 Leaflet CSS 文件和 JS 文件，填入 BootCDN 的托管地址\n\n```html\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.css\" rel=\"stylesheet\" />\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.js\"></script>\n```\n\n引入 iclient-leaflet CSS 文件和 JS 文件，填入 SuperMap iClient for Leaflet 在线站点地址：\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.css\" />\n<link rel=\"stylesheet\" href=\"https://iclient.supermap.io/dist/leaflet/iclient-leaflet.min.css\" />\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.js\"></script>\n<script type=\"text/javascript\" src=\"https://iclient.supermap.io/dist/leaflet/iclient-leaflet.js\"></script>\n```\n\n## 地图链接\n\n端口号\n\n```javascript\nvar host = window.isLocal ? window.server : \"https://iserver.supermap.io\";\n```\n\n链接\n\n```javascript\nurl = host + \"/iserver/services/map-China/rest/maps/China\";\n```\n\n## 矢量图层\n\n```javascript\nvar host = window.isLocal ? window.server : \"https://iserver.supermap.io\";\nvar map, themeService, themeRange, ThemeParameters, thmemLayer, url = host +\n    \"/iserver/services/map-China/rest/maps/China\";\nvar resultLayer,dataurl = host+\"/iserver/services/data-China/rest/data\"; //数据服务地址\n\nmap = L.map('map', {\n    center: [20, 100],\n    preferCanvas: true,\n    crs: L.CRS.EPSG3857, //坐标系设置错误不显示\n    maxZoom: 18,  // 最大缩放级别\n    zoom: 2  // 缩放级别\n});\nvar selectId, selectLayerName, vectorLayer = L.supermap.tiledVectorLayer(url, {\n    noWrap: true,\n    cacheEnabled: true,\n    returnAttributes: true,\n    attribution: \"Tile Data©SuperMap iServer with©SuperMap iClient\"\n    // transparent: true\n}).addTo(map);\n// 为矢量图层注册点击事件\nvectorLayer.on('click', function (evt) {\n    var id = evt.layer.properties.id;\n    var layerName = evt.layer.layerName;\n    clearHighlight(); // 判断是否有选中矢量数据，有则取消高亮\n    selectId = id;\n    // alert(id);\n    selectLayerName = layerName;\n    var selectStyle = {\n        fillColor: '#800026',\n        fillOpacity: 0.5,\n        stroke: true,\n        fill: true,\n        color: 'red',\n        opacity: 1,\n        weight: 2\n    };\n    vectorLayer.setFeatureStyle(id, layerName, selectStyle);\n});\n\n\nfunction clearHighlight() {\n    if (selectId && selectLayerName) {\n        vectorLayer.resetFeatureStyle(selectId, selectLayerName);\n    }\n    selectId = null;\n    selectLayerName = null;\n}\n```\n\n图层切换\n\n```javascript\nvar baseMaps = {\n    \"China\": China,\n    // \"vectorLayer\": vectorLayer\n}\nL.control.zoom().addTo(map); // 缩放控件\nvar overmaps = {\n    \"vectorLayer\": vectorLayer\n}\nL.control.layers(baseMaps, overmaps, {\n            position: \"topleft\" //图标位置\n        }).addTo(map);\n```\n\n图表数据绑定\n\nmain.js备份\n```javascript\n// 图表初始化\noption = {\n  legend: {\n    data: [\"降雨量\", \"径流量\"],\n    align: \"left\",\n  },\n  toolbox: {\n    feature: {\n      magicType: {\n        type: [\"stack\", \"tiled\"],\n      },\n      saveAsImage: {\n        pixelRatio: 2,\n      },\n    },\n  },\n  tooltip: {},\n  xAxis: {\n    data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\n    silent: false,\n    splitLine: {\n      show: false,\n    },\n  },\n  yAxis: {},\n  series: [\n    {\n      name: \"bar\",\n      type: \"bar\",\n      animationDelay: function (idx) {\n        return idx * 10;\n      },\n    },\n    {\n      name: \"bar2\",\n      type: \"bar\",\n      animationDelay: function (idx) {\n        return idx * 10 + 100;\n      },\n    },\n  ],\n  animationEasing: \"elasticOut\",\n  animationDelayUpdate: function (idx) {\n    return idx * 5;\n  },\n};\nvar div = L.DomUtil.create(\"div\");\nvar chart = echarts.init(div, \"\", {\n  width: 500,\n  height: 300,\n});\nchart.setOption(option);\n\n//  数据绑定\nfunction chartSet(layer) {\n  // function (layer) {\n  let city = layer.feature.properties.NAME;\n  console.log(myMap);\n  let data1 = cityData.get(city).HUMIDITY;\n  let data2 = cityData.get(city).RAINFALL;\n  chart.setOption({\n    title: {\n      text: city,\n      subtext: \"\",\n    },\n    series: [\n      {\n        name: \"降雨量\",\n        data: data1,\n      },\n      {\n        name: \"径流量\",\n        data: data2,\n      },\n    ],\n  });\n  return chart.getDom();\n  // }\n}\n\nfunction resultBind(resultLayer,selecTime) {\n  resultLayer\n  .bindPopup(\n    function (layer) {\n      let city = layer.feature.properties.NAME;\n      // let time=layer.feature.properties.DATE_USER;\n      time=timeTransfer(selecTime);\n      console.log(selecTime); //time\n      // let data1 = cityData.get(city).HUMIDITY;\n      // let data2 = cityData.get(city).RAINFALL;\n      return `<b>城市:</b>${city}<br>\n      <b>相对湿度:</b>${cityData.get(city).HUMIDITY[time]}<br>\n      <b>本日降雨量:</b>${cityData.get(city).RAINFALL[time]}<br>\n      <b>AQI:</b>${cityData.get(city).AQI[time]}<br>\n      <b>PM2.5浓度:</b>${cityData.get(city).PM25[time]}<br>\n      <b>温度:</b>${cityData.get(city).TEMPERATURE[time]}<br>\n      <b>天气:</b>${cityData.get(city).WEATHER[time]}<br>\n      <b>日期:</b>${cityData.get(city).DATE_USER[time]}<br>\n      `;\n    },\n    { maxWidth: 700 }\n  )\n  .addTo(map);\n}\n\n// 查询结果解析\nfunction sqlResult(serviceResult) {\n  // console.log(serviceResult);\n\n  /*geoJSON数据解析*/\n  resultLayer = L.geoJSON(serviceResult.result.features, {\n    onEachFeature: (feature, layer) => {\n      // if (feature.geometry.coordinates[0] > 10000) {\n        // let latlng = L.CRS.EPSG3857.unproject(\n        //   L.point(\n        //     feature.geometry.coordinates[0],\n        //     feature.geometry.coordinates[1]\n        //   )\n        // );\n      //   latlng.alt = feature.geometry.coordinates[2];\n        //  marker = L.marker(latlng).addTo(map);\n        //  return latlng;\n      //   // marker.bindPopup(`<b>SMID:</b> ${feature.properties.SMID}`).openPopup().addTo(map)\n      // } \n      //else {\n      //   layer.bindPopup(`<b>SMID:</b> ${feature.properties.SMID}`).addTo(map);\n      // }\n\n      // console.log(layer);\n      // 创建对象\n\n    },\n    style: {\n      \n        weight: 10,\n        color: \"#fff\",\n        opacity:0.5\n      \n    },\n\n    coordsToLatLng: function (coords) {\n      // console.log(L.point(coords[0], coords[1]));\n      let latlng = L.CRS.EPSG4326.unproject(L.point(coords[0], coords[1]));\n      latlng.alt = coords[2];\n        // console.log(latlng);\n      return latlng;\n    },\n  });\n  // 图表数据绑定\n  resultBind(resultLayer,gnl_infor_date);\n\n    // console.log(resultLayer);\n}\n\n// SQL查询要素\nfunction sqlQuery(attributeFilter, datasetNames = []) {\n  // sql查询参数\n  var sqlParam = new SuperMap.GetFeaturesBySQLParameters({\n    queryParameter: {\n      name: \"\",\n      attributeFilter: \"date_User='\" + attributeFilter + \" 0:00:00'\",\n    },\n    datasetNames: datasetNames,\n    toIndex: 238,\n  });\n  \n  // sql查询服务\n  L.supermap.featureService(dataurl).getFeaturesBySQL(sqlParam, sqlResult);\n}\n\n// 默认展示第一天的天气信息地图\nsqlQuery(gnl_infor_date, [\"ChinaClimate:weather\"]);\n// 热力图\n// gn_search.addEventListener(\"click\",addHeatMapLayer)\n\ngnl_search.addEventListener('click', () => {\n  layerRemove();\n  resultBind(resultLayer,gnl_infor_date)\n  // sqlQuery(gnl_infor_date, [\"ChinaClimate:weather\"]);\n  setTimeout(() => {\n    // var n =L.layerGroup(resultLayer)\n    // console.log(resultLayer);\n  }, 3000);\n});\n\nday_tp_heat_search.addEventListener('click',()=>{\n  layerRemove();\n  //  console.log(index);\n  tp_HeatMAP.addHeatMapLayer();\n})\n\nlet layer=L.layerGroup(heatMapLayer)\nlet baseMap = {\n  chinaMapLayer: chinaMapLayer,\n};\nlet overMap = {\n  layer: layer,\n  // heatMapLayer:heatMapLayer\n};\nL.control.layers(baseMap, overMap).addTo(map);\n// console.log(myMap)\n\n```\n\n```javascript\n// 图表初始化\noption = {\n  legend: {\n    data: [\"降雨量\", \"径流量\"],\n    align: \"left\",\n  },\n  toolbox: {\n    feature: {\n      magicType: {\n        type: [\"stack\", \"tiled\"],\n      },\n      saveAsImage: {\n        pixelRatio: 2,\n      },\n    },\n  },\n  tooltip: {},\n  xAxis: {\n    data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\n    silent: false,\n    splitLine: {\n      show: false,\n    },\n  },\n  yAxis: {},\n  series: [\n    {\n      name: \"bar\",\n      type: \"bar\",\n      animationDelay: function (idx) {\n        return idx * 10;\n      },\n    },\n    {\n      name: \"bar2\",\n      type: \"bar\",\n      animationDelay: function (idx) {\n        return idx * 10 + 100;\n      },\n    },\n  ],\n  animationEasing: \"elasticOut\",\n  animationDelayUpdate: function (idx) {\n    return idx * 5;\n  },\n};\nvar div = L.DomUtil.create(\"div\");\nvar chart = echarts.init(div, \"\", {\n  width: 500,\n  height: 300,\n});\nchart.setOption(option);\n\n// 存储SQL查询到的数据\nfunction sqlData(\n  NAME,\n  AQI,\n  HUMIDITY,\n  RAINFALL,\n  WEATHER,\n  TEMPERATURE,\n  PM25,\n  DATE_USER\n) {\n  this.NAME = NAME;\n  this.weaher = {\n    AQI: AQI,\n    HUMIDITY: HUMIDITY,\n    RAINFALL: RAINFALL,\n    WEATHER: WEATHER,\n    TEMPERATURE: TEMPERATURE,\n    PM25: PM25,\n    DATE_USER: DATE_USER,\n  };\n}\n\nlet myMap = [];\n\n// 各个城市每日天气信息\nlet cityData = new Map();\n\n// 整理SQL查询到的数据\nfunction getData(myMap) {\n  // let dt = [];\n\n  // 临时存储对象\n  function tmpObj(\n    NAME,\n    AQI,\n    HUMIDITY,\n    RAINFALL,\n    WEATHER,\n    TEMPERATURE,\n    PM25,\n    DATE_USER\n  ) {\n    this.NAME = NAME;\n    this.AQI = AQI;\n    this.HUMIDITY = HUMIDITY;\n    this.RAINFALL = RAINFALL;\n    this.WEATHER = WEATHER;\n    this.TEMPERATURE = TEMPERATURE;\n    this.PM25 = PM25;\n    this.DATE_USER = DATE_USER;\n  }\n  // 、、、、\n\n  for (let index = 0; index < myMap.length; index++) {\n    let tmp = myMap[index].NAME;\n    let temp = index;\n    let AQI = [],\n      HUMIDITY = [],\n      RAINFALL = [],\n      WEATHER = [],\n      TEMPERATURE = [],\n      PM25 = [],\n      DATE_USER = [];\n    let dx;\n    for (temp; temp < myMap.length; temp++) {\n      if (myMap[temp].NAME == tmp) {\n        AQI.push(myMap[temp].weaher.AQI);\n        HUMIDITY.push(myMap[temp].weaher.HUMIDITY);\n        RAINFALL.push(myMap[temp].weaher.RAINFALL);\n        WEATHER.push(myMap[temp].weaher.WEATHER);\n        TEMPERATURE.push(myMap[temp].weaher.TEMPERATURE);\n        PM25.push(myMap[temp].weaher.PM25);\n        DATE_USER.push(myMap[temp].weaher.DATE_USER);\n        // dt.push(myMap[temp])\n\n        // console.log(myMap[temp].NAME);\n      }\n    }\n    // 临时对象存储每个城市每天的天气信息\n    dx = new tmpObj(\n      tmp,\n      AQI,\n      HUMIDITY,\n      RAINFALL,\n      WEATHER,\n      TEMPERATURE,\n      PM25,\n      DATE_USER\n    );\n    // dt.push(new Jsl(tmp, AQI, HUMIDITY));\n    cityData.set(tmp, dx);\n  }\n\n  // console.log(cityData.get(\"北京市\"));\n}\n\n//  数据绑定\nfunction chartSet(layer) {\n  // function (layer) {\n  let city = layer.feature.properties.NAME;\n  console.log(myMap);\n  let data1 = cityData.get(city).HUMIDITY;\n  let data2 = cityData.get(city).RAINFALL;\n  chart.setOption({\n    title: {\n      text: city,\n      subtext: \"\",\n    },\n    series: [\n      {\n        name: \"降雨量\",\n        data: data1,\n      },\n      {\n        name: \"径流量\",\n        data: data2,\n      },\n    ],\n  });\n  return chart.getDom();\n  // }\n}\n\n// 查询结果解析\nfunction sqlResult(serviceResult) {\n  // console.log(serviceResult);\n  let i = 0;\n  /*geoJSON数据解析*/\n  resultLayer = L.geoJSON(serviceResult.result.features, {\n    onEachFeature: (feature, layer) => {\n      // if (feature.geometry.coordinates[0] > 10000) {\n      //   let latlng = L.CRS.EPSG3857.unproject(\n      //     L.point(\n      //       feature.geometry.coordinates[0],\n      //       feature.geometry.coordinates[1]\n      //     )\n      //   );\n      //   latlng.alt = feature.geometry.coordinates[2];\n      //    marker = L.marker(latlng).addTo(map);\n      //    return latlng;\n      //   // marker.bindPopup(`<b>SMID:</b> ${feature.properties.SMID}`).openPopup().addTo(map)\n      // } else {\n      //   layer.bindPopup(`<b>SMID:</b> ${feature.properties.SMID}`).addTo(map);\n      // }\n\n      // console.log(feature);\n      // 创建对象\n      myMap[i] = new sqlData(\n        feature.properties.NAME,\n        feature.properties.AQI,\n        feature.properties.HUMIDITY,\n        feature.properties.RAINFALL,\n        feature.properties.WEATHER,\n        feature.properties.TEMPERATURE,\n        feature.properties.PM25,\n        feature.properties.DATE_USER\n      );\n      i++;\n    },\n    style: {\n      \n        weight: 10,\n        color: \"#fff\",\n        opacity:0.5\n      \n    },\n\n    coordsToLatLng: function (coords) {\n      let latlng = L.CRS.EPSG3857.unproject(L.point(coords[0], coords[1]));\n      latlng.alt = coords[2];\n      //   console.log(latlng);\n      return latlng;\n    },\n  });\n  getData(myMap);\n\n  // 图表数据绑定\n\n  resultLayer\n    .bindPopup(\n      function (layer) {\n        let city = layer.feature.properties.NAME;\n        console.log(city);\n        // let data1 = cityData.get(city).HUMIDITY;\n        // let data2 = cityData.get(city).RAINFALL;\n        return `<b>城市:</b>${city}<br>\n        <b>相对湿度:</b>${cityData.get(city).HUMIDITY[0]}<br>\n        <b>本日降雨量:</b>${cityData.get(city).RAINFALL[0]}<br>\n        <b>AQI:</b>${cityData.get(city).AQI[0]}<br>\n        <b>PM2.5浓度:</b>${cityData.get(city).PM25[0]}<br>\n        <b>温度:</b>${cityData.get(city).TEMPERATURE[0]}<br>\n        <b>天气:</b>${cityData.get(city).WEATHER[0]}<br>\n        <b>日期:</b>${cityData.get(city).DATE_USER[0]}<br>\n        `;\n      },\n      { maxWidth: 700 }\n    )\n    .addTo(map);\n}\n\n// SQL查询要素\nfunction sqlQuery(attributeFilter, datasetNames = []) {\n  // sql查询参数\n  var sqlParam = new SuperMap.GetFeaturesBySQLParameters({\n    queryParameter: {\n      name: \"\",\n      attributeFilter: \"date_User='\" + attributeFilter + \" 0:00:00'\",\n    },\n    datasetNames: datasetNames,\n    toIndex: 238,\n  });\n\n  // sql查询服务\n  L.supermap.featureService(dataurl).getFeaturesBySQL(sqlParam, sqlResult);\n}\n\n// sqlQuery(gnl_infor_date, [\"ChinaClimate:weather\"]);\n// 热力图\n// gn_search.addEventListener(\"click\",addHeatMapLayer)\n\naddHeatMapLayer();\n\nlet baseMap = {\n  chinaMapLayer: chinaMapLayer,\n};\nlet overMap = {\n  heatMapLayer: heatMapLayer,\n};\n// console.log(gnl_infor_date);\n\ngn_search.addEventListener(\"click\", () => {\n  if(resultLayer!=null){\n    \n    resultLayer.remove();\n  }\n  \n  sqlQuery(gnl_infor_date, [\"ChinaClimate:weather\"]);\n  console.log(myMap);\n});\nL.control.layers(baseMap, overMap).addTo(map);\n// console.log(myMap)\n\n```\n\n气温热力图\n\n```javascript\n// 热力图基本设置\n\n// 本地CSV数据转换为geojson数据\nfunction geojson(params) {\n  let geojson = {\n    type: \"FeatureCollection\",\n    features: [],\n  };\n  for (const [key, value] of cityData) {\n    // console.log(value.lng,value.lat);\n    let index = timeTransfer(tp_heat_infor_date);\n    let feature = {\n      type: \"feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [],\n      },\n      properties: {\n        value: parseFloat(value.TEMPERATURE[index]),\n      },\n    };\n    // let latlng = L.CRS.EPSG4326.latLngToPoint(L.latLng(value.lng, value.lat));\n    // console.log(latlng);\n    feature.geometry.coordinates = [parseFloat(value.lng), parseFloat(value.lat)];\n    let latlng = [value.lat, value.lng];\n    // console.log(index);\n    L.marker(latlng)\n      .bindPopup(\n        `\n      城市：${key}<br>\n      气温：${value.TEMPERATURE[index]}°<br>\n      日期：${tp_heat_infor_date}`\n      )\n      .addTo(map);\n    geojson.features.push(feature);\n  }\n  heatMapLayer.addFeatures(geojson);\n  heatMapLayer.addTo(map);\n}\n\n// \nclass HeatMap {\n  addHeatMapLayer() {\n    heatMapLayer = L.supermap.heatMapLayer(\n      \"heatMap\",\n      {\n        loadWhileAnimating: true,\n      },\n      {\n        colors: [\"blue\", \"cyan\", \"lime\", \"yellow\", \"red\"],\n      },\n      {\n        id: \"heatmap\",\n        map: map,\n        radius: 45,\n        // useGeoUnit:true,\n        opacity: 0.5,\n        featureWeight: \"value\",\n      }\n    );\n    geojson();\n    // console.log(cityData.get(\"北京市\"));\n  }\n}\nlet tp_HeatMAP = new HeatMap();\n\n```\n\nIsogram\n\n```javascript\n// 等值线类\nclass Isogram {\n  constructor(layername) {\n    this.layername = layername;\n  }\n  surfaceAnalystProcess(zValueFieldName, attributeFilter) {\n    /*\n   X:7714861.994943,Y:6903997.060186   经度:69°18'13.62\",纬度:52°34'14.85\" 左上\n   X:7722476.375537,Y:2007950.338151   经度:69°22'19.87\",纬度:17°44'49.01\" 左下\n   X:14628719.574426,Y:6835467.634838   经度:131°24'43.29\",纬度:52°11'42.13\" 右上\n   X:14491660.723731,Y:1992721.576963   经度:130°10'50.89\",纬度:17°36'59.79\" 右下\n   软件坐标系 右 X 下 Y\n   坐标系上 X 右 Y\n  */\n    let region = L.polygon([\n      [7095467.634838, 8014861.994943],\n      [2007950.338151, 8014861.994943],\n      [2007950.338151, 15191660.723731],\n      [7095467.634838, 15191660.723731],\n    ]);\n    // 表面分析参数\n    surfaceAnalystParameters = new SuperMap.DatasetSurfaceAnalystParameters({\n      extractParameter: new SuperMap.SurfaceAnalystParametersSetting({\n        datumValue: 0, //基准值\n        interval: 2, // 等值距\n        resampleTolerance: 0, // 采样容限\n        smoothMethod: SuperMap.SmoothMethod.BSPLINE,\n        smoothness: 3,\n        clipRegion: region,\n      }),\n      dataset: \"weather@ChinaClimate\",\n      resolution: 9000, // 分辨率\n      zValueFieldName: zValueFieldName,\n      filterQueryParameter: new SuperMap.FilterParameter({\n        attributeFilter: \"date_User='\" + attributeFilter + \" 0:00:00'\",\n      }),\n    });\n    // 空间分析服务\n    surfaceAnalystService = L.supermap.spatialAnalystService(serviceUrl);\n    // 表面分析\n    surfaceAnalystService.surfaceAnalysis(surfaceAnalystParameters, function (serviceResult) {\n      var result = serviceResult.result;\n      console.log(result);\n      if (result && result.recordset && result.recordset.features) {\n        isogramlayer = L.geoJSON(result.recordset.features, {\n          weight: 3,\n          style: (feature) => {\n            console.log(feature.properties.dZvalue);\n\n            if (feature.properties.dZvalue > 0 && feature.properties.dZvalue < 10) {\n              L.polyline(feature.geometry.coordinates, {\n                color: \"#7879b0\",\n              })\n                .bindPopup(feature.properties.dZvalue)\n                .addTo(map);\n              return {\n                color: \"#f1e0ab\",\n              };\n            } else if (feature.properties.dZvalue >= 10 && feature.properties.dZvalue < 25) {\n              return {\n                color: \"#b0cda1\",\n              };\n            } else if (feature.properties.dZvalue >= 25 && feature.properties.dZvalue < 50) {\n              return {\n                color: \"#a5ba81\",\n              };\n            } else if (feature.properties.dZvalue >= 50 && feature.properties.dZvalue < 100) {\n              return {\n                color: \"#8dc4e1\",\n              };\n            } else if (feature.properties.dZvalue >= 100 && feature.properties.dZvalue < 250) {\n              return {\n                color: \"#8eacd6\",\n              };\n            } else {\n              return {\n                color: \"#7879b0\",\n              };\n            }\n            // return true;\n          },\n        }).addTo(map);\n      } else {\n        alert(\"图层未加载成功，请刷新重试\");\n      }\n    });\n  }\n}\n\nrain_isogram = new Isogram(\"rain\");\ntp_isogram = new Isogram(\"temprature\");\n\n// surfaceAnalystProcess(\"temperature\");\n\nday_rain_isogram_search.addEventListener(\"click\", () => {\n  layerRemove();\n  rain_isogram.surfaceAnalystProcess(\"rainfall\", rain_isogram_infor_date);\n  // surfaceAnalystProcess(\"temperature\");\n});\n\nday_tp_isogram_search.addEventListener(\"click\", () => {\n  layerRemove();\n  tp_isogram.surfaceAnalystProcess(\"temperature\", tp_isogram_infor_date);\n  setTimeout(() => {\n    console.log(isogramlayer);\n  }, 3000);\n});\n\n```\n\n","source":"_posts/Supermap实例.md","raw":"---\ntitle: Supermap实例\ndate: 2021-07-16 16:00:31\ntags: [Supermap,编程]\ncategories: [Supermap,编程]\ndescription: leaflet引用\n---\n\n## leaflet引用\n\n引入 Leaflet CSS 文件和 JS 文件，填入 BootCDN 的托管地址\n\n```html\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.css\" rel=\"stylesheet\" />\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.js\"></script>\n```\n\n引入 iclient-leaflet CSS 文件和 JS 文件，填入 SuperMap iClient for Leaflet 在线站点地址：\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.css\" />\n<link rel=\"stylesheet\" href=\"https://iclient.supermap.io/dist/leaflet/iclient-leaflet.min.css\" />\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.js\"></script>\n<script type=\"text/javascript\" src=\"https://iclient.supermap.io/dist/leaflet/iclient-leaflet.js\"></script>\n```\n\n## 地图链接\n\n端口号\n\n```javascript\nvar host = window.isLocal ? window.server : \"https://iserver.supermap.io\";\n```\n\n链接\n\n```javascript\nurl = host + \"/iserver/services/map-China/rest/maps/China\";\n```\n\n## 矢量图层\n\n```javascript\nvar host = window.isLocal ? window.server : \"https://iserver.supermap.io\";\nvar map, themeService, themeRange, ThemeParameters, thmemLayer, url = host +\n    \"/iserver/services/map-China/rest/maps/China\";\nvar resultLayer,dataurl = host+\"/iserver/services/data-China/rest/data\"; //数据服务地址\n\nmap = L.map('map', {\n    center: [20, 100],\n    preferCanvas: true,\n    crs: L.CRS.EPSG3857, //坐标系设置错误不显示\n    maxZoom: 18,  // 最大缩放级别\n    zoom: 2  // 缩放级别\n});\nvar selectId, selectLayerName, vectorLayer = L.supermap.tiledVectorLayer(url, {\n    noWrap: true,\n    cacheEnabled: true,\n    returnAttributes: true,\n    attribution: \"Tile Data©SuperMap iServer with©SuperMap iClient\"\n    // transparent: true\n}).addTo(map);\n// 为矢量图层注册点击事件\nvectorLayer.on('click', function (evt) {\n    var id = evt.layer.properties.id;\n    var layerName = evt.layer.layerName;\n    clearHighlight(); // 判断是否有选中矢量数据，有则取消高亮\n    selectId = id;\n    // alert(id);\n    selectLayerName = layerName;\n    var selectStyle = {\n        fillColor: '#800026',\n        fillOpacity: 0.5,\n        stroke: true,\n        fill: true,\n        color: 'red',\n        opacity: 1,\n        weight: 2\n    };\n    vectorLayer.setFeatureStyle(id, layerName, selectStyle);\n});\n\n\nfunction clearHighlight() {\n    if (selectId && selectLayerName) {\n        vectorLayer.resetFeatureStyle(selectId, selectLayerName);\n    }\n    selectId = null;\n    selectLayerName = null;\n}\n```\n\n图层切换\n\n```javascript\nvar baseMaps = {\n    \"China\": China,\n    // \"vectorLayer\": vectorLayer\n}\nL.control.zoom().addTo(map); // 缩放控件\nvar overmaps = {\n    \"vectorLayer\": vectorLayer\n}\nL.control.layers(baseMaps, overmaps, {\n            position: \"topleft\" //图标位置\n        }).addTo(map);\n```\n\n图表数据绑定\n\nmain.js备份\n```javascript\n// 图表初始化\noption = {\n  legend: {\n    data: [\"降雨量\", \"径流量\"],\n    align: \"left\",\n  },\n  toolbox: {\n    feature: {\n      magicType: {\n        type: [\"stack\", \"tiled\"],\n      },\n      saveAsImage: {\n        pixelRatio: 2,\n      },\n    },\n  },\n  tooltip: {},\n  xAxis: {\n    data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\n    silent: false,\n    splitLine: {\n      show: false,\n    },\n  },\n  yAxis: {},\n  series: [\n    {\n      name: \"bar\",\n      type: \"bar\",\n      animationDelay: function (idx) {\n        return idx * 10;\n      },\n    },\n    {\n      name: \"bar2\",\n      type: \"bar\",\n      animationDelay: function (idx) {\n        return idx * 10 + 100;\n      },\n    },\n  ],\n  animationEasing: \"elasticOut\",\n  animationDelayUpdate: function (idx) {\n    return idx * 5;\n  },\n};\nvar div = L.DomUtil.create(\"div\");\nvar chart = echarts.init(div, \"\", {\n  width: 500,\n  height: 300,\n});\nchart.setOption(option);\n\n//  数据绑定\nfunction chartSet(layer) {\n  // function (layer) {\n  let city = layer.feature.properties.NAME;\n  console.log(myMap);\n  let data1 = cityData.get(city).HUMIDITY;\n  let data2 = cityData.get(city).RAINFALL;\n  chart.setOption({\n    title: {\n      text: city,\n      subtext: \"\",\n    },\n    series: [\n      {\n        name: \"降雨量\",\n        data: data1,\n      },\n      {\n        name: \"径流量\",\n        data: data2,\n      },\n    ],\n  });\n  return chart.getDom();\n  // }\n}\n\nfunction resultBind(resultLayer,selecTime) {\n  resultLayer\n  .bindPopup(\n    function (layer) {\n      let city = layer.feature.properties.NAME;\n      // let time=layer.feature.properties.DATE_USER;\n      time=timeTransfer(selecTime);\n      console.log(selecTime); //time\n      // let data1 = cityData.get(city).HUMIDITY;\n      // let data2 = cityData.get(city).RAINFALL;\n      return `<b>城市:</b>${city}<br>\n      <b>相对湿度:</b>${cityData.get(city).HUMIDITY[time]}<br>\n      <b>本日降雨量:</b>${cityData.get(city).RAINFALL[time]}<br>\n      <b>AQI:</b>${cityData.get(city).AQI[time]}<br>\n      <b>PM2.5浓度:</b>${cityData.get(city).PM25[time]}<br>\n      <b>温度:</b>${cityData.get(city).TEMPERATURE[time]}<br>\n      <b>天气:</b>${cityData.get(city).WEATHER[time]}<br>\n      <b>日期:</b>${cityData.get(city).DATE_USER[time]}<br>\n      `;\n    },\n    { maxWidth: 700 }\n  )\n  .addTo(map);\n}\n\n// 查询结果解析\nfunction sqlResult(serviceResult) {\n  // console.log(serviceResult);\n\n  /*geoJSON数据解析*/\n  resultLayer = L.geoJSON(serviceResult.result.features, {\n    onEachFeature: (feature, layer) => {\n      // if (feature.geometry.coordinates[0] > 10000) {\n        // let latlng = L.CRS.EPSG3857.unproject(\n        //   L.point(\n        //     feature.geometry.coordinates[0],\n        //     feature.geometry.coordinates[1]\n        //   )\n        // );\n      //   latlng.alt = feature.geometry.coordinates[2];\n        //  marker = L.marker(latlng).addTo(map);\n        //  return latlng;\n      //   // marker.bindPopup(`<b>SMID:</b> ${feature.properties.SMID}`).openPopup().addTo(map)\n      // } \n      //else {\n      //   layer.bindPopup(`<b>SMID:</b> ${feature.properties.SMID}`).addTo(map);\n      // }\n\n      // console.log(layer);\n      // 创建对象\n\n    },\n    style: {\n      \n        weight: 10,\n        color: \"#fff\",\n        opacity:0.5\n      \n    },\n\n    coordsToLatLng: function (coords) {\n      // console.log(L.point(coords[0], coords[1]));\n      let latlng = L.CRS.EPSG4326.unproject(L.point(coords[0], coords[1]));\n      latlng.alt = coords[2];\n        // console.log(latlng);\n      return latlng;\n    },\n  });\n  // 图表数据绑定\n  resultBind(resultLayer,gnl_infor_date);\n\n    // console.log(resultLayer);\n}\n\n// SQL查询要素\nfunction sqlQuery(attributeFilter, datasetNames = []) {\n  // sql查询参数\n  var sqlParam = new SuperMap.GetFeaturesBySQLParameters({\n    queryParameter: {\n      name: \"\",\n      attributeFilter: \"date_User='\" + attributeFilter + \" 0:00:00'\",\n    },\n    datasetNames: datasetNames,\n    toIndex: 238,\n  });\n  \n  // sql查询服务\n  L.supermap.featureService(dataurl).getFeaturesBySQL(sqlParam, sqlResult);\n}\n\n// 默认展示第一天的天气信息地图\nsqlQuery(gnl_infor_date, [\"ChinaClimate:weather\"]);\n// 热力图\n// gn_search.addEventListener(\"click\",addHeatMapLayer)\n\ngnl_search.addEventListener('click', () => {\n  layerRemove();\n  resultBind(resultLayer,gnl_infor_date)\n  // sqlQuery(gnl_infor_date, [\"ChinaClimate:weather\"]);\n  setTimeout(() => {\n    // var n =L.layerGroup(resultLayer)\n    // console.log(resultLayer);\n  }, 3000);\n});\n\nday_tp_heat_search.addEventListener('click',()=>{\n  layerRemove();\n  //  console.log(index);\n  tp_HeatMAP.addHeatMapLayer();\n})\n\nlet layer=L.layerGroup(heatMapLayer)\nlet baseMap = {\n  chinaMapLayer: chinaMapLayer,\n};\nlet overMap = {\n  layer: layer,\n  // heatMapLayer:heatMapLayer\n};\nL.control.layers(baseMap, overMap).addTo(map);\n// console.log(myMap)\n\n```\n\n```javascript\n// 图表初始化\noption = {\n  legend: {\n    data: [\"降雨量\", \"径流量\"],\n    align: \"left\",\n  },\n  toolbox: {\n    feature: {\n      magicType: {\n        type: [\"stack\", \"tiled\"],\n      },\n      saveAsImage: {\n        pixelRatio: 2,\n      },\n    },\n  },\n  tooltip: {},\n  xAxis: {\n    data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\n    silent: false,\n    splitLine: {\n      show: false,\n    },\n  },\n  yAxis: {},\n  series: [\n    {\n      name: \"bar\",\n      type: \"bar\",\n      animationDelay: function (idx) {\n        return idx * 10;\n      },\n    },\n    {\n      name: \"bar2\",\n      type: \"bar\",\n      animationDelay: function (idx) {\n        return idx * 10 + 100;\n      },\n    },\n  ],\n  animationEasing: \"elasticOut\",\n  animationDelayUpdate: function (idx) {\n    return idx * 5;\n  },\n};\nvar div = L.DomUtil.create(\"div\");\nvar chart = echarts.init(div, \"\", {\n  width: 500,\n  height: 300,\n});\nchart.setOption(option);\n\n// 存储SQL查询到的数据\nfunction sqlData(\n  NAME,\n  AQI,\n  HUMIDITY,\n  RAINFALL,\n  WEATHER,\n  TEMPERATURE,\n  PM25,\n  DATE_USER\n) {\n  this.NAME = NAME;\n  this.weaher = {\n    AQI: AQI,\n    HUMIDITY: HUMIDITY,\n    RAINFALL: RAINFALL,\n    WEATHER: WEATHER,\n    TEMPERATURE: TEMPERATURE,\n    PM25: PM25,\n    DATE_USER: DATE_USER,\n  };\n}\n\nlet myMap = [];\n\n// 各个城市每日天气信息\nlet cityData = new Map();\n\n// 整理SQL查询到的数据\nfunction getData(myMap) {\n  // let dt = [];\n\n  // 临时存储对象\n  function tmpObj(\n    NAME,\n    AQI,\n    HUMIDITY,\n    RAINFALL,\n    WEATHER,\n    TEMPERATURE,\n    PM25,\n    DATE_USER\n  ) {\n    this.NAME = NAME;\n    this.AQI = AQI;\n    this.HUMIDITY = HUMIDITY;\n    this.RAINFALL = RAINFALL;\n    this.WEATHER = WEATHER;\n    this.TEMPERATURE = TEMPERATURE;\n    this.PM25 = PM25;\n    this.DATE_USER = DATE_USER;\n  }\n  // 、、、、\n\n  for (let index = 0; index < myMap.length; index++) {\n    let tmp = myMap[index].NAME;\n    let temp = index;\n    let AQI = [],\n      HUMIDITY = [],\n      RAINFALL = [],\n      WEATHER = [],\n      TEMPERATURE = [],\n      PM25 = [],\n      DATE_USER = [];\n    let dx;\n    for (temp; temp < myMap.length; temp++) {\n      if (myMap[temp].NAME == tmp) {\n        AQI.push(myMap[temp].weaher.AQI);\n        HUMIDITY.push(myMap[temp].weaher.HUMIDITY);\n        RAINFALL.push(myMap[temp].weaher.RAINFALL);\n        WEATHER.push(myMap[temp].weaher.WEATHER);\n        TEMPERATURE.push(myMap[temp].weaher.TEMPERATURE);\n        PM25.push(myMap[temp].weaher.PM25);\n        DATE_USER.push(myMap[temp].weaher.DATE_USER);\n        // dt.push(myMap[temp])\n\n        // console.log(myMap[temp].NAME);\n      }\n    }\n    // 临时对象存储每个城市每天的天气信息\n    dx = new tmpObj(\n      tmp,\n      AQI,\n      HUMIDITY,\n      RAINFALL,\n      WEATHER,\n      TEMPERATURE,\n      PM25,\n      DATE_USER\n    );\n    // dt.push(new Jsl(tmp, AQI, HUMIDITY));\n    cityData.set(tmp, dx);\n  }\n\n  // console.log(cityData.get(\"北京市\"));\n}\n\n//  数据绑定\nfunction chartSet(layer) {\n  // function (layer) {\n  let city = layer.feature.properties.NAME;\n  console.log(myMap);\n  let data1 = cityData.get(city).HUMIDITY;\n  let data2 = cityData.get(city).RAINFALL;\n  chart.setOption({\n    title: {\n      text: city,\n      subtext: \"\",\n    },\n    series: [\n      {\n        name: \"降雨量\",\n        data: data1,\n      },\n      {\n        name: \"径流量\",\n        data: data2,\n      },\n    ],\n  });\n  return chart.getDom();\n  // }\n}\n\n// 查询结果解析\nfunction sqlResult(serviceResult) {\n  // console.log(serviceResult);\n  let i = 0;\n  /*geoJSON数据解析*/\n  resultLayer = L.geoJSON(serviceResult.result.features, {\n    onEachFeature: (feature, layer) => {\n      // if (feature.geometry.coordinates[0] > 10000) {\n      //   let latlng = L.CRS.EPSG3857.unproject(\n      //     L.point(\n      //       feature.geometry.coordinates[0],\n      //       feature.geometry.coordinates[1]\n      //     )\n      //   );\n      //   latlng.alt = feature.geometry.coordinates[2];\n      //    marker = L.marker(latlng).addTo(map);\n      //    return latlng;\n      //   // marker.bindPopup(`<b>SMID:</b> ${feature.properties.SMID}`).openPopup().addTo(map)\n      // } else {\n      //   layer.bindPopup(`<b>SMID:</b> ${feature.properties.SMID}`).addTo(map);\n      // }\n\n      // console.log(feature);\n      // 创建对象\n      myMap[i] = new sqlData(\n        feature.properties.NAME,\n        feature.properties.AQI,\n        feature.properties.HUMIDITY,\n        feature.properties.RAINFALL,\n        feature.properties.WEATHER,\n        feature.properties.TEMPERATURE,\n        feature.properties.PM25,\n        feature.properties.DATE_USER\n      );\n      i++;\n    },\n    style: {\n      \n        weight: 10,\n        color: \"#fff\",\n        opacity:0.5\n      \n    },\n\n    coordsToLatLng: function (coords) {\n      let latlng = L.CRS.EPSG3857.unproject(L.point(coords[0], coords[1]));\n      latlng.alt = coords[2];\n      //   console.log(latlng);\n      return latlng;\n    },\n  });\n  getData(myMap);\n\n  // 图表数据绑定\n\n  resultLayer\n    .bindPopup(\n      function (layer) {\n        let city = layer.feature.properties.NAME;\n        console.log(city);\n        // let data1 = cityData.get(city).HUMIDITY;\n        // let data2 = cityData.get(city).RAINFALL;\n        return `<b>城市:</b>${city}<br>\n        <b>相对湿度:</b>${cityData.get(city).HUMIDITY[0]}<br>\n        <b>本日降雨量:</b>${cityData.get(city).RAINFALL[0]}<br>\n        <b>AQI:</b>${cityData.get(city).AQI[0]}<br>\n        <b>PM2.5浓度:</b>${cityData.get(city).PM25[0]}<br>\n        <b>温度:</b>${cityData.get(city).TEMPERATURE[0]}<br>\n        <b>天气:</b>${cityData.get(city).WEATHER[0]}<br>\n        <b>日期:</b>${cityData.get(city).DATE_USER[0]}<br>\n        `;\n      },\n      { maxWidth: 700 }\n    )\n    .addTo(map);\n}\n\n// SQL查询要素\nfunction sqlQuery(attributeFilter, datasetNames = []) {\n  // sql查询参数\n  var sqlParam = new SuperMap.GetFeaturesBySQLParameters({\n    queryParameter: {\n      name: \"\",\n      attributeFilter: \"date_User='\" + attributeFilter + \" 0:00:00'\",\n    },\n    datasetNames: datasetNames,\n    toIndex: 238,\n  });\n\n  // sql查询服务\n  L.supermap.featureService(dataurl).getFeaturesBySQL(sqlParam, sqlResult);\n}\n\n// sqlQuery(gnl_infor_date, [\"ChinaClimate:weather\"]);\n// 热力图\n// gn_search.addEventListener(\"click\",addHeatMapLayer)\n\naddHeatMapLayer();\n\nlet baseMap = {\n  chinaMapLayer: chinaMapLayer,\n};\nlet overMap = {\n  heatMapLayer: heatMapLayer,\n};\n// console.log(gnl_infor_date);\n\ngn_search.addEventListener(\"click\", () => {\n  if(resultLayer!=null){\n    \n    resultLayer.remove();\n  }\n  \n  sqlQuery(gnl_infor_date, [\"ChinaClimate:weather\"]);\n  console.log(myMap);\n});\nL.control.layers(baseMap, overMap).addTo(map);\n// console.log(myMap)\n\n```\n\n气温热力图\n\n```javascript\n// 热力图基本设置\n\n// 本地CSV数据转换为geojson数据\nfunction geojson(params) {\n  let geojson = {\n    type: \"FeatureCollection\",\n    features: [],\n  };\n  for (const [key, value] of cityData) {\n    // console.log(value.lng,value.lat);\n    let index = timeTransfer(tp_heat_infor_date);\n    let feature = {\n      type: \"feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [],\n      },\n      properties: {\n        value: parseFloat(value.TEMPERATURE[index]),\n      },\n    };\n    // let latlng = L.CRS.EPSG4326.latLngToPoint(L.latLng(value.lng, value.lat));\n    // console.log(latlng);\n    feature.geometry.coordinates = [parseFloat(value.lng), parseFloat(value.lat)];\n    let latlng = [value.lat, value.lng];\n    // console.log(index);\n    L.marker(latlng)\n      .bindPopup(\n        `\n      城市：${key}<br>\n      气温：${value.TEMPERATURE[index]}°<br>\n      日期：${tp_heat_infor_date}`\n      )\n      .addTo(map);\n    geojson.features.push(feature);\n  }\n  heatMapLayer.addFeatures(geojson);\n  heatMapLayer.addTo(map);\n}\n\n// \nclass HeatMap {\n  addHeatMapLayer() {\n    heatMapLayer = L.supermap.heatMapLayer(\n      \"heatMap\",\n      {\n        loadWhileAnimating: true,\n      },\n      {\n        colors: [\"blue\", \"cyan\", \"lime\", \"yellow\", \"red\"],\n      },\n      {\n        id: \"heatmap\",\n        map: map,\n        radius: 45,\n        // useGeoUnit:true,\n        opacity: 0.5,\n        featureWeight: \"value\",\n      }\n    );\n    geojson();\n    // console.log(cityData.get(\"北京市\"));\n  }\n}\nlet tp_HeatMAP = new HeatMap();\n\n```\n\nIsogram\n\n```javascript\n// 等值线类\nclass Isogram {\n  constructor(layername) {\n    this.layername = layername;\n  }\n  surfaceAnalystProcess(zValueFieldName, attributeFilter) {\n    /*\n   X:7714861.994943,Y:6903997.060186   经度:69°18'13.62\",纬度:52°34'14.85\" 左上\n   X:7722476.375537,Y:2007950.338151   经度:69°22'19.87\",纬度:17°44'49.01\" 左下\n   X:14628719.574426,Y:6835467.634838   经度:131°24'43.29\",纬度:52°11'42.13\" 右上\n   X:14491660.723731,Y:1992721.576963   经度:130°10'50.89\",纬度:17°36'59.79\" 右下\n   软件坐标系 右 X 下 Y\n   坐标系上 X 右 Y\n  */\n    let region = L.polygon([\n      [7095467.634838, 8014861.994943],\n      [2007950.338151, 8014861.994943],\n      [2007950.338151, 15191660.723731],\n      [7095467.634838, 15191660.723731],\n    ]);\n    // 表面分析参数\n    surfaceAnalystParameters = new SuperMap.DatasetSurfaceAnalystParameters({\n      extractParameter: new SuperMap.SurfaceAnalystParametersSetting({\n        datumValue: 0, //基准值\n        interval: 2, // 等值距\n        resampleTolerance: 0, // 采样容限\n        smoothMethod: SuperMap.SmoothMethod.BSPLINE,\n        smoothness: 3,\n        clipRegion: region,\n      }),\n      dataset: \"weather@ChinaClimate\",\n      resolution: 9000, // 分辨率\n      zValueFieldName: zValueFieldName,\n      filterQueryParameter: new SuperMap.FilterParameter({\n        attributeFilter: \"date_User='\" + attributeFilter + \" 0:00:00'\",\n      }),\n    });\n    // 空间分析服务\n    surfaceAnalystService = L.supermap.spatialAnalystService(serviceUrl);\n    // 表面分析\n    surfaceAnalystService.surfaceAnalysis(surfaceAnalystParameters, function (serviceResult) {\n      var result = serviceResult.result;\n      console.log(result);\n      if (result && result.recordset && result.recordset.features) {\n        isogramlayer = L.geoJSON(result.recordset.features, {\n          weight: 3,\n          style: (feature) => {\n            console.log(feature.properties.dZvalue);\n\n            if (feature.properties.dZvalue > 0 && feature.properties.dZvalue < 10) {\n              L.polyline(feature.geometry.coordinates, {\n                color: \"#7879b0\",\n              })\n                .bindPopup(feature.properties.dZvalue)\n                .addTo(map);\n              return {\n                color: \"#f1e0ab\",\n              };\n            } else if (feature.properties.dZvalue >= 10 && feature.properties.dZvalue < 25) {\n              return {\n                color: \"#b0cda1\",\n              };\n            } else if (feature.properties.dZvalue >= 25 && feature.properties.dZvalue < 50) {\n              return {\n                color: \"#a5ba81\",\n              };\n            } else if (feature.properties.dZvalue >= 50 && feature.properties.dZvalue < 100) {\n              return {\n                color: \"#8dc4e1\",\n              };\n            } else if (feature.properties.dZvalue >= 100 && feature.properties.dZvalue < 250) {\n              return {\n                color: \"#8eacd6\",\n              };\n            } else {\n              return {\n                color: \"#7879b0\",\n              };\n            }\n            // return true;\n          },\n        }).addTo(map);\n      } else {\n        alert(\"图层未加载成功，请刷新重试\");\n      }\n    });\n  }\n}\n\nrain_isogram = new Isogram(\"rain\");\ntp_isogram = new Isogram(\"temprature\");\n\n// surfaceAnalystProcess(\"temperature\");\n\nday_rain_isogram_search.addEventListener(\"click\", () => {\n  layerRemove();\n  rain_isogram.surfaceAnalystProcess(\"rainfall\", rain_isogram_infor_date);\n  // surfaceAnalystProcess(\"temperature\");\n});\n\nday_tp_isogram_search.addEventListener(\"click\", () => {\n  layerRemove();\n  tp_isogram.surfaceAnalystProcess(\"temperature\", tp_isogram_infor_date);\n  setTimeout(() => {\n    console.log(isogramlayer);\n  }, 3000);\n});\n\n```\n\n","slug":"Supermap实例","published":1,"updated":"2021-08-11T07:26:24.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2n000wjsvkcthd3nvs","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"leaflet引用\"><a href=\"#leaflet引用\" class=\"headerlink\" title=\"leaflet引用\"></a>leaflet引用</h2><p>引入 Leaflet CSS 文件和 JS 文件，填入 BootCDN 的托管地址</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>引入 iclient-leaflet CSS 文件和 JS 文件，填入 SuperMap iClient for Leaflet 在线站点地址：</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://iclient.supermap.io/dist/leaflet/iclient-leaflet.min.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://iclient.supermap.io/dist/leaflet/iclient-leaflet.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"地图链接\"><a href=\"#地图链接\" class=\"headerlink\" title=\"地图链接\"></a>地图链接</h2><p>端口号</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> host <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>isLocal <span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span>server <span class=\"token operator\">:</span> <span class=\"token string\">\"https://iserver.supermap.io\"</span><span class=\"token punctuation\">;</span></code></pre>\n<p>链接</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">url <span class=\"token operator\">=</span> host <span class=\"token operator\">+</span> <span class=\"token string\">\"/iserver/services/map-China/rest/maps/China\"</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"矢量图层\"><a href=\"#矢量图层\" class=\"headerlink\" title=\"矢量图层\"></a>矢量图层</h2><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> host <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>isLocal <span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span>server <span class=\"token operator\">:</span> <span class=\"token string\">\"https://iserver.supermap.io\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> map<span class=\"token punctuation\">,</span> themeService<span class=\"token punctuation\">,</span> themeRange<span class=\"token punctuation\">,</span> ThemeParameters<span class=\"token punctuation\">,</span> thmemLayer<span class=\"token punctuation\">,</span> url <span class=\"token operator\">=</span> host <span class=\"token operator\">+</span>\n    <span class=\"token string\">\"/iserver/services/map-China/rest/maps/China\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> resultLayer<span class=\"token punctuation\">,</span>dataurl <span class=\"token operator\">=</span> host<span class=\"token operator\">+</span><span class=\"token string\">\"/iserver/services/data-China/rest/data\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//数据服务地址</span>\n\nmap <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token string\">'map'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    center<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    preferCanvas<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    crs<span class=\"token operator\">:</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EPSG3857</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//坐标系设置错误不显示</span>\n    maxZoom<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 最大缩放级别</span>\n    zoom<span class=\"token operator\">:</span> <span class=\"token number\">2</span>  <span class=\"token comment\">// 缩放级别</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> selectId<span class=\"token punctuation\">,</span> selectLayerName<span class=\"token punctuation\">,</span> vectorLayer <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span><span class=\"token function\">tiledVectorLayer</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    noWrap<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    cacheEnabled<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    returnAttributes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    attribution<span class=\"token operator\">:</span> <span class=\"token string\">\"Tile Data©SuperMap iServer with©SuperMap iClient\"</span>\n    <span class=\"token comment\">// transparent: true</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 为矢量图层注册点击事件</span>\nvectorLayer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>layer<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> layerName <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>layer<span class=\"token punctuation\">.</span>layerName<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">clearHighlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 判断是否有选中矢量数据，有则取消高亮</span>\n    selectId <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// alert(id);</span>\n    selectLayerName <span class=\"token operator\">=</span> layerName<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> selectStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        fillColor<span class=\"token operator\">:</span> <span class=\"token string\">'#800026'</span><span class=\"token punctuation\">,</span>\n        fillOpacity<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n        stroke<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        fill<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        color<span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n        opacity<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        weight<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    vectorLayer<span class=\"token punctuation\">.</span><span class=\"token function\">setFeatureStyle</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> layerName<span class=\"token punctuation\">,</span> selectStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">clearHighlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selectId <span class=\"token operator\">&amp;&amp;</span> selectLayerName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        vectorLayer<span class=\"token punctuation\">.</span><span class=\"token function\">resetFeatureStyle</span><span class=\"token punctuation\">(</span>selectId<span class=\"token punctuation\">,</span> selectLayerName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    selectId <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    selectLayerName <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>图层切换</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> baseMaps <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"China\"</span><span class=\"token operator\">:</span> China<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// \"vectorLayer\": vectorLayer</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">.</span><span class=\"token function\">zoom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 缩放控件</span>\n<span class=\"token keyword\">var</span> overmaps <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"vectorLayer\"</span><span class=\"token operator\">:</span> vectorLayer\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">.</span><span class=\"token function\">layers</span><span class=\"token punctuation\">(</span>baseMaps<span class=\"token punctuation\">,</span> overmaps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n            position<span class=\"token operator\">:</span> <span class=\"token string\">\"topleft\"</span> <span class=\"token comment\">//图标位置</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>图表数据绑定</p>\n<p>main.js备份<br><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 图表初始化</span>\noption <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"降雨量\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"径流量\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    align<span class=\"token operator\">:</span> <span class=\"token string\">\"left\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  toolbox<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    feature<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      magicType<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        type<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"stack\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tiled\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      saveAsImage<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        pixelRatio<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"周一\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周二\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周三\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周四\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周五\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周六\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周日\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    silent<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    splitLine<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      show<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">animationDelay</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"bar2\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">animationDelay</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  animationEasing<span class=\"token operator\">:</span> <span class=\"token string\">\"elasticOut\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">animationDelayUpdate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>DomUtil<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> chart <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  width<span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//  数据绑定</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">chartSet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">layer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// function (layer) &#123;</span>\n  <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> layer<span class=\"token punctuation\">.</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> data1 <span class=\"token operator\">=</span> cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> data2 <span class=\"token operator\">=</span> cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">;</span>\n  chart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    title<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      text<span class=\"token operator\">:</span> city<span class=\"token punctuation\">,</span>\n      subtext<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">\"降雨量\"</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token operator\">:</span> data1<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">\"径流量\"</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token operator\">:</span> data2<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> chart<span class=\"token punctuation\">.</span><span class=\"token function\">getDom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// &#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">resultBind</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resultLayer<span class=\"token punctuation\">,</span>selecTime</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  resultLayer\n  <span class=\"token punctuation\">.</span><span class=\"token function\">bindPopup</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">layer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> layer<span class=\"token punctuation\">.</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// let time=layer.feature.properties.DATE_USER;</span>\n      time<span class=\"token operator\">=</span><span class=\"token function\">timeTransfer</span><span class=\"token punctuation\">(</span>selecTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>selecTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//time</span>\n      <span class=\"token comment\">// let data1 = cityData.get(city).HUMIDITY;</span>\n      <span class=\"token comment\">// let data2 = cityData.get(city).RAINFALL;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;b>城市:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>city<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>相对湿度:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>本日降雨量:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>AQI:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AQI</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>PM2.5浓度:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PM25</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>温度:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>天气:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>日期:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DATE_USER</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span> maxWidth<span class=\"token operator\">:</span> <span class=\"token number\">700</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 查询结果解析</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sqlResult</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">serviceResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// console.log(serviceResult);</span>\n\n  <span class=\"token comment\">/*geoJSON数据解析*/</span>\n  resultLayer <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">geoJSON</span><span class=\"token punctuation\">(</span>serviceResult<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">onEachFeature</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">feature<span class=\"token punctuation\">,</span> layer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// if (feature.geometry.coordinates[0] > 10000) &#123;</span>\n        <span class=\"token comment\">// let latlng = L.CRS.EPSG3857.unproject(</span>\n        <span class=\"token comment\">//   L.point(</span>\n        <span class=\"token comment\">//     feature.geometry.coordinates[0],</span>\n        <span class=\"token comment\">//     feature.geometry.coordinates[1]</span>\n        <span class=\"token comment\">//   )</span>\n        <span class=\"token comment\">// );</span>\n      <span class=\"token comment\">//   latlng.alt = feature.geometry.coordinates[2];</span>\n        <span class=\"token comment\">//  marker = L.marker(latlng).addTo(map);</span>\n        <span class=\"token comment\">//  return latlng;</span>\n      <span class=\"token comment\">//   // marker.bindPopup(`&lt;b>SMID:&lt;/b> $&#123;feature.properties.SMID&#125;`).openPopup().addTo(map)</span>\n      <span class=\"token comment\">// &#125; </span>\n      <span class=\"token comment\">//else &#123;</span>\n      <span class=\"token comment\">//   layer.bindPopup(`&lt;b>SMID:&lt;/b> $&#123;feature.properties.SMID&#125;`).addTo(map);</span>\n      <span class=\"token comment\">// &#125;</span>\n\n      <span class=\"token comment\">// console.log(layer);</span>\n      <span class=\"token comment\">// 创建对象</span>\n\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    style<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      \n        weight<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n        color<span class=\"token operator\">:</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span>\n        opacity<span class=\"token operator\">:</span><span class=\"token number\">0.5</span>\n      \n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">coordsToLatLng</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">coords</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// console.log(L.point(coords[0], coords[1]));</span>\n      <span class=\"token keyword\">let</span> latlng <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EPSG4326</span><span class=\"token punctuation\">.</span><span class=\"token function\">unproject</span><span class=\"token punctuation\">(</span><span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">point</span><span class=\"token punctuation\">(</span>coords<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> coords<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      latlng<span class=\"token punctuation\">.</span>alt <span class=\"token operator\">=</span> coords<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// console.log(latlng);</span>\n      <span class=\"token keyword\">return</span> latlng<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 图表数据绑定</span>\n  <span class=\"token function\">resultBind</span><span class=\"token punctuation\">(</span>resultLayer<span class=\"token punctuation\">,</span>gnl_infor_date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// console.log(resultLayer);</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// SQL查询要素</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sqlQuery</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">attributeFilter<span class=\"token punctuation\">,</span> datasetNames <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// sql查询参数</span>\n  <span class=\"token keyword\">var</span> sqlParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SuperMap<span class=\"token punctuation\">.</span>GetFeaturesBySQLParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    queryParameter<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      attributeFilter<span class=\"token operator\">:</span> <span class=\"token string\">\"date_User='\"</span> <span class=\"token operator\">+</span> attributeFilter <span class=\"token operator\">+</span> <span class=\"token string\">\" 0:00:00'\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    datasetNames<span class=\"token operator\">:</span> datasetNames<span class=\"token punctuation\">,</span>\n    toIndex<span class=\"token operator\">:</span> <span class=\"token number\">238</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token comment\">// sql查询服务</span>\n  <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span><span class=\"token function\">featureService</span><span class=\"token punctuation\">(</span>dataurl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFeaturesBySQL</span><span class=\"token punctuation\">(</span>sqlParam<span class=\"token punctuation\">,</span> sqlResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 默认展示第一天的天气信息地图</span>\n<span class=\"token function\">sqlQuery</span><span class=\"token punctuation\">(</span>gnl_infor_date<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ChinaClimate:weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 热力图</span>\n<span class=\"token comment\">// gn_search.addEventListener(\"click\",addHeatMapLayer)</span>\n\ngnl_search<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">layerRemove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">resultBind</span><span class=\"token punctuation\">(</span>resultLayer<span class=\"token punctuation\">,</span>gnl_infor_date<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// sqlQuery(gnl_infor_date, [\"ChinaClimate:weather\"]);</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// var n =L.layerGroup(resultLayer)</span>\n    <span class=\"token comment\">// console.log(resultLayer);</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nday_tp_heat_search<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">layerRemove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//  console.log(index);</span>\n  tp_HeatMAP<span class=\"token punctuation\">.</span><span class=\"token function\">addHeatMapLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> layer<span class=\"token operator\">=</span><span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">layerGroup</span><span class=\"token punctuation\">(</span>heatMapLayer<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> baseMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  chinaMapLayer<span class=\"token operator\">:</span> chinaMapLayer<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> overMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  layer<span class=\"token operator\">:</span> layer<span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// heatMapLayer:heatMapLayer</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">.</span><span class=\"token function\">layers</span><span class=\"token punctuation\">(</span>baseMap<span class=\"token punctuation\">,</span> overMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// console.log(myMap)</span>\n</code></pre></p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 图表初始化</span>\noption <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"降雨量\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"径流量\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    align<span class=\"token operator\">:</span> <span class=\"token string\">\"left\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  toolbox<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    feature<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      magicType<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        type<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"stack\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tiled\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      saveAsImage<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        pixelRatio<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"周一\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周二\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周三\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周四\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周五\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周六\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周日\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    silent<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    splitLine<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      show<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">animationDelay</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"bar2\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">animationDelay</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  animationEasing<span class=\"token operator\">:</span> <span class=\"token string\">\"elasticOut\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">animationDelayUpdate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>DomUtil<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> chart <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  width<span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 存储SQL查询到的数据</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sqlData</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\"><span class=\"token constant\">NAME</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">AQI</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">PM25</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">DATE_USER</span></span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span> <span class=\"token operator\">=</span> <span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>weaher <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token constant\">AQI</span><span class=\"token operator\">:</span> <span class=\"token constant\">AQI</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">HUMIDITY</span><span class=\"token operator\">:</span> <span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">RAINFALL</span><span class=\"token operator\">:</span> <span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">WEATHER</span><span class=\"token operator\">:</span> <span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">TEMPERATURE</span><span class=\"token operator\">:</span> <span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">PM25</span><span class=\"token operator\">:</span> <span class=\"token constant\">PM25</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">DATE_USER</span><span class=\"token operator\">:</span> <span class=\"token constant\">DATE_USER</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">let</span> myMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 各个城市每日天气信息</span>\n<span class=\"token keyword\">let</span> cityData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 整理SQL查询到的数据</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">myMap</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// let dt = [];</span>\n\n  <span class=\"token comment\">// 临时存储对象</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">tmpObj</span><span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\"><span class=\"token constant\">NAME</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">AQI</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">PM25</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">DATE_USER</span></span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span> <span class=\"token operator\">=</span> <span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AQI</span> <span class=\"token operator\">=</span> <span class=\"token constant\">AQI</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span> <span class=\"token operator\">=</span> <span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span> <span class=\"token operator\">=</span> <span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WEATHER</span> <span class=\"token operator\">=</span> <span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span> <span class=\"token operator\">=</span> <span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PM25</span> <span class=\"token operator\">=</span> <span class=\"token constant\">PM25</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DATE_USER</span> <span class=\"token operator\">=</span> <span class=\"token constant\">DATE_USER</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// 、、、、</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index <span class=\"token operator\">&lt;</span> myMap<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> tmp <span class=\"token operator\">=</span> myMap<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> temp <span class=\"token operator\">=</span> index<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token constant\">AQI</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">HUMIDITY</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">RAINFALL</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">WEATHER</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">TEMPERATURE</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">PM25</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">DATE_USER</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> dx<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">;</span> temp <span class=\"token operator\">&lt;</span> myMap<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> temp<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span> <span class=\"token operator\">==</span> tmp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token constant\">AQI</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">AQI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">PM25</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">PM25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">DATE_USER</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">DATE_USER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// dt.push(myMap[temp])</span>\n\n        <span class=\"token comment\">// console.log(myMap[temp].NAME);</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 临时对象存储每个城市每天的天气信息</span>\n    dx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">tmpObj</span><span class=\"token punctuation\">(</span>\n      tmp<span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">AQI</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">PM25</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">DATE_USER</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// dt.push(new Jsl(tmp, AQI, HUMIDITY));</span>\n    cityData<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">,</span> dx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// console.log(cityData.get(\"北京市\"));</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//  数据绑定</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">chartSet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">layer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// function (layer) &#123;</span>\n  <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> layer<span class=\"token punctuation\">.</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> data1 <span class=\"token operator\">=</span> cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> data2 <span class=\"token operator\">=</span> cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">;</span>\n  chart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    title<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      text<span class=\"token operator\">:</span> city<span class=\"token punctuation\">,</span>\n      subtext<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">\"降雨量\"</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token operator\">:</span> data1<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">\"径流量\"</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token operator\">:</span> data2<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> chart<span class=\"token punctuation\">.</span><span class=\"token function\">getDom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// &#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 查询结果解析</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sqlResult</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">serviceResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// console.log(serviceResult);</span>\n  <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/*geoJSON数据解析*/</span>\n  resultLayer <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">geoJSON</span><span class=\"token punctuation\">(</span>serviceResult<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">onEachFeature</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">feature<span class=\"token punctuation\">,</span> layer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// if (feature.geometry.coordinates[0] > 10000) &#123;</span>\n      <span class=\"token comment\">//   let latlng = L.CRS.EPSG3857.unproject(</span>\n      <span class=\"token comment\">//     L.point(</span>\n      <span class=\"token comment\">//       feature.geometry.coordinates[0],</span>\n      <span class=\"token comment\">//       feature.geometry.coordinates[1]</span>\n      <span class=\"token comment\">//     )</span>\n      <span class=\"token comment\">//   );</span>\n      <span class=\"token comment\">//   latlng.alt = feature.geometry.coordinates[2];</span>\n      <span class=\"token comment\">//    marker = L.marker(latlng).addTo(map);</span>\n      <span class=\"token comment\">//    return latlng;</span>\n      <span class=\"token comment\">//   // marker.bindPopup(`&lt;b>SMID:&lt;/b> $&#123;feature.properties.SMID&#125;`).openPopup().addTo(map)</span>\n      <span class=\"token comment\">// &#125; else &#123;</span>\n      <span class=\"token comment\">//   layer.bindPopup(`&lt;b>SMID:&lt;/b> $&#123;feature.properties.SMID&#125;`).addTo(map);</span>\n      <span class=\"token comment\">// &#125;</span>\n\n      <span class=\"token comment\">// console.log(feature);</span>\n      <span class=\"token comment\">// 创建对象</span>\n      myMap<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">sqlData</span><span class=\"token punctuation\">(</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">AQI</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">PM25</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">DATE_USER</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    style<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      \n        weight<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n        color<span class=\"token operator\">:</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span>\n        opacity<span class=\"token operator\">:</span><span class=\"token number\">0.5</span>\n      \n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">coordsToLatLng</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">coords</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> latlng <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EPSG3857</span><span class=\"token punctuation\">.</span><span class=\"token function\">unproject</span><span class=\"token punctuation\">(</span><span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">point</span><span class=\"token punctuation\">(</span>coords<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> coords<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      latlng<span class=\"token punctuation\">.</span>alt <span class=\"token operator\">=</span> coords<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//   console.log(latlng);</span>\n      <span class=\"token keyword\">return</span> latlng<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 图表数据绑定</span>\n\n  resultLayer\n    <span class=\"token punctuation\">.</span><span class=\"token function\">bindPopup</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">layer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> layer<span class=\"token punctuation\">.</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// let data1 = cityData.get(city).HUMIDITY;</span>\n        <span class=\"token comment\">// let data2 = cityData.get(city).RAINFALL;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;b>城市:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>city<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>相对湿度:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>本日降雨量:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>AQI:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AQI</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>PM2.5浓度:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PM25</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>温度:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>天气:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>日期:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DATE_USER</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span> maxWidth<span class=\"token operator\">:</span> <span class=\"token number\">700</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// SQL查询要素</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sqlQuery</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">attributeFilter<span class=\"token punctuation\">,</span> datasetNames <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// sql查询参数</span>\n  <span class=\"token keyword\">var</span> sqlParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SuperMap<span class=\"token punctuation\">.</span>GetFeaturesBySQLParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    queryParameter<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      attributeFilter<span class=\"token operator\">:</span> <span class=\"token string\">\"date_User='\"</span> <span class=\"token operator\">+</span> attributeFilter <span class=\"token operator\">+</span> <span class=\"token string\">\" 0:00:00'\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    datasetNames<span class=\"token operator\">:</span> datasetNames<span class=\"token punctuation\">,</span>\n    toIndex<span class=\"token operator\">:</span> <span class=\"token number\">238</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// sql查询服务</span>\n  <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span><span class=\"token function\">featureService</span><span class=\"token punctuation\">(</span>dataurl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFeaturesBySQL</span><span class=\"token punctuation\">(</span>sqlParam<span class=\"token punctuation\">,</span> sqlResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// sqlQuery(gnl_infor_date, [\"ChinaClimate:weather\"]);</span>\n<span class=\"token comment\">// 热力图</span>\n<span class=\"token comment\">// gn_search.addEventListener(\"click\",addHeatMapLayer)</span>\n\n<span class=\"token function\">addHeatMapLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> baseMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  chinaMapLayer<span class=\"token operator\">:</span> chinaMapLayer<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> overMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  heatMapLayer<span class=\"token operator\">:</span> heatMapLayer<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// console.log(gnl_infor_date);</span>\n\ngn_search<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>resultLayer<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \n    resultLayer<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token function\">sqlQuery</span><span class=\"token punctuation\">(</span>gnl_infor_date<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ChinaClimate:weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">.</span><span class=\"token function\">layers</span><span class=\"token punctuation\">(</span>baseMap<span class=\"token punctuation\">,</span> overMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// console.log(myMap)</span>\n</code></pre>\n<p>气温热力图</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 热力图基本设置</span>\n\n<span class=\"token comment\">// 本地CSV数据转换为geojson数据</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">geojson</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">params</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> geojson <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"FeatureCollection\"</span><span class=\"token punctuation\">,</span>\n    features<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> cityData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// console.log(value.lng,value.lat);</span>\n    <span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token function\">timeTransfer</span><span class=\"token punctuation\">(</span>tp_heat_infor_date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> feature <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">\"feature\"</span><span class=\"token punctuation\">,</span>\n      geometry<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">\"Point\"</span><span class=\"token punctuation\">,</span>\n        coordinates<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        value<span class=\"token operator\">:</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// let latlng = L.CRS.EPSG4326.latLngToPoint(L.latLng(value.lng, value.lat));</span>\n    <span class=\"token comment\">// console.log(latlng);</span>\n    feature<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>coordinates <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>lng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>lat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> latlng <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">.</span>lat<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">.</span>lng<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// console.log(index);</span>\n    <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">marker</span><span class=\"token punctuation\">(</span>latlng<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">bindPopup</span><span class=\"token punctuation\">(</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      城市：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>key<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      气温：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>value<span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">°&lt;br>\n      日期：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>tp_heat_infor_date<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    geojson<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  heatMapLayer<span class=\"token punctuation\">.</span><span class=\"token function\">addFeatures</span><span class=\"token punctuation\">(</span>geojson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  heatMapLayer<span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// </span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HeatMap</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">addHeatMapLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    heatMapLayer <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span><span class=\"token function\">heatMapLayer</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"heatMap\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        loadWhileAnimating<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cyan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lime\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        id<span class=\"token operator\">:</span> <span class=\"token string\">\"heatmap\"</span><span class=\"token punctuation\">,</span>\n        map<span class=\"token operator\">:</span> map<span class=\"token punctuation\">,</span>\n        radius<span class=\"token operator\">:</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// useGeoUnit:true,</span>\n        opacity<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n        featureWeight<span class=\"token operator\">:</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">geojson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// console.log(cityData.get(\"北京市\"));</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">let</span> tp_HeatMAP <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HeatMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Isogram</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 等值线类</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Isogram</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">layername</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>layername <span class=\"token operator\">=</span> layername<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">surfaceAnalystProcess</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">zValueFieldName<span class=\"token punctuation\">,</span> attributeFilter</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/*\n   X:7714861.994943,Y:6903997.060186   经度:69°18'13.62\",纬度:52°34'14.85\" 左上\n   X:7722476.375537,Y:2007950.338151   经度:69°22'19.87\",纬度:17°44'49.01\" 左下\n   X:14628719.574426,Y:6835467.634838   经度:131°24'43.29\",纬度:52°11'42.13\" 右上\n   X:14491660.723731,Y:1992721.576963   经度:130°10'50.89\",纬度:17°36'59.79\" 右下\n   软件坐标系 右 X 下 Y\n   坐标系上 X 右 Y\n  */</span>\n    <span class=\"token keyword\">let</span> region <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">polygon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">7095467.634838</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8014861.994943</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">2007950.338151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8014861.994943</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">2007950.338151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15191660.723731</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">7095467.634838</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15191660.723731</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 表面分析参数</span>\n    surfaceAnalystParameters <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SuperMap<span class=\"token punctuation\">.</span>DatasetSurfaceAnalystParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      extractParameter<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SuperMap<span class=\"token punctuation\">.</span>SurfaceAnalystParametersSetting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        datumValue<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//基准值</span>\n        interval<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 等值距</span>\n        resampleTolerance<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 采样容限</span>\n        smoothMethod<span class=\"token operator\">:</span> SuperMap<span class=\"token punctuation\">.</span>SmoothMethod<span class=\"token punctuation\">.</span><span class=\"token constant\">BSPLINE</span><span class=\"token punctuation\">,</span>\n        smoothness<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n        clipRegion<span class=\"token operator\">:</span> region<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      dataset<span class=\"token operator\">:</span> <span class=\"token string\">\"weather@ChinaClimate\"</span><span class=\"token punctuation\">,</span>\n      resolution<span class=\"token operator\">:</span> <span class=\"token number\">9000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 分辨率</span>\n      zValueFieldName<span class=\"token operator\">:</span> zValueFieldName<span class=\"token punctuation\">,</span>\n      filterQueryParameter<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SuperMap<span class=\"token punctuation\">.</span>FilterParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        attributeFilter<span class=\"token operator\">:</span> <span class=\"token string\">\"date_User='\"</span> <span class=\"token operator\">+</span> attributeFilter <span class=\"token operator\">+</span> <span class=\"token string\">\" 0:00:00'\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 空间分析服务</span>\n    surfaceAnalystService <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span><span class=\"token function\">spatialAnalystService</span><span class=\"token punctuation\">(</span>serviceUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 表面分析</span>\n    surfaceAnalystService<span class=\"token punctuation\">.</span><span class=\"token function\">surfaceAnalysis</span><span class=\"token punctuation\">(</span>surfaceAnalystParameters<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">serviceResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> serviceResult<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">&amp;&amp;</span> result<span class=\"token punctuation\">.</span>recordset <span class=\"token operator\">&amp;&amp;</span> result<span class=\"token punctuation\">.</span>recordset<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        isogramlayer <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">geoJSON</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>recordset<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          weight<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function-variable function\">style</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">feature</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">polyline</span><span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>coordinates<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#7879b0\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">bindPopup</span><span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#f1e0ab\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">>=</span> <span class=\"token number\">10</span> <span class=\"token operator\">&amp;&amp;</span> feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">&lt;</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#b0cda1\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">>=</span> <span class=\"token number\">25</span> <span class=\"token operator\">&amp;&amp;</span> feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">&lt;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#a5ba81\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">>=</span> <span class=\"token number\">50</span> <span class=\"token operator\">&amp;&amp;</span> feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#8dc4e1\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">>=</span> <span class=\"token number\">100</span> <span class=\"token operator\">&amp;&amp;</span> feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">&lt;</span> <span class=\"token number\">250</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#8eacd6\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#7879b0\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token comment\">// return true;</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"图层未加载成功，请刷新重试\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nrain_isogram <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Isogram</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntp_isogram <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Isogram</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"temprature\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// surfaceAnalystProcess(\"temperature\");</span>\n\nday_rain_isogram_search<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">layerRemove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  rain_isogram<span class=\"token punctuation\">.</span><span class=\"token function\">surfaceAnalystProcess</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rainfall\"</span><span class=\"token punctuation\">,</span> rain_isogram_infor_date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// surfaceAnalystProcess(\"temperature\");</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nday_tp_isogram_search<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">layerRemove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  tp_isogram<span class=\"token punctuation\">.</span><span class=\"token function\">surfaceAnalystProcess</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"temperature\"</span><span class=\"token punctuation\">,</span> tp_isogram_infor_date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>isogramlayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160704.jpeg","length":15953,"excerpt":"","more":"<h2 id=\"leaflet引用\"><a href=\"#leaflet引用\" class=\"headerlink\" title=\"leaflet引用\"></a>leaflet引用</h2><p>引入 Leaflet CSS 文件和 JS 文件，填入 BootCDN 的托管地址</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>引入 iclient-leaflet CSS 文件和 JS 文件，填入 SuperMap iClient for Leaflet 在线站点地址：</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://iclient.supermap.io/dist/leaflet/iclient-leaflet.min.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://iclient.supermap.io/dist/leaflet/iclient-leaflet.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"地图链接\"><a href=\"#地图链接\" class=\"headerlink\" title=\"地图链接\"></a>地图链接</h2><p>端口号</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> host <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>isLocal <span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span>server <span class=\"token operator\">:</span> <span class=\"token string\">\"https://iserver.supermap.io\"</span><span class=\"token punctuation\">;</span></code></pre>\n<p>链接</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">url <span class=\"token operator\">=</span> host <span class=\"token operator\">+</span> <span class=\"token string\">\"/iserver/services/map-China/rest/maps/China\"</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"矢量图层\"><a href=\"#矢量图层\" class=\"headerlink\" title=\"矢量图层\"></a>矢量图层</h2><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> host <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>isLocal <span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span>server <span class=\"token operator\">:</span> <span class=\"token string\">\"https://iserver.supermap.io\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> map<span class=\"token punctuation\">,</span> themeService<span class=\"token punctuation\">,</span> themeRange<span class=\"token punctuation\">,</span> ThemeParameters<span class=\"token punctuation\">,</span> thmemLayer<span class=\"token punctuation\">,</span> url <span class=\"token operator\">=</span> host <span class=\"token operator\">+</span>\n    <span class=\"token string\">\"/iserver/services/map-China/rest/maps/China\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> resultLayer<span class=\"token punctuation\">,</span>dataurl <span class=\"token operator\">=</span> host<span class=\"token operator\">+</span><span class=\"token string\">\"/iserver/services/data-China/rest/data\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//数据服务地址</span>\n\nmap <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token string\">'map'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    center<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    preferCanvas<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    crs<span class=\"token operator\">:</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EPSG3857</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//坐标系设置错误不显示</span>\n    maxZoom<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 最大缩放级别</span>\n    zoom<span class=\"token operator\">:</span> <span class=\"token number\">2</span>  <span class=\"token comment\">// 缩放级别</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> selectId<span class=\"token punctuation\">,</span> selectLayerName<span class=\"token punctuation\">,</span> vectorLayer <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span><span class=\"token function\">tiledVectorLayer</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    noWrap<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    cacheEnabled<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    returnAttributes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    attribution<span class=\"token operator\">:</span> <span class=\"token string\">\"Tile Data©SuperMap iServer with©SuperMap iClient\"</span>\n    <span class=\"token comment\">// transparent: true</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 为矢量图层注册点击事件</span>\nvectorLayer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>layer<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> layerName <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>layer<span class=\"token punctuation\">.</span>layerName<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">clearHighlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 判断是否有选中矢量数据，有则取消高亮</span>\n    selectId <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// alert(id);</span>\n    selectLayerName <span class=\"token operator\">=</span> layerName<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> selectStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        fillColor<span class=\"token operator\">:</span> <span class=\"token string\">'#800026'</span><span class=\"token punctuation\">,</span>\n        fillOpacity<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n        stroke<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        fill<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        color<span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n        opacity<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        weight<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    vectorLayer<span class=\"token punctuation\">.</span><span class=\"token function\">setFeatureStyle</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> layerName<span class=\"token punctuation\">,</span> selectStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">clearHighlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selectId <span class=\"token operator\">&amp;&amp;</span> selectLayerName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        vectorLayer<span class=\"token punctuation\">.</span><span class=\"token function\">resetFeatureStyle</span><span class=\"token punctuation\">(</span>selectId<span class=\"token punctuation\">,</span> selectLayerName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    selectId <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    selectLayerName <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>图层切换</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> baseMaps <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"China\"</span><span class=\"token operator\">:</span> China<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// \"vectorLayer\": vectorLayer</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">.</span><span class=\"token function\">zoom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 缩放控件</span>\n<span class=\"token keyword\">var</span> overmaps <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"vectorLayer\"</span><span class=\"token operator\">:</span> vectorLayer\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">.</span><span class=\"token function\">layers</span><span class=\"token punctuation\">(</span>baseMaps<span class=\"token punctuation\">,</span> overmaps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n            position<span class=\"token operator\">:</span> <span class=\"token string\">\"topleft\"</span> <span class=\"token comment\">//图标位置</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>图表数据绑定</p>\n<p>main.js备份<br><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 图表初始化</span>\noption <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"降雨量\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"径流量\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    align<span class=\"token operator\">:</span> <span class=\"token string\">\"left\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  toolbox<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    feature<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      magicType<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        type<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"stack\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tiled\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      saveAsImage<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        pixelRatio<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"周一\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周二\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周三\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周四\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周五\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周六\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周日\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    silent<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    splitLine<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      show<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">animationDelay</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"bar2\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">animationDelay</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  animationEasing<span class=\"token operator\">:</span> <span class=\"token string\">\"elasticOut\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">animationDelayUpdate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>DomUtil<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> chart <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  width<span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//  数据绑定</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">chartSet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">layer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// function (layer) &#123;</span>\n  <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> layer<span class=\"token punctuation\">.</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> data1 <span class=\"token operator\">=</span> cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> data2 <span class=\"token operator\">=</span> cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">;</span>\n  chart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    title<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      text<span class=\"token operator\">:</span> city<span class=\"token punctuation\">,</span>\n      subtext<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">\"降雨量\"</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token operator\">:</span> data1<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">\"径流量\"</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token operator\">:</span> data2<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> chart<span class=\"token punctuation\">.</span><span class=\"token function\">getDom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// &#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">resultBind</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resultLayer<span class=\"token punctuation\">,</span>selecTime</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  resultLayer\n  <span class=\"token punctuation\">.</span><span class=\"token function\">bindPopup</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">layer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> layer<span class=\"token punctuation\">.</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// let time=layer.feature.properties.DATE_USER;</span>\n      time<span class=\"token operator\">=</span><span class=\"token function\">timeTransfer</span><span class=\"token punctuation\">(</span>selecTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>selecTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//time</span>\n      <span class=\"token comment\">// let data1 = cityData.get(city).HUMIDITY;</span>\n      <span class=\"token comment\">// let data2 = cityData.get(city).RAINFALL;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;b>城市:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>city<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>相对湿度:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>本日降雨量:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>AQI:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AQI</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>PM2.5浓度:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PM25</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>温度:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>天气:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      &lt;b>日期:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DATE_USER</span><span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span> maxWidth<span class=\"token operator\">:</span> <span class=\"token number\">700</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 查询结果解析</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sqlResult</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">serviceResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// console.log(serviceResult);</span>\n\n  <span class=\"token comment\">/*geoJSON数据解析*/</span>\n  resultLayer <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">geoJSON</span><span class=\"token punctuation\">(</span>serviceResult<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">onEachFeature</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">feature<span class=\"token punctuation\">,</span> layer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// if (feature.geometry.coordinates[0] > 10000) &#123;</span>\n        <span class=\"token comment\">// let latlng = L.CRS.EPSG3857.unproject(</span>\n        <span class=\"token comment\">//   L.point(</span>\n        <span class=\"token comment\">//     feature.geometry.coordinates[0],</span>\n        <span class=\"token comment\">//     feature.geometry.coordinates[1]</span>\n        <span class=\"token comment\">//   )</span>\n        <span class=\"token comment\">// );</span>\n      <span class=\"token comment\">//   latlng.alt = feature.geometry.coordinates[2];</span>\n        <span class=\"token comment\">//  marker = L.marker(latlng).addTo(map);</span>\n        <span class=\"token comment\">//  return latlng;</span>\n      <span class=\"token comment\">//   // marker.bindPopup(`&lt;b>SMID:&lt;/b> $&#123;feature.properties.SMID&#125;`).openPopup().addTo(map)</span>\n      <span class=\"token comment\">// &#125; </span>\n      <span class=\"token comment\">//else &#123;</span>\n      <span class=\"token comment\">//   layer.bindPopup(`&lt;b>SMID:&lt;/b> $&#123;feature.properties.SMID&#125;`).addTo(map);</span>\n      <span class=\"token comment\">// &#125;</span>\n\n      <span class=\"token comment\">// console.log(layer);</span>\n      <span class=\"token comment\">// 创建对象</span>\n\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    style<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      \n        weight<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n        color<span class=\"token operator\">:</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span>\n        opacity<span class=\"token operator\">:</span><span class=\"token number\">0.5</span>\n      \n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">coordsToLatLng</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">coords</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// console.log(L.point(coords[0], coords[1]));</span>\n      <span class=\"token keyword\">let</span> latlng <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EPSG4326</span><span class=\"token punctuation\">.</span><span class=\"token function\">unproject</span><span class=\"token punctuation\">(</span><span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">point</span><span class=\"token punctuation\">(</span>coords<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> coords<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      latlng<span class=\"token punctuation\">.</span>alt <span class=\"token operator\">=</span> coords<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// console.log(latlng);</span>\n      <span class=\"token keyword\">return</span> latlng<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 图表数据绑定</span>\n  <span class=\"token function\">resultBind</span><span class=\"token punctuation\">(</span>resultLayer<span class=\"token punctuation\">,</span>gnl_infor_date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// console.log(resultLayer);</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// SQL查询要素</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sqlQuery</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">attributeFilter<span class=\"token punctuation\">,</span> datasetNames <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// sql查询参数</span>\n  <span class=\"token keyword\">var</span> sqlParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SuperMap<span class=\"token punctuation\">.</span>GetFeaturesBySQLParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    queryParameter<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      attributeFilter<span class=\"token operator\">:</span> <span class=\"token string\">\"date_User='\"</span> <span class=\"token operator\">+</span> attributeFilter <span class=\"token operator\">+</span> <span class=\"token string\">\" 0:00:00'\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    datasetNames<span class=\"token operator\">:</span> datasetNames<span class=\"token punctuation\">,</span>\n    toIndex<span class=\"token operator\">:</span> <span class=\"token number\">238</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token comment\">// sql查询服务</span>\n  <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span><span class=\"token function\">featureService</span><span class=\"token punctuation\">(</span>dataurl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFeaturesBySQL</span><span class=\"token punctuation\">(</span>sqlParam<span class=\"token punctuation\">,</span> sqlResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 默认展示第一天的天气信息地图</span>\n<span class=\"token function\">sqlQuery</span><span class=\"token punctuation\">(</span>gnl_infor_date<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ChinaClimate:weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 热力图</span>\n<span class=\"token comment\">// gn_search.addEventListener(\"click\",addHeatMapLayer)</span>\n\ngnl_search<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">layerRemove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">resultBind</span><span class=\"token punctuation\">(</span>resultLayer<span class=\"token punctuation\">,</span>gnl_infor_date<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// sqlQuery(gnl_infor_date, [\"ChinaClimate:weather\"]);</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// var n =L.layerGroup(resultLayer)</span>\n    <span class=\"token comment\">// console.log(resultLayer);</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nday_tp_heat_search<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">layerRemove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//  console.log(index);</span>\n  tp_HeatMAP<span class=\"token punctuation\">.</span><span class=\"token function\">addHeatMapLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> layer<span class=\"token operator\">=</span><span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">layerGroup</span><span class=\"token punctuation\">(</span>heatMapLayer<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> baseMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  chinaMapLayer<span class=\"token operator\">:</span> chinaMapLayer<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> overMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  layer<span class=\"token operator\">:</span> layer<span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// heatMapLayer:heatMapLayer</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">.</span><span class=\"token function\">layers</span><span class=\"token punctuation\">(</span>baseMap<span class=\"token punctuation\">,</span> overMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// console.log(myMap)</span>\n</code></pre></p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 图表初始化</span>\noption <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"降雨量\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"径流量\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    align<span class=\"token operator\">:</span> <span class=\"token string\">\"left\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  toolbox<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    feature<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      magicType<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        type<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"stack\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tiled\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      saveAsImage<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        pixelRatio<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"周一\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周二\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周三\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周四\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周五\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周六\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周日\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    silent<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    splitLine<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      show<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">animationDelay</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"bar2\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">animationDelay</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  animationEasing<span class=\"token operator\">:</span> <span class=\"token string\">\"elasticOut\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">animationDelayUpdate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>DomUtil<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> chart <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  width<span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 存储SQL查询到的数据</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sqlData</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\"><span class=\"token constant\">NAME</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">AQI</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">PM25</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">DATE_USER</span></span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span> <span class=\"token operator\">=</span> <span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>weaher <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token constant\">AQI</span><span class=\"token operator\">:</span> <span class=\"token constant\">AQI</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">HUMIDITY</span><span class=\"token operator\">:</span> <span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">RAINFALL</span><span class=\"token operator\">:</span> <span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">WEATHER</span><span class=\"token operator\">:</span> <span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">TEMPERATURE</span><span class=\"token operator\">:</span> <span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">PM25</span><span class=\"token operator\">:</span> <span class=\"token constant\">PM25</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">DATE_USER</span><span class=\"token operator\">:</span> <span class=\"token constant\">DATE_USER</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">let</span> myMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 各个城市每日天气信息</span>\n<span class=\"token keyword\">let</span> cityData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 整理SQL查询到的数据</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">myMap</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// let dt = [];</span>\n\n  <span class=\"token comment\">// 临时存储对象</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">tmpObj</span><span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\"><span class=\"token constant\">NAME</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">AQI</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">PM25</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">DATE_USER</span></span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span> <span class=\"token operator\">=</span> <span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AQI</span> <span class=\"token operator\">=</span> <span class=\"token constant\">AQI</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span> <span class=\"token operator\">=</span> <span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span> <span class=\"token operator\">=</span> <span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WEATHER</span> <span class=\"token operator\">=</span> <span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span> <span class=\"token operator\">=</span> <span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PM25</span> <span class=\"token operator\">=</span> <span class=\"token constant\">PM25</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DATE_USER</span> <span class=\"token operator\">=</span> <span class=\"token constant\">DATE_USER</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// 、、、、</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index <span class=\"token operator\">&lt;</span> myMap<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> tmp <span class=\"token operator\">=</span> myMap<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> temp <span class=\"token operator\">=</span> index<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token constant\">AQI</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">HUMIDITY</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">RAINFALL</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">WEATHER</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">TEMPERATURE</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">PM25</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">DATE_USER</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> dx<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">;</span> temp <span class=\"token operator\">&lt;</span> myMap<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> temp<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span> <span class=\"token operator\">==</span> tmp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token constant\">AQI</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">AQI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">PM25</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">PM25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">DATE_USER</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weaher<span class=\"token punctuation\">.</span><span class=\"token constant\">DATE_USER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// dt.push(myMap[temp])</span>\n\n        <span class=\"token comment\">// console.log(myMap[temp].NAME);</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 临时对象存储每个城市每天的天气信息</span>\n    dx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">tmpObj</span><span class=\"token punctuation\">(</span>\n      tmp<span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">AQI</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">PM25</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">DATE_USER</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// dt.push(new Jsl(tmp, AQI, HUMIDITY));</span>\n    cityData<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">,</span> dx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// console.log(cityData.get(\"北京市\"));</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//  数据绑定</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">chartSet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">layer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// function (layer) &#123;</span>\n  <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> layer<span class=\"token punctuation\">.</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> data1 <span class=\"token operator\">=</span> cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> data2 <span class=\"token operator\">=</span> cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">;</span>\n  chart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    title<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      text<span class=\"token operator\">:</span> city<span class=\"token punctuation\">,</span>\n      subtext<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">\"降雨量\"</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token operator\">:</span> data1<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">\"径流量\"</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token operator\">:</span> data2<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> chart<span class=\"token punctuation\">.</span><span class=\"token function\">getDom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// &#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 查询结果解析</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sqlResult</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">serviceResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// console.log(serviceResult);</span>\n  <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/*geoJSON数据解析*/</span>\n  resultLayer <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">geoJSON</span><span class=\"token punctuation\">(</span>serviceResult<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">onEachFeature</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">feature<span class=\"token punctuation\">,</span> layer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// if (feature.geometry.coordinates[0] > 10000) &#123;</span>\n      <span class=\"token comment\">//   let latlng = L.CRS.EPSG3857.unproject(</span>\n      <span class=\"token comment\">//     L.point(</span>\n      <span class=\"token comment\">//       feature.geometry.coordinates[0],</span>\n      <span class=\"token comment\">//       feature.geometry.coordinates[1]</span>\n      <span class=\"token comment\">//     )</span>\n      <span class=\"token comment\">//   );</span>\n      <span class=\"token comment\">//   latlng.alt = feature.geometry.coordinates[2];</span>\n      <span class=\"token comment\">//    marker = L.marker(latlng).addTo(map);</span>\n      <span class=\"token comment\">//    return latlng;</span>\n      <span class=\"token comment\">//   // marker.bindPopup(`&lt;b>SMID:&lt;/b> $&#123;feature.properties.SMID&#125;`).openPopup().addTo(map)</span>\n      <span class=\"token comment\">// &#125; else &#123;</span>\n      <span class=\"token comment\">//   layer.bindPopup(`&lt;b>SMID:&lt;/b> $&#123;feature.properties.SMID&#125;`).addTo(map);</span>\n      <span class=\"token comment\">// &#125;</span>\n\n      <span class=\"token comment\">// console.log(feature);</span>\n      <span class=\"token comment\">// 创建对象</span>\n      myMap<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">sqlData</span><span class=\"token punctuation\">(</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">AQI</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">PM25</span><span class=\"token punctuation\">,</span>\n        feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">DATE_USER</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    style<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      \n        weight<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n        color<span class=\"token operator\">:</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span>\n        opacity<span class=\"token operator\">:</span><span class=\"token number\">0.5</span>\n      \n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">coordsToLatLng</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">coords</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> latlng <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EPSG3857</span><span class=\"token punctuation\">.</span><span class=\"token function\">unproject</span><span class=\"token punctuation\">(</span><span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">point</span><span class=\"token punctuation\">(</span>coords<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> coords<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      latlng<span class=\"token punctuation\">.</span>alt <span class=\"token operator\">=</span> coords<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//   console.log(latlng);</span>\n      <span class=\"token keyword\">return</span> latlng<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 图表数据绑定</span>\n\n  resultLayer\n    <span class=\"token punctuation\">.</span><span class=\"token function\">bindPopup</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">layer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> city <span class=\"token operator\">=</span> layer<span class=\"token punctuation\">.</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token constant\">NAME</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// let data1 = cityData.get(city).HUMIDITY;</span>\n        <span class=\"token comment\">// let data2 = cityData.get(city).RAINFALL;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;b>城市:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>city<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>相对湿度:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HUMIDITY</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>本日降雨量:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RAINFALL</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>AQI:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AQI</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>PM2.5浓度:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PM25</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>温度:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>天气:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WEATHER</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        &lt;b>日期:&lt;/b></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cityData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DATE_USER</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n        </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span> maxWidth<span class=\"token operator\">:</span> <span class=\"token number\">700</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// SQL查询要素</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sqlQuery</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">attributeFilter<span class=\"token punctuation\">,</span> datasetNames <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// sql查询参数</span>\n  <span class=\"token keyword\">var</span> sqlParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SuperMap<span class=\"token punctuation\">.</span>GetFeaturesBySQLParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    queryParameter<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      attributeFilter<span class=\"token operator\">:</span> <span class=\"token string\">\"date_User='\"</span> <span class=\"token operator\">+</span> attributeFilter <span class=\"token operator\">+</span> <span class=\"token string\">\" 0:00:00'\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    datasetNames<span class=\"token operator\">:</span> datasetNames<span class=\"token punctuation\">,</span>\n    toIndex<span class=\"token operator\">:</span> <span class=\"token number\">238</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// sql查询服务</span>\n  <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span><span class=\"token function\">featureService</span><span class=\"token punctuation\">(</span>dataurl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFeaturesBySQL</span><span class=\"token punctuation\">(</span>sqlParam<span class=\"token punctuation\">,</span> sqlResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// sqlQuery(gnl_infor_date, [\"ChinaClimate:weather\"]);</span>\n<span class=\"token comment\">// 热力图</span>\n<span class=\"token comment\">// gn_search.addEventListener(\"click\",addHeatMapLayer)</span>\n\n<span class=\"token function\">addHeatMapLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> baseMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  chinaMapLayer<span class=\"token operator\">:</span> chinaMapLayer<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> overMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  heatMapLayer<span class=\"token operator\">:</span> heatMapLayer<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// console.log(gnl_infor_date);</span>\n\ngn_search<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>resultLayer<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \n    resultLayer<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token function\">sqlQuery</span><span class=\"token punctuation\">(</span>gnl_infor_date<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ChinaClimate:weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">.</span><span class=\"token function\">layers</span><span class=\"token punctuation\">(</span>baseMap<span class=\"token punctuation\">,</span> overMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// console.log(myMap)</span>\n</code></pre>\n<p>气温热力图</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 热力图基本设置</span>\n\n<span class=\"token comment\">// 本地CSV数据转换为geojson数据</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">geojson</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">params</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> geojson <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"FeatureCollection\"</span><span class=\"token punctuation\">,</span>\n    features<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> cityData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// console.log(value.lng,value.lat);</span>\n    <span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token function\">timeTransfer</span><span class=\"token punctuation\">(</span>tp_heat_infor_date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> feature <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">\"feature\"</span><span class=\"token punctuation\">,</span>\n      geometry<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">\"Point\"</span><span class=\"token punctuation\">,</span>\n        coordinates<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        value<span class=\"token operator\">:</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// let latlng = L.CRS.EPSG4326.latLngToPoint(L.latLng(value.lng, value.lat));</span>\n    <span class=\"token comment\">// console.log(latlng);</span>\n    feature<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>coordinates <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>lng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>lat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> latlng <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">.</span>lat<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">.</span>lng<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// console.log(index);</span>\n    <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">marker</span><span class=\"token punctuation\">(</span>latlng<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">bindPopup</span><span class=\"token punctuation\">(</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      城市：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>key<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;br>\n      气温：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>value<span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPERATURE</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">°&lt;br>\n      日期：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>tp_heat_infor_date<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    geojson<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  heatMapLayer<span class=\"token punctuation\">.</span><span class=\"token function\">addFeatures</span><span class=\"token punctuation\">(</span>geojson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  heatMapLayer<span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// </span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HeatMap</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">addHeatMapLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    heatMapLayer <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span><span class=\"token function\">heatMapLayer</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"heatMap\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        loadWhileAnimating<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cyan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lime\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        id<span class=\"token operator\">:</span> <span class=\"token string\">\"heatmap\"</span><span class=\"token punctuation\">,</span>\n        map<span class=\"token operator\">:</span> map<span class=\"token punctuation\">,</span>\n        radius<span class=\"token operator\">:</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// useGeoUnit:true,</span>\n        opacity<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n        featureWeight<span class=\"token operator\">:</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">geojson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// console.log(cityData.get(\"北京市\"));</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">let</span> tp_HeatMAP <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HeatMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Isogram</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 等值线类</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Isogram</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">layername</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>layername <span class=\"token operator\">=</span> layername<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">surfaceAnalystProcess</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">zValueFieldName<span class=\"token punctuation\">,</span> attributeFilter</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/*\n   X:7714861.994943,Y:6903997.060186   经度:69°18'13.62\",纬度:52°34'14.85\" 左上\n   X:7722476.375537,Y:2007950.338151   经度:69°22'19.87\",纬度:17°44'49.01\" 左下\n   X:14628719.574426,Y:6835467.634838   经度:131°24'43.29\",纬度:52°11'42.13\" 右上\n   X:14491660.723731,Y:1992721.576963   经度:130°10'50.89\",纬度:17°36'59.79\" 右下\n   软件坐标系 右 X 下 Y\n   坐标系上 X 右 Y\n  */</span>\n    <span class=\"token keyword\">let</span> region <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">polygon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">7095467.634838</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8014861.994943</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">2007950.338151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8014861.994943</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">2007950.338151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15191660.723731</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">7095467.634838</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15191660.723731</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 表面分析参数</span>\n    surfaceAnalystParameters <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SuperMap<span class=\"token punctuation\">.</span>DatasetSurfaceAnalystParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      extractParameter<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SuperMap<span class=\"token punctuation\">.</span>SurfaceAnalystParametersSetting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        datumValue<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//基准值</span>\n        interval<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 等值距</span>\n        resampleTolerance<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 采样容限</span>\n        smoothMethod<span class=\"token operator\">:</span> SuperMap<span class=\"token punctuation\">.</span>SmoothMethod<span class=\"token punctuation\">.</span><span class=\"token constant\">BSPLINE</span><span class=\"token punctuation\">,</span>\n        smoothness<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n        clipRegion<span class=\"token operator\">:</span> region<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      dataset<span class=\"token operator\">:</span> <span class=\"token string\">\"weather@ChinaClimate\"</span><span class=\"token punctuation\">,</span>\n      resolution<span class=\"token operator\">:</span> <span class=\"token number\">9000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 分辨率</span>\n      zValueFieldName<span class=\"token operator\">:</span> zValueFieldName<span class=\"token punctuation\">,</span>\n      filterQueryParameter<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SuperMap<span class=\"token punctuation\">.</span>FilterParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        attributeFilter<span class=\"token operator\">:</span> <span class=\"token string\">\"date_User='\"</span> <span class=\"token operator\">+</span> attributeFilter <span class=\"token operator\">+</span> <span class=\"token string\">\" 0:00:00'\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 空间分析服务</span>\n    surfaceAnalystService <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span><span class=\"token function\">spatialAnalystService</span><span class=\"token punctuation\">(</span>serviceUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 表面分析</span>\n    surfaceAnalystService<span class=\"token punctuation\">.</span><span class=\"token function\">surfaceAnalysis</span><span class=\"token punctuation\">(</span>surfaceAnalystParameters<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">serviceResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> serviceResult<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">&amp;&amp;</span> result<span class=\"token punctuation\">.</span>recordset <span class=\"token operator\">&amp;&amp;</span> result<span class=\"token punctuation\">.</span>recordset<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        isogramlayer <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">geoJSON</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>recordset<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          weight<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function-variable function\">style</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">feature</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">polyline</span><span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>coordinates<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#7879b0\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">bindPopup</span><span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#f1e0ab\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">>=</span> <span class=\"token number\">10</span> <span class=\"token operator\">&amp;&amp;</span> feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">&lt;</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#b0cda1\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">>=</span> <span class=\"token number\">25</span> <span class=\"token operator\">&amp;&amp;</span> feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">&lt;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#a5ba81\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">>=</span> <span class=\"token number\">50</span> <span class=\"token operator\">&amp;&amp;</span> feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#8dc4e1\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">>=</span> <span class=\"token number\">100</span> <span class=\"token operator\">&amp;&amp;</span> feature<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>dZvalue <span class=\"token operator\">&lt;</span> <span class=\"token number\">250</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#8eacd6\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                color<span class=\"token operator\">:</span> <span class=\"token string\">\"#7879b0\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token comment\">// return true;</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTo</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"图层未加载成功，请刷新重试\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nrain_isogram <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Isogram</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntp_isogram <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Isogram</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"temprature\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// surfaceAnalystProcess(\"temperature\");</span>\n\nday_rain_isogram_search<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">layerRemove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  rain_isogram<span class=\"token punctuation\">.</span><span class=\"token function\">surfaceAnalystProcess</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rainfall\"</span><span class=\"token punctuation\">,</span> rain_isogram_infor_date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// surfaceAnalystProcess(\"temperature\");</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nday_tp_isogram_search<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">layerRemove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  tp_isogram<span class=\"token punctuation\">.</span><span class=\"token function\">surfaceAnalystProcess</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"temperature\"</span><span class=\"token punctuation\">,</span> tp_isogram_infor_date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>isogramlayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n"},{"title":"Comments","date":"2021-08-22T01:26:17.000Z","description":"comments","_content":"\n```c\n/***                                                                    \n *            .,,       .,:;;iiiiiiiii;;:,,.     .,,                   \n *          rGB##HS,.;iirrrrriiiiiiiiiirrrrri;,s&##MAS,                \n *         r5s;:r3AH5iiiii;;;;;;;;;;;;;;;;iiirXHGSsiih1,               \n *            .;i;;s91;;;;;;::::::::::::;;;;iS5;;;ii:                  \n *          :rsriii;;r::::::::::::::::::::::;;,;;iiirsi,               \n *       .,iri;;::::;;;;;;::,,,,,,,,,,,,,..,,;;;;;;;;iiri,,.           \n *    ,9BM&,            .,:;;:,,,,,,,,,,,hXA8:            ..,,,.       \n *   ,;&@@#r:;;;;;::::,,.   ,r,,,,,,,,,,iA@@@s,,:::;;;::,,.   .;.      \n *    :ih1iii;;;;;::::;;;;;;;:,,,,,,,,,,;i55r;;;;;;;;;iiirrrr,..       \n *   .ir;;iiiiiiiiii;;;;::::::,,,,,,,:::::,,:;;;iiiiiiiiiiiiri         \n *   iriiiiiiiiiiiiiiii;;;::::::::::::::::;;;iiiiiiiiiiiiiiiir;        \n *  ,riii;;;;;;;;;;;;;:::::::::::::::::::::::;;;;;;;;;;;;;;iiir.       \n *  iri;;;::::,,,,,,,,,,:::::::::::::::::::::::::,::,,::::;;iir:       \n * .rii;;::::,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,::::;;iri       \n * ,rii;;;::,,,,,,,,,,,,,:::::::::::,:::::,,,,,,,,,,,,,:::;;;iir.      \n * ,rii;;i::,,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,,::i;;iir.      \n * ,rii;;r::,,,,,,,,,,,,,:,:::::,:,:::::::,,,,,,,,,,,,,::;r;;iir.      \n * .rii;;rr,:,,,,,,,,,,,,,,:::::::::::::::,,,,,,,,,,,,,:,si;;iri       \n *  ;rii;:1i,,,,,,,,,,,,,,,,,,:::::::::,,,,,,,,,,,,,,,:,ss:;iir:       \n *  .rii;;;5r,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sh:;;iri        \n *   ;rii;:;51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.:hh:;;iir,        \n *    irii;::hSr,.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.,sSs:;;iir:         \n *     irii;;:iSSs:.,,,,,,,,,,,,,,,,,,,,,,,,,,,..:135;:;;iir:          \n *      ;rii;;:,r535r:...,,,,,,,,,,,,,,,,,,..,;sS35i,;;iirr:           \n *       :rrii;;:,;1S3Shs;:,............,:is533Ss:,;;;iiri,            \n *        .;rrii;;;:,;rhS393S55hh11hh5S3393Shr:,:;;;iirr:              \n *          .;rriii;;;::,:;is1h555555h1si;:,::;;;iirri:.               \n *            .:irrrii;;;;;:::,,,,,,,,:::;;;;iiirrr;,                  \n *               .:irrrriiiiii;;;;;;;;iiiiiirrrr;,.                    \n *                  .,:;iirrrrrrrrrrrrrrrrri;:.                        \n *                        ..,:::;;;;:::,,.                             \n */  \n```\n\n```C\n/***\n *               ii.                                         ;9ABH,          \n *              SA391,                                    .r9GG35&G          \n *              &#ii13Gh;                               i3X31i;:,rB1         \n *              iMs,:,i5895,                         .5G91:,:;:s1:8A         \n *               33::::,,;5G5,                     ,58Si,,:::,sHX;iH1        \n *                Sr.,:;rs13BBX35hh11511h5Shhh5S3GAXS:.,,::,,1AG3i,GG        \n *                .G51S511sr;;iiiishS8G89Shsrrsh59S;.,,,,,..5A85Si,h8        \n *               :SB9s:,............................,,,.,,,SASh53h,1G.       \n *            .r18S;..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,....,,.1H315199,rX,       \n *          ;S89s,..,,,,,,,,,,,,,,,,,,,,,,,....,,.......,,,;r1ShS8,;Xi       \n *        i55s:.........,,,,,,,,,,,,,,,,.,,,......,.....,,....r9&5.:X1       \n *       59;.....,.     .,,,,,,,,,,,...        .............,..:1;.:&s       \n *      s8,..;53S5S3s.   .,,,,,,,.,..      i15S5h1:.........,,,..,,:99       \n *      93.:39s:rSGB@A;  ..,,,,.....    .SG3hhh9G&BGi..,,,,,,,,,,,,.,83      \n *      G5.G8  9#@@@@@X. .,,,,,,.....  iA9,.S&B###@@Mr...,,,,,,,,..,.;Xh     \n *      Gs.X8 S@@@@@@@B:..,,,,,,,,,,. rA1 ,A@@@@@@@@@H:........,,,,,,.iX:    \n *     ;9. ,8A#@@@@@@#5,.,,,,,,,,,... 9A. 8@@@@@@@@@@M;    ....,,,,,,,,S8    \n *     X3    iS8XAHH8s.,,,,,,,,,,...,..58hH@@@@@@@@@Hs       ...,,,,,,,:Gs   \n *    r8,        ,,,...,,,,,,,,,,.....  ,h8XABMMHX3r.          .,,,,,,,.rX:  \n *   :9, .    .:,..,:;;;::,.,,,,,..          .,,.               ..,,,,,,.59  \n *  .Si      ,:.i8HBMMMMMB&5,....                    .            .,,,,,.sMr\n *  SS       :: h@@@@@@@@@@#; .                     ...  .         ..,,,,iM5\n *  91  .    ;:.,1&@@@@@@MXs.                            .          .,,:,:&S\n *  hS ....  .:;,,,i3MMS1;..,..... .  .     ...                     ..,:,.99\n *  ,8; ..... .,:,..,8Ms:;,,,...                                     .,::.83\n *   s&: ....  .sS553B@@HX3s;,.    .,;13h.                            .:::&1\n *    SXr  .  ...;s3G99XA&X88Shss11155hi.                             ,;:h&,\n *     iH8:  . ..   ,;iiii;,::,,,,,.                                 .;irHA  \n *      ,8X5;   .     .......                                       ,;iihS8Gi\n *         1831,                                                 .,;irrrrrs&@\n *           ;5A8r.                                            .:;iiiiirrss1H\n *             :X@H3s.......                                .,:;iii;iiiiirsrh\n *              r#h:;,...,,.. .,,:;;;;;:::,...              .:;;;;;;iiiirrss1\n *             ,M8 ..,....,.....,,::::::,,...         .     .,;;;iiiiiirss11h\n *             8B;.,,,,,,,.,.....          .           ..   .:;;;;iirrsss111h\n *            i@5,:::,,,,,,,,.... .                   . .:::;;;;;irrrss111111\n *            9Bi,:,,,,......                        ..r91;;;;;iirrsss1ss1111\n */\n```\n\n```C\n/***\n *  佛曰:\n *          写字楼里写字间，写字间里程序员；\n *          程序人员写程序，又拿程序换酒钱。\n *          酒醒只在网上坐，酒醉还来网下眠；\n *          酒醉酒醒日复日，网上网下年复年。\n *          但愿老死电脑间，不愿鞠躬老板前；\n *          奔驰宝马贵者趣，公交自行程序员。\n *          别人笑我忒疯癫，我笑自己命太贱；\n *          不见满街漂亮妹，哪个归得程序员？\n */\n```\n\n```C\n/***\n *                    _ooOoo_\n *                   o8888888o\n *                   88\" . \"88\n *                   (| -_- |)\n *                    O\\ = /O\n *                ____/`---'\\____\n *              .   ' \\\\| |// `.\n *               / \\\\||| : |||// \\\n *             / _||||| -:- |||||- \\\n *               | | \\\\\\ - /// | |\n *             | \\_| ''\\---/'' | |\n *              \\ .-\\__ `-` ___/-. /\n *           ___`. .' /--.--\\ `. . __\n *        .\"\" '< `.___\\_<|>_/___.' >'\"\".\n *       | | : `- \\`.;`\\ _ /`;.`/ - ` : | |\n *         \\ \\ `-. \\_ __\\ /__ _/ .-` / /\n * ======`-.____`-.___\\_____/___.-`____.-'======\n *                    `=---='\n *\n * .............................................\n *          佛祖保佑             永无BUG\n */\n```\n\n> ```C\n> /***\n>  * _ooOoo_\n>  * o8888888o\n>  * 88\" . \"88\n>  * (| -_- |)\n>  *  O\\ = /O\n>  * ___/`---'\\____\n>  * .   ' \\\\| |// `.\n>  * / \\\\||| : |||// \\\n>  * / _||||| -:- |||||- \\\n>  * | | \\\\\\ - /// | |\n>  * | \\_| ''\\---/'' | |\n>  * \\ .-\\__ `-` ___/-. /\n>  * ___`. .' /--.--\\ `. . __\n>  * .\"\" '< `.___\\_<|>_/___.' >'\"\".\n>  * | | : `- \\`.;`\\ _ /`;.`/ - ` : | |\n>  * \\ \\ `-. \\_ __\\ /__ _/ .-` / /\n>  * ======`-.____`-.___\\_____/___.-`____.-'======\n>  * `=---='\n>  * .............................................\n>  *           佛曰：bug 泛滥，我已瘫痪！\n>  */\n> ```\n\n```C\n/***\n * You may think you know what the following code does.\n * But you dont. Trust me.\n * Fiddle with it, and youll spend many a sleepless\n * night cursing the moment you thought youd be clever\n * enough to \"optimize\" the code below.\n * Now close this file and go play with something else.\n */\n /***\n * 你可能会认为你读得懂以下的代码。但是你不会懂的，相信我吧。\n * 要是你尝试玩弄这段代码的话，你将会在无尽的通宵中不断地咒骂自己为什么会认为自己聪明到可以优化这段代码。\n * 现在请关闭这个文件去玩点别的吧。\n */\n```\n\n","source":"_posts/comments.md","raw":"---\ntitle: comments\ndate: 2021-08-22 09:26:17\ntags: comments\ncategories: comments\ndescription: comments\n---\n\n```c\n/***                                                                    \n *            .,,       .,:;;iiiiiiiii;;:,,.     .,,                   \n *          rGB##HS,.;iirrrrriiiiiiiiiirrrrri;,s&##MAS,                \n *         r5s;:r3AH5iiiii;;;;;;;;;;;;;;;;iiirXHGSsiih1,               \n *            .;i;;s91;;;;;;::::::::::::;;;;iS5;;;ii:                  \n *          :rsriii;;r::::::::::::::::::::::;;,;;iiirsi,               \n *       .,iri;;::::;;;;;;::,,,,,,,,,,,,,..,,;;;;;;;;iiri,,.           \n *    ,9BM&,            .,:;;:,,,,,,,,,,,hXA8:            ..,,,.       \n *   ,;&@@#r:;;;;;::::,,.   ,r,,,,,,,,,,iA@@@s,,:::;;;::,,.   .;.      \n *    :ih1iii;;;;;::::;;;;;;;:,,,,,,,,,,;i55r;;;;;;;;;iiirrrr,..       \n *   .ir;;iiiiiiiiii;;;;::::::,,,,,,,:::::,,:;;;iiiiiiiiiiiiri         \n *   iriiiiiiiiiiiiiiii;;;::::::::::::::::;;;iiiiiiiiiiiiiiiir;        \n *  ,riii;;;;;;;;;;;;;:::::::::::::::::::::::;;;;;;;;;;;;;;iiir.       \n *  iri;;;::::,,,,,,,,,,:::::::::::::::::::::::::,::,,::::;;iir:       \n * .rii;;::::,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,::::;;iri       \n * ,rii;;;::,,,,,,,,,,,,,:::::::::::,:::::,,,,,,,,,,,,,:::;;;iir.      \n * ,rii;;i::,,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,,::i;;iir.      \n * ,rii;;r::,,,,,,,,,,,,,:,:::::,:,:::::::,,,,,,,,,,,,,::;r;;iir.      \n * .rii;;rr,:,,,,,,,,,,,,,,:::::::::::::::,,,,,,,,,,,,,:,si;;iri       \n *  ;rii;:1i,,,,,,,,,,,,,,,,,,:::::::::,,,,,,,,,,,,,,,:,ss:;iir:       \n *  .rii;;;5r,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sh:;;iri        \n *   ;rii;:;51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.:hh:;;iir,        \n *    irii;::hSr,.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.,sSs:;;iir:         \n *     irii;;:iSSs:.,,,,,,,,,,,,,,,,,,,,,,,,,,,..:135;:;;iir:          \n *      ;rii;;:,r535r:...,,,,,,,,,,,,,,,,,,..,;sS35i,;;iirr:           \n *       :rrii;;:,;1S3Shs;:,............,:is533Ss:,;;;iiri,            \n *        .;rrii;;;:,;rhS393S55hh11hh5S3393Shr:,:;;;iirr:              \n *          .;rriii;;;::,:;is1h555555h1si;:,::;;;iirri:.               \n *            .:irrrii;;;;;:::,,,,,,,,:::;;;;iiirrr;,                  \n *               .:irrrriiiiii;;;;;;;;iiiiiirrrr;,.                    \n *                  .,:;iirrrrrrrrrrrrrrrrri;:.                        \n *                        ..,:::;;;;:::,,.                             \n */  \n```\n\n```C\n/***\n *               ii.                                         ;9ABH,          \n *              SA391,                                    .r9GG35&G          \n *              &#ii13Gh;                               i3X31i;:,rB1         \n *              iMs,:,i5895,                         .5G91:,:;:s1:8A         \n *               33::::,,;5G5,                     ,58Si,,:::,sHX;iH1        \n *                Sr.,:;rs13BBX35hh11511h5Shhh5S3GAXS:.,,::,,1AG3i,GG        \n *                .G51S511sr;;iiiishS8G89Shsrrsh59S;.,,,,,..5A85Si,h8        \n *               :SB9s:,............................,,,.,,,SASh53h,1G.       \n *            .r18S;..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,....,,.1H315199,rX,       \n *          ;S89s,..,,,,,,,,,,,,,,,,,,,,,,,....,,.......,,,;r1ShS8,;Xi       \n *        i55s:.........,,,,,,,,,,,,,,,,.,,,......,.....,,....r9&5.:X1       \n *       59;.....,.     .,,,,,,,,,,,...        .............,..:1;.:&s       \n *      s8,..;53S5S3s.   .,,,,,,,.,..      i15S5h1:.........,,,..,,:99       \n *      93.:39s:rSGB@A;  ..,,,,.....    .SG3hhh9G&BGi..,,,,,,,,,,,,.,83      \n *      G5.G8  9#@@@@@X. .,,,,,,.....  iA9,.S&B###@@Mr...,,,,,,,,..,.;Xh     \n *      Gs.X8 S@@@@@@@B:..,,,,,,,,,,. rA1 ,A@@@@@@@@@H:........,,,,,,.iX:    \n *     ;9. ,8A#@@@@@@#5,.,,,,,,,,,... 9A. 8@@@@@@@@@@M;    ....,,,,,,,,S8    \n *     X3    iS8XAHH8s.,,,,,,,,,,...,..58hH@@@@@@@@@Hs       ...,,,,,,,:Gs   \n *    r8,        ,,,...,,,,,,,,,,.....  ,h8XABMMHX3r.          .,,,,,,,.rX:  \n *   :9, .    .:,..,:;;;::,.,,,,,..          .,,.               ..,,,,,,.59  \n *  .Si      ,:.i8HBMMMMMB&5,....                    .            .,,,,,.sMr\n *  SS       :: h@@@@@@@@@@#; .                     ...  .         ..,,,,iM5\n *  91  .    ;:.,1&@@@@@@MXs.                            .          .,,:,:&S\n *  hS ....  .:;,,,i3MMS1;..,..... .  .     ...                     ..,:,.99\n *  ,8; ..... .,:,..,8Ms:;,,,...                                     .,::.83\n *   s&: ....  .sS553B@@HX3s;,.    .,;13h.                            .:::&1\n *    SXr  .  ...;s3G99XA&X88Shss11155hi.                             ,;:h&,\n *     iH8:  . ..   ,;iiii;,::,,,,,.                                 .;irHA  \n *      ,8X5;   .     .......                                       ,;iihS8Gi\n *         1831,                                                 .,;irrrrrs&@\n *           ;5A8r.                                            .:;iiiiirrss1H\n *             :X@H3s.......                                .,:;iii;iiiiirsrh\n *              r#h:;,...,,.. .,,:;;;;;:::,...              .:;;;;;;iiiirrss1\n *             ,M8 ..,....,.....,,::::::,,...         .     .,;;;iiiiiirss11h\n *             8B;.,,,,,,,.,.....          .           ..   .:;;;;iirrsss111h\n *            i@5,:::,,,,,,,,.... .                   . .:::;;;;;irrrss111111\n *            9Bi,:,,,,......                        ..r91;;;;;iirrsss1ss1111\n */\n```\n\n```C\n/***\n *  佛曰:\n *          写字楼里写字间，写字间里程序员；\n *          程序人员写程序，又拿程序换酒钱。\n *          酒醒只在网上坐，酒醉还来网下眠；\n *          酒醉酒醒日复日，网上网下年复年。\n *          但愿老死电脑间，不愿鞠躬老板前；\n *          奔驰宝马贵者趣，公交自行程序员。\n *          别人笑我忒疯癫，我笑自己命太贱；\n *          不见满街漂亮妹，哪个归得程序员？\n */\n```\n\n```C\n/***\n *                    _ooOoo_\n *                   o8888888o\n *                   88\" . \"88\n *                   (| -_- |)\n *                    O\\ = /O\n *                ____/`---'\\____\n *              .   ' \\\\| |// `.\n *               / \\\\||| : |||// \\\n *             / _||||| -:- |||||- \\\n *               | | \\\\\\ - /// | |\n *             | \\_| ''\\---/'' | |\n *              \\ .-\\__ `-` ___/-. /\n *           ___`. .' /--.--\\ `. . __\n *        .\"\" '< `.___\\_<|>_/___.' >'\"\".\n *       | | : `- \\`.;`\\ _ /`;.`/ - ` : | |\n *         \\ \\ `-. \\_ __\\ /__ _/ .-` / /\n * ======`-.____`-.___\\_____/___.-`____.-'======\n *                    `=---='\n *\n * .............................................\n *          佛祖保佑             永无BUG\n */\n```\n\n> ```C\n> /***\n>  * _ooOoo_\n>  * o8888888o\n>  * 88\" . \"88\n>  * (| -_- |)\n>  *  O\\ = /O\n>  * ___/`---'\\____\n>  * .   ' \\\\| |// `.\n>  * / \\\\||| : |||// \\\n>  * / _||||| -:- |||||- \\\n>  * | | \\\\\\ - /// | |\n>  * | \\_| ''\\---/'' | |\n>  * \\ .-\\__ `-` ___/-. /\n>  * ___`. .' /--.--\\ `. . __\n>  * .\"\" '< `.___\\_<|>_/___.' >'\"\".\n>  * | | : `- \\`.;`\\ _ /`;.`/ - ` : | |\n>  * \\ \\ `-. \\_ __\\ /__ _/ .-` / /\n>  * ======`-.____`-.___\\_____/___.-`____.-'======\n>  * `=---='\n>  * .............................................\n>  *           佛曰：bug 泛滥，我已瘫痪！\n>  */\n> ```\n\n```C\n/***\n * You may think you know what the following code does.\n * But you dont. Trust me.\n * Fiddle with it, and youll spend many a sleepless\n * night cursing the moment you thought youd be clever\n * enough to \"optimize\" the code below.\n * Now close this file and go play with something else.\n */\n /***\n * 你可能会认为你读得懂以下的代码。但是你不会懂的，相信我吧。\n * 要是你尝试玩弄这段代码的话，你将会在无尽的通宵中不断地咒骂自己为什么会认为自己聪明到可以优化这段代码。\n * 现在请关闭这个文件去玩点别的吧。\n */\n```\n\n","slug":"comments","published":1,"updated":"2021-08-22T01:26:55.796Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2r000yjsvkd4aq104o","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><pre class=\"language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/***                                                                    \n *            .,,       .,:;;iiiiiiiii;;:,,.     .,,                   \n *          rGB##HS,.;iirrrrriiiiiiiiiirrrrri;,s&amp;##MAS,                \n *         r5s;:r3AH5iiiii;;;;;;;;;;;;;;;;iiirXHGSsiih1,               \n *            .;i;;s91;;;;;;::::::::::::;;;;iS5;;;ii:                  \n *          :rsriii;;r::::::::::::::::::::::;;,;;iiirsi,               \n *       .,iri;;::::;;;;;;::,,,,,,,,,,,,,..,,;;;;;;;;iiri,,.           \n *    ,9BM&amp;,            .,:;;:,,,,,,,,,,,hXA8:            ..,,,.       \n *   ,;&amp;@@#r:;;;;;::::,,.   ,r,,,,,,,,,,iA@@@s,,:::;;;::,,.   .;.      \n *    :ih1iii;;;;;::::;;;;;;;:,,,,,,,,,,;i55r;;;;;;;;;iiirrrr,..       \n *   .ir;;iiiiiiiiii;;;;::::::,,,,,,,:::::,,:;;;iiiiiiiiiiiiri         \n *   iriiiiiiiiiiiiiiii;;;::::::::::::::::;;;iiiiiiiiiiiiiiiir;        \n *  ,riii;;;;;;;;;;;;;:::::::::::::::::::::::;;;;;;;;;;;;;;iiir.       \n *  iri;;;::::,,,,,,,,,,:::::::::::::::::::::::::,::,,::::;;iir:       \n * .rii;;::::,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,::::;;iri       \n * ,rii;;;::,,,,,,,,,,,,,:::::::::::,:::::,,,,,,,,,,,,,:::;;;iir.      \n * ,rii;;i::,,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,,::i;;iir.      \n * ,rii;;r::,,,,,,,,,,,,,:,:::::,:,:::::::,,,,,,,,,,,,,::;r;;iir.      \n * .rii;;rr,:,,,,,,,,,,,,,,:::::::::::::::,,,,,,,,,,,,,:,si;;iri       \n *  ;rii;:1i,,,,,,,,,,,,,,,,,,:::::::::,,,,,,,,,,,,,,,:,ss:;iir:       \n *  .rii;;;5r,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sh:;;iri        \n *   ;rii;:;51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.:hh:;;iir,        \n *    irii;::hSr,.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.,sSs:;;iir:         \n *     irii;;:iSSs:.,,,,,,,,,,,,,,,,,,,,,,,,,,,..:135;:;;iir:          \n *      ;rii;;:,r535r:...,,,,,,,,,,,,,,,,,,..,;sS35i,;;iirr:           \n *       :rrii;;:,;1S3Shs;:,............,:is533Ss:,;;;iiri,            \n *        .;rrii;;;:,;rhS393S55hh11hh5S3393Shr:,:;;;iirr:              \n *          .;rriii;;;::,:;is1h555555h1si;:,::;;;iirri:.               \n *            .:irrrii;;;;;:::,,,,,,,,:::;;;;iiirrr;,                  \n *               .:irrrriiiiii;;;;;;;;iiiiiirrrr;,.                    \n *                  .,:;iirrrrrrrrrrrrrrrrri;:.                        \n *                        ..,:::;;;;:::,,.                             \n */</span>  </code></pre>\n<pre class=\"language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;***\n *               ii.                                         ;9ABH,          \n *              SA391,                                    .r9GG35&amp;G          \n *              &amp;#ii13Gh;                               i3X31i;:,rB1         \n *              iMs,:,i5895,                         .5G91:,:;:s1:8A         \n *               33::::,,;5G5,                     ,58Si,,:::,sHX;iH1        \n *                Sr.,:;rs13BBX35hh11511h5Shhh5S3GAXS:.,,::,,1AG3i,GG        \n *                .G51S511sr;;iiiishS8G89Shsrrsh59S;.,,,,,..5A85Si,h8        \n *               :SB9s:,............................,,,.,,,SASh53h,1G.       \n *            .r18S;..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,....,,.1H315199,rX,       \n *          ;S89s,..,,,,,,,,,,,,,,,,,,,,,,,....,,.......,,,;r1ShS8,;Xi       \n *        i55s:.........,,,,,,,,,,,,,,,,.,,,......,.....,,....r9&amp;5.:X1       \n *       59;.....,.     .,,,,,,,,,,,...        .............,..:1;.:&amp;s       \n *      s8,..;53S5S3s.   .,,,,,,,.,..      i15S5h1:.........,,,..,,:99       \n *      93.:39s:rSGB@A;  ..,,,,.....    .SG3hhh9G&amp;BGi..,,,,,,,,,,,,.,83      \n *      G5.G8  9#@@@@@X. .,,,,,,.....  iA9,.S&amp;B###@@Mr...,,,,,,,,..,.;Xh     \n *      Gs.X8 S@@@@@@@B:..,,,,,,,,,,. rA1 ,A@@@@@@@@@H:........,,,,,,.iX:    \n *     ;9. ,8A#@@@@@@#5,.,,,,,,,,,... 9A. 8@@@@@@@@@@M;    ....,,,,,,,,S8    \n *     X3    iS8XAHH8s.,,,,,,,,,,...,..58hH@@@@@@@@@Hs       ...,,,,,,,:Gs   \n *    r8,        ,,,...,,,,,,,,,,.....  ,h8XABMMHX3r.          .,,,,,,,.rX:  \n *   :9, .    .:,..,:;;;::,.,,,,,..          .,,.               ..,,,,,,.59  \n *  .Si      ,:.i8HBMMMMMB&amp;5,....                    .            .,,,,,.sMr\n *  SS       :: h@@@@@@@@@@#; .                     ...  .         ..,,,,iM5\n *  91  .    ;:.,1&amp;@@@@@@MXs.                            .          .,,:,:&amp;S\n *  hS ....  .:;,,,i3MMS1;..,..... .  .     ...                     ..,:,.99\n *  ,8; ..... .,:,..,8Ms:;,,,...                                     .,::.83\n *   s&amp;: ....  .sS553B@@HX3s;,.    .,;13h.                            .:::&amp;1\n *    SXr  .  ...;s3G99XA&amp;X88Shss11155hi.                             ,;:h&amp;,\n *     iH8:  . ..   ,;iiii;,::,,,,,.                                 .;irHA  \n *      ,8X5;   .     .......                                       ,;iihS8Gi\n *         1831,                                                 .,;irrrrrs&amp;@\n *           ;5A8r.                                            .:;iiiiirrss1H\n *             :X@H3s.......                                .,:;iii;iiiiirsrh\n *              r#h:;,...,,.. .,,:;;;;;:::,...              .:;;;;;;iiiirrss1\n *             ,M8 ..,....,.....,,::::::,,...         .     .,;;;iiiiiirss11h\n *             8B;.,,,,,,,.,.....          .           ..   .:;;;;iirrsss111h\n *            i@5,:::,,,,,,,,.... .                   . .:::;;;;;irrrss111111\n *            9Bi,:,,,,......                        ..r91;;;;;iirrsss1ss1111\n *&#x2F;</code></pre>\n<pre class=\"language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;***\n *  佛曰:\n *          写字楼里写字间，写字间里程序员；\n *          程序人员写程序，又拿程序换酒钱。\n *          酒醒只在网上坐，酒醉还来网下眠；\n *          酒醉酒醒日复日，网上网下年复年。\n *          但愿老死电脑间，不愿鞠躬老板前；\n *          奔驰宝马贵者趣，公交自行程序员。\n *          别人笑我忒疯癫，我笑自己命太贱；\n *          不见满街漂亮妹，哪个归得程序员？\n *&#x2F;</code></pre>\n<pre class=\"language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;***\n *                    _ooOoo_\n *                   o8888888o\n *                   88&quot; . &quot;88\n *                   (| -_- |)\n *                    O\\ &#x3D; &#x2F;O\n *                ____&#x2F;&#96;---&#39;\\____\n *              .   &#39; \\\\| |&#x2F;&#x2F; &#96;.\n *               &#x2F; \\\\||| : |||&#x2F;&#x2F; \\\n *             &#x2F; _||||| -:- |||||- \\\n *               | | \\\\\\ - &#x2F;&#x2F;&#x2F; | |\n *             | \\_| &#39;&#39;\\---&#x2F;&#39;&#39; | |\n *              \\ .-\\__ &#96;-&#96; ___&#x2F;-. &#x2F;\n *           ___&#96;. .&#39; &#x2F;--.--\\ &#96;. . __\n *        .&quot;&quot; &#39;&lt; &#96;.___\\_&lt;|&gt;_&#x2F;___.&#39; &gt;&#39;&quot;&quot;.\n *       | | : &#96;- \\&#96;.;&#96;\\ _ &#x2F;&#96;;.&#96;&#x2F; - &#96; : | |\n *         \\ \\ &#96;-. \\_ __\\ &#x2F;__ _&#x2F; .-&#96; &#x2F; &#x2F;\n * &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#96;-.____&#96;-.___\\_____&#x2F;___.-&#96;____.-&#39;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n *                    &#96;&#x3D;---&#x3D;&#39;\n *\n * .............................................\n *          佛祖保佑             永无BUG\n *&#x2F;</code></pre>\n<blockquote>\n<pre class=\"language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;***\n * _ooOoo_\n * o8888888o\n * 88&quot; . &quot;88\n * (| -_- |)\n *  O\\ &#x3D; &#x2F;O\n * ___&#x2F;&#96;---&#39;\\____\n * .   &#39; \\\\| |&#x2F;&#x2F; &#96;.\n * &#x2F; \\\\||| : |||&#x2F;&#x2F; \\\n * &#x2F; _||||| -:- |||||- \\\n * | | \\\\\\ - &#x2F;&#x2F;&#x2F; | |\n * | \\_| &#39;&#39;\\---&#x2F;&#39;&#39; | |\n * \\ .-\\__ &#96;-&#96; ___&#x2F;-. &#x2F;\n * ___&#96;. .&#39; &#x2F;--.--\\ &#96;. . __\n * .&quot;&quot; &#39;&lt; &#96;.___\\_&lt;|&gt;_&#x2F;___.&#39; &gt;&#39;&quot;&quot;.\n * | | : &#96;- \\&#96;.;&#96;\\ _ &#x2F;&#96;;.&#96;&#x2F; - &#96; : | |\n * \\ \\ &#96;-. \\_ __\\ &#x2F;__ _&#x2F; .-&#96; &#x2F; &#x2F;\n * &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#96;-.____&#96;-.___\\_____&#x2F;___.-&#96;____.-&#39;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n * &#96;&#x3D;---&#x3D;&#39;\n * .............................................\n *           佛曰：bug 泛滥，我已瘫痪！\n *&#x2F;</code></pre>\n</blockquote>\n<pre class=\"language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;***\n * You may think you know what the following code does.\n * But you dont. Trust me.\n * Fiddle with it, and youll spend many a sleepless\n * night cursing the moment you thought youd be clever\n * enough to &quot;optimize&quot; the code below.\n * Now close this file and go play with something else.\n *&#x2F;\n &#x2F;***\n * 你可能会认为你读得懂以下的代码。但是你不会懂的，相信我吧。\n * 要是你尝试玩弄这段代码的话，你将会在无尽的通宵中不断地咒骂自己为什么会认为自己聪明到可以优化这段代码。\n * 现在请关闭这个文件去玩点别的吧。\n *&#x2F;</code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160624.jpg","length":5140,"excerpt":"","more":"<pre class=\"language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/***                                                                    \n *            .,,       .,:;;iiiiiiiii;;:,,.     .,,                   \n *          rGB##HS,.;iirrrrriiiiiiiiiirrrrri;,s&amp;##MAS,                \n *         r5s;:r3AH5iiiii;;;;;;;;;;;;;;;;iiirXHGSsiih1,               \n *            .;i;;s91;;;;;;::::::::::::;;;;iS5;;;ii:                  \n *          :rsriii;;r::::::::::::::::::::::;;,;;iiirsi,               \n *       .,iri;;::::;;;;;;::,,,,,,,,,,,,,..,,;;;;;;;;iiri,,.           \n *    ,9BM&amp;,            .,:;;:,,,,,,,,,,,hXA8:            ..,,,.       \n *   ,;&amp;@@#r:;;;;;::::,,.   ,r,,,,,,,,,,iA@@@s,,:::;;;::,,.   .;.      \n *    :ih1iii;;;;;::::;;;;;;;:,,,,,,,,,,;i55r;;;;;;;;;iiirrrr,..       \n *   .ir;;iiiiiiiiii;;;;::::::,,,,,,,:::::,,:;;;iiiiiiiiiiiiri         \n *   iriiiiiiiiiiiiiiii;;;::::::::::::::::;;;iiiiiiiiiiiiiiiir;        \n *  ,riii;;;;;;;;;;;;;:::::::::::::::::::::::;;;;;;;;;;;;;;iiir.       \n *  iri;;;::::,,,,,,,,,,:::::::::::::::::::::::::,::,,::::;;iir:       \n * .rii;;::::,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,::::;;iri       \n * ,rii;;;::,,,,,,,,,,,,,:::::::::::,:::::,,,,,,,,,,,,,:::;;;iir.      \n * ,rii;;i::,,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,,::i;;iir.      \n * ,rii;;r::,,,,,,,,,,,,,:,:::::,:,:::::::,,,,,,,,,,,,,::;r;;iir.      \n * .rii;;rr,:,,,,,,,,,,,,,,:::::::::::::::,,,,,,,,,,,,,:,si;;iri       \n *  ;rii;:1i,,,,,,,,,,,,,,,,,,:::::::::,,,,,,,,,,,,,,,:,ss:;iir:       \n *  .rii;;;5r,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sh:;;iri        \n *   ;rii;:;51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.:hh:;;iir,        \n *    irii;::hSr,.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.,sSs:;;iir:         \n *     irii;;:iSSs:.,,,,,,,,,,,,,,,,,,,,,,,,,,,..:135;:;;iir:          \n *      ;rii;;:,r535r:...,,,,,,,,,,,,,,,,,,..,;sS35i,;;iirr:           \n *       :rrii;;:,;1S3Shs;:,............,:is533Ss:,;;;iiri,            \n *        .;rrii;;;:,;rhS393S55hh11hh5S3393Shr:,:;;;iirr:              \n *          .;rriii;;;::,:;is1h555555h1si;:,::;;;iirri:.               \n *            .:irrrii;;;;;:::,,,,,,,,:::;;;;iiirrr;,                  \n *               .:irrrriiiiii;;;;;;;;iiiiiirrrr;,.                    \n *                  .,:;iirrrrrrrrrrrrrrrrri;:.                        \n *                        ..,:::;;;;:::,,.                             \n */</span>  </code></pre>\n<pre class=\"language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;***\n *               ii.                                         ;9ABH,          \n *              SA391,                                    .r9GG35&amp;G          \n *              &amp;#ii13Gh;                               i3X31i;:,rB1         \n *              iMs,:,i5895,                         .5G91:,:;:s1:8A         \n *               33::::,,;5G5,                     ,58Si,,:::,sHX;iH1        \n *                Sr.,:;rs13BBX35hh11511h5Shhh5S3GAXS:.,,::,,1AG3i,GG        \n *                .G51S511sr;;iiiishS8G89Shsrrsh59S;.,,,,,..5A85Si,h8        \n *               :SB9s:,............................,,,.,,,SASh53h,1G.       \n *            .r18S;..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,....,,.1H315199,rX,       \n *          ;S89s,..,,,,,,,,,,,,,,,,,,,,,,,....,,.......,,,;r1ShS8,;Xi       \n *        i55s:.........,,,,,,,,,,,,,,,,.,,,......,.....,,....r9&amp;5.:X1       \n *       59;.....,.     .,,,,,,,,,,,...        .............,..:1;.:&amp;s       \n *      s8,..;53S5S3s.   .,,,,,,,.,..      i15S5h1:.........,,,..,,:99       \n *      93.:39s:rSGB@A;  ..,,,,.....    .SG3hhh9G&amp;BGi..,,,,,,,,,,,,.,83      \n *      G5.G8  9#@@@@@X. .,,,,,,.....  iA9,.S&amp;B###@@Mr...,,,,,,,,..,.;Xh     \n *      Gs.X8 S@@@@@@@B:..,,,,,,,,,,. rA1 ,A@@@@@@@@@H:........,,,,,,.iX:    \n *     ;9. ,8A#@@@@@@#5,.,,,,,,,,,... 9A. 8@@@@@@@@@@M;    ....,,,,,,,,S8    \n *     X3    iS8XAHH8s.,,,,,,,,,,...,..58hH@@@@@@@@@Hs       ...,,,,,,,:Gs   \n *    r8,        ,,,...,,,,,,,,,,.....  ,h8XABMMHX3r.          .,,,,,,,.rX:  \n *   :9, .    .:,..,:;;;::,.,,,,,..          .,,.               ..,,,,,,.59  \n *  .Si      ,:.i8HBMMMMMB&amp;5,....                    .            .,,,,,.sMr\n *  SS       :: h@@@@@@@@@@#; .                     ...  .         ..,,,,iM5\n *  91  .    ;:.,1&amp;@@@@@@MXs.                            .          .,,:,:&amp;S\n *  hS ....  .:;,,,i3MMS1;..,..... .  .     ...                     ..,:,.99\n *  ,8; ..... .,:,..,8Ms:;,,,...                                     .,::.83\n *   s&amp;: ....  .sS553B@@HX3s;,.    .,;13h.                            .:::&amp;1\n *    SXr  .  ...;s3G99XA&amp;X88Shss11155hi.                             ,;:h&amp;,\n *     iH8:  . ..   ,;iiii;,::,,,,,.                                 .;irHA  \n *      ,8X5;   .     .......                                       ,;iihS8Gi\n *         1831,                                                 .,;irrrrrs&amp;@\n *           ;5A8r.                                            .:;iiiiirrss1H\n *             :X@H3s.......                                .,:;iii;iiiiirsrh\n *              r#h:;,...,,.. .,,:;;;;;:::,...              .:;;;;;;iiiirrss1\n *             ,M8 ..,....,.....,,::::::,,...         .     .,;;;iiiiiirss11h\n *             8B;.,,,,,,,.,.....          .           ..   .:;;;;iirrsss111h\n *            i@5,:::,,,,,,,,.... .                   . .:::;;;;;irrrss111111\n *            9Bi,:,,,,......                        ..r91;;;;;iirrsss1ss1111\n *&#x2F;</code></pre>\n<pre class=\"language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;***\n *  佛曰:\n *          写字楼里写字间，写字间里程序员；\n *          程序人员写程序，又拿程序换酒钱。\n *          酒醒只在网上坐，酒醉还来网下眠；\n *          酒醉酒醒日复日，网上网下年复年。\n *          但愿老死电脑间，不愿鞠躬老板前；\n *          奔驰宝马贵者趣，公交自行程序员。\n *          别人笑我忒疯癫，我笑自己命太贱；\n *          不见满街漂亮妹，哪个归得程序员？\n *&#x2F;</code></pre>\n<pre class=\"language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;***\n *                    _ooOoo_\n *                   o8888888o\n *                   88&quot; . &quot;88\n *                   (| -_- |)\n *                    O\\ &#x3D; &#x2F;O\n *                ____&#x2F;&#96;---&#39;\\____\n *              .   &#39; \\\\| |&#x2F;&#x2F; &#96;.\n *               &#x2F; \\\\||| : |||&#x2F;&#x2F; \\\n *             &#x2F; _||||| -:- |||||- \\\n *               | | \\\\\\ - &#x2F;&#x2F;&#x2F; | |\n *             | \\_| &#39;&#39;\\---&#x2F;&#39;&#39; | |\n *              \\ .-\\__ &#96;-&#96; ___&#x2F;-. &#x2F;\n *           ___&#96;. .&#39; &#x2F;--.--\\ &#96;. . __\n *        .&quot;&quot; &#39;&lt; &#96;.___\\_&lt;|&gt;_&#x2F;___.&#39; &gt;&#39;&quot;&quot;.\n *       | | : &#96;- \\&#96;.;&#96;\\ _ &#x2F;&#96;;.&#96;&#x2F; - &#96; : | |\n *         \\ \\ &#96;-. \\_ __\\ &#x2F;__ _&#x2F; .-&#96; &#x2F; &#x2F;\n * &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#96;-.____&#96;-.___\\_____&#x2F;___.-&#96;____.-&#39;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n *                    &#96;&#x3D;---&#x3D;&#39;\n *\n * .............................................\n *          佛祖保佑             永无BUG\n *&#x2F;</code></pre>\n<blockquote>\n<pre class=\"language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;***\n * _ooOoo_\n * o8888888o\n * 88&quot; . &quot;88\n * (| -_- |)\n *  O\\ &#x3D; &#x2F;O\n * ___&#x2F;&#96;---&#39;\\____\n * .   &#39; \\\\| |&#x2F;&#x2F; &#96;.\n * &#x2F; \\\\||| : |||&#x2F;&#x2F; \\\n * &#x2F; _||||| -:- |||||- \\\n * | | \\\\\\ - &#x2F;&#x2F;&#x2F; | |\n * | \\_| &#39;&#39;\\---&#x2F;&#39;&#39; | |\n * \\ .-\\__ &#96;-&#96; ___&#x2F;-. &#x2F;\n * ___&#96;. .&#39; &#x2F;--.--\\ &#96;. . __\n * .&quot;&quot; &#39;&lt; &#96;.___\\_&lt;|&gt;_&#x2F;___.&#39; &gt;&#39;&quot;&quot;.\n * | | : &#96;- \\&#96;.;&#96;\\ _ &#x2F;&#96;;.&#96;&#x2F; - &#96; : | |\n * \\ \\ &#96;-. \\_ __\\ &#x2F;__ _&#x2F; .-&#96; &#x2F; &#x2F;\n * &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#96;-.____&#96;-.___\\_____&#x2F;___.-&#96;____.-&#39;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n * &#96;&#x3D;---&#x3D;&#39;\n * .............................................\n *           佛曰：bug 泛滥，我已瘫痪！\n *&#x2F;</code></pre>\n</blockquote>\n<pre class=\"language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;***\n * You may think you know what the following code does.\n * But you dont. Trust me.\n * Fiddle with it, and youll spend many a sleepless\n * night cursing the moment you thought youd be clever\n * enough to &quot;optimize&quot; the code below.\n * Now close this file and go play with something else.\n *&#x2F;\n &#x2F;***\n * 你可能会认为你读得懂以下的代码。但是你不会懂的，相信我吧。\n * 要是你尝试玩弄这段代码的话，你将会在无尽的通宵中不断地咒骂自己为什么会认为自己聪明到可以优化这段代码。\n * 现在请关闭这个文件去玩点别的吧。\n *&#x2F;</code></pre>\n"},{"title":"Docker常用命令","date":"2022-01-04T07:48:29.000Z","description":null,"_content":"\n## Docker常用命令\n\n1. 搜索及拉取docker镜像\n\n```shell\n$ docker search [NAME]              # 搜索docker镜像（搜索结果里OFFICIAL为OK的是官方镜像）\n$ docker pull [NAME]                # 拉取指定docker镜像（NAME是搜索出来的指定镜像名）\n```\n\n2. 查看docker容器实例和镜像\n```bash\n$ docker ps -a                      # 查看所有docker容器实例\n$ docker ps                         # 查看所有正在运行的docker容器实例\n$ docker images                     # 查看所有docker镜像\n$ docker images [REPOSITORY]        # 查看指定docker镜像（REPOSITORY为镜像名）\n```\n3. 开启停止docker容器实例和镜像\n```bash\n$ docker start [ID/NAMES]             # 开启指定docker容器实例\n$ docker stop [ID/NAMES]              # 停止指定docker容器实例\n$ docker restart [ID/NAMES]           # 重启指定docker容器实例\n$ docker start `docker ps -a -q`      # 批量启动所有的docker容器实例\n$ docker stop `docker ps -a -q`       # 批量停止所有的docker容器实例\n$ docker restart `docker ps -a -q`    # 批量重启所有的docker容器实例\n```\n4. 强制删除docker容器实例和镜像\n```bash\n$ docker rm -f [ID/NAMES]             # 强制删除指定docker容器实例（删除前需先停止实例）\n$ docker rmi -f [ID/NAMES]            # 强制删除指定docker镜像（删除前需先停止实例）\n$ docker rm -f `docker ps -a -q`      # 批量强制删除所有的docker容器实例（删除前需先停止实例）\n$ docker rmi -f `docker images -q`    # 批量强制删除所有的docker镜像（删除前需先停止实例）\n```\n5. 进入/退出docker容器内部\n```bash\n$ docker exec -it [CONTAINER ID/NAMES] /bin/bash   # 进入指定docker容器内部\n$ ps -ef                                           # 查看容器内进程\n$ exit                                             # 从docker容器内部退出\n```\n注：如果遇到OCI runtime exec failed: exec failed问题，则使用如下命令进入\n```bash\n$ docker exec -it [CONTAINER ID/NAMES] /bin/sh\n```\n6. 查看docker运行日志\n```bash\n$ docker logs -f [CONTAINER ID/NAMES] --tail 100    # 查看指定条数的docker运行日志\n$ docker logs --since 30m [CONTAINER ID/NAMES]      # 查看指定分钟内的docker运行日志   \n```\n7. docker容器内部的文件上传和下载\n```bash\n$ docker cp /root/test.txt [CONTAINER ID/NAMES]:/root       # 上传文件\n$ docker cp [CONTAINER ID/NAMES]:/root/test.txt /root       # 下载文件\n```\n8. docker空间清理\n```bash\n$ docker system df                 # 类似于Linux上的df命令，用于查看Docker的磁盘使用情况\n$ docker system prune              # 可用于清理磁盘，删除关闭的容器、无用的数据卷和网络，以及无tag的镜像)\n```\n9. 在docker容器外执行容器内的命令\n\n有时候我们想执行某个容器的某条命令，但又不想进入容器内，可通过如下命令示例实现：\n```bash\n$ docker exec -it [CONTAINER ID/NAMES] /bin/bash -c 'cd /code && python test.py'\n```\n注：如果遇到the input device is not a TTY问题，去掉t即可，即：\n```bash\n$ docker exec -i [CONTAINER ID/NAMES] /bin/bash -c 'cd /code && python test.py'\n```\n10. docker的跨容器调用\n\n需求情景：爬虫项目和定时任务项目分别在两个容器中部署的，想要在定时任务项目里编写脚本调用爬虫项目中的具体执行文件。\n\n我们可以通过挂载docker.sock和docker命令行客户端实现用docker exec来间接调用。只需要在docker run的时候挂载如下路径即可：\n\n```bash\n-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker\n```\n","source":"_posts/docker常用命令.md","raw":"---\ntitle: docker常用命令\ndate: 2022-01-04 15:48:29\ntags: [docker]\ncategories:\ndescription:\n---\n\n## Docker常用命令\n\n1. 搜索及拉取docker镜像\n\n```shell\n$ docker search [NAME]              # 搜索docker镜像（搜索结果里OFFICIAL为OK的是官方镜像）\n$ docker pull [NAME]                # 拉取指定docker镜像（NAME是搜索出来的指定镜像名）\n```\n\n2. 查看docker容器实例和镜像\n```bash\n$ docker ps -a                      # 查看所有docker容器实例\n$ docker ps                         # 查看所有正在运行的docker容器实例\n$ docker images                     # 查看所有docker镜像\n$ docker images [REPOSITORY]        # 查看指定docker镜像（REPOSITORY为镜像名）\n```\n3. 开启停止docker容器实例和镜像\n```bash\n$ docker start [ID/NAMES]             # 开启指定docker容器实例\n$ docker stop [ID/NAMES]              # 停止指定docker容器实例\n$ docker restart [ID/NAMES]           # 重启指定docker容器实例\n$ docker start `docker ps -a -q`      # 批量启动所有的docker容器实例\n$ docker stop `docker ps -a -q`       # 批量停止所有的docker容器实例\n$ docker restart `docker ps -a -q`    # 批量重启所有的docker容器实例\n```\n4. 强制删除docker容器实例和镜像\n```bash\n$ docker rm -f [ID/NAMES]             # 强制删除指定docker容器实例（删除前需先停止实例）\n$ docker rmi -f [ID/NAMES]            # 强制删除指定docker镜像（删除前需先停止实例）\n$ docker rm -f `docker ps -a -q`      # 批量强制删除所有的docker容器实例（删除前需先停止实例）\n$ docker rmi -f `docker images -q`    # 批量强制删除所有的docker镜像（删除前需先停止实例）\n```\n5. 进入/退出docker容器内部\n```bash\n$ docker exec -it [CONTAINER ID/NAMES] /bin/bash   # 进入指定docker容器内部\n$ ps -ef                                           # 查看容器内进程\n$ exit                                             # 从docker容器内部退出\n```\n注：如果遇到OCI runtime exec failed: exec failed问题，则使用如下命令进入\n```bash\n$ docker exec -it [CONTAINER ID/NAMES] /bin/sh\n```\n6. 查看docker运行日志\n```bash\n$ docker logs -f [CONTAINER ID/NAMES] --tail 100    # 查看指定条数的docker运行日志\n$ docker logs --since 30m [CONTAINER ID/NAMES]      # 查看指定分钟内的docker运行日志   \n```\n7. docker容器内部的文件上传和下载\n```bash\n$ docker cp /root/test.txt [CONTAINER ID/NAMES]:/root       # 上传文件\n$ docker cp [CONTAINER ID/NAMES]:/root/test.txt /root       # 下载文件\n```\n8. docker空间清理\n```bash\n$ docker system df                 # 类似于Linux上的df命令，用于查看Docker的磁盘使用情况\n$ docker system prune              # 可用于清理磁盘，删除关闭的容器、无用的数据卷和网络，以及无tag的镜像)\n```\n9. 在docker容器外执行容器内的命令\n\n有时候我们想执行某个容器的某条命令，但又不想进入容器内，可通过如下命令示例实现：\n```bash\n$ docker exec -it [CONTAINER ID/NAMES] /bin/bash -c 'cd /code && python test.py'\n```\n注：如果遇到the input device is not a TTY问题，去掉t即可，即：\n```bash\n$ docker exec -i [CONTAINER ID/NAMES] /bin/bash -c 'cd /code && python test.py'\n```\n10. docker的跨容器调用\n\n需求情景：爬虫项目和定时任务项目分别在两个容器中部署的，想要在定时任务项目里编写脚本调用爬虫项目中的具体执行文件。\n\n我们可以通过挂载docker.sock和docker命令行客户端实现用docker exec来间接调用。只需要在docker run的时候挂载如下路径即可：\n\n```bash\n-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker\n```\n","slug":"docker常用命令","published":1,"updated":"2022-08-29T00:55:37.619Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2t0011jsvkbdelhips","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"Docker常用命令\"><a href=\"#Docker常用命令\" class=\"headerlink\" title=\"Docker常用命令\"></a>Docker常用命令</h2><ol>\n<li>搜索及拉取docker镜像</li>\n</ol>\n<pre class=\"language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ docker search <span class=\"token punctuation\">[</span>NAME<span class=\"token punctuation\">]</span>              <span class=\"token comment\"># 搜索docker镜像（搜索结果里OFFICIAL为OK的是官方镜像）</span>\n$ docker pull <span class=\"token punctuation\">[</span>NAME<span class=\"token punctuation\">]</span>                <span class=\"token comment\"># 拉取指定docker镜像（NAME是搜索出来的指定镜像名）</span></code></pre>\n<ol>\n<li>查看docker容器实例和镜像<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token function\">ps</span> -a                      <span class=\"token comment\"># 查看所有docker容器实例</span>\n$ docker <span class=\"token function\">ps</span>                         <span class=\"token comment\"># 查看所有正在运行的docker容器实例</span>\n$ docker images                     <span class=\"token comment\"># 查看所有docker镜像</span>\n$ docker images <span class=\"token punctuation\">[</span>REPOSITORY<span class=\"token punctuation\">]</span>        <span class=\"token comment\"># 查看指定docker镜像（REPOSITORY为镜像名）</span></code></pre></li>\n<li>开启停止docker容器实例和镜像<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker start <span class=\"token punctuation\">[</span>ID/NAMES<span class=\"token punctuation\">]</span>             <span class=\"token comment\"># 开启指定docker容器实例</span>\n$ docker stop <span class=\"token punctuation\">[</span>ID/NAMES<span class=\"token punctuation\">]</span>              <span class=\"token comment\"># 停止指定docker容器实例</span>\n$ docker restart <span class=\"token punctuation\">[</span>ID/NAMES<span class=\"token punctuation\">]</span>           <span class=\"token comment\"># 重启指定docker容器实例</span>\n$ docker start <span class=\"token variable\"><span class=\"token variable\">`</span>docker <span class=\"token function\">ps</span> -a -q<span class=\"token variable\">`</span></span>      <span class=\"token comment\"># 批量启动所有的docker容器实例</span>\n$ docker stop <span class=\"token variable\"><span class=\"token variable\">`</span>docker <span class=\"token function\">ps</span> -a -q<span class=\"token variable\">`</span></span>       <span class=\"token comment\"># 批量停止所有的docker容器实例</span>\n$ docker restart <span class=\"token variable\"><span class=\"token variable\">`</span>docker <span class=\"token function\">ps</span> -a -q<span class=\"token variable\">`</span></span>    <span class=\"token comment\"># 批量重启所有的docker容器实例</span></code></pre></li>\n<li>强制删除docker容器实例和镜像<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token function\">rm</span> -f <span class=\"token punctuation\">[</span>ID/NAMES<span class=\"token punctuation\">]</span>             <span class=\"token comment\"># 强制删除指定docker容器实例（删除前需先停止实例）</span>\n$ docker rmi -f <span class=\"token punctuation\">[</span>ID/NAMES<span class=\"token punctuation\">]</span>            <span class=\"token comment\"># 强制删除指定docker镜像（删除前需先停止实例）</span>\n$ docker <span class=\"token function\">rm</span> -f <span class=\"token variable\"><span class=\"token variable\">`</span>docker <span class=\"token function\">ps</span> -a -q<span class=\"token variable\">`</span></span>      <span class=\"token comment\"># 批量强制删除所有的docker容器实例（删除前需先停止实例）</span>\n$ docker rmi -f <span class=\"token variable\"><span class=\"token variable\">`</span>docker images -q<span class=\"token variable\">`</span></span>    <span class=\"token comment\"># 批量强制删除所有的docker镜像（删除前需先停止实例）</span></code></pre></li>\n<li>进入/退出docker容器内部<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token builtin class-name\">exec</span> -it <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span> /bin/bash   <span class=\"token comment\"># 进入指定docker容器内部</span>\n$ <span class=\"token function\">ps</span> -ef                                           <span class=\"token comment\"># 查看容器内进程</span>\n$ <span class=\"token builtin class-name\">exit</span>                                             <span class=\"token comment\"># 从docker容器内部退出</span></code></pre>\n注：如果遇到OCI runtime exec failed: exec failed问题，则使用如下命令进入<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token builtin class-name\">exec</span> -it <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span> /bin/sh</code></pre></li>\n<li>查看docker运行日志<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker logs -f <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span> --tail <span class=\"token number\">100</span>    <span class=\"token comment\"># 查看指定条数的docker运行日志</span>\n$ docker logs --since 30m <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span>      <span class=\"token comment\"># 查看指定分钟内的docker运行日志   </span></code></pre></li>\n<li>docker容器内部的文件上传和下载<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token function\">cp</span> /root/test.txt <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span>:/root       <span class=\"token comment\"># 上传文件</span>\n$ docker <span class=\"token function\">cp</span> <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span>:/root/test.txt /root       <span class=\"token comment\"># 下载文件</span></code></pre></li>\n<li>docker空间清理<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker system <span class=\"token function\">df</span>                 <span class=\"token comment\"># 类似于Linux上的df命令，用于查看Docker的磁盘使用情况</span>\n$ docker system prune              <span class=\"token comment\"># 可用于清理磁盘，删除关闭的容器、无用的数据卷和网络，以及无tag的镜像)</span></code></pre></li>\n<li>在docker容器外执行容器内的命令</li>\n</ol>\n<p>有时候我们想执行某个容器的某条命令，但又不想进入容器内，可通过如下命令示例实现：<br><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token builtin class-name\">exec</span> -it <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span> /bin/bash -c <span class=\"token string\">'cd /code &amp;&amp; python test.py'</span></code></pre><br>注：如果遇到the input device is not a TTY问题，去掉t即可，即：<br><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token builtin class-name\">exec</span> -i <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span> /bin/bash -c <span class=\"token string\">'cd /code &amp;&amp; python test.py'</span></code></pre></p>\n<ol>\n<li>docker的跨容器调用</li>\n</ol>\n<p>需求情景：爬虫项目和定时任务项目分别在两个容器中部署的，想要在定时任务项目里编写脚本调用爬虫项目中的具体执行文件。</p>\n<p>我们可以通过挂载docker.sock和docker命令行客户端实现用docker exec来间接调用。只需要在docker run的时候挂载如下路径即可：</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker</code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160624.jpg","length":1794,"excerpt":"","more":"<h2 id=\"Docker常用命令\"><a href=\"#Docker常用命令\" class=\"headerlink\" title=\"Docker常用命令\"></a>Docker常用命令</h2><ol>\n<li>搜索及拉取docker镜像</li>\n</ol>\n<pre class=\"language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ docker search <span class=\"token punctuation\">[</span>NAME<span class=\"token punctuation\">]</span>              <span class=\"token comment\"># 搜索docker镜像（搜索结果里OFFICIAL为OK的是官方镜像）</span>\n$ docker pull <span class=\"token punctuation\">[</span>NAME<span class=\"token punctuation\">]</span>                <span class=\"token comment\"># 拉取指定docker镜像（NAME是搜索出来的指定镜像名）</span></code></pre>\n<ol>\n<li>查看docker容器实例和镜像<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token function\">ps</span> -a                      <span class=\"token comment\"># 查看所有docker容器实例</span>\n$ docker <span class=\"token function\">ps</span>                         <span class=\"token comment\"># 查看所有正在运行的docker容器实例</span>\n$ docker images                     <span class=\"token comment\"># 查看所有docker镜像</span>\n$ docker images <span class=\"token punctuation\">[</span>REPOSITORY<span class=\"token punctuation\">]</span>        <span class=\"token comment\"># 查看指定docker镜像（REPOSITORY为镜像名）</span></code></pre></li>\n<li>开启停止docker容器实例和镜像<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker start <span class=\"token punctuation\">[</span>ID/NAMES<span class=\"token punctuation\">]</span>             <span class=\"token comment\"># 开启指定docker容器实例</span>\n$ docker stop <span class=\"token punctuation\">[</span>ID/NAMES<span class=\"token punctuation\">]</span>              <span class=\"token comment\"># 停止指定docker容器实例</span>\n$ docker restart <span class=\"token punctuation\">[</span>ID/NAMES<span class=\"token punctuation\">]</span>           <span class=\"token comment\"># 重启指定docker容器实例</span>\n$ docker start <span class=\"token variable\"><span class=\"token variable\">`</span>docker <span class=\"token function\">ps</span> -a -q<span class=\"token variable\">`</span></span>      <span class=\"token comment\"># 批量启动所有的docker容器实例</span>\n$ docker stop <span class=\"token variable\"><span class=\"token variable\">`</span>docker <span class=\"token function\">ps</span> -a -q<span class=\"token variable\">`</span></span>       <span class=\"token comment\"># 批量停止所有的docker容器实例</span>\n$ docker restart <span class=\"token variable\"><span class=\"token variable\">`</span>docker <span class=\"token function\">ps</span> -a -q<span class=\"token variable\">`</span></span>    <span class=\"token comment\"># 批量重启所有的docker容器实例</span></code></pre></li>\n<li>强制删除docker容器实例和镜像<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token function\">rm</span> -f <span class=\"token punctuation\">[</span>ID/NAMES<span class=\"token punctuation\">]</span>             <span class=\"token comment\"># 强制删除指定docker容器实例（删除前需先停止实例）</span>\n$ docker rmi -f <span class=\"token punctuation\">[</span>ID/NAMES<span class=\"token punctuation\">]</span>            <span class=\"token comment\"># 强制删除指定docker镜像（删除前需先停止实例）</span>\n$ docker <span class=\"token function\">rm</span> -f <span class=\"token variable\"><span class=\"token variable\">`</span>docker <span class=\"token function\">ps</span> -a -q<span class=\"token variable\">`</span></span>      <span class=\"token comment\"># 批量强制删除所有的docker容器实例（删除前需先停止实例）</span>\n$ docker rmi -f <span class=\"token variable\"><span class=\"token variable\">`</span>docker images -q<span class=\"token variable\">`</span></span>    <span class=\"token comment\"># 批量强制删除所有的docker镜像（删除前需先停止实例）</span></code></pre></li>\n<li>进入/退出docker容器内部<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token builtin class-name\">exec</span> -it <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span> /bin/bash   <span class=\"token comment\"># 进入指定docker容器内部</span>\n$ <span class=\"token function\">ps</span> -ef                                           <span class=\"token comment\"># 查看容器内进程</span>\n$ <span class=\"token builtin class-name\">exit</span>                                             <span class=\"token comment\"># 从docker容器内部退出</span></code></pre>\n注：如果遇到OCI runtime exec failed: exec failed问题，则使用如下命令进入<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token builtin class-name\">exec</span> -it <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span> /bin/sh</code></pre></li>\n<li>查看docker运行日志<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker logs -f <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span> --tail <span class=\"token number\">100</span>    <span class=\"token comment\"># 查看指定条数的docker运行日志</span>\n$ docker logs --since 30m <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span>      <span class=\"token comment\"># 查看指定分钟内的docker运行日志   </span></code></pre></li>\n<li>docker容器内部的文件上传和下载<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token function\">cp</span> /root/test.txt <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span>:/root       <span class=\"token comment\"># 上传文件</span>\n$ docker <span class=\"token function\">cp</span> <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span>:/root/test.txt /root       <span class=\"token comment\"># 下载文件</span></code></pre></li>\n<li>docker空间清理<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker system <span class=\"token function\">df</span>                 <span class=\"token comment\"># 类似于Linux上的df命令，用于查看Docker的磁盘使用情况</span>\n$ docker system prune              <span class=\"token comment\"># 可用于清理磁盘，删除关闭的容器、无用的数据卷和网络，以及无tag的镜像)</span></code></pre></li>\n<li>在docker容器外执行容器内的命令</li>\n</ol>\n<p>有时候我们想执行某个容器的某条命令，但又不想进入容器内，可通过如下命令示例实现：<br><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token builtin class-name\">exec</span> -it <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span> /bin/bash -c <span class=\"token string\">'cd /code &amp;&amp; python test.py'</span></code></pre><br>注：如果遇到the input device is not a TTY问题，去掉t即可，即：<br><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker <span class=\"token builtin class-name\">exec</span> -i <span class=\"token punctuation\">[</span>CONTAINER ID/NAMES<span class=\"token punctuation\">]</span> /bin/bash -c <span class=\"token string\">'cd /code &amp;&amp; python test.py'</span></code></pre></p>\n<ol>\n<li>docker的跨容器调用</li>\n</ol>\n<p>需求情景：爬虫项目和定时任务项目分别在两个容器中部署的，想要在定时任务项目里编写脚本调用爬虫项目中的具体执行文件。</p>\n<p>我们可以通过挂载docker.sock和docker命令行客户端实现用docker exec来间接调用。只需要在docker run的时候挂载如下路径即可：</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker</code></pre>\n"},{"title":"Freenom搭建网站","date":"2021-10-17T08:15:59.000Z","description":"免费域名搭建静态网站","_content":"\n申请freenom免费域名\n\n[freenom]:https://www.freenom.com/zh/index.html?lang=zh \"freenom网址\"\n\n选择可用域名，然后点击Checkout，选择免费时间(period)\n\nDNSPOD解析域名\n[dnspod]:https://www.dnspod.cn/\n添加netlify记录\n\n[netlify]: https://www.netlify.com/\n\n + 记录类型CNAME \n + 值为netlify网址\n\n主机记录添加@ 和www\n修改域名nameservers \n添加记录值\nnetlify添加自定义域名","source":"_posts/freenom搭建网站.md","raw":"---\ntitle: freenom搭建网站\ndate: 2021-10-17 16:15:59\ntags: 网站\ncategories: 网站\ndescription: 免费域名搭建静态网站\n---\n\n申请freenom免费域名\n\n[freenom]:https://www.freenom.com/zh/index.html?lang=zh \"freenom网址\"\n\n选择可用域名，然后点击Checkout，选择免费时间(period)\n\nDNSPOD解析域名\n[dnspod]:https://www.dnspod.cn/\n添加netlify记录\n\n[netlify]: https://www.netlify.com/\n\n + 记录类型CNAME \n + 值为netlify网址\n\n主机记录添加@ 和www\n修改域名nameservers \n添加记录值\nnetlify添加自定义域名","slug":"freenom搭建网站","published":1,"updated":"2021-12-29T03:12:36.568Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2u0014jsvkb6z3gddp","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>申请freenom免费域名</p>\n<p>选择可用域名，然后点击Checkout，选择免费时间(period)</p>\n<p>DNSPOD解析域名</p>\n<p>添加netlify记录</p>\n<ul>\n<li>记录类型CNAME </li>\n<li>值为netlify网址</li>\n</ul>\n<p>主机记录添加@ 和www<br>修改域名nameservers<br>添加记录值<br>netlify添加自定义域名</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160531.jpg","length":133,"excerpt":"","more":"<p>申请freenom免费域名</p>\n<p>选择可用域名，然后点击Checkout，选择免费时间(period)</p>\n<p>DNSPOD解析域名</p>\n<p>添加netlify记录</p>\n<ul>\n<li>记录类型CNAME </li>\n<li>值为netlify网址</li>\n</ul>\n<p>主机记录添加@ 和www<br>修改域名nameservers<br>添加记录值<br>netlify添加自定义域名</p>\n"},{"title":"Git技巧","date":"2021-09-09T00:39:09.000Z","description":"git","_content":"\n## Git\n\n### git配置\n\n在git文件中\n\n```bash\ngit config --global user.email \"your email\"\ngit config --global user.name \"your name\"\n# 生成密钥\nssh-keygen -t rsa -C \"githubemail\"ssh -T git@github.com 测试连接github\ngit config --list 查看git配置\n```\n\n找到`C:\\Users\\win\\.ssh`中的id_rsa.pub文件，全部复制，然后将公钥，复制github、gitee里的ssh公钥中\n\n<img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627213117.png\" alt=\"sshgitee\" style=\"zoom:50%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627213235.png\" alt=\"sshgithub\" style=\"zoom:50%;\" />\n\n验证配置是否成功\n\n```bash\nssh -T git@github.com # 测试连接github\nssh -T git@gitee.com\ngit config --list 查看git配置\n```\n\n初始化并推送仓库\n\n```bash\ngit init\ngit add README.md\t# git add . 添加所有文件\ngit commit -m \"init commit\"\ngit remote add origin https://gitee.com/xxx/xxx.git # 添加远程仓库并设置别名为 origin\ngit push -u origin master # 推送到 origin master分支\n```\n\n拷贝库到本地\n\n```bash\ngit init\ngit clone https://gitee.com/xxx/xxx.git\n```\n\n远程仓库设置\n\n```bash\ngit remote -v # 查看所有远程仓库\ngit remote show [remote] # 显示某个远程仓库的信息\ngit remote add [shortname] [url] # 添加远程仓库并设置别名为 origin\ngit remote rm name  # 删除远程仓库\ngit remote rename old_name new_name  # 修改仓库名\n```\n\n### git 命令\n\n- mkdir filename 创建文件夹 Linux 命令\n- cd filename\n- git init 初始化存储库\n- git add 提交到暂存区\n  - git add . 添加所有文件\n  - git add document1.txt document2.txt\n  - git add \\*.txt 添加所有.txt 格式文件\n- git status\n- git commit -m \"commits\" || git commit 提交修改信息\n- git commit -a -m \"commits\" || git commit -am \"commits\" 创建空提交\n- git push\n- git ls-files 列出文件信息\n- git rm document1.txt 删除文件\n- git mv document1.txt document2.txt 移动文件\n- .gitignore 忽略指定文件(暂存区没该文件之前起作用)\n- git rm --cached document1.txt 移除暂存区文件\n- git diff --staged 查看暂存区信息\n- git log commits 历史\n- git restore\n- git restore --staged document1.txt 撤销 git add :smile: document1.txt\n\n\n---\n\n### git 配置\n\n- git config --global core.editor \"code --\n\n  wait\" 设置默认编辑器为 vscode\n\n- git config --global -e 使用 vscode 编辑全局配置文件\n\n- git version\n\n- git config --global user.name \"XXXX\"\n\n- git config --global user.email  \"XXXXXXXXXX\"\n\n- git config --list\n\n- ssh-keygen -t rsa  -C \"用户邮箱\" 配置git密钥 \n\n- ssh git@github.com 验证git是否授权成功\n\n- git config --global https.proxy 'http://127.0.0.1:8001'   \n\n- git config --global http.proxy 'http://127.0.0.1:8001'\n\n- git config --global socks.proxy \"127.0.0.1:1080\"\n\n```bash\ngit config --global user.email \"your email\"\ngit config --global user.name \"your name\"\nssh-keygen -t rsa -C \"githubemail\"\nssh -T git@github.com # 测试连接\nssh -T git@gitee.com\ngit config --list # 查看git配置\ngit config user.name # 查看用户名\ngit config user.email # 查看邮箱\n```\n\n配置环境变量\n\n在系统环境变量`path`中添加 E:\\Git\\bin E:\\Git\\cmd\n\n找到id_rsa.pub文件的公钥复制ssh公钥到GitHub\n\n---\n\n### git 初始化\n\n#### 新建仓库\n\n- git init\n- git add README.md\n- git commit -m \"first commit\"\n- git branch -M main\n- git remote add origin https://github.com/Faith-Hesper/fe.git\n- git push -u origin main\n\n#### 推送到仓库\n\n+ git remote add origin https://github.com/Faith-Hesper/Postgraduate.git\n+ git branch -M main\n+ git push -u origin main\n\ngit push 时出现`git config --global http.postBuffer 524288000`说明文件太大\n\n```bash\n$ git config --global http.postBuffer 524288000\n```\n\n### 拷贝库到本地\n\n```bash\ngit init\ngit clone https://gitee.com/xxx/xxx.git\n```\n\n### remote相关\n\n```bash\ngit remote -v # 查看所有远程仓库\ngit remote show [remote] # 显示 仓库详细信息\ngit remote rm name  # 删除远程仓库\ngit remote rename old_name new_name  # 修改仓库名\n```\n\n### 合并分支\n\n```bash\ngit checkout master # 切换分支\ngit pull origin master # 拉取最新代码\ngit merge dev # 把dev分支的代码合并到master上\ngit status # 查看状态\ngit push origin master # 提交代码\n```\n\n\n\n","source":"_posts/git技巧.md","raw":"---\ntitle: git技巧\ndate: 2021-09-09 08:39:09\ntags: git\ncategories: 工具\ndescription: git\n---\n\n## Git\n\n### git配置\n\n在git文件中\n\n```bash\ngit config --global user.email \"your email\"\ngit config --global user.name \"your name\"\n# 生成密钥\nssh-keygen -t rsa -C \"githubemail\"ssh -T git@github.com 测试连接github\ngit config --list 查看git配置\n```\n\n找到`C:\\Users\\win\\.ssh`中的id_rsa.pub文件，全部复制，然后将公钥，复制github、gitee里的ssh公钥中\n\n<img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627213117.png\" alt=\"sshgitee\" style=\"zoom:50%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627213235.png\" alt=\"sshgithub\" style=\"zoom:50%;\" />\n\n验证配置是否成功\n\n```bash\nssh -T git@github.com # 测试连接github\nssh -T git@gitee.com\ngit config --list 查看git配置\n```\n\n初始化并推送仓库\n\n```bash\ngit init\ngit add README.md\t# git add . 添加所有文件\ngit commit -m \"init commit\"\ngit remote add origin https://gitee.com/xxx/xxx.git # 添加远程仓库并设置别名为 origin\ngit push -u origin master # 推送到 origin master分支\n```\n\n拷贝库到本地\n\n```bash\ngit init\ngit clone https://gitee.com/xxx/xxx.git\n```\n\n远程仓库设置\n\n```bash\ngit remote -v # 查看所有远程仓库\ngit remote show [remote] # 显示某个远程仓库的信息\ngit remote add [shortname] [url] # 添加远程仓库并设置别名为 origin\ngit remote rm name  # 删除远程仓库\ngit remote rename old_name new_name  # 修改仓库名\n```\n\n### git 命令\n\n- mkdir filename 创建文件夹 Linux 命令\n- cd filename\n- git init 初始化存储库\n- git add 提交到暂存区\n  - git add . 添加所有文件\n  - git add document1.txt document2.txt\n  - git add \\*.txt 添加所有.txt 格式文件\n- git status\n- git commit -m \"commits\" || git commit 提交修改信息\n- git commit -a -m \"commits\" || git commit -am \"commits\" 创建空提交\n- git push\n- git ls-files 列出文件信息\n- git rm document1.txt 删除文件\n- git mv document1.txt document2.txt 移动文件\n- .gitignore 忽略指定文件(暂存区没该文件之前起作用)\n- git rm --cached document1.txt 移除暂存区文件\n- git diff --staged 查看暂存区信息\n- git log commits 历史\n- git restore\n- git restore --staged document1.txt 撤销 git add :smile: document1.txt\n\n\n---\n\n### git 配置\n\n- git config --global core.editor \"code --\n\n  wait\" 设置默认编辑器为 vscode\n\n- git config --global -e 使用 vscode 编辑全局配置文件\n\n- git version\n\n- git config --global user.name \"XXXX\"\n\n- git config --global user.email  \"XXXXXXXXXX\"\n\n- git config --list\n\n- ssh-keygen -t rsa  -C \"用户邮箱\" 配置git密钥 \n\n- ssh git@github.com 验证git是否授权成功\n\n- git config --global https.proxy 'http://127.0.0.1:8001'   \n\n- git config --global http.proxy 'http://127.0.0.1:8001'\n\n- git config --global socks.proxy \"127.0.0.1:1080\"\n\n```bash\ngit config --global user.email \"your email\"\ngit config --global user.name \"your name\"\nssh-keygen -t rsa -C \"githubemail\"\nssh -T git@github.com # 测试连接\nssh -T git@gitee.com\ngit config --list # 查看git配置\ngit config user.name # 查看用户名\ngit config user.email # 查看邮箱\n```\n\n配置环境变量\n\n在系统环境变量`path`中添加 E:\\Git\\bin E:\\Git\\cmd\n\n找到id_rsa.pub文件的公钥复制ssh公钥到GitHub\n\n---\n\n### git 初始化\n\n#### 新建仓库\n\n- git init\n- git add README.md\n- git commit -m \"first commit\"\n- git branch -M main\n- git remote add origin https://github.com/Faith-Hesper/fe.git\n- git push -u origin main\n\n#### 推送到仓库\n\n+ git remote add origin https://github.com/Faith-Hesper/Postgraduate.git\n+ git branch -M main\n+ git push -u origin main\n\ngit push 时出现`git config --global http.postBuffer 524288000`说明文件太大\n\n```bash\n$ git config --global http.postBuffer 524288000\n```\n\n### 拷贝库到本地\n\n```bash\ngit init\ngit clone https://gitee.com/xxx/xxx.git\n```\n\n### remote相关\n\n```bash\ngit remote -v # 查看所有远程仓库\ngit remote show [remote] # 显示 仓库详细信息\ngit remote rm name  # 删除远程仓库\ngit remote rename old_name new_name  # 修改仓库名\n```\n\n### 合并分支\n\n```bash\ngit checkout master # 切换分支\ngit pull origin master # 拉取最新代码\ngit merge dev # 把dev分支的代码合并到master上\ngit status # 查看状态\ngit push origin master # 提交代码\n```\n\n\n\n","slug":"git技巧","published":1,"updated":"2022-09-16T01:09:57.117Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2v0016jsvk7c4varn4","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><h3 id=\"git配置\"><a href=\"#git配置\" class=\"headerlink\" title=\"git配置\"></a>git配置</h3><p>在git文件中</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"your email\"</span>\n<span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"your name\"</span>\n<span class=\"token comment\"># 生成密钥</span>\nssh-keygen -t rsa -C <span class=\"token string\">\"githubemail\"</span><span class=\"token function\">ssh</span> -T git@github.com 测试连接github\n<span class=\"token function\">git</span> config --list 查看git配置</code></pre>\n<p>找到<code>C:\\Users\\win\\.ssh</code>中的id_rsa.pub文件，全部复制，然后将公钥，复制github、gitee里的ssh公钥中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627213117.png\" alt=\"sshgitee\" style=\"zoom:50%;\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627213235.png\" alt=\"sshgithub\" style=\"zoom:50%;\" /></p>\n<p>验证配置是否成功</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> -T git@github.com <span class=\"token comment\"># 测试连接github</span>\n<span class=\"token function\">ssh</span> -T git@gitee.com\n<span class=\"token function\">git</span> config --list 查看git配置</code></pre>\n<p>初始化并推送仓库</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> README.md\t<span class=\"token comment\"># git add . 添加所有文件</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"init commit\"</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin https://gitee.com/xxx/xxx.git <span class=\"token comment\"># 添加远程仓库并设置别名为 origin</span>\n<span class=\"token function\">git</span> push -u origin master <span class=\"token comment\"># 推送到 origin master分支</span></code></pre>\n<p>拷贝库到本地</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> clone https://gitee.com/xxx/xxx.git</code></pre>\n<p>远程仓库设置</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote -v <span class=\"token comment\"># 查看所有远程仓库</span>\n<span class=\"token function\">git</span> remote show <span class=\"token punctuation\">[</span>remote<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 显示某个远程仓库的信息</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">add</span> <span class=\"token punctuation\">[</span>shortname<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>url<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 添加远程仓库并设置别名为 origin</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">rm</span> name  <span class=\"token comment\"># 删除远程仓库</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">rename</span> old_name new_name  <span class=\"token comment\"># 修改仓库名</span></code></pre>\n<h3 id=\"git-命令\"><a href=\"#git-命令\" class=\"headerlink\" title=\"git 命令\"></a>git 命令</h3><ul>\n<li>mkdir filename 创建文件夹 Linux 命令</li>\n<li>cd filename</li>\n<li>git init 初始化存储库</li>\n<li>git add 提交到暂存区<ul>\n<li>git add . 添加所有文件</li>\n<li>git add document1.txt document2.txt</li>\n<li>git add *.txt 添加所有.txt 格式文件</li>\n</ul>\n</li>\n<li>git status</li>\n<li>git commit -m “commits” || git commit 提交修改信息</li>\n<li>git commit -a -m “commits” || git commit -am “commits” 创建空提交</li>\n<li>git push</li>\n<li>git ls-files 列出文件信息</li>\n<li>git rm document1.txt 删除文件</li>\n<li>git mv document1.txt document2.txt 移动文件</li>\n<li>.gitignore 忽略指定文件(暂存区没该文件之前起作用)</li>\n<li>git rm —cached document1.txt 移除暂存区文件</li>\n<li>git diff —staged 查看暂存区信息</li>\n<li>git log commits 历史</li>\n<li>git restore</li>\n<li>git restore —staged document1.txt 撤销 git add :smile: document1.txt</li>\n</ul>\n<hr>\n<h3 id=\"git-配置\"><a href=\"#git-配置\" class=\"headerlink\" title=\"git 配置\"></a>git 配置</h3><ul>\n<li><p>git config —global core.editor “code —</p>\n<p>wait” 设置默认编辑器为 vscode</p>\n</li>\n<li><p>git config —global -e 使用 vscode 编辑全局配置文件</p>\n</li>\n<li><p>git version</p>\n</li>\n<li><p>git config —global user.name “XXXX”</p>\n</li>\n<li><p>git config —global user.email  “XXXXXXXXXX”</p>\n</li>\n<li><p>git config —list</p>\n</li>\n<li><p>ssh-keygen -t rsa  -C “用户邮箱” 配置git密钥 </p>\n</li>\n<li><p>ssh git@github.com 验证git是否授权成功</p>\n</li>\n<li><p>git config —global https.proxy ‘<a href=\"http://127.0.0.1:8001\">http://127.0.0.1:8001</a>‘   </p>\n</li>\n<li><p>git config —global http.proxy ‘<a href=\"http://127.0.0.1:8001\">http://127.0.0.1:8001</a>‘</p>\n</li>\n<li><p>git config —global socks.proxy “127.0.0.1:1080”</p>\n</li>\n</ul>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"your email\"</span>\n<span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"your name\"</span>\nssh-keygen -t rsa -C <span class=\"token string\">\"githubemail\"</span>\n<span class=\"token function\">ssh</span> -T git@github.com <span class=\"token comment\"># 测试连接</span>\n<span class=\"token function\">ssh</span> -T git@gitee.com\n<span class=\"token function\">git</span> config --list <span class=\"token comment\"># 查看git配置</span>\n<span class=\"token function\">git</span> config user.name <span class=\"token comment\"># 查看用户名</span>\n<span class=\"token function\">git</span> config user.email <span class=\"token comment\"># 查看邮箱</span></code></pre>\n<p>配置环境变量</p>\n<p>在系统环境变量<code>path</code>中添加 E:\\Git\\bin E:\\Git\\cmd</p>\n<p>找到id_rsa.pub文件的公钥复制ssh公钥到GitHub</p>\n<hr>\n<h3 id=\"git-初始化\"><a href=\"#git-初始化\" class=\"headerlink\" title=\"git 初始化\"></a>git 初始化</h3><h4 id=\"新建仓库\"><a href=\"#新建仓库\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h4><ul>\n<li>git init</li>\n<li>git add README.md</li>\n<li>git commit -m “first commit”</li>\n<li>git branch -M main</li>\n<li>git remote add origin <a href=\"https://github.com/Faith-Hesper/fe.git\">https://github.com/Faith-Hesper/fe.git</a></li>\n<li>git push -u origin main</li>\n</ul>\n<h4 id=\"推送到仓库\"><a href=\"#推送到仓库\" class=\"headerlink\" title=\"推送到仓库\"></a>推送到仓库</h4><ul>\n<li>git remote add origin <a href=\"https://github.com/Faith-Hesper/Postgraduate.git\">https://github.com/Faith-Hesper/Postgraduate.git</a></li>\n<li>git branch -M main</li>\n<li>git push -u origin main</li>\n</ul>\n<p>git push 时出现<code>git config --global http.postBuffer 524288000</code>说明文件太大</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> config --global http.postBuffer <span class=\"token number\">524288000</span></code></pre>\n<h3 id=\"拷贝库到本地\"><a href=\"#拷贝库到本地\" class=\"headerlink\" title=\"拷贝库到本地\"></a>拷贝库到本地</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> clone https://gitee.com/xxx/xxx.git</code></pre>\n<h3 id=\"remote相关\"><a href=\"#remote相关\" class=\"headerlink\" title=\"remote相关\"></a>remote相关</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote -v <span class=\"token comment\"># 查看所有远程仓库</span>\n<span class=\"token function\">git</span> remote show <span class=\"token punctuation\">[</span>remote<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 显示 仓库详细信息</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">rm</span> name  <span class=\"token comment\"># 删除远程仓库</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">rename</span> old_name new_name  <span class=\"token comment\"># 修改仓库名</span></code></pre>\n<h3 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout master <span class=\"token comment\"># 切换分支</span>\n<span class=\"token function\">git</span> pull origin master <span class=\"token comment\"># 拉取最新代码</span>\n<span class=\"token function\">git</span> merge dev <span class=\"token comment\"># 把dev分支的代码合并到master上</span>\n<span class=\"token function\">git</span> status <span class=\"token comment\"># 查看状态</span>\n<span class=\"token function\">git</span> push origin master <span class=\"token comment\"># 提交代码</span></code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220124161839.webp","length":2493,"excerpt":"","more":"<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><h3 id=\"git配置\"><a href=\"#git配置\" class=\"headerlink\" title=\"git配置\"></a>git配置</h3><p>在git文件中</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"your email\"</span>\n<span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"your name\"</span>\n<span class=\"token comment\"># 生成密钥</span>\nssh-keygen -t rsa -C <span class=\"token string\">\"githubemail\"</span><span class=\"token function\">ssh</span> -T git@github.com 测试连接github\n<span class=\"token function\">git</span> config --list 查看git配置</code></pre>\n<p>找到<code>C:\\Users\\win\\.ssh</code>中的id_rsa.pub文件，全部复制，然后将公钥，复制github、gitee里的ssh公钥中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627213117.png\" alt=\"sshgitee\" style=\"zoom:50%;\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627213235.png\" alt=\"sshgithub\" style=\"zoom:50%;\" /></p>\n<p>验证配置是否成功</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> -T git@github.com <span class=\"token comment\"># 测试连接github</span>\n<span class=\"token function\">ssh</span> -T git@gitee.com\n<span class=\"token function\">git</span> config --list 查看git配置</code></pre>\n<p>初始化并推送仓库</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> README.md\t<span class=\"token comment\"># git add . 添加所有文件</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"init commit\"</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin https://gitee.com/xxx/xxx.git <span class=\"token comment\"># 添加远程仓库并设置别名为 origin</span>\n<span class=\"token function\">git</span> push -u origin master <span class=\"token comment\"># 推送到 origin master分支</span></code></pre>\n<p>拷贝库到本地</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> clone https://gitee.com/xxx/xxx.git</code></pre>\n<p>远程仓库设置</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote -v <span class=\"token comment\"># 查看所有远程仓库</span>\n<span class=\"token function\">git</span> remote show <span class=\"token punctuation\">[</span>remote<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 显示某个远程仓库的信息</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">add</span> <span class=\"token punctuation\">[</span>shortname<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>url<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 添加远程仓库并设置别名为 origin</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">rm</span> name  <span class=\"token comment\"># 删除远程仓库</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">rename</span> old_name new_name  <span class=\"token comment\"># 修改仓库名</span></code></pre>\n<h3 id=\"git-命令\"><a href=\"#git-命令\" class=\"headerlink\" title=\"git 命令\"></a>git 命令</h3><ul>\n<li>mkdir filename 创建文件夹 Linux 命令</li>\n<li>cd filename</li>\n<li>git init 初始化存储库</li>\n<li>git add 提交到暂存区<ul>\n<li>git add . 添加所有文件</li>\n<li>git add document1.txt document2.txt</li>\n<li>git add *.txt 添加所有.txt 格式文件</li>\n</ul>\n</li>\n<li>git status</li>\n<li>git commit -m “commits” || git commit 提交修改信息</li>\n<li>git commit -a -m “commits” || git commit -am “commits” 创建空提交</li>\n<li>git push</li>\n<li>git ls-files 列出文件信息</li>\n<li>git rm document1.txt 删除文件</li>\n<li>git mv document1.txt document2.txt 移动文件</li>\n<li>.gitignore 忽略指定文件(暂存区没该文件之前起作用)</li>\n<li>git rm —cached document1.txt 移除暂存区文件</li>\n<li>git diff —staged 查看暂存区信息</li>\n<li>git log commits 历史</li>\n<li>git restore</li>\n<li>git restore —staged document1.txt 撤销 git add :smile: document1.txt</li>\n</ul>\n<hr>\n<h3 id=\"git-配置\"><a href=\"#git-配置\" class=\"headerlink\" title=\"git 配置\"></a>git 配置</h3><ul>\n<li><p>git config —global core.editor “code —</p>\n<p>wait” 设置默认编辑器为 vscode</p>\n</li>\n<li><p>git config —global -e 使用 vscode 编辑全局配置文件</p>\n</li>\n<li><p>git version</p>\n</li>\n<li><p>git config —global user.name “XXXX”</p>\n</li>\n<li><p>git config —global user.email  “XXXXXXXXXX”</p>\n</li>\n<li><p>git config —list</p>\n</li>\n<li><p>ssh-keygen -t rsa  -C “用户邮箱” 配置git密钥 </p>\n</li>\n<li><p>ssh git@github.com 验证git是否授权成功</p>\n</li>\n<li><p>git config —global https.proxy ‘<a href=\"http://127.0.0.1:8001\">http://127.0.0.1:8001</a>‘   </p>\n</li>\n<li><p>git config —global http.proxy ‘<a href=\"http://127.0.0.1:8001\">http://127.0.0.1:8001</a>‘</p>\n</li>\n<li><p>git config —global socks.proxy “127.0.0.1:1080”</p>\n</li>\n</ul>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"your email\"</span>\n<span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"your name\"</span>\nssh-keygen -t rsa -C <span class=\"token string\">\"githubemail\"</span>\n<span class=\"token function\">ssh</span> -T git@github.com <span class=\"token comment\"># 测试连接</span>\n<span class=\"token function\">ssh</span> -T git@gitee.com\n<span class=\"token function\">git</span> config --list <span class=\"token comment\"># 查看git配置</span>\n<span class=\"token function\">git</span> config user.name <span class=\"token comment\"># 查看用户名</span>\n<span class=\"token function\">git</span> config user.email <span class=\"token comment\"># 查看邮箱</span></code></pre>\n<p>配置环境变量</p>\n<p>在系统环境变量<code>path</code>中添加 E:\\Git\\bin E:\\Git\\cmd</p>\n<p>找到id_rsa.pub文件的公钥复制ssh公钥到GitHub</p>\n<hr>\n<h3 id=\"git-初始化\"><a href=\"#git-初始化\" class=\"headerlink\" title=\"git 初始化\"></a>git 初始化</h3><h4 id=\"新建仓库\"><a href=\"#新建仓库\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h4><ul>\n<li>git init</li>\n<li>git add README.md</li>\n<li>git commit -m “first commit”</li>\n<li>git branch -M main</li>\n<li>git remote add origin <a href=\"https://github.com/Faith-Hesper/fe.git\">https://github.com/Faith-Hesper/fe.git</a></li>\n<li>git push -u origin main</li>\n</ul>\n<h4 id=\"推送到仓库\"><a href=\"#推送到仓库\" class=\"headerlink\" title=\"推送到仓库\"></a>推送到仓库</h4><ul>\n<li>git remote add origin <a href=\"https://github.com/Faith-Hesper/Postgraduate.git\">https://github.com/Faith-Hesper/Postgraduate.git</a></li>\n<li>git branch -M main</li>\n<li>git push -u origin main</li>\n</ul>\n<p>git push 时出现<code>git config --global http.postBuffer 524288000</code>说明文件太大</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> config --global http.postBuffer <span class=\"token number\">524288000</span></code></pre>\n<h3 id=\"拷贝库到本地\"><a href=\"#拷贝库到本地\" class=\"headerlink\" title=\"拷贝库到本地\"></a>拷贝库到本地</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> clone https://gitee.com/xxx/xxx.git</code></pre>\n<h3 id=\"remote相关\"><a href=\"#remote相关\" class=\"headerlink\" title=\"remote相关\"></a>remote相关</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote -v <span class=\"token comment\"># 查看所有远程仓库</span>\n<span class=\"token function\">git</span> remote show <span class=\"token punctuation\">[</span>remote<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 显示 仓库详细信息</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">rm</span> name  <span class=\"token comment\"># 删除远程仓库</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">rename</span> old_name new_name  <span class=\"token comment\"># 修改仓库名</span></code></pre>\n<h3 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout master <span class=\"token comment\"># 切换分支</span>\n<span class=\"token function\">git</span> pull origin master <span class=\"token comment\"># 拉取最新代码</span>\n<span class=\"token function\">git</span> merge dev <span class=\"token comment\"># 把dev分支的代码合并到master上</span>\n<span class=\"token function\">git</span> status <span class=\"token comment\"># 查看状态</span>\n<span class=\"token function\">git</span> push origin master <span class=\"token comment\"># 提交代码</span></code></pre>\n"},{"title":"Faith Hesper","top":1,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can:smile: find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=450 height=86 src=\"//music.163.com/outchain/player?type=2&id=1857288529&auto=1&height=66\"></iframe>\n\n<iframe src=\"//player.bilibili.com/player.html?aid=503717099&bvid=BV19g411g7jj&cid=357082727&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n[Hexo官方文档](https://hexo.io/zh-cn/docs/plugins)\n\n```bash\n# 本地预览\nhexo s\n\n# 使用 Hexo 生成静态文件快速而且简单\nhexo g\n# Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。\nhexo g --watch\n# 清空 hexo g 生成的内容，内容在 root/public \nhexo clean\n\n# 将本地生成 url 链接推送到百度，让百度爬取其中的内容进行索引\nhexo d\n\n# 根据 标题名称  在root/source/_post 生成 markdown 文件\nhexo new 标题名称\nhexo new post 标题名称\nhexo new page newpage 新建页面\n\n# 新建文章 (仅自己可见)\nhexo new draft newdraft\n\n# 预览文章\nhexo server --draft\n\n# 发表文章\nhexo publish draft newdraft\n# 完成后部署\nhexo g --d\nhexo d --g\n```\n1.NexT使用文档\n\n[NexT](http://theme-next.iissnan.com/getting-started.html)\n\n更换主题：\n\n```bash\n~/blog/themes $ git clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n\n更新主题：\n\n```bash\n$ cd themes/next\n$ git pull\n```\n\n再在*站点*配置文件中修改成如下即可：\n\n```bash\n# 文件位置：~/blog/_config.yml\n## Themes: https://hexo.io/themes/\ntheme: next\n```\n\n如何使用emoji:question:\n\n安装\n\n---\n\n```shell\nnpm un hexo-renderer-marked --save\nnpm i hexo-renderer-markdown-it --save\nnpm install markdown-it-emoji --save\n```\n\n配置\n\n---\n\n```yaml\n## markdown 渲染引擎配置，默认是hexo-renderer-marked，这个插件渲染速度更快，且有新特性\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n  plugins:\n    - markdown-it-footnote\n    - markdown-it-sup\n    - markdown-it-sub\n    - markdown-it-abbr\n    - markdown-it-emoji\n  anchors:\n    level: 2\n    collisionSuffix: 'v'\n    permalink: false\n    permalinkClass: header-anchor\n    permalinkSymbol: ¶\n```\n\n [JavaScript 3D library](https://github.com/mrdoob/three.js) for [NexT](https://github.com/theme-next)\n\nCDN配置\n\n```yaml\nvendors:\n  ...\n  three: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1/three.min.js\n  three_waves: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@latest/three-waves.min.js\n  canvas_lines: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@latest/canvas_lines.min.js\n  canvas_sphere: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@latest/canvas_sphere.min.js\n```\n\n头像\n\navatar\n\nhttps://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\n\n新建文件夹\n\n```bash\nmkdir _data\n```\n\n修改背景透明\n\n全局颜色：hesper\\themes\\next\\source\\css\\_variables\\base.styl\n\n颜色设置：hesper\\themes\\next\\source\\css\\_colors.styl\n\n<details>\n  <summary>使用方式</summary>\n  > Primary\n\n  <div class=\"success\">\n\n  > Success\n\n  </div>\n\n  <div class=\"warning\">\n\n  > Warning\n\n  </div>\n\n  <div class=\"danger\">\n\n  > Danger\n\n  </div>\n\n  <div class=\"info\">\n\n  > Info\n\n  </div>\n\n  <div class=\"gray\">\n\n  > Gray\n\n  </div>\n\n  <div class=\"yellow\">\n\n  > Yellow\n\n  </div>\n</details>\n\n\n\n```html\n> Primary\n\n<div class=\"success\">\n\n> Success\n\n</div>\n\n<div class=\"warning\">\n\n> Warning\n\n</div>\n\n<div class=\"danger\">\n\n> Danger\n\n</div>\n\n<div class=\"info\">\n\n> Info\n\n</div>\n\n<div class=\"gray\">\n\n> Gray\n\n</div>\n\n<div class=\"yellow\">\n\n> Yellow\n\n</div>\n```\n\nbutterfly\n\n| 配置             | 解释                                                         |\n| ---------------- | ------------------------------------------------------------ |\n| index_img        | 主页的 top_img                                               |\n| default_top_img  | 默认的 top_img，当页面的 top_img 沒有配置时，会显示default_top_img |\n| archive_img      | 文档页面的 top_img                                           |\n| tag_img          | tag 子页面 的 默认 top_img                                   |\n| tag_per_img      | tag 子页面的 top_img，可配置每个 tag 的 top_img              |\n| category_img     | category 子页面 的 默认 top_img                              |\n| category_per_img | category 子页面的 top_img，可配置每个 category 的 top_img    |\n\n\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Faith Hesper\ntop: 1\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can:smile: find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=450 height=86 src=\"//music.163.com/outchain/player?type=2&id=1857288529&auto=1&height=66\"></iframe>\n\n<iframe src=\"//player.bilibili.com/player.html?aid=503717099&bvid=BV19g411g7jj&cid=357082727&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n[Hexo官方文档](https://hexo.io/zh-cn/docs/plugins)\n\n```bash\n# 本地预览\nhexo s\n\n# 使用 Hexo 生成静态文件快速而且简单\nhexo g\n# Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。\nhexo g --watch\n# 清空 hexo g 生成的内容，内容在 root/public \nhexo clean\n\n# 将本地生成 url 链接推送到百度，让百度爬取其中的内容进行索引\nhexo d\n\n# 根据 标题名称  在root/source/_post 生成 markdown 文件\nhexo new 标题名称\nhexo new post 标题名称\nhexo new page newpage 新建页面\n\n# 新建文章 (仅自己可见)\nhexo new draft newdraft\n\n# 预览文章\nhexo server --draft\n\n# 发表文章\nhexo publish draft newdraft\n# 完成后部署\nhexo g --d\nhexo d --g\n```\n1.NexT使用文档\n\n[NexT](http://theme-next.iissnan.com/getting-started.html)\n\n更换主题：\n\n```bash\n~/blog/themes $ git clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n\n更新主题：\n\n```bash\n$ cd themes/next\n$ git pull\n```\n\n再在*站点*配置文件中修改成如下即可：\n\n```bash\n# 文件位置：~/blog/_config.yml\n## Themes: https://hexo.io/themes/\ntheme: next\n```\n\n如何使用emoji:question:\n\n安装\n\n---\n\n```shell\nnpm un hexo-renderer-marked --save\nnpm i hexo-renderer-markdown-it --save\nnpm install markdown-it-emoji --save\n```\n\n配置\n\n---\n\n```yaml\n## markdown 渲染引擎配置，默认是hexo-renderer-marked，这个插件渲染速度更快，且有新特性\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n  plugins:\n    - markdown-it-footnote\n    - markdown-it-sup\n    - markdown-it-sub\n    - markdown-it-abbr\n    - markdown-it-emoji\n  anchors:\n    level: 2\n    collisionSuffix: 'v'\n    permalink: false\n    permalinkClass: header-anchor\n    permalinkSymbol: ¶\n```\n\n [JavaScript 3D library](https://github.com/mrdoob/three.js) for [NexT](https://github.com/theme-next)\n\nCDN配置\n\n```yaml\nvendors:\n  ...\n  three: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1/three.min.js\n  three_waves: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@latest/three-waves.min.js\n  canvas_lines: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@latest/canvas_lines.min.js\n  canvas_sphere: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@latest/canvas_sphere.min.js\n```\n\n头像\n\navatar\n\nhttps://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\n\n新建文件夹\n\n```bash\nmkdir _data\n```\n\n修改背景透明\n\n全局颜色：hesper\\themes\\next\\source\\css\\_variables\\base.styl\n\n颜色设置：hesper\\themes\\next\\source\\css\\_colors.styl\n\n<details>\n  <summary>使用方式</summary>\n  > Primary\n\n  <div class=\"success\">\n\n  > Success\n\n  </div>\n\n  <div class=\"warning\">\n\n  > Warning\n\n  </div>\n\n  <div class=\"danger\">\n\n  > Danger\n\n  </div>\n\n  <div class=\"info\">\n\n  > Info\n\n  </div>\n\n  <div class=\"gray\">\n\n  > Gray\n\n  </div>\n\n  <div class=\"yellow\">\n\n  > Yellow\n\n  </div>\n</details>\n\n\n\n```html\n> Primary\n\n<div class=\"success\">\n\n> Success\n\n</div>\n\n<div class=\"warning\">\n\n> Warning\n\n</div>\n\n<div class=\"danger\">\n\n> Danger\n\n</div>\n\n<div class=\"info\">\n\n> Info\n\n</div>\n\n<div class=\"gray\">\n\n> Gray\n\n</div>\n\n<div class=\"yellow\">\n\n> Yellow\n\n</div>\n```\n\nbutterfly\n\n| 配置             | 解释                                                         |\n| ---------------- | ------------------------------------------------------------ |\n| index_img        | 主页的 top_img                                               |\n| default_top_img  | 默认的 top_img，当页面的 top_img 沒有配置时，会显示default_top_img |\n| archive_img      | 文档页面的 top_img                                           |\n| tag_img          | tag 子页面 的 默认 top_img                                   |\n| tag_per_img      | tag 子页面的 top_img，可配置每个 tag 的 top_img              |\n| category_img     | category 子页面 的 默认 top_img                              |\n| category_per_img | category 子页面的 top_img，可配置每个 category 的 top_img    |\n\n\n\n","slug":"hello-world","published":1,"date":"2021-07-04T11:24:35.074Z","updated":"2022-01-12T08:22:19.919Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2w0019jsvk1vtz99pr","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can:smile: find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<span id=\"more\"></span>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=450 height=86 src=\"//music.163.com/outchain/player?type=2&id=1857288529&auto=1&height=66\"></iframe>\n\n<p><iframe src=\"//player.bilibili.com/player.html?aid=503717099&bvid=BV19g411g7jj&cid=357082727&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe><br><a href=\"https://hexo.io/zh-cn/docs/plugins\">Hexo官方文档</a></p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 本地预览</span>\nhexo s\n\n<span class=\"token comment\"># 使用 Hexo 生成静态文件快速而且简单</span>\nhexo g\n<span class=\"token comment\"># Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</span>\nhexo g --watch\n<span class=\"token comment\"># 清空 hexo g 生成的内容，内容在 root/public </span>\nhexo clean\n\n<span class=\"token comment\"># 将本地生成 url 链接推送到百度，让百度爬取其中的内容进行索引</span>\nhexo d\n\n<span class=\"token comment\"># 根据 标题名称  在root/source/_post 生成 markdown 文件</span>\nhexo new 标题名称\nhexo new post 标题名称\nhexo new page newpage 新建页面\n\n<span class=\"token comment\"># 新建文章 (仅自己可见)</span>\nhexo new draft newdraft\n\n<span class=\"token comment\"># 预览文章</span>\nhexo server --draft\n\n<span class=\"token comment\"># 发表文章</span>\nhexo publish draft newdraft\n<span class=\"token comment\"># 完成后部署</span>\nhexo g --d\nhexo d --g</code></pre>\n<p>1.NexT使用文档</p>\n<p><a href=\"http://theme-next.iissnan.com/getting-started.html\">NexT</a></p>\n<p>更换主题：</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">~/blog/themes $ <span class=\"token function\">git</span> clone https://github.com/theme-next/hexo-theme-next themes/next</code></pre>\n<p>更新主题：</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> themes/next\n$ <span class=\"token function\">git</span> pull</code></pre>\n<p>再在<em>站点</em>配置文件中修改成如下即可：</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 文件位置：~/blog/_config.yml</span>\n<span class=\"token comment\">## Themes: https://hexo.io/themes/</span>\ntheme: next</code></pre>\n<p>如何使用emoji:question:</p>\n<p>安装</p>\n<hr>\n<pre class=\"language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> un hexo-renderer-marked --save\n<span class=\"token function\">npm</span> i hexo-renderer-markdown-it --save\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> markdown-it-emoji --save</code></pre>\n<p>配置</p>\n<hr>\n<pre class=\"language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\">## markdown 渲染引擎配置，默认是hexo-renderer-marked，这个插件渲染速度更快，且有新特性</span>\n<span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">render</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">xhtmlOut</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">breaks</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">linkify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">typographer</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">quotes</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'“”‘’'</span>\n  <span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>footnote\n    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>sup\n    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>sub\n    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>abbr\n    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>emoji\n  <span class=\"token key atrule\">anchors</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n    <span class=\"token key atrule\">collisionSuffix</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'v'</span>\n    <span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">permalinkClass</span><span class=\"token punctuation\">:</span> header<span class=\"token punctuation\">-</span>anchor\n    <span class=\"token key atrule\">permalinkSymbol</span><span class=\"token punctuation\">:</span> ¶</code></pre>\n<p> <a href=\"https://github.com/mrdoob/three.js\">JavaScript 3D library</a> for <a href=\"https://github.com/theme-next\">NexT</a></p>\n<p>CDN配置</p>\n<pre class=\"language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">vendors</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">three</span><span class=\"token punctuation\">:</span> //cdn.jsdelivr.net/gh/theme<span class=\"token punctuation\">-</span>next/theme<span class=\"token punctuation\">-</span>next<span class=\"token punctuation\">-</span>three@1/three.min.js\n  <span class=\"token key atrule\">three_waves</span><span class=\"token punctuation\">:</span> //cdn.jsdelivr.net/gh/theme<span class=\"token punctuation\">-</span>next/theme<span class=\"token punctuation\">-</span>next<span class=\"token punctuation\">-</span>three@latest/three<span class=\"token punctuation\">-</span>waves.min.js\n  <span class=\"token key atrule\">canvas_lines</span><span class=\"token punctuation\">:</span> //cdn.jsdelivr.net/gh/theme<span class=\"token punctuation\">-</span>next/theme<span class=\"token punctuation\">-</span>next<span class=\"token punctuation\">-</span>three@latest/canvas_lines.min.js\n  <span class=\"token key atrule\">canvas_sphere</span><span class=\"token punctuation\">:</span> //cdn.jsdelivr.net/gh/theme<span class=\"token punctuation\">-</span>next/theme<span class=\"token punctuation\">-</span>next<span class=\"token punctuation\">-</span>three@latest/canvas_sphere.min.js</code></pre>\n<p>头像</p>\n<p>avatar</p>\n<p><a href=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\">https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png</a></p>\n<p>新建文件夹</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> _data</code></pre>\n<p>修改背景透明</p>\n<p>全局颜色：hesper\\themes\\next\\source\\css_variables\\base.styl</p>\n<p>颜色设置：hesper\\themes\\next\\source\\css_colors.styl</p>\n<details>\n  <summary>使用方式</summary>\n  > Primary\n\n  <div class=\"success\">\n\n  > Success\n\n  </div>\n\n  <div class=\"warning\">\n\n  > Warning\n\n  </div>\n\n  <div class=\"danger\">\n\n  > Danger\n\n  </div>\n\n  <div class=\"info\">\n\n  > Info\n\n  </div>\n\n  <div class=\"gray\">\n\n  > Gray\n\n  </div>\n\n  <div class=\"yellow\">\n\n  > Yellow\n\n  </div>\n</details>\n\n\n\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">> Primary\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>success<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n> Success\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>warning<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n> Warning\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>danger<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n> Danger\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n> Info\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gray<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n> Gray\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yellow<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n> Yellow\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>butterfly</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>配置</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index_img</td>\n<td>主页的 top_img</td>\n</tr>\n<tr>\n<td>default_top_img</td>\n<td>默认的 top_img，当页面的 top_img 沒有配置时，会显示default_top_img</td>\n</tr>\n<tr>\n<td>archive_img</td>\n<td>文档页面的 top_img</td>\n</tr>\n<tr>\n<td>tag_img</td>\n<td>tag 子页面 的 默认 top_img</td>\n</tr>\n<tr>\n<td>tag_per_img</td>\n<td>tag 子页面的 top_img，可配置每个 tag 的 top_img</td>\n</tr>\n<tr>\n<td>category_img</td>\n<td>category 子页面 的 默认 top_img</td>\n</tr>\n<tr>\n<td>category_per_img</td>\n<td>category 子页面的 top_img，可配置每个 category 的 top_img</td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160654.webp","length":2347,"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can:smile: find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>","more":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=450 height=86 src=\"//music.163.com/outchain/player?type=2&id=1857288529&auto=1&height=66\"></iframe>\n\n<p><iframe src=\"//player.bilibili.com/player.html?aid=503717099&bvid=BV19g411g7jj&cid=357082727&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe><br><a href=\"https://hexo.io/zh-cn/docs/plugins\">Hexo官方文档</a></p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 本地预览</span>\nhexo s\n\n<span class=\"token comment\"># 使用 Hexo 生成静态文件快速而且简单</span>\nhexo g\n<span class=\"token comment\"># Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</span>\nhexo g --watch\n<span class=\"token comment\"># 清空 hexo g 生成的内容，内容在 root/public </span>\nhexo clean\n\n<span class=\"token comment\"># 将本地生成 url 链接推送到百度，让百度爬取其中的内容进行索引</span>\nhexo d\n\n<span class=\"token comment\"># 根据 标题名称  在root/source/_post 生成 markdown 文件</span>\nhexo new 标题名称\nhexo new post 标题名称\nhexo new page newpage 新建页面\n\n<span class=\"token comment\"># 新建文章 (仅自己可见)</span>\nhexo new draft newdraft\n\n<span class=\"token comment\"># 预览文章</span>\nhexo server --draft\n\n<span class=\"token comment\"># 发表文章</span>\nhexo publish draft newdraft\n<span class=\"token comment\"># 完成后部署</span>\nhexo g --d\nhexo d --g</code></pre>\n<p>1.NexT使用文档</p>\n<p><a href=\"http://theme-next.iissnan.com/getting-started.html\">NexT</a></p>\n<p>更换主题：</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">~/blog/themes $ <span class=\"token function\">git</span> clone https://github.com/theme-next/hexo-theme-next themes/next</code></pre>\n<p>更新主题：</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> themes/next\n$ <span class=\"token function\">git</span> pull</code></pre>\n<p>再在<em>站点</em>配置文件中修改成如下即可：</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 文件位置：~/blog/_config.yml</span>\n<span class=\"token comment\">## Themes: https://hexo.io/themes/</span>\ntheme: next</code></pre>\n<p>如何使用emoji:question:</p>\n<p>安装</p>\n<hr>\n<pre class=\"language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> un hexo-renderer-marked --save\n<span class=\"token function\">npm</span> i hexo-renderer-markdown-it --save\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> markdown-it-emoji --save</code></pre>\n<p>配置</p>\n<hr>\n<pre class=\"language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\">## markdown 渲染引擎配置，默认是hexo-renderer-marked，这个插件渲染速度更快，且有新特性</span>\n<span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">render</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">xhtmlOut</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">breaks</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">linkify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">typographer</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">quotes</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'“”‘’'</span>\n  <span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>footnote\n    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>sup\n    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>sub\n    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>abbr\n    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>emoji\n  <span class=\"token key atrule\">anchors</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n    <span class=\"token key atrule\">collisionSuffix</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'v'</span>\n    <span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">permalinkClass</span><span class=\"token punctuation\">:</span> header<span class=\"token punctuation\">-</span>anchor\n    <span class=\"token key atrule\">permalinkSymbol</span><span class=\"token punctuation\">:</span> ¶</code></pre>\n<p> <a href=\"https://github.com/mrdoob/three.js\">JavaScript 3D library</a> for <a href=\"https://github.com/theme-next\">NexT</a></p>\n<p>CDN配置</p>\n<pre class=\"language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">vendors</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">three</span><span class=\"token punctuation\">:</span> //cdn.jsdelivr.net/gh/theme<span class=\"token punctuation\">-</span>next/theme<span class=\"token punctuation\">-</span>next<span class=\"token punctuation\">-</span>three@1/three.min.js\n  <span class=\"token key atrule\">three_waves</span><span class=\"token punctuation\">:</span> //cdn.jsdelivr.net/gh/theme<span class=\"token punctuation\">-</span>next/theme<span class=\"token punctuation\">-</span>next<span class=\"token punctuation\">-</span>three@latest/three<span class=\"token punctuation\">-</span>waves.min.js\n  <span class=\"token key atrule\">canvas_lines</span><span class=\"token punctuation\">:</span> //cdn.jsdelivr.net/gh/theme<span class=\"token punctuation\">-</span>next/theme<span class=\"token punctuation\">-</span>next<span class=\"token punctuation\">-</span>three@latest/canvas_lines.min.js\n  <span class=\"token key atrule\">canvas_sphere</span><span class=\"token punctuation\">:</span> //cdn.jsdelivr.net/gh/theme<span class=\"token punctuation\">-</span>next/theme<span class=\"token punctuation\">-</span>next<span class=\"token punctuation\">-</span>three@latest/canvas_sphere.min.js</code></pre>\n<p>头像</p>\n<p>avatar</p>\n<p><a href=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\">https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png</a></p>\n<p>新建文件夹</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> _data</code></pre>\n<p>修改背景透明</p>\n<p>全局颜色：hesper\\themes\\next\\source\\css_variables\\base.styl</p>\n<p>颜色设置：hesper\\themes\\next\\source\\css_colors.styl</p>\n<details>\n  <summary>使用方式</summary>\n  > Primary\n\n  <div class=\"success\">\n\n  > Success\n\n  </div>\n\n  <div class=\"warning\">\n\n  > Warning\n\n  </div>\n\n  <div class=\"danger\">\n\n  > Danger\n\n  </div>\n\n  <div class=\"info\">\n\n  > Info\n\n  </div>\n\n  <div class=\"gray\">\n\n  > Gray\n\n  </div>\n\n  <div class=\"yellow\">\n\n  > Yellow\n\n  </div>\n</details>\n\n\n\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">> Primary\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>success<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n> Success\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>warning<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n> Warning\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>danger<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n> Danger\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n> Info\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gray<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n> Gray\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yellow<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n> Yellow\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>butterfly</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>配置</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index_img</td>\n<td>主页的 top_img</td>\n</tr>\n<tr>\n<td>default_top_img</td>\n<td>默认的 top_img，当页面的 top_img 沒有配置时，会显示default_top_img</td>\n</tr>\n<tr>\n<td>archive_img</td>\n<td>文档页面的 top_img</td>\n</tr>\n<tr>\n<td>tag_img</td>\n<td>tag 子页面 的 默认 top_img</td>\n</tr>\n<tr>\n<td>tag_per_img</td>\n<td>tag 子页面的 top_img，可配置每个 tag 的 top_img</td>\n</tr>\n<tr>\n<td>category_img</td>\n<td>category 子页面 的 默认 top_img</td>\n</tr>\n<tr>\n<td>category_per_img</td>\n<td>category 子页面的 top_img，可配置每个 category 的 top_img</td>\n</tr>\n</tbody>\n</table>\n</div>"},{"title":"Html","mathjax":true,"date":"2022-08-31T07:57:22.000Z","description":null,"_content":"\n## src和href的区别\n\nsrc和href都是**用来引用外部的资源**，它们的区别如下：\n\n+ **src：** 表示对资源的引用，它指向的内容会嵌入到当前标签所在的位置。src会将其指向的资源下载并应⽤到⽂档内，如请求js脚本。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该**资源加载**、**编译**、**执⾏完毕**，所以⼀般js脚本会放在页面底部。\n+ **href：** 表示超文本引用，它指向一些网络资源，建立和当前元素或本文档的链接关系。当浏览器识别到它他指向的⽂件时，就会并⾏下载资源，不会停⽌对当前⽂档的处理。 常用在a、link等标签上\n\n## script标签中defer和async的区别\n\n如果没有defer或async属性，浏览器会**立即加载并执行**相应的脚本。它不会等待后续加载的文档元素，读取到就会开始加载和执行，这样就阻塞了后续文档的加载\n\n**defer 和 async属性都是去异步加载外部的JS脚本文件，它们都不会阻塞页面的解析**，其区别如下：\n\n+ **执行顺序：** 多个带async属性的标签，不能保证加载的顺序；多个带defer属性的标签，按照加载顺序执行\n\n+ **脚本是否并行执行：\\**async属性，表示\\**后续文档的加载和执行与js脚本的加载和执行是并行进行的**，即异步执行；defer属性，加载后续文档的过程和js脚本的加载(此时仅加载不执行)是并行进行的(异步)，js脚本需要等到文档所有**元素解析完成之后才执行**，DOMContentLoaded事件触发执行之前\n\n\n## img的srcset属性的作用\n\n响应式页面中根据屏幕密度设置不同的照片时就会用到这个属性\n\n```html\n<img src=\"image-128.png\" srcset=\"image-256.png 2x\" />\n```\n\n使用上面的代码，就能实现在屏幕密度为1x的情况下加载image-128.png, 屏幕密度为2x时加载image-256.png。\n\n按照上面的实现，不同的屏幕密度都要设置图片地址，目前的屏幕密度有1x,2x,3x,4x四种，如果每一个图片都设置4张图片，加载就会很慢。所以就有了新的srcset标准。代码如下：\n\n```html\n<img src=\"image-128.png\"\n     srcset=\"image-128.png 128w, image-256.png 256w, image-512.png 512w\"\n     sizes=\"(max-width: 360px) 340px, 128px\" />\n```\n\n## 行内元素、块级元素\n\n行内元素有：`a` `b` `span` `img` `input` `select` `strong`\n\n块级元素：`div` `ul` `ol` `li` `dl` `dt` `dd` `h1` `p`\n\n## BFC\n\n[BFC](https://juejin.cn/post/6950082193632788493)\n\n`BFC` 全称：`Block Formatting Context`， 名为 **块级格式化上下文**\n\n`W3C`官方解释为：`BFC`它决定了元素如何对其内容进行定位，以及与其它元素的关系和相互作用，当涉及到可视化布局时，`Block Formatting Context`提供了一个环境，`HTML`在这个环境中按照一定的规则进行布局\n\n触发条件：\n\n+ 根元素或其它包含它的元素\n+ 浮动 `float: left/right/inherit`\n+ 绝对定位元素 `position: absolute/fixed`\n+ `display: inline-block`、 `table-cell` `table-caption`、`flex/inline-flex`\n+ 溢出元素 `overflow: hidden/scroll/auto/inherit`\n\n布局规则：\n\n+ 内部的Box会在垂直方向，一个接一个地放置。\n\n+ Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠。\n\n+ 每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。\n\n+ BFC的区域不会与float box重叠。\n\n+ BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。\n\n+ 计算BFC的高度时，浮动元素也参与计算\n\n### SVG\n\n> SVG：SVG全称可缩放矢量图形Scalable Vector Graphics）是基于可扩展标记语言**XML**描述的2D图形的语言，SVG基于XML就意味着SVG DOM中的每个元素都是可用的，可以为某个元素附加Javascript事件处理器。在 SVG 中，每个被绘制的图形均被视为对象。如果 SVG 对象的属性发生变化，那么浏览器能够自动重现图形\n\n特点：\n\n+ 不依赖分辨率\n+ 支持时间处理器\n+ 最适合有大型渲染区域的应用程序(比如谷歌地图)\n+ 复杂度高会减慢渲染速度(任何过度使用DOM的应用都不快)\n+ 不适合游戏应用\n\n### Canvas\n\n> Canvas：Canvas是画布，通过Javascript来绘制2D图形，是逐像素进行渲染的。其位置发生改变，就会重新进行绘制\n\n特点：\n\n+ 依赖分辨率\n+ 不支持事件处理器\n+ 弱的文本渲染能力\n+ 能够以.png或.jpg格式保存结果图像\n+ 最适合图像密集型的游戏，其中的许多对象会频繁重绘\n","source":"_posts/html.md","raw":"---\ntitle: html\nmathjax: true\ndate: 2022-08-31 15:57:22\ntags: [前端,HTML]\ncategories:\ndescription:\n---\n\n## src和href的区别\n\nsrc和href都是**用来引用外部的资源**，它们的区别如下：\n\n+ **src：** 表示对资源的引用，它指向的内容会嵌入到当前标签所在的位置。src会将其指向的资源下载并应⽤到⽂档内，如请求js脚本。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该**资源加载**、**编译**、**执⾏完毕**，所以⼀般js脚本会放在页面底部。\n+ **href：** 表示超文本引用，它指向一些网络资源，建立和当前元素或本文档的链接关系。当浏览器识别到它他指向的⽂件时，就会并⾏下载资源，不会停⽌对当前⽂档的处理。 常用在a、link等标签上\n\n## script标签中defer和async的区别\n\n如果没有defer或async属性，浏览器会**立即加载并执行**相应的脚本。它不会等待后续加载的文档元素，读取到就会开始加载和执行，这样就阻塞了后续文档的加载\n\n**defer 和 async属性都是去异步加载外部的JS脚本文件，它们都不会阻塞页面的解析**，其区别如下：\n\n+ **执行顺序：** 多个带async属性的标签，不能保证加载的顺序；多个带defer属性的标签，按照加载顺序执行\n\n+ **脚本是否并行执行：\\**async属性，表示\\**后续文档的加载和执行与js脚本的加载和执行是并行进行的**，即异步执行；defer属性，加载后续文档的过程和js脚本的加载(此时仅加载不执行)是并行进行的(异步)，js脚本需要等到文档所有**元素解析完成之后才执行**，DOMContentLoaded事件触发执行之前\n\n\n## img的srcset属性的作用\n\n响应式页面中根据屏幕密度设置不同的照片时就会用到这个属性\n\n```html\n<img src=\"image-128.png\" srcset=\"image-256.png 2x\" />\n```\n\n使用上面的代码，就能实现在屏幕密度为1x的情况下加载image-128.png, 屏幕密度为2x时加载image-256.png。\n\n按照上面的实现，不同的屏幕密度都要设置图片地址，目前的屏幕密度有1x,2x,3x,4x四种，如果每一个图片都设置4张图片，加载就会很慢。所以就有了新的srcset标准。代码如下：\n\n```html\n<img src=\"image-128.png\"\n     srcset=\"image-128.png 128w, image-256.png 256w, image-512.png 512w\"\n     sizes=\"(max-width: 360px) 340px, 128px\" />\n```\n\n## 行内元素、块级元素\n\n行内元素有：`a` `b` `span` `img` `input` `select` `strong`\n\n块级元素：`div` `ul` `ol` `li` `dl` `dt` `dd` `h1` `p`\n\n## BFC\n\n[BFC](https://juejin.cn/post/6950082193632788493)\n\n`BFC` 全称：`Block Formatting Context`， 名为 **块级格式化上下文**\n\n`W3C`官方解释为：`BFC`它决定了元素如何对其内容进行定位，以及与其它元素的关系和相互作用，当涉及到可视化布局时，`Block Formatting Context`提供了一个环境，`HTML`在这个环境中按照一定的规则进行布局\n\n触发条件：\n\n+ 根元素或其它包含它的元素\n+ 浮动 `float: left/right/inherit`\n+ 绝对定位元素 `position: absolute/fixed`\n+ `display: inline-block`、 `table-cell` `table-caption`、`flex/inline-flex`\n+ 溢出元素 `overflow: hidden/scroll/auto/inherit`\n\n布局规则：\n\n+ 内部的Box会在垂直方向，一个接一个地放置。\n\n+ Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠。\n\n+ 每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。\n\n+ BFC的区域不会与float box重叠。\n\n+ BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。\n\n+ 计算BFC的高度时，浮动元素也参与计算\n\n### SVG\n\n> SVG：SVG全称可缩放矢量图形Scalable Vector Graphics）是基于可扩展标记语言**XML**描述的2D图形的语言，SVG基于XML就意味着SVG DOM中的每个元素都是可用的，可以为某个元素附加Javascript事件处理器。在 SVG 中，每个被绘制的图形均被视为对象。如果 SVG 对象的属性发生变化，那么浏览器能够自动重现图形\n\n特点：\n\n+ 不依赖分辨率\n+ 支持时间处理器\n+ 最适合有大型渲染区域的应用程序(比如谷歌地图)\n+ 复杂度高会减慢渲染速度(任何过度使用DOM的应用都不快)\n+ 不适合游戏应用\n\n### Canvas\n\n> Canvas：Canvas是画布，通过Javascript来绘制2D图形，是逐像素进行渲染的。其位置发生改变，就会重新进行绘制\n\n特点：\n\n+ 依赖分辨率\n+ 不支持事件处理器\n+ 弱的文本渲染能力\n+ 能够以.png或.jpg格式保存结果图像\n+ 最适合图像密集型的游戏，其中的许多对象会频繁重绘\n","slug":"html","published":1,"updated":"2022-10-03T11:30:32.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt2x001bjsvk0gacalkh","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"src和href的区别\"><a href=\"#src和href的区别\" class=\"headerlink\" title=\"src和href的区别\"></a>src和href的区别</h2><p>src和href都是<strong>用来引用外部的资源</strong>，它们的区别如下：</p>\n<ul>\n<li><strong>src：</strong> 表示对资源的引用，它指向的内容会嵌入到当前标签所在的位置。src会将其指向的资源下载并应⽤到⽂档内，如请求js脚本。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该<strong>资源加载</strong>、<strong>编译</strong>、<strong>执⾏完毕</strong>，所以⼀般js脚本会放在页面底部。</li>\n<li><strong>href：</strong> 表示超文本引用，它指向一些网络资源，建立和当前元素或本文档的链接关系。当浏览器识别到它他指向的⽂件时，就会并⾏下载资源，不会停⽌对当前⽂档的处理。 常用在a、link等标签上</li>\n</ul>\n<h2 id=\"script标签中defer和async的区别\"><a href=\"#script标签中defer和async的区别\" class=\"headerlink\" title=\"script标签中defer和async的区别\"></a>script标签中defer和async的区别</h2><p>如果没有defer或async属性，浏览器会<strong>立即加载并执行</strong>相应的脚本。它不会等待后续加载的文档元素，读取到就会开始加载和执行，这样就阻塞了后续文档的加载</p>\n<p><strong>defer 和 async属性都是去异步加载外部的JS脚本文件，它们都不会阻塞页面的解析</strong>，其区别如下：</p>\n<ul>\n<li><p><strong>执行顺序：</strong> 多个带async属性的标签，不能保证加载的顺序；多个带defer属性的标签，按照加载顺序执行</p>\n</li>\n<li><p><strong>脚本是否并行执行：\\</strong>async属性，表示*<em>后续文档的加载和执行与js脚本的加载和执行是并行进行的<strong>，即异步执行；defer属性，加载后续文档的过程和js脚本的加载(此时仅加载不执行)是并行进行的(异步)，js脚本需要等到文档所有</strong>元素解析完成之后才执行*</em>，DOMContentLoaded事件触发执行之前</p>\n</li>\n</ul>\n<h2 id=\"img的srcset属性的作用\"><a href=\"#img的srcset属性的作用\" class=\"headerlink\" title=\"img的srcset属性的作用\"></a>img的srcset属性的作用</h2><p>响应式页面中根据屏幕密度设置不同的照片时就会用到这个属性</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image-128.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image-256.png 2x<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre>\n<p>使用上面的代码，就能实现在屏幕密度为1x的情况下加载image-128.png, 屏幕密度为2x时加载image-256.png。</p>\n<p>按照上面的实现，不同的屏幕密度都要设置图片地址，目前的屏幕密度有1x,2x,3x,4x四种，如果每一个图片都设置4张图片，加载就会很慢。所以就有了新的srcset标准。代码如下：</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image-128.png<span class=\"token punctuation\">\"</span></span>\n     <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image-128.png 128w, image-256.png 256w, image-512.png 512w<span class=\"token punctuation\">\"</span></span>\n     <span class=\"token attr-name\">sizes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(max-width: 360px) 340px, 128px<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre>\n<h2 id=\"行内元素、块级元素\"><a href=\"#行内元素、块级元素\" class=\"headerlink\" title=\"行内元素、块级元素\"></a>行内元素、块级元素</h2><p>行内元素有：<code>a</code> <code>b</code> <code>span</code> <code>img</code> <code>input</code> <code>select</code> <code>strong</code></p>\n<p>块级元素：<code>div</code> <code>ul</code> <code>ol</code> <code>li</code> <code>dl</code> <code>dt</code> <code>dd</code> <code>h1</code> <code>p</code></p>\n<h2 id=\"BFC\"><a href=\"#BFC\" class=\"headerlink\" title=\"BFC\"></a>BFC</h2><p><a href=\"https://juejin.cn/post/6950082193632788493\">BFC</a></p>\n<p><code>BFC</code> 全称：<code>Block Formatting Context</code>， 名为 <strong>块级格式化上下文</strong></p>\n<p><code>W3C</code>官方解释为：<code>BFC</code>它决定了元素如何对其内容进行定位，以及与其它元素的关系和相互作用，当涉及到可视化布局时，<code>Block Formatting Context</code>提供了一个环境，<code>HTML</code>在这个环境中按照一定的规则进行布局</p>\n<p>触发条件：</p>\n<ul>\n<li>根元素或其它包含它的元素</li>\n<li>浮动 <code>float: left/right/inherit</code></li>\n<li>绝对定位元素 <code>position: absolute/fixed</code></li>\n<li><code>display: inline-block</code>、 <code>table-cell</code> <code>table-caption</code>、<code>flex/inline-flex</code></li>\n<li>溢出元素 <code>overflow: hidden/scroll/auto/inherit</code></li>\n</ul>\n<p>布局规则：</p>\n<ul>\n<li><p>内部的Box会在垂直方向，一个接一个地放置。</p>\n</li>\n<li><p>Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠。</p>\n</li>\n<li><p>每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。</p>\n</li>\n<li><p>BFC的区域不会与float box重叠。</p>\n</li>\n<li><p>BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</p>\n</li>\n<li><p>计算BFC的高度时，浮动元素也参与计算</p>\n</li>\n</ul>\n<h3 id=\"SVG\"><a href=\"#SVG\" class=\"headerlink\" title=\"SVG\"></a>SVG</h3><blockquote>\n<p>SVG：SVG全称可缩放矢量图形Scalable Vector Graphics）是基于可扩展标记语言<strong>XML</strong>描述的2D图形的语言，SVG基于XML就意味着SVG DOM中的每个元素都是可用的，可以为某个元素附加Javascript事件处理器。在 SVG 中，每个被绘制的图形均被视为对象。如果 SVG 对象的属性发生变化，那么浏览器能够自动重现图形</p>\n</blockquote>\n<p>特点：</p>\n<ul>\n<li>不依赖分辨率</li>\n<li>支持时间处理器</li>\n<li>最适合有大型渲染区域的应用程序(比如谷歌地图)</li>\n<li>复杂度高会减慢渲染速度(任何过度使用DOM的应用都不快)</li>\n<li>不适合游戏应用</li>\n</ul>\n<h3 id=\"Canvas\"><a href=\"#Canvas\" class=\"headerlink\" title=\"Canvas\"></a>Canvas</h3><blockquote>\n<p>Canvas：Canvas是画布，通过Javascript来绘制2D图形，是逐像素进行渲染的。其位置发生改变，就会重新进行绘制</p>\n</blockquote>\n<p>特点：</p>\n<ul>\n<li>依赖分辨率</li>\n<li>不支持事件处理器</li>\n<li>弱的文本渲染能力</li>\n<li>能够以.png或.jpg格式保存结果图像</li>\n<li>最适合图像密集型的游戏，其中的许多对象会频繁重绘</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220124161839.webp","length":1968,"excerpt":"","more":"<h2 id=\"src和href的区别\"><a href=\"#src和href的区别\" class=\"headerlink\" title=\"src和href的区别\"></a>src和href的区别</h2><p>src和href都是<strong>用来引用外部的资源</strong>，它们的区别如下：</p>\n<ul>\n<li><strong>src：</strong> 表示对资源的引用，它指向的内容会嵌入到当前标签所在的位置。src会将其指向的资源下载并应⽤到⽂档内，如请求js脚本。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该<strong>资源加载</strong>、<strong>编译</strong>、<strong>执⾏完毕</strong>，所以⼀般js脚本会放在页面底部。</li>\n<li><strong>href：</strong> 表示超文本引用，它指向一些网络资源，建立和当前元素或本文档的链接关系。当浏览器识别到它他指向的⽂件时，就会并⾏下载资源，不会停⽌对当前⽂档的处理。 常用在a、link等标签上</li>\n</ul>\n<h2 id=\"script标签中defer和async的区别\"><a href=\"#script标签中defer和async的区别\" class=\"headerlink\" title=\"script标签中defer和async的区别\"></a>script标签中defer和async的区别</h2><p>如果没有defer或async属性，浏览器会<strong>立即加载并执行</strong>相应的脚本。它不会等待后续加载的文档元素，读取到就会开始加载和执行，这样就阻塞了后续文档的加载</p>\n<p><strong>defer 和 async属性都是去异步加载外部的JS脚本文件，它们都不会阻塞页面的解析</strong>，其区别如下：</p>\n<ul>\n<li><p><strong>执行顺序：</strong> 多个带async属性的标签，不能保证加载的顺序；多个带defer属性的标签，按照加载顺序执行</p>\n</li>\n<li><p><strong>脚本是否并行执行：\\</strong>async属性，表示*<em>后续文档的加载和执行与js脚本的加载和执行是并行进行的<strong>，即异步执行；defer属性，加载后续文档的过程和js脚本的加载(此时仅加载不执行)是并行进行的(异步)，js脚本需要等到文档所有</strong>元素解析完成之后才执行*</em>，DOMContentLoaded事件触发执行之前</p>\n</li>\n</ul>\n<h2 id=\"img的srcset属性的作用\"><a href=\"#img的srcset属性的作用\" class=\"headerlink\" title=\"img的srcset属性的作用\"></a>img的srcset属性的作用</h2><p>响应式页面中根据屏幕密度设置不同的照片时就会用到这个属性</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image-128.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image-256.png 2x<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre>\n<p>使用上面的代码，就能实现在屏幕密度为1x的情况下加载image-128.png, 屏幕密度为2x时加载image-256.png。</p>\n<p>按照上面的实现，不同的屏幕密度都要设置图片地址，目前的屏幕密度有1x,2x,3x,4x四种，如果每一个图片都设置4张图片，加载就会很慢。所以就有了新的srcset标准。代码如下：</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image-128.png<span class=\"token punctuation\">\"</span></span>\n     <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image-128.png 128w, image-256.png 256w, image-512.png 512w<span class=\"token punctuation\">\"</span></span>\n     <span class=\"token attr-name\">sizes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(max-width: 360px) 340px, 128px<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre>\n<h2 id=\"行内元素、块级元素\"><a href=\"#行内元素、块级元素\" class=\"headerlink\" title=\"行内元素、块级元素\"></a>行内元素、块级元素</h2><p>行内元素有：<code>a</code> <code>b</code> <code>span</code> <code>img</code> <code>input</code> <code>select</code> <code>strong</code></p>\n<p>块级元素：<code>div</code> <code>ul</code> <code>ol</code> <code>li</code> <code>dl</code> <code>dt</code> <code>dd</code> <code>h1</code> <code>p</code></p>\n<h2 id=\"BFC\"><a href=\"#BFC\" class=\"headerlink\" title=\"BFC\"></a>BFC</h2><p><a href=\"https://juejin.cn/post/6950082193632788493\">BFC</a></p>\n<p><code>BFC</code> 全称：<code>Block Formatting Context</code>， 名为 <strong>块级格式化上下文</strong></p>\n<p><code>W3C</code>官方解释为：<code>BFC</code>它决定了元素如何对其内容进行定位，以及与其它元素的关系和相互作用，当涉及到可视化布局时，<code>Block Formatting Context</code>提供了一个环境，<code>HTML</code>在这个环境中按照一定的规则进行布局</p>\n<p>触发条件：</p>\n<ul>\n<li>根元素或其它包含它的元素</li>\n<li>浮动 <code>float: left/right/inherit</code></li>\n<li>绝对定位元素 <code>position: absolute/fixed</code></li>\n<li><code>display: inline-block</code>、 <code>table-cell</code> <code>table-caption</code>、<code>flex/inline-flex</code></li>\n<li>溢出元素 <code>overflow: hidden/scroll/auto/inherit</code></li>\n</ul>\n<p>布局规则：</p>\n<ul>\n<li><p>内部的Box会在垂直方向，一个接一个地放置。</p>\n</li>\n<li><p>Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠。</p>\n</li>\n<li><p>每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。</p>\n</li>\n<li><p>BFC的区域不会与float box重叠。</p>\n</li>\n<li><p>BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</p>\n</li>\n<li><p>计算BFC的高度时，浮动元素也参与计算</p>\n</li>\n</ul>\n<h3 id=\"SVG\"><a href=\"#SVG\" class=\"headerlink\" title=\"SVG\"></a>SVG</h3><blockquote>\n<p>SVG：SVG全称可缩放矢量图形Scalable Vector Graphics）是基于可扩展标记语言<strong>XML</strong>描述的2D图形的语言，SVG基于XML就意味着SVG DOM中的每个元素都是可用的，可以为某个元素附加Javascript事件处理器。在 SVG 中，每个被绘制的图形均被视为对象。如果 SVG 对象的属性发生变化，那么浏览器能够自动重现图形</p>\n</blockquote>\n<p>特点：</p>\n<ul>\n<li>不依赖分辨率</li>\n<li>支持时间处理器</li>\n<li>最适合有大型渲染区域的应用程序(比如谷歌地图)</li>\n<li>复杂度高会减慢渲染速度(任何过度使用DOM的应用都不快)</li>\n<li>不适合游戏应用</li>\n</ul>\n<h3 id=\"Canvas\"><a href=\"#Canvas\" class=\"headerlink\" title=\"Canvas\"></a>Canvas</h3><blockquote>\n<p>Canvas：Canvas是画布，通过Javascript来绘制2D图形，是逐像素进行渲染的。其位置发生改变，就会重新进行绘制</p>\n</blockquote>\n<p>特点：</p>\n<ul>\n<li>依赖分辨率</li>\n<li>不支持事件处理器</li>\n<li>弱的文本渲染能力</li>\n<li>能够以.png或.jpg格式保存结果图像</li>\n<li>最适合图像密集型的游戏，其中的许多对象会频繁重绘</li>\n</ul>\n"},{"title":"Linux","mathjax":true,"date":"2022-07-03T06:57:56.000Z","description":null,"_content":"\n[TOC]\n\n# linux环境部署\n\n## Redis\n\n### 依赖安装 \n\nRedis由C语言编写，需要gcc编译器，先排查是否安装gcc\n\n```bash\ngcc --version\n```\n\n出现如下所示类似文字说明系统已有gcc\n![gcc](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204755.PNG)\n无则安装\n\n```bash\nyum install gcc\n```\n\n### 安装Redis\n\n1. 选择redis安装文件夹\n\n```bash\ncd /home/redis\n```\n\n2. 下载Redis压缩包\n\n```bash\nwget http://download.redis.io/releases/redis-6.0.3.tar.gz\n```\n\n经过漫长的等待后下载完成\n![](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204746.PNG)\n\n3. 解压重命名\n\n```bash\n# 解压\ntar -vxzf redis-6.0.3.tar.gz\n# 重命名\nmv redis-6.0.3 redis\n```\n\n4. 编译安装\n\n```bash\ncd redis\n# 编译安装\nmake\n# make install PREFIX=/home/redis 指定安装目录\n# 在 /usr/local/bin 中生成一个安装目录\ncd src  && make install\n```\n\n出现如下错误表示gcc版本过低\n![](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204739.PNG)\n升级gcc版本\n\n```bash\nyum -y install centos-release-scl\nyum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils\n#临时修改gcc版本\n# scl enable devtoolset-9 bash\n#永久修改gcc版本\necho \"source /opt/rh/devtoolset-9/enable\" >>/etc/profile\n```\n\n然后重新执行make命令\n![make](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204733.PNG)\n\n### 配置Redis\n\n1. 复制配置文件\n\n```bash\ncp /home/redis/redis.conf /usr/local/redis/bin/redis.conf\n```\n\n2. 调整配置文件\n   1. 以后台方式启动\n      修改daemonize no 为daemonize yes\n   2. 更改默认端口号\n      port默认为 6379\n   3. 设置访问权限\n      bind ip 服务器ip\n        bind 127.0.0.1 服务器ip\n   4. 关闭保护模式\n      protected-mode 设置为 yes\n   5. 配置访问密码\n      requirepass 设置为默认 foobared\n\n```bash\nvim /usr/local/redis/bin/redis.conf\n# i 插入\n# :wq 保存退出\n```\n\n![protected-mode](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204150.PNG)\n![daemonize](./src/assets/daemonize.PNG)\n![requirepass](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204318.PNG)\n![bind](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204334.PNG)\n\n3. 启动 redis\n\n```bash\n# 切换到redis.conf目录\ncd /usr/local/redis/bin\n./redis-server ./redis.conf\n```\n\n4. 查看redis是否启动\n\n```bash\n# \nredis-cli\nps -ef|grep redis\n```\n\n5. 注册服务\n\n```bash\n[Unit]\nDescription=redis-server\nAfter=network.target\n \n[Service]\nType=forking\nExecStart=/usr/local/redis/bin/redis-server /usr/local/redis/bin/redis.conf\nPrivateTmp=true\n \n[Install]\nWantedBy=multi-user.target\n```\n\n6. 开机启动\n\n```bash\nsystemctl daemon-reload\nsystemctl enable redis.service\n```\n\n## 部署tomcat\n\n### 安装jdk\n\n[官网jdk下载地址](https://www.oracle.com/java/technologies/downloads/#java8)\n查看服务器版本信息\n\n```bash\nuname -a\n```\n\n![uname](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204548.PNG)\n\n1. 下载压缩包\n   要根据系统选择对应版本压缩包，这里下载`x64 Compressed Archive`版本\n   ![jdk](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204552.PNG)\n2. 用ftp或者宝塔等工具将压缩包上传至服务器\n```sh\ncd /home/jdk\n```\n3. 解压\n\n```bash\ntar -zxvf jdk-18.0.1.1.tar.gz\n```\n\n4. 重命名文件夹\n\n```bash\nmv /home/jdk/jdk-18.0.1.1/* /home/jdk/\n```\n\n### jdk配置\n\n编辑环境变量配置文件\n\n```bash\nvim /etc/profile\n```\n\n配置jdk的环境变量\n\n```bash\n# 按i开始编辑\nexport JAVA_HOME=\"/home/jdk\"\nexport PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nexport JRE_HOME=$JAVA_HOME/jre\nexport CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib/tools.jar:$CLASSPATH\n```\n\n配置好后输入 `:wq`保存退出\n\n```bash\n# 配置立即生效\nsource /etc/profile\n```\n\n检查jdk是否安装成功\n\n```bash\njava -version\n```\n\n![java-version](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204614.PNG)\n如果出现 -bash java not found，可能是jdk版本问题或者环境变量没有配对\n\n### 安装tomcat\n\n[tomcat9官网下载地址](https://tomcat.apache.org/download-90.cgi)\n\n1. 下载tomcat\n   ![tomcat](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204618.PNG)\n2. 上传至服务器\n```sh\ncd /home/tomcat\n```\n3. 解压\n\n```bash\ntar -zxvf apache-tomcat-9.0.64.tar.gz\n```\n\n4. 重命名文件夹\n\n```bash\nmv /home/tomcat/apache-tomcat-9.0.64/* /home/tomcat/\n```\n5. 环境变量\n```bash\nvim /etc/profile\nexport CATALINA_BASE=\"/home/tomcat\"\nexport CATALINA_HOME=\"/home/tomcat\"\nsource /etc/profile\n```\n\n6. 启动tomcat\n\n```bash\ncd /home/tomcat/bin\n./startup.sh\n```\n\n出现无权限，是文件夹权限设置问题\n\n```bash\nchmod 777 startup.sh\n```\n\n### 项目配置\n\n1. 上传项目到webapps文件夹 (ftp)\n2. 更改默认主页\n   删除tomcat webapps里的默认文件，在conf 目录中 `vim server.xml`，修改tomcat端口号为8090、关闭`shutdown`端口号为809，在<Host>标签内添加如下代码，修改完后重启tomcat\n\n```xml\n<Context path=\"\" docBase=\"jxfzjc\" reloadable=\"true\" debug=\"0\" />\n```\n\n或者在context.xml文件中修改配置，在改配置文件下的修改不用重启tomcat\n\n3. 开放端口号\n\n```sh\nfirewall-cmd --zone=public --remove-port=8090/tcp --permanent\n```\n\n4. redis配置\n   在项目的web-inf文件夹里的classes文件中找到`redis.properties`文件修改里面的参数\n   ns-onemap-manager database为 12 ns-onemap database为 11 landwork-appserver database为 13\n\n```properties\n#redis\nredis.host=127.0.0.1\nredis.port=6379\n# redis配置的密码\nredis.pass=foobared\n#0~15总共16个数据库\nredis.database=11\nredis.timeout=3000\n```\n\n5. 重启tomcat\n\n```sh\ncd /home/tomcat/bin\n./shutdown.sh\n./startup.sh\n```\n\n### 防火墙常用命令\n\n```bash\n# 查看firewall服务状态\nsystemctl status firewalld\n\n# 开启、重启、关闭 firewall.service服务\n# 开启\nservice firewalld start\n\n# 重启\nservice firewalld restart\n\n# 关闭\nservice firewalld stop\n\n# 查看防火墙规则\nfirewall-cmd --list-all    # 查看全部信息\nfirewall-cmd --list-ports  # 查看端口信息\n\n# 开启端口\nfirewall-cmd --zone=public --add-port=80/tcp --permanent    # 开启防火墙端口80\nfirewall-cmd --zone=public --remove-port=8080/tcp --permanent  #  关闭防火墙端口8080 \nsystemctl restart firewalld.service    # 重启防火墙命令\n\n命令含义：\n--zone               # 作用域\n--add-port=80/tcp    # 添加端口，格式为：端口号/通讯协议\n--permanent          # 永久生效，没有此参数重启后失效\n```\n\n## 常用命令\n\n### 文件管理\n\n1. 显示目录信息\n\n```bash\nls # 显示所有文件及目录\nls -a # 显示所有文件及目录(包括隐藏文件)\nll # 输出文件的长格式(包含文件读写权限等信息)\n```\n\n2. 创建目录文件\n\n```bash\nmkdir dir # 创建一个 dir 文件夹\nmkdir -m 700 dir # 创建文件夹并设置权限为 700\n```\n\n3. 复制文件或目录\n\n```bash\ncp file1.cfg file2.cfg # 复制文件 file1 并定义新文件名为 file2\ncp -r doc1 doc2 # 复制目录\ncp -a file1.cfg file2.cfg # 复制文件时保留原有权限及用户归属信息\ncp -f ks.cfg /etc # 将文件复制到/etc目录,并覆盖已有文件，不进行询问\n```\n\n4. 移动或重命名\n\n```bash\nmv file1.txt /home/office # 移动文件\nmv doc1/ /home/doc2/ # 移动目录\nmv file1.txt file2.txt # 重命名文件\nmv doc1/ doc2/ # 重命名目录\n```\n\n5. 删除文件或目录\n\n```bash\nrm file.txt # 删除文件 (默认会进行二次确认)\nrm -f file.txt # 强制删除文件\nrm -rf doc # 强制删除目录及其子文件或目录  !!!牢底坐穿命令\nrm -f *.txt # 删除以.txt为后缀的所有文件 (正则)\n```\n\n6. 显示当前目录路径\n\n```bash\npwd\n```\n\n### 文档编辑\n\n1. 查看文件\n\n```bash\ncat file.txt # 查看文件内容\ncat -n file.txt # 查看文件并显示行号\ncat > file.txt << EOF # 持续写入文件，直到碰到EOF符后结束并保存 \n```\n\n2. 输出字符串或变量值\n\n```bash\necho string # 在终端显示 string 类似于 cy语言的 print\necho $PATH # 输出环境变量中的path值\n```\n\n3. 文本搜索\n\n```bash\ngrep root /etc/passwd # 搜索passwd文件中石油保护 root 关键字的内容\ngrep ^root /etc/passwd # 搜索以root开头的内容 (正则)\n```\n\n4. 查看文件尾部内容\n\n```bash\ntail file.txt # 查看文件尾部的后10行内容\ntail -n 5 file.txt # 查看后5行内容\n```\n\n文件权限\nr: 读 4\nw: 写 2\nx: 执行 1\n-：没有任何权限 0\nLinux分为三种用户，分别是 拥有者(owner) 用户组(group) 其他用户(other) \n\n```bash\nchmod 777 file.txt # 所有用户都有读写执行权限\nll # 查看文件的权限设置\n# ps 查看进程相 \n# ps -ef 显示所有进程信息\n# grep 文本搜索\n# 查找所有与 Java 相关的进程\nps -ef|grep java\nnetstat -nalp|grep 8090\nlsof -i:8091\nnetstat -tln | grep 8090\n```\n","source":"_posts/linux.md","raw":"---\ntitle: linux\nmathjax: true\ndate: 2022-07-03 14:57:56\ntags: linux\ncategories:\ndescription:\n---\n\n[TOC]\n\n# linux环境部署\n\n## Redis\n\n### 依赖安装 \n\nRedis由C语言编写，需要gcc编译器，先排查是否安装gcc\n\n```bash\ngcc --version\n```\n\n出现如下所示类似文字说明系统已有gcc\n![gcc](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204755.PNG)\n无则安装\n\n```bash\nyum install gcc\n```\n\n### 安装Redis\n\n1. 选择redis安装文件夹\n\n```bash\ncd /home/redis\n```\n\n2. 下载Redis压缩包\n\n```bash\nwget http://download.redis.io/releases/redis-6.0.3.tar.gz\n```\n\n经过漫长的等待后下载完成\n![](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204746.PNG)\n\n3. 解压重命名\n\n```bash\n# 解压\ntar -vxzf redis-6.0.3.tar.gz\n# 重命名\nmv redis-6.0.3 redis\n```\n\n4. 编译安装\n\n```bash\ncd redis\n# 编译安装\nmake\n# make install PREFIX=/home/redis 指定安装目录\n# 在 /usr/local/bin 中生成一个安装目录\ncd src  && make install\n```\n\n出现如下错误表示gcc版本过低\n![](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204739.PNG)\n升级gcc版本\n\n```bash\nyum -y install centos-release-scl\nyum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils\n#临时修改gcc版本\n# scl enable devtoolset-9 bash\n#永久修改gcc版本\necho \"source /opt/rh/devtoolset-9/enable\" >>/etc/profile\n```\n\n然后重新执行make命令\n![make](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204733.PNG)\n\n### 配置Redis\n\n1. 复制配置文件\n\n```bash\ncp /home/redis/redis.conf /usr/local/redis/bin/redis.conf\n```\n\n2. 调整配置文件\n   1. 以后台方式启动\n      修改daemonize no 为daemonize yes\n   2. 更改默认端口号\n      port默认为 6379\n   3. 设置访问权限\n      bind ip 服务器ip\n        bind 127.0.0.1 服务器ip\n   4. 关闭保护模式\n      protected-mode 设置为 yes\n   5. 配置访问密码\n      requirepass 设置为默认 foobared\n\n```bash\nvim /usr/local/redis/bin/redis.conf\n# i 插入\n# :wq 保存退出\n```\n\n![protected-mode](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204150.PNG)\n![daemonize](./src/assets/daemonize.PNG)\n![requirepass](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204318.PNG)\n![bind](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204334.PNG)\n\n3. 启动 redis\n\n```bash\n# 切换到redis.conf目录\ncd /usr/local/redis/bin\n./redis-server ./redis.conf\n```\n\n4. 查看redis是否启动\n\n```bash\n# \nredis-cli\nps -ef|grep redis\n```\n\n5. 注册服务\n\n```bash\n[Unit]\nDescription=redis-server\nAfter=network.target\n \n[Service]\nType=forking\nExecStart=/usr/local/redis/bin/redis-server /usr/local/redis/bin/redis.conf\nPrivateTmp=true\n \n[Install]\nWantedBy=multi-user.target\n```\n\n6. 开机启动\n\n```bash\nsystemctl daemon-reload\nsystemctl enable redis.service\n```\n\n## 部署tomcat\n\n### 安装jdk\n\n[官网jdk下载地址](https://www.oracle.com/java/technologies/downloads/#java8)\n查看服务器版本信息\n\n```bash\nuname -a\n```\n\n![uname](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204548.PNG)\n\n1. 下载压缩包\n   要根据系统选择对应版本压缩包，这里下载`x64 Compressed Archive`版本\n   ![jdk](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204552.PNG)\n2. 用ftp或者宝塔等工具将压缩包上传至服务器\n```sh\ncd /home/jdk\n```\n3. 解压\n\n```bash\ntar -zxvf jdk-18.0.1.1.tar.gz\n```\n\n4. 重命名文件夹\n\n```bash\nmv /home/jdk/jdk-18.0.1.1/* /home/jdk/\n```\n\n### jdk配置\n\n编辑环境变量配置文件\n\n```bash\nvim /etc/profile\n```\n\n配置jdk的环境变量\n\n```bash\n# 按i开始编辑\nexport JAVA_HOME=\"/home/jdk\"\nexport PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nexport JRE_HOME=$JAVA_HOME/jre\nexport CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib/tools.jar:$CLASSPATH\n```\n\n配置好后输入 `:wq`保存退出\n\n```bash\n# 配置立即生效\nsource /etc/profile\n```\n\n检查jdk是否安装成功\n\n```bash\njava -version\n```\n\n![java-version](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204614.PNG)\n如果出现 -bash java not found，可能是jdk版本问题或者环境变量没有配对\n\n### 安装tomcat\n\n[tomcat9官网下载地址](https://tomcat.apache.org/download-90.cgi)\n\n1. 下载tomcat\n   ![tomcat](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204618.PNG)\n2. 上传至服务器\n```sh\ncd /home/tomcat\n```\n3. 解压\n\n```bash\ntar -zxvf apache-tomcat-9.0.64.tar.gz\n```\n\n4. 重命名文件夹\n\n```bash\nmv /home/tomcat/apache-tomcat-9.0.64/* /home/tomcat/\n```\n5. 环境变量\n```bash\nvim /etc/profile\nexport CATALINA_BASE=\"/home/tomcat\"\nexport CATALINA_HOME=\"/home/tomcat\"\nsource /etc/profile\n```\n\n6. 启动tomcat\n\n```bash\ncd /home/tomcat/bin\n./startup.sh\n```\n\n出现无权限，是文件夹权限设置问题\n\n```bash\nchmod 777 startup.sh\n```\n\n### 项目配置\n\n1. 上传项目到webapps文件夹 (ftp)\n2. 更改默认主页\n   删除tomcat webapps里的默认文件，在conf 目录中 `vim server.xml`，修改tomcat端口号为8090、关闭`shutdown`端口号为809，在<Host>标签内添加如下代码，修改完后重启tomcat\n\n```xml\n<Context path=\"\" docBase=\"jxfzjc\" reloadable=\"true\" debug=\"0\" />\n```\n\n或者在context.xml文件中修改配置，在改配置文件下的修改不用重启tomcat\n\n3. 开放端口号\n\n```sh\nfirewall-cmd --zone=public --remove-port=8090/tcp --permanent\n```\n\n4. redis配置\n   在项目的web-inf文件夹里的classes文件中找到`redis.properties`文件修改里面的参数\n   ns-onemap-manager database为 12 ns-onemap database为 11 landwork-appserver database为 13\n\n```properties\n#redis\nredis.host=127.0.0.1\nredis.port=6379\n# redis配置的密码\nredis.pass=foobared\n#0~15总共16个数据库\nredis.database=11\nredis.timeout=3000\n```\n\n5. 重启tomcat\n\n```sh\ncd /home/tomcat/bin\n./shutdown.sh\n./startup.sh\n```\n\n### 防火墙常用命令\n\n```bash\n# 查看firewall服务状态\nsystemctl status firewalld\n\n# 开启、重启、关闭 firewall.service服务\n# 开启\nservice firewalld start\n\n# 重启\nservice firewalld restart\n\n# 关闭\nservice firewalld stop\n\n# 查看防火墙规则\nfirewall-cmd --list-all    # 查看全部信息\nfirewall-cmd --list-ports  # 查看端口信息\n\n# 开启端口\nfirewall-cmd --zone=public --add-port=80/tcp --permanent    # 开启防火墙端口80\nfirewall-cmd --zone=public --remove-port=8080/tcp --permanent  #  关闭防火墙端口8080 \nsystemctl restart firewalld.service    # 重启防火墙命令\n\n命令含义：\n--zone               # 作用域\n--add-port=80/tcp    # 添加端口，格式为：端口号/通讯协议\n--permanent          # 永久生效，没有此参数重启后失效\n```\n\n## 常用命令\n\n### 文件管理\n\n1. 显示目录信息\n\n```bash\nls # 显示所有文件及目录\nls -a # 显示所有文件及目录(包括隐藏文件)\nll # 输出文件的长格式(包含文件读写权限等信息)\n```\n\n2. 创建目录文件\n\n```bash\nmkdir dir # 创建一个 dir 文件夹\nmkdir -m 700 dir # 创建文件夹并设置权限为 700\n```\n\n3. 复制文件或目录\n\n```bash\ncp file1.cfg file2.cfg # 复制文件 file1 并定义新文件名为 file2\ncp -r doc1 doc2 # 复制目录\ncp -a file1.cfg file2.cfg # 复制文件时保留原有权限及用户归属信息\ncp -f ks.cfg /etc # 将文件复制到/etc目录,并覆盖已有文件，不进行询问\n```\n\n4. 移动或重命名\n\n```bash\nmv file1.txt /home/office # 移动文件\nmv doc1/ /home/doc2/ # 移动目录\nmv file1.txt file2.txt # 重命名文件\nmv doc1/ doc2/ # 重命名目录\n```\n\n5. 删除文件或目录\n\n```bash\nrm file.txt # 删除文件 (默认会进行二次确认)\nrm -f file.txt # 强制删除文件\nrm -rf doc # 强制删除目录及其子文件或目录  !!!牢底坐穿命令\nrm -f *.txt # 删除以.txt为后缀的所有文件 (正则)\n```\n\n6. 显示当前目录路径\n\n```bash\npwd\n```\n\n### 文档编辑\n\n1. 查看文件\n\n```bash\ncat file.txt # 查看文件内容\ncat -n file.txt # 查看文件并显示行号\ncat > file.txt << EOF # 持续写入文件，直到碰到EOF符后结束并保存 \n```\n\n2. 输出字符串或变量值\n\n```bash\necho string # 在终端显示 string 类似于 cy语言的 print\necho $PATH # 输出环境变量中的path值\n```\n\n3. 文本搜索\n\n```bash\ngrep root /etc/passwd # 搜索passwd文件中石油保护 root 关键字的内容\ngrep ^root /etc/passwd # 搜索以root开头的内容 (正则)\n```\n\n4. 查看文件尾部内容\n\n```bash\ntail file.txt # 查看文件尾部的后10行内容\ntail -n 5 file.txt # 查看后5行内容\n```\n\n文件权限\nr: 读 4\nw: 写 2\nx: 执行 1\n-：没有任何权限 0\nLinux分为三种用户，分别是 拥有者(owner) 用户组(group) 其他用户(other) \n\n```bash\nchmod 777 file.txt # 所有用户都有读写执行权限\nll # 查看文件的权限设置\n# ps 查看进程相 \n# ps -ef 显示所有进程信息\n# grep 文本搜索\n# 查找所有与 Java 相关的进程\nps -ef|grep java\nnetstat -nalp|grep 8090\nlsof -i:8091\nnetstat -tln | grep 8090\n```\n","slug":"linux","published":1,"updated":"2022-07-03T07:00:03.822Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt30001fjsvkgk9i20py","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>[TOC]</p>\n<h1 id=\"linux环境部署\"><a href=\"#linux环境部署\" class=\"headerlink\" title=\"linux环境部署\"></a>linux环境部署</h1><h2 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h2><h3 id=\"依赖安装\"><a href=\"#依赖安装\" class=\"headerlink\" title=\"依赖安装\"></a>依赖安装</h3><p>Redis由C语言编写，需要gcc编译器，先排查是否安装gcc</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">gcc --version</code></pre>\n<p>出现如下所示类似文字说明系统已有gcc<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204755.PNG\" alt=\"gcc\"><br>无则安装</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> gcc</code></pre>\n<h3 id=\"安装Redis\"><a href=\"#安装Redis\" class=\"headerlink\" title=\"安装Redis\"></a>安装Redis</h3><ol>\n<li>选择redis安装文件夹</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /home/redis</code></pre>\n<ol>\n<li>下载Redis压缩包</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> http://download.redis.io/releases/redis-6.0.3.tar.gz</code></pre>\n<p>经过漫长的等待后下载完成<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204746.PNG\" alt=\"\"></p>\n<ol>\n<li>解压重命名</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解压</span>\n<span class=\"token function\">tar</span> -vxzf redis-6.0.3.tar.gz\n<span class=\"token comment\"># 重命名</span>\n<span class=\"token function\">mv</span> redis-6.0.3 redis</code></pre>\n<ol>\n<li>编译安装</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> redis\n<span class=\"token comment\"># 编译安装</span>\n<span class=\"token function\">make</span>\n<span class=\"token comment\"># make install PREFIX=/home/redis 指定安装目录</span>\n<span class=\"token comment\"># 在 /usr/local/bin 中生成一个安装目录</span>\n<span class=\"token builtin class-name\">cd</span> src  <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></code></pre>\n<p>出现如下错误表示gcc版本过低<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204739.PNG\" alt=\"\"><br>升级gcc版本</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum -y <span class=\"token function\">install</span> centos-release-scl\nyum -y <span class=\"token function\">install</span> devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils\n<span class=\"token comment\">#临时修改gcc版本</span>\n<span class=\"token comment\"># scl enable devtoolset-9 bash</span>\n<span class=\"token comment\">#永久修改gcc版本</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source /opt/rh/devtoolset-9/enable\"</span> <span class=\"token operator\">&gt;&gt;</span>/etc/profile</code></pre>\n<p>然后重新执行make命令<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204733.PNG\" alt=\"make\"></p>\n<h3 id=\"配置Redis\"><a href=\"#配置Redis\" class=\"headerlink\" title=\"配置Redis\"></a>配置Redis</h3><ol>\n<li>复制配置文件</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> /home/redis/redis.conf /usr/local/redis/bin/redis.conf</code></pre>\n<ol>\n<li>调整配置文件<ol>\n<li>以后台方式启动<br>修改daemonize no 为daemonize yes</li>\n<li>更改默认端口号<br>port默认为 6379</li>\n<li>设置访问权限<br>bind ip 服务器ip<br>  bind 127.0.0.1 服务器ip</li>\n<li>关闭保护模式<br>protected-mode 设置为 yes</li>\n<li>配置访问密码<br>requirepass 设置为默认 foobared</li>\n</ol>\n</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /usr/local/redis/bin/redis.conf\n<span class=\"token comment\"># i 插入</span>\n<span class=\"token comment\"># :wq 保存退出</span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204150.PNG\" alt=\"protected-mode\"><br><img src=\"./src/assets/daemonize.PNG\" alt=\"daemonize\"><br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204318.PNG\" alt=\"requirepass\"><br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204334.PNG\" alt=\"bind\"></p>\n<ol>\n<li>启动 redis</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 切换到redis.conf目录</span>\n<span class=\"token builtin class-name\">cd</span> /usr/local/redis/bin\n./redis-server ./redis.conf</code></pre>\n<ol>\n<li>查看redis是否启动</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># </span>\nredis-cli\n<span class=\"token function\">ps</span> -ef<span class=\"token operator\">|</span><span class=\"token function\">grep</span> redis</code></pre>\n<ol>\n<li>注册服务</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>redis-server\n<span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target\n \n<span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Type</span><span class=\"token operator\">=</span>forking\n<span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/usr/local/redis/bin/redis-server /usr/local/redis/bin/redis.conf\n<span class=\"token assign-left variable\">PrivateTmp</span><span class=\"token operator\">=</span>true\n \n<span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</code></pre>\n<ol>\n<li>开机启动</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl daemon-reload\nsystemctl <span class=\"token builtin class-name\">enable</span> redis.service</code></pre>\n<h2 id=\"部署tomcat\"><a href=\"#部署tomcat\" class=\"headerlink\" title=\"部署tomcat\"></a>部署tomcat</h2><h3 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h3><p><a href=\"https://www.oracle.com/java/technologies/downloads/#java8\">官网jdk下载地址</a><br>查看服务器版本信息</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">uname</span> -a</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204548.PNG\" alt=\"uname\"></p>\n<ol>\n<li>下载压缩包<br>要根据系统选择对应版本压缩包，这里下载<code>x64 Compressed Archive</code>版本<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204552.PNG\" alt=\"jdk\"></li>\n<li>用ftp或者宝塔等工具将压缩包上传至服务器<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">cd /home/jdk</code></pre></li>\n<li>解压</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zxvf jdk-18.0.1.1.tar.gz</code></pre>\n<ol>\n<li>重命名文件夹</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> /home/jdk/jdk-18.0.1.1/* /home/jdk/</code></pre>\n<h3 id=\"jdk配置\"><a href=\"#jdk配置\" class=\"headerlink\" title=\"jdk配置\"></a>jdk配置</h3><p>编辑环境变量配置文件</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/profile</code></pre>\n<p>配置jdk的环境变量</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 按i开始编辑</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span><span class=\"token string\">\"/home/jdk\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$JAVA_HOME</span>/bin:<span class=\"token variable\">$JRE_HOME</span>/bin\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JRE_HOME</span><span class=\"token operator\">=</span><span class=\"token variable\">$JAVA_HOME</span>/jre\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CLASSPATH</span><span class=\"token operator\">=</span>.:<span class=\"token variable\">$JAVA_HOME</span>/lib:<span class=\"token variable\">$JRE_HOME</span>/lib/tools.jar:<span class=\"token variable\">$CLASSPATH</span></code></pre>\n<p>配置好后输入 <code>:wq</code>保存退出</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 配置立即生效</span>\n<span class=\"token builtin class-name\">source</span> /etc/profile</code></pre>\n<p>检查jdk是否安装成功</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">java -version</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204614.PNG\" alt=\"java-version\"><br>如果出现 -bash java not found，可能是jdk版本问题或者环境变量没有配对</p>\n<h3 id=\"安装tomcat\"><a href=\"#安装tomcat\" class=\"headerlink\" title=\"安装tomcat\"></a>安装tomcat</h3><p><a href=\"https://tomcat.apache.org/download-90.cgi\">tomcat9官网下载地址</a></p>\n<ol>\n<li>下载tomcat<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204618.PNG\" alt=\"tomcat\"></li>\n<li>上传至服务器<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">cd /home/tomcat</code></pre></li>\n<li>解压</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zxvf apache-tomcat-9.0.64.tar.gz</code></pre>\n<ol>\n<li>重命名文件夹</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> /home/tomcat/apache-tomcat-9.0.64/* /home/tomcat/</code></pre>\n<ol>\n<li><p>环境变量</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/profile\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CATALINA_BASE</span><span class=\"token operator\">=</span><span class=\"token string\">\"/home/tomcat\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CATALINA_HOME</span><span class=\"token operator\">=</span><span class=\"token string\">\"/home/tomcat\"</span>\n<span class=\"token builtin class-name\">source</span> /etc/profile</code></pre>\n</li>\n<li><p>启动tomcat</p>\n</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /home/tomcat/bin\n./startup.sh</code></pre>\n<p>出现无权限，是文件夹权限设置问题</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">777</span> startup.sh</code></pre>\n<h3 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h3><ol>\n<li>上传项目到webapps文件夹 (ftp)</li>\n<li>更改默认主页<br>删除tomcat webapps里的默认文件，在conf 目录中 <code>vim server.xml</code>，修改tomcat端口号为8090、关闭<code>shutdown</code>端口号为809，在<host>标签内添加如下代码，修改完后重启tomcat</host></li>\n</ol>\n<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Context</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">docBase</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jxfzjc<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">reloadable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">debug</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre>\n<p>或者在context.xml文件中修改配置，在改配置文件下的修改不用重启tomcat</p>\n<ol>\n<li>开放端口号</li>\n</ol>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">firewall-cmd --zone=public --remove-port=8090/tcp --permanent</code></pre>\n<ol>\n<li>redis配置<br>在项目的web-inf文件夹里的classes文件中找到<code>redis.properties</code>文件修改里面的参数<br>ns-onemap-manager database为 12 ns-onemap database为 11 landwork-appserver database为 13</li>\n</ol>\n<pre class=\"language-properties\" data-language=\"properties\"><code class=\"language-properties\"><span class=\"token comment\">#redis</span>\n<span class=\"token attr-name\">redis.host</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">127.0.0.1</span>\n<span class=\"token attr-name\">redis.port</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">6379</span>\n<span class=\"token comment\"># redis配置的密码</span>\n<span class=\"token attr-name\">redis.pass</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">foobared</span>\n<span class=\"token comment\">#0~15总共16个数据库</span>\n<span class=\"token attr-name\">redis.database</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">11</span>\n<span class=\"token attr-name\">redis.timeout</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">3000</span></code></pre>\n<ol>\n<li>重启tomcat</li>\n</ol>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">cd /home/tomcat/bin\n./shutdown.sh\n./startup.sh</code></pre>\n<h3 id=\"防火墙常用命令\"><a href=\"#防火墙常用命令\" class=\"headerlink\" title=\"防火墙常用命令\"></a>防火墙常用命令</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看firewall服务状态</span>\nsystemctl status firewalld\n\n<span class=\"token comment\"># 开启、重启、关闭 firewall.service服务</span>\n<span class=\"token comment\"># 开启</span>\n<span class=\"token function\">service</span> firewalld start\n\n<span class=\"token comment\"># 重启</span>\n<span class=\"token function\">service</span> firewalld restart\n\n<span class=\"token comment\"># 关闭</span>\n<span class=\"token function\">service</span> firewalld stop\n\n<span class=\"token comment\"># 查看防火墙规则</span>\nfirewall-cmd --list-all    <span class=\"token comment\"># 查看全部信息</span>\nfirewall-cmd --list-ports  <span class=\"token comment\"># 查看端口信息</span>\n\n<span class=\"token comment\"># 开启端口</span>\nfirewall-cmd --zone<span class=\"token operator\">=</span>public --add-port<span class=\"token operator\">=</span><span class=\"token number\">80</span>/tcp --permanent    <span class=\"token comment\"># 开启防火墙端口80</span>\nfirewall-cmd --zone<span class=\"token operator\">=</span>public --remove-port<span class=\"token operator\">=</span><span class=\"token number\">8080</span>/tcp --permanent  <span class=\"token comment\">#  关闭防火墙端口8080 </span>\nsystemctl restart firewalld.service    <span class=\"token comment\"># 重启防火墙命令</span>\n\n命令含义：\n--zone               <span class=\"token comment\"># 作用域</span>\n--add-port<span class=\"token operator\">=</span><span class=\"token number\">80</span>/tcp    <span class=\"token comment\"># 添加端口，格式为：端口号/通讯协议</span>\n--permanent          <span class=\"token comment\"># 永久生效，没有此参数重启后失效</span></code></pre>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><h3 id=\"文件管理\"><a href=\"#文件管理\" class=\"headerlink\" title=\"文件管理\"></a>文件管理</h3><ol>\n<li>显示目录信息</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token comment\"># 显示所有文件及目录</span>\n<span class=\"token function\">ls</span> -a <span class=\"token comment\"># 显示所有文件及目录(包括隐藏文件)</span>\nll <span class=\"token comment\"># 输出文件的长格式(包含文件读写权限等信息)</span></code></pre>\n<ol>\n<li>创建目录文件</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> <span class=\"token function\">dir</span> <span class=\"token comment\"># 创建一个 dir 文件夹</span>\n<span class=\"token function\">mkdir</span> -m <span class=\"token number\">700</span> <span class=\"token function\">dir</span> <span class=\"token comment\"># 创建文件夹并设置权限为 700</span></code></pre>\n<ol>\n<li>复制文件或目录</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> file1.cfg file2.cfg <span class=\"token comment\"># 复制文件 file1 并定义新文件名为 file2</span>\n<span class=\"token function\">cp</span> -r doc1 doc2 <span class=\"token comment\"># 复制目录</span>\n<span class=\"token function\">cp</span> -a file1.cfg file2.cfg <span class=\"token comment\"># 复制文件时保留原有权限及用户归属信息</span>\n<span class=\"token function\">cp</span> -f ks.cfg /etc <span class=\"token comment\"># 将文件复制到/etc目录,并覆盖已有文件，不进行询问</span></code></pre>\n<ol>\n<li>移动或重命名</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> file1.txt /home/office <span class=\"token comment\"># 移动文件</span>\n<span class=\"token function\">mv</span> doc1/ /home/doc2/ <span class=\"token comment\"># 移动目录</span>\n<span class=\"token function\">mv</span> file1.txt file2.txt <span class=\"token comment\"># 重命名文件</span>\n<span class=\"token function\">mv</span> doc1/ doc2/ <span class=\"token comment\"># 重命名目录</span></code></pre>\n<ol>\n<li>删除文件或目录</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> file.txt <span class=\"token comment\"># 删除文件 (默认会进行二次确认)</span>\n<span class=\"token function\">rm</span> -f file.txt <span class=\"token comment\"># 强制删除文件</span>\n<span class=\"token function\">rm</span> -rf doc <span class=\"token comment\"># 强制删除目录及其子文件或目录  !!!牢底坐穿命令</span>\n<span class=\"token function\">rm</span> -f *.txt <span class=\"token comment\"># 删除以.txt为后缀的所有文件 (正则)</span></code></pre>\n<ol>\n<li>显示当前目录路径</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">pwd</span></code></pre>\n<h3 id=\"文档编辑\"><a href=\"#文档编辑\" class=\"headerlink\" title=\"文档编辑\"></a>文档编辑</h3><ol>\n<li>查看文件</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> file.txt <span class=\"token comment\"># 查看文件内容</span>\n<span class=\"token function\">cat</span> -n file.txt <span class=\"token comment\"># 查看文件并显示行号</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&gt;</span> file.txt <span class=\"token operator\">&lt;&lt;</span> EOF <span class=\"token comment\"># 持续写入文件，直到碰到EOF符后结束并保存 </span></code></pre>\n<ol>\n<li>输出字符串或变量值</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> string <span class=\"token comment\"># 在终端显示 string 类似于 cy语言的 print</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token environment constant\">$PATH</span> <span class=\"token comment\"># 输出环境变量中的path值</span></code></pre>\n<ol>\n<li>文本搜索</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> root /etc/passwd <span class=\"token comment\"># 搜索passwd文件中石油保护 root 关键字的内容</span>\n<span class=\"token function\">grep</span> ^root /etc/passwd <span class=\"token comment\"># 搜索以root开头的内容 (正则)</span></code></pre>\n<ol>\n<li>查看文件尾部内容</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tail</span> file.txt <span class=\"token comment\"># 查看文件尾部的后10行内容</span>\n<span class=\"token function\">tail</span> -n <span class=\"token number\">5</span> file.txt <span class=\"token comment\"># 查看后5行内容</span></code></pre>\n<p>文件权限<br>r: 读 4<br>w: 写 2<br>x: 执行 1<br>-：没有任何权限 0<br>Linux分为三种用户，分别是 拥有者(owner) 用户组(group) 其他用户(other) </p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">777</span> file.txt <span class=\"token comment\"># 所有用户都有读写执行权限</span>\nll <span class=\"token comment\"># 查看文件的权限设置</span>\n<span class=\"token comment\"># ps 查看进程相 </span>\n<span class=\"token comment\"># ps -ef 显示所有进程信息</span>\n<span class=\"token comment\"># grep 文本搜索</span>\n<span class=\"token comment\"># 查找所有与 Java 相关的进程</span>\n<span class=\"token function\">ps</span> -ef<span class=\"token operator\">|</span><span class=\"token function\">grep</span> java\n<span class=\"token function\">netstat</span> -nalp<span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token number\">8090</span>\n<span class=\"token function\">lsof</span> -i:8091\n<span class=\"token function\">netstat</span> -tln <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token number\">8090</span></code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220124161839.webp","length":4217,"excerpt":"","more":"<p>[TOC]</p>\n<h1 id=\"linux环境部署\"><a href=\"#linux环境部署\" class=\"headerlink\" title=\"linux环境部署\"></a>linux环境部署</h1><h2 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h2><h3 id=\"依赖安装\"><a href=\"#依赖安装\" class=\"headerlink\" title=\"依赖安装\"></a>依赖安装</h3><p>Redis由C语言编写，需要gcc编译器，先排查是否安装gcc</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">gcc --version</code></pre>\n<p>出现如下所示类似文字说明系统已有gcc<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204755.PNG\" alt=\"gcc\"><br>无则安装</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> gcc</code></pre>\n<h3 id=\"安装Redis\"><a href=\"#安装Redis\" class=\"headerlink\" title=\"安装Redis\"></a>安装Redis</h3><ol>\n<li>选择redis安装文件夹</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /home/redis</code></pre>\n<ol>\n<li>下载Redis压缩包</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> http://download.redis.io/releases/redis-6.0.3.tar.gz</code></pre>\n<p>经过漫长的等待后下载完成<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204746.PNG\" alt=\"\"></p>\n<ol>\n<li>解压重命名</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解压</span>\n<span class=\"token function\">tar</span> -vxzf redis-6.0.3.tar.gz\n<span class=\"token comment\"># 重命名</span>\n<span class=\"token function\">mv</span> redis-6.0.3 redis</code></pre>\n<ol>\n<li>编译安装</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> redis\n<span class=\"token comment\"># 编译安装</span>\n<span class=\"token function\">make</span>\n<span class=\"token comment\"># make install PREFIX=/home/redis 指定安装目录</span>\n<span class=\"token comment\"># 在 /usr/local/bin 中生成一个安装目录</span>\n<span class=\"token builtin class-name\">cd</span> src  <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></code></pre>\n<p>出现如下错误表示gcc版本过低<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204739.PNG\" alt=\"\"><br>升级gcc版本</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum -y <span class=\"token function\">install</span> centos-release-scl\nyum -y <span class=\"token function\">install</span> devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils\n<span class=\"token comment\">#临时修改gcc版本</span>\n<span class=\"token comment\"># scl enable devtoolset-9 bash</span>\n<span class=\"token comment\">#永久修改gcc版本</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source /opt/rh/devtoolset-9/enable\"</span> <span class=\"token operator\">&gt;&gt;</span>/etc/profile</code></pre>\n<p>然后重新执行make命令<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204733.PNG\" alt=\"make\"></p>\n<h3 id=\"配置Redis\"><a href=\"#配置Redis\" class=\"headerlink\" title=\"配置Redis\"></a>配置Redis</h3><ol>\n<li>复制配置文件</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> /home/redis/redis.conf /usr/local/redis/bin/redis.conf</code></pre>\n<ol>\n<li>调整配置文件<ol>\n<li>以后台方式启动<br>修改daemonize no 为daemonize yes</li>\n<li>更改默认端口号<br>port默认为 6379</li>\n<li>设置访问权限<br>bind ip 服务器ip<br>  bind 127.0.0.1 服务器ip</li>\n<li>关闭保护模式<br>protected-mode 设置为 yes</li>\n<li>配置访问密码<br>requirepass 设置为默认 foobared</li>\n</ol>\n</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /usr/local/redis/bin/redis.conf\n<span class=\"token comment\"># i 插入</span>\n<span class=\"token comment\"># :wq 保存退出</span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204150.PNG\" alt=\"protected-mode\"><br><img src=\"./src/assets/daemonize.PNG\" alt=\"daemonize\"><br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204318.PNG\" alt=\"requirepass\"><br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204334.PNG\" alt=\"bind\"></p>\n<ol>\n<li>启动 redis</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 切换到redis.conf目录</span>\n<span class=\"token builtin class-name\">cd</span> /usr/local/redis/bin\n./redis-server ./redis.conf</code></pre>\n<ol>\n<li>查看redis是否启动</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># </span>\nredis-cli\n<span class=\"token function\">ps</span> -ef<span class=\"token operator\">|</span><span class=\"token function\">grep</span> redis</code></pre>\n<ol>\n<li>注册服务</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>redis-server\n<span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target\n \n<span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Type</span><span class=\"token operator\">=</span>forking\n<span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/usr/local/redis/bin/redis-server /usr/local/redis/bin/redis.conf\n<span class=\"token assign-left variable\">PrivateTmp</span><span class=\"token operator\">=</span>true\n \n<span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</code></pre>\n<ol>\n<li>开机启动</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl daemon-reload\nsystemctl <span class=\"token builtin class-name\">enable</span> redis.service</code></pre>\n<h2 id=\"部署tomcat\"><a href=\"#部署tomcat\" class=\"headerlink\" title=\"部署tomcat\"></a>部署tomcat</h2><h3 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h3><p><a href=\"https://www.oracle.com/java/technologies/downloads/#java8\">官网jdk下载地址</a><br>查看服务器版本信息</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">uname</span> -a</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204548.PNG\" alt=\"uname\"></p>\n<ol>\n<li>下载压缩包<br>要根据系统选择对应版本压缩包，这里下载<code>x64 Compressed Archive</code>版本<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204552.PNG\" alt=\"jdk\"></li>\n<li>用ftp或者宝塔等工具将压缩包上传至服务器<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">cd /home/jdk</code></pre></li>\n<li>解压</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zxvf jdk-18.0.1.1.tar.gz</code></pre>\n<ol>\n<li>重命名文件夹</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> /home/jdk/jdk-18.0.1.1/* /home/jdk/</code></pre>\n<h3 id=\"jdk配置\"><a href=\"#jdk配置\" class=\"headerlink\" title=\"jdk配置\"></a>jdk配置</h3><p>编辑环境变量配置文件</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/profile</code></pre>\n<p>配置jdk的环境变量</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 按i开始编辑</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span><span class=\"token string\">\"/home/jdk\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$JAVA_HOME</span>/bin:<span class=\"token variable\">$JRE_HOME</span>/bin\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JRE_HOME</span><span class=\"token operator\">=</span><span class=\"token variable\">$JAVA_HOME</span>/jre\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CLASSPATH</span><span class=\"token operator\">=</span>.:<span class=\"token variable\">$JAVA_HOME</span>/lib:<span class=\"token variable\">$JRE_HOME</span>/lib/tools.jar:<span class=\"token variable\">$CLASSPATH</span></code></pre>\n<p>配置好后输入 <code>:wq</code>保存退出</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 配置立即生效</span>\n<span class=\"token builtin class-name\">source</span> /etc/profile</code></pre>\n<p>检查jdk是否安装成功</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">java -version</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204614.PNG\" alt=\"java-version\"><br>如果出现 -bash java not found，可能是jdk版本问题或者环境变量没有配对</p>\n<h3 id=\"安装tomcat\"><a href=\"#安装tomcat\" class=\"headerlink\" title=\"安装tomcat\"></a>安装tomcat</h3><p><a href=\"https://tomcat.apache.org/download-90.cgi\">tomcat9官网下载地址</a></p>\n<ol>\n<li>下载tomcat<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220627204618.PNG\" alt=\"tomcat\"></li>\n<li>上传至服务器<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">cd /home/tomcat</code></pre></li>\n<li>解压</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zxvf apache-tomcat-9.0.64.tar.gz</code></pre>\n<ol>\n<li>重命名文件夹</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> /home/tomcat/apache-tomcat-9.0.64/* /home/tomcat/</code></pre>\n<ol>\n<li><p>环境变量</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/profile\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CATALINA_BASE</span><span class=\"token operator\">=</span><span class=\"token string\">\"/home/tomcat\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CATALINA_HOME</span><span class=\"token operator\">=</span><span class=\"token string\">\"/home/tomcat\"</span>\n<span class=\"token builtin class-name\">source</span> /etc/profile</code></pre>\n</li>\n<li><p>启动tomcat</p>\n</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /home/tomcat/bin\n./startup.sh</code></pre>\n<p>出现无权限，是文件夹权限设置问题</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">777</span> startup.sh</code></pre>\n<h3 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h3><ol>\n<li>上传项目到webapps文件夹 (ftp)</li>\n<li>更改默认主页<br>删除tomcat webapps里的默认文件，在conf 目录中 <code>vim server.xml</code>，修改tomcat端口号为8090、关闭<code>shutdown</code>端口号为809，在<host>标签内添加如下代码，修改完后重启tomcat</host></li>\n</ol>\n<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Context</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">docBase</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jxfzjc<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">reloadable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">debug</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre>\n<p>或者在context.xml文件中修改配置，在改配置文件下的修改不用重启tomcat</p>\n<ol>\n<li>开放端口号</li>\n</ol>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">firewall-cmd --zone=public --remove-port=8090/tcp --permanent</code></pre>\n<ol>\n<li>redis配置<br>在项目的web-inf文件夹里的classes文件中找到<code>redis.properties</code>文件修改里面的参数<br>ns-onemap-manager database为 12 ns-onemap database为 11 landwork-appserver database为 13</li>\n</ol>\n<pre class=\"language-properties\" data-language=\"properties\"><code class=\"language-properties\"><span class=\"token comment\">#redis</span>\n<span class=\"token attr-name\">redis.host</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">127.0.0.1</span>\n<span class=\"token attr-name\">redis.port</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">6379</span>\n<span class=\"token comment\"># redis配置的密码</span>\n<span class=\"token attr-name\">redis.pass</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">foobared</span>\n<span class=\"token comment\">#0~15总共16个数据库</span>\n<span class=\"token attr-name\">redis.database</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">11</span>\n<span class=\"token attr-name\">redis.timeout</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">3000</span></code></pre>\n<ol>\n<li>重启tomcat</li>\n</ol>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">cd /home/tomcat/bin\n./shutdown.sh\n./startup.sh</code></pre>\n<h3 id=\"防火墙常用命令\"><a href=\"#防火墙常用命令\" class=\"headerlink\" title=\"防火墙常用命令\"></a>防火墙常用命令</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看firewall服务状态</span>\nsystemctl status firewalld\n\n<span class=\"token comment\"># 开启、重启、关闭 firewall.service服务</span>\n<span class=\"token comment\"># 开启</span>\n<span class=\"token function\">service</span> firewalld start\n\n<span class=\"token comment\"># 重启</span>\n<span class=\"token function\">service</span> firewalld restart\n\n<span class=\"token comment\"># 关闭</span>\n<span class=\"token function\">service</span> firewalld stop\n\n<span class=\"token comment\"># 查看防火墙规则</span>\nfirewall-cmd --list-all    <span class=\"token comment\"># 查看全部信息</span>\nfirewall-cmd --list-ports  <span class=\"token comment\"># 查看端口信息</span>\n\n<span class=\"token comment\"># 开启端口</span>\nfirewall-cmd --zone<span class=\"token operator\">=</span>public --add-port<span class=\"token operator\">=</span><span class=\"token number\">80</span>/tcp --permanent    <span class=\"token comment\"># 开启防火墙端口80</span>\nfirewall-cmd --zone<span class=\"token operator\">=</span>public --remove-port<span class=\"token operator\">=</span><span class=\"token number\">8080</span>/tcp --permanent  <span class=\"token comment\">#  关闭防火墙端口8080 </span>\nsystemctl restart firewalld.service    <span class=\"token comment\"># 重启防火墙命令</span>\n\n命令含义：\n--zone               <span class=\"token comment\"># 作用域</span>\n--add-port<span class=\"token operator\">=</span><span class=\"token number\">80</span>/tcp    <span class=\"token comment\"># 添加端口，格式为：端口号/通讯协议</span>\n--permanent          <span class=\"token comment\"># 永久生效，没有此参数重启后失效</span></code></pre>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><h3 id=\"文件管理\"><a href=\"#文件管理\" class=\"headerlink\" title=\"文件管理\"></a>文件管理</h3><ol>\n<li>显示目录信息</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token comment\"># 显示所有文件及目录</span>\n<span class=\"token function\">ls</span> -a <span class=\"token comment\"># 显示所有文件及目录(包括隐藏文件)</span>\nll <span class=\"token comment\"># 输出文件的长格式(包含文件读写权限等信息)</span></code></pre>\n<ol>\n<li>创建目录文件</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> <span class=\"token function\">dir</span> <span class=\"token comment\"># 创建一个 dir 文件夹</span>\n<span class=\"token function\">mkdir</span> -m <span class=\"token number\">700</span> <span class=\"token function\">dir</span> <span class=\"token comment\"># 创建文件夹并设置权限为 700</span></code></pre>\n<ol>\n<li>复制文件或目录</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> file1.cfg file2.cfg <span class=\"token comment\"># 复制文件 file1 并定义新文件名为 file2</span>\n<span class=\"token function\">cp</span> -r doc1 doc2 <span class=\"token comment\"># 复制目录</span>\n<span class=\"token function\">cp</span> -a file1.cfg file2.cfg <span class=\"token comment\"># 复制文件时保留原有权限及用户归属信息</span>\n<span class=\"token function\">cp</span> -f ks.cfg /etc <span class=\"token comment\"># 将文件复制到/etc目录,并覆盖已有文件，不进行询问</span></code></pre>\n<ol>\n<li>移动或重命名</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> file1.txt /home/office <span class=\"token comment\"># 移动文件</span>\n<span class=\"token function\">mv</span> doc1/ /home/doc2/ <span class=\"token comment\"># 移动目录</span>\n<span class=\"token function\">mv</span> file1.txt file2.txt <span class=\"token comment\"># 重命名文件</span>\n<span class=\"token function\">mv</span> doc1/ doc2/ <span class=\"token comment\"># 重命名目录</span></code></pre>\n<ol>\n<li>删除文件或目录</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> file.txt <span class=\"token comment\"># 删除文件 (默认会进行二次确认)</span>\n<span class=\"token function\">rm</span> -f file.txt <span class=\"token comment\"># 强制删除文件</span>\n<span class=\"token function\">rm</span> -rf doc <span class=\"token comment\"># 强制删除目录及其子文件或目录  !!!牢底坐穿命令</span>\n<span class=\"token function\">rm</span> -f *.txt <span class=\"token comment\"># 删除以.txt为后缀的所有文件 (正则)</span></code></pre>\n<ol>\n<li>显示当前目录路径</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">pwd</span></code></pre>\n<h3 id=\"文档编辑\"><a href=\"#文档编辑\" class=\"headerlink\" title=\"文档编辑\"></a>文档编辑</h3><ol>\n<li>查看文件</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> file.txt <span class=\"token comment\"># 查看文件内容</span>\n<span class=\"token function\">cat</span> -n file.txt <span class=\"token comment\"># 查看文件并显示行号</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&gt;</span> file.txt <span class=\"token operator\">&lt;&lt;</span> EOF <span class=\"token comment\"># 持续写入文件，直到碰到EOF符后结束并保存 </span></code></pre>\n<ol>\n<li>输出字符串或变量值</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> string <span class=\"token comment\"># 在终端显示 string 类似于 cy语言的 print</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token environment constant\">$PATH</span> <span class=\"token comment\"># 输出环境变量中的path值</span></code></pre>\n<ol>\n<li>文本搜索</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> root /etc/passwd <span class=\"token comment\"># 搜索passwd文件中石油保护 root 关键字的内容</span>\n<span class=\"token function\">grep</span> ^root /etc/passwd <span class=\"token comment\"># 搜索以root开头的内容 (正则)</span></code></pre>\n<ol>\n<li>查看文件尾部内容</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tail</span> file.txt <span class=\"token comment\"># 查看文件尾部的后10行内容</span>\n<span class=\"token function\">tail</span> -n <span class=\"token number\">5</span> file.txt <span class=\"token comment\"># 查看后5行内容</span></code></pre>\n<p>文件权限<br>r: 读 4<br>w: 写 2<br>x: 执行 1<br>-：没有任何权限 0<br>Linux分为三种用户，分别是 拥有者(owner) 用户组(group) 其他用户(other) </p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">777</span> file.txt <span class=\"token comment\"># 所有用户都有读写执行权限</span>\nll <span class=\"token comment\"># 查看文件的权限设置</span>\n<span class=\"token comment\"># ps 查看进程相 </span>\n<span class=\"token comment\"># ps -ef 显示所有进程信息</span>\n<span class=\"token comment\"># grep 文本搜索</span>\n<span class=\"token comment\"># 查找所有与 Java 相关的进程</span>\n<span class=\"token function\">ps</span> -ef<span class=\"token operator\">|</span><span class=\"token function\">grep</span> java\n<span class=\"token function\">netstat</span> -nalp<span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token number\">8090</span>\n<span class=\"token function\">lsof</span> -i:8091\n<span class=\"token function\">netstat</span> -tln <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token number\">8090</span></code></pre>\n"},{"title":"Linux命令","date":"2021-09-17T14:12:09.000Z","description":"Linux命令","_content":"\n<a href=\"https://wangchujiang.com/linux-command/\">Linux命令搜索工具</a>\n\n<a href=\"https://juejin.cn/post/6844904122244677639\">ssh暴力破解防护</a>\n\n<a href=\"https://juejin.cn/post/6844904122244677639\">ssh暴力破解防护</a>\n\n<a href=\"https://www.jianshu.com/p/556ff130fc65\">zsh终端美化工具</a>\n\n+ awk '{print $1}' lntano.top.log 列出ip\n\n+ awk '{print $1}' lntano.top.log | sort |uniq -c| sort -n\n\n+ uniq 参数 -c 或 --count 在每列旁边显示该行重复出现的次数\n\n+ sort -n 依照数值的大小排序\n\n+ chsh -s /bin/zsh\n\n  \n\n","source":"_posts/linux命令.md","raw":"---\ntitle: linux命令\ndate: 2021-09-17 22:12:09\ntags: linux\ncategories:\ndescription: Linux命令\n---\n\n<a href=\"https://wangchujiang.com/linux-command/\">Linux命令搜索工具</a>\n\n<a href=\"https://juejin.cn/post/6844904122244677639\">ssh暴力破解防护</a>\n\n<a href=\"https://juejin.cn/post/6844904122244677639\">ssh暴力破解防护</a>\n\n<a href=\"https://www.jianshu.com/p/556ff130fc65\">zsh终端美化工具</a>\n\n+ awk '{print $1}' lntano.top.log 列出ip\n\n+ awk '{print $1}' lntano.top.log | sort |uniq -c| sort -n\n\n+ uniq 参数 -c 或 --count 在每列旁边显示该行重复出现的次数\n\n+ sort -n 依照数值的大小排序\n\n+ chsh -s /bin/zsh\n\n  \n\n","slug":"linux命令","published":1,"updated":"2022-01-12T08:23:58.760Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt32001ijsvk9rxfbaxx","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><a href=\"https://wangchujiang.com/linux-command/\">Linux命令搜索工具</a></p>\n<p><a href=\"https://juejin.cn/post/6844904122244677639\">ssh暴力破解防护</a></p>\n<p><a href=\"https://juejin.cn/post/6844904122244677639\">ssh暴力破解防护</a></p>\n<p><a href=\"https://www.jianshu.com/p/556ff130fc65\">zsh终端美化工具</a></p>\n<ul>\n<li><p>awk ‘{print $1}’ lntano.top.log 列出ip</p>\n</li>\n<li><p>awk ‘{print $1}’ lntano.top.log | sort |uniq -c| sort -n</p>\n</li>\n<li><p>uniq 参数 -c 或 —count 在每列旁边显示该行重复出现的次数</p>\n</li>\n<li><p>sort -n 依照数值的大小排序</p>\n</li>\n<li><p>chsh -s /bin/zsh</p>\n</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220124161839.webp","length":177,"excerpt":"","more":"<p><a href=\"https://wangchujiang.com/linux-command/\">Linux命令搜索工具</a></p>\n<p><a href=\"https://juejin.cn/post/6844904122244677639\">ssh暴力破解防护</a></p>\n<p><a href=\"https://juejin.cn/post/6844904122244677639\">ssh暴力破解防护</a></p>\n<p><a href=\"https://www.jianshu.com/p/556ff130fc65\">zsh终端美化工具</a></p>\n<ul>\n<li><p>awk ‘{print $1}’ lntano.top.log 列出ip</p>\n</li>\n<li><p>awk ‘{print $1}’ lntano.top.log | sort |uniq -c| sort -n</p>\n</li>\n<li><p>uniq 参数 -c 或 —count 在每列旁边显示该行重复出现的次数</p>\n</li>\n<li><p>sort -n 依照数值的大小排序</p>\n</li>\n<li><p>chsh -s /bin/zsh</p>\n</li>\n</ul>\n"},{"title":"Mysql数据库","date":"2021-11-23T06:24:38.000Z","description":"mysql基本命令","_content":"\n## 基本操作命令\n\n### 1. 基本介绍\n\n+ `\\G`格式化输出\n+ `\\S`查看服务端信息\n+ `\\c`结束命令输入操作\n+ `\\q`退出当前sql命令行模式\n+ `\\h`查看帮助\n\n### 2. 操作数据库步骤\n\n1. 连接MySQL\n\n   ```sql\n   mysql -h localhost -u root -p\n   ```\n\n2. SQL语句可以换行，以分号结尾\n\n   ```sql\n   select * from test;\n   ```\n\n3. 命令不区分大小写，关键字和函数建议用大写\n\n   ```sql\n   SELECT * FROM user WHERE uid=17;\n   ```\n\n4. 如果提示符为 '> 那么需要输入一个'回车\n\n5. 命令打错了换行后不能修改, 可以用 \\c 取消\n\n### 3. 数据库操作\n\n```sql\n## 查看数据库\nshow databases;\n## 创建数据库\ncreate database 库名 default charset=utf8;\n## 删除数据库\ndrop database 库名;\n## 打开数据库\nuse 库名;\n```\n\n### 4. 数据表操作\n\n+ 创建表\n\n```sql\ncreate table 表名 (字段名 字段类型);\n## 如果表不存在,则创建, 如果存在就不执行这条命令\ncreate table if not exists 表名(字段1 类型,字段2 类型);\n## 复制表结构及数据\ncreate table 新表 as select * from 旧表;\n## 复制表结构不要数据\ncreate table 新表 as select * from 旧表 where 2<>2;\ncreate table 表名(字段名，类型，[字段约束]，字段名，类型，[字段约束])；\n## 以下创建一个 users 的表 \ncreate table users( \n    # 创建ID字段，为正整数，不允许为空 主键，自动递增 \n    id int unsigned not null primary key auto_increment, \n\n    # 创建 存储 名字的字段，为字符串类型，最大长度 5个字符，不允许为空 \n    username varchar(5) not null, \n\n    # 创建存储 密码 的字段，固定长度 32位字符， 不允许为空 \n    # 数据库在存储用户密码时通常存储的是加密后的密码 使用md5加密算法后 密码均为32位 所以这里固定长度为32\n    password char(32) not null, \n\n    # 创建 年龄 字段，不允许为空，默认值为 20 \n    age tinyint not null default 20 \n\n)engine=innodb default charset=utf8; \n```\n\n+ 查看表\n\n```sql\nshow tables;\n## 查看指定用户下所有表(用户名必须大写)\nselect 表名 from all_table where owner = upper('用户名');\n## 查看表结构\ndesc 表名;\n## 查看建表语句\nshow create table users;\n```\n\n+ 删除表\n\n```sql\ndrop table 表名;\n```\n\n+ 修改表\n\n```sql\n## 增加字段\nalter table 表名 add (字段名称 字段类型);\n## 修改字段\nalter table 表名 modify (字段名称 字段类型);\nalter table 表名 change (字段名称 字段类型);\n## 修改表名\nalter table 原表名 rename as 新表名\n# 修改表引擎语句 \nalter table users engine = 'myisam';\n## 删除字段\nalter table 表名 drop column 字段名称;\n```\n\n\n\n### 5. 数据操作\n\n+ 插入\n\n```sql\ninsert into 表名(字段1,字段2,字段3) values(值1,值2,值3);\ninsert into 表名(字段1,字段2,字段3) values(a值1,a值2,a值3),(b值1,b值2,b值3);\n```\n\n+ 查询\n\n```sql\n## 查询所有字段\nselect * from 表名;\nselect 字段1,字段2,字段3 from 表名;\nselect * from 表名 where 字段=某个值;\nselect  from MyClass order by id limit 0,2; \n```\n\n+ 修改\n\n```sql\nupdate 表名 set 字段=某个值 where 条件;\nupdate 表名 set 字段1=值1,字段2=值2 where 条件;\nupdate 表名 set 字段=字段+值 where 条件;\n```\n\n+ 删除\n\n```sql\n## 删除字段\ndelete from 表名 where 字段=某个值;\n```\n\n### 6. 类型约束和运算\n\n#### 1. 字段约束\n\n1）unsigned 无符号(给数值类型使用，表示为正数，不写可以表示正负数都可以)\n\n2）字段类型后面加括号限制宽度\n\n+ char(5) varchar(7) 在字符类型后面加限制表示字符串的长度\n+ int(4) 没有意义，默认无符号的int为int(11)，有符号的int(10)\n+ int(4) unsigned zerofill只有当给int类型设置有前导零时，设置int的宽度才有意义。\n\n3）not null 不能为空，在操作数据库时如果输入该字段的数据为NULL ，就会报错\n\n4）default 设置默认值\n\n5）primary key 主键不能为空,且唯一.一般和自动递增一起配合使用。\n\n6）auto_increment 定义列为自增属性，一般用于主键，数值会自动加1\n\n7）unique 唯一索引(数据不能重复:用户名)可以增加查询速度,但是会降低插入和更新速度\n\n#### 2. 主键\n\n#### 3. 运算符\n\n+ 算术运算符：+、 -、 *、 /、 %\n+ 比较运算符：=、 >、 <、 >=、 <=、!=\n+ 数据库特有的比较：in、not in、is null、is not null、like、between、and\n+ 逻辑运算符：and、or、not\n+ like：支持特殊符号%和_ \n","source":"_posts/mysql数据库.md","raw":"---\ntitle: mysql数据库\ndate: 2021-11-23 14:24:38\ntags: [sql]\ncategories: \ndescription: mysql基本命令\n---\n\n## 基本操作命令\n\n### 1. 基本介绍\n\n+ `\\G`格式化输出\n+ `\\S`查看服务端信息\n+ `\\c`结束命令输入操作\n+ `\\q`退出当前sql命令行模式\n+ `\\h`查看帮助\n\n### 2. 操作数据库步骤\n\n1. 连接MySQL\n\n   ```sql\n   mysql -h localhost -u root -p\n   ```\n\n2. SQL语句可以换行，以分号结尾\n\n   ```sql\n   select * from test;\n   ```\n\n3. 命令不区分大小写，关键字和函数建议用大写\n\n   ```sql\n   SELECT * FROM user WHERE uid=17;\n   ```\n\n4. 如果提示符为 '> 那么需要输入一个'回车\n\n5. 命令打错了换行后不能修改, 可以用 \\c 取消\n\n### 3. 数据库操作\n\n```sql\n## 查看数据库\nshow databases;\n## 创建数据库\ncreate database 库名 default charset=utf8;\n## 删除数据库\ndrop database 库名;\n## 打开数据库\nuse 库名;\n```\n\n### 4. 数据表操作\n\n+ 创建表\n\n```sql\ncreate table 表名 (字段名 字段类型);\n## 如果表不存在,则创建, 如果存在就不执行这条命令\ncreate table if not exists 表名(字段1 类型,字段2 类型);\n## 复制表结构及数据\ncreate table 新表 as select * from 旧表;\n## 复制表结构不要数据\ncreate table 新表 as select * from 旧表 where 2<>2;\ncreate table 表名(字段名，类型，[字段约束]，字段名，类型，[字段约束])；\n## 以下创建一个 users 的表 \ncreate table users( \n    # 创建ID字段，为正整数，不允许为空 主键，自动递增 \n    id int unsigned not null primary key auto_increment, \n\n    # 创建 存储 名字的字段，为字符串类型，最大长度 5个字符，不允许为空 \n    username varchar(5) not null, \n\n    # 创建存储 密码 的字段，固定长度 32位字符， 不允许为空 \n    # 数据库在存储用户密码时通常存储的是加密后的密码 使用md5加密算法后 密码均为32位 所以这里固定长度为32\n    password char(32) not null, \n\n    # 创建 年龄 字段，不允许为空，默认值为 20 \n    age tinyint not null default 20 \n\n)engine=innodb default charset=utf8; \n```\n\n+ 查看表\n\n```sql\nshow tables;\n## 查看指定用户下所有表(用户名必须大写)\nselect 表名 from all_table where owner = upper('用户名');\n## 查看表结构\ndesc 表名;\n## 查看建表语句\nshow create table users;\n```\n\n+ 删除表\n\n```sql\ndrop table 表名;\n```\n\n+ 修改表\n\n```sql\n## 增加字段\nalter table 表名 add (字段名称 字段类型);\n## 修改字段\nalter table 表名 modify (字段名称 字段类型);\nalter table 表名 change (字段名称 字段类型);\n## 修改表名\nalter table 原表名 rename as 新表名\n# 修改表引擎语句 \nalter table users engine = 'myisam';\n## 删除字段\nalter table 表名 drop column 字段名称;\n```\n\n\n\n### 5. 数据操作\n\n+ 插入\n\n```sql\ninsert into 表名(字段1,字段2,字段3) values(值1,值2,值3);\ninsert into 表名(字段1,字段2,字段3) values(a值1,a值2,a值3),(b值1,b值2,b值3);\n```\n\n+ 查询\n\n```sql\n## 查询所有字段\nselect * from 表名;\nselect 字段1,字段2,字段3 from 表名;\nselect * from 表名 where 字段=某个值;\nselect  from MyClass order by id limit 0,2; \n```\n\n+ 修改\n\n```sql\nupdate 表名 set 字段=某个值 where 条件;\nupdate 表名 set 字段1=值1,字段2=值2 where 条件;\nupdate 表名 set 字段=字段+值 where 条件;\n```\n\n+ 删除\n\n```sql\n## 删除字段\ndelete from 表名 where 字段=某个值;\n```\n\n### 6. 类型约束和运算\n\n#### 1. 字段约束\n\n1）unsigned 无符号(给数值类型使用，表示为正数，不写可以表示正负数都可以)\n\n2）字段类型后面加括号限制宽度\n\n+ char(5) varchar(7) 在字符类型后面加限制表示字符串的长度\n+ int(4) 没有意义，默认无符号的int为int(11)，有符号的int(10)\n+ int(4) unsigned zerofill只有当给int类型设置有前导零时，设置int的宽度才有意义。\n\n3）not null 不能为空，在操作数据库时如果输入该字段的数据为NULL ，就会报错\n\n4）default 设置默认值\n\n5）primary key 主键不能为空,且唯一.一般和自动递增一起配合使用。\n\n6）auto_increment 定义列为自增属性，一般用于主键，数值会自动加1\n\n7）unique 唯一索引(数据不能重复:用户名)可以增加查询速度,但是会降低插入和更新速度\n\n#### 2. 主键\n\n#### 3. 运算符\n\n+ 算术运算符：+、 -、 *、 /、 %\n+ 比较运算符：=、 >、 <、 >=、 <=、!=\n+ 数据库特有的比较：in、not in、is null、is not null、like、between、and\n+ 逻辑运算符：and、or、not\n+ like：支持特殊符号%和_ \n","slug":"mysql数据库","published":1,"updated":"2021-11-23T08:33:51.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt35001mjsvkboet5p6g","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"基本操作命令\"><a href=\"#基本操作命令\" class=\"headerlink\" title=\"基本操作命令\"></a>基本操作命令</h2><h3 id=\"1-基本介绍\"><a href=\"#1-基本介绍\" class=\"headerlink\" title=\"1. 基本介绍\"></a>1. 基本介绍</h3><ul>\n<li><code>\\G</code>格式化输出</li>\n<li><code>\\S</code>查看服务端信息</li>\n<li><code>\\c</code>结束命令输入操作</li>\n<li><code>\\q</code>退出当前sql命令行模式</li>\n<li><code>\\h</code>查看帮助</li>\n</ul>\n<h3 id=\"2-操作数据库步骤\"><a href=\"#2-操作数据库步骤\" class=\"headerlink\" title=\"2. 操作数据库步骤\"></a>2. 操作数据库步骤</h3><ol>\n<li><p>连接MySQL</p>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\">mysql <span class=\"token operator\">-</span>h localhost <span class=\"token operator\">-</span>u root <span class=\"token operator\">-</span>p</code></pre>\n</li>\n<li><p>SQL语句可以换行，以分号结尾</p>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> test<span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>命令不区分大小写，关键字和函数建议用大写</p>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">WHERE</span> uid<span class=\"token operator\">=</span><span class=\"token number\">17</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>如果提示符为 ‘&gt; 那么需要输入一个’回车</p>\n</li>\n<li><p>命令打错了换行后不能修改, 可以用 \\c 取消</p>\n</li>\n</ol>\n<h3 id=\"3-数据库操作\"><a href=\"#3-数据库操作\" class=\"headerlink\" title=\"3. 数据库操作\"></a>3. 数据库操作</h3><pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">## 查看数据库</span>\n<span class=\"token keyword\">show</span> <span class=\"token keyword\">databases</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 创建数据库</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> 库名 <span class=\"token keyword\">default</span> <span class=\"token keyword\">charset</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 删除数据库</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> 库名<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 打开数据库</span>\n<span class=\"token keyword\">use</span> 库名<span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"4-数据表操作\"><a href=\"#4-数据表操作\" class=\"headerlink\" title=\"4. 数据表操作\"></a>4. 数据表操作</h3><ul>\n<li>创建表</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token punctuation\">(</span>字段名 字段类型<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 如果表不存在,则创建, 如果存在就不执行这条命令</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> <span class=\"token keyword\">exists</span> 表名<span class=\"token punctuation\">(</span>字段<span class=\"token number\">1</span> 类型<span class=\"token punctuation\">,</span>字段<span class=\"token number\">2</span> 类型<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 复制表结构及数据</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 新表 <span class=\"token keyword\">as</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 旧表<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 复制表结构不要数据</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 新表 <span class=\"token keyword\">as</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 旧表 <span class=\"token keyword\">where</span> <span class=\"token number\">2</span><span class=\"token operator\">&lt;></span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 表名<span class=\"token punctuation\">(</span>字段名，类型，<span class=\"token punctuation\">[</span>字段约束<span class=\"token punctuation\">]</span>，字段名，类型，<span class=\"token punctuation\">[</span>字段约束<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>；\n<span class=\"token comment\">## 以下创建一个 users 的表 </span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> users<span class=\"token punctuation\">(</span> \n    <span class=\"token comment\"># 创建ID字段，为正整数，不允许为空 主键，自动递增 </span>\n    id <span class=\"token keyword\">int</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span> \n\n    <span class=\"token comment\"># 创建 存储 名字的字段，为字符串类型，最大长度 5个字符，不允许为空 </span>\n    username <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> \n\n    <span class=\"token comment\"># 创建存储 密码 的字段，固定长度 32位字符， 不允许为空 </span>\n    <span class=\"token comment\"># 数据库在存储用户密码时通常存储的是加密后的密码 使用md5加密算法后 密码均为32位 所以这里固定长度为32</span>\n    password <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> \n\n    <span class=\"token comment\"># 创建 年龄 字段，不允许为空，默认值为 20 </span>\n    age <span class=\"token keyword\">tinyint</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token number\">20</span> \n\n<span class=\"token punctuation\">)</span><span class=\"token keyword\">engine</span><span class=\"token operator\">=</span><span class=\"token keyword\">innodb</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">charset</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span> </code></pre>\n<ul>\n<li>查看表</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">show</span> <span class=\"token keyword\">tables</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 查看指定用户下所有表(用户名必须大写)</span>\n<span class=\"token keyword\">select</span> 表名 <span class=\"token keyword\">from</span> all_table <span class=\"token keyword\">where</span> owner <span class=\"token operator\">=</span> upper<span class=\"token punctuation\">(</span><span class=\"token string\">'用户名'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 查看表结构</span>\n<span class=\"token keyword\">desc</span> 表名<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 查看建表语句</span>\n<span class=\"token keyword\">show</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> users<span class=\"token punctuation\">;</span></code></pre>\n<ul>\n<li>删除表</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> 表名<span class=\"token punctuation\">;</span></code></pre>\n<ul>\n<li>修改表</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">## 增加字段</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token keyword\">add</span> <span class=\"token punctuation\">(</span>字段名称 字段类型<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 修改字段</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token keyword\">modify</span> <span class=\"token punctuation\">(</span>字段名称 字段类型<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 change <span class=\"token punctuation\">(</span>字段名称 字段类型<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 修改表名</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 原表名 <span class=\"token keyword\">rename</span> <span class=\"token keyword\">as</span> 新表名\n<span class=\"token comment\"># 修改表引擎语句 </span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> users <span class=\"token keyword\">engine</span> <span class=\"token operator\">=</span> <span class=\"token string\">'myisam'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 删除字段</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token keyword\">drop</span> <span class=\"token keyword\">column</span> 字段名称<span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"5-数据操作\"><a href=\"#5-数据操作\" class=\"headerlink\" title=\"5. 数据操作\"></a>5. 数据操作</h3><ul>\n<li>插入</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> 表名<span class=\"token punctuation\">(</span>字段<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>值<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>值<span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> 表名<span class=\"token punctuation\">(</span>字段<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>a值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>a值<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>a值<span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>b值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>b值<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>b值<span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<ul>\n<li>查询</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">## 查询所有字段</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表名<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> 字段<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">3</span> <span class=\"token keyword\">from</span> 表名<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表名 <span class=\"token keyword\">where</span> 字段<span class=\"token operator\">=</span>某个值<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span>  <span class=\"token keyword\">from</span> MyClass <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> id <span class=\"token keyword\">limit</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> </code></pre>\n<ul>\n<li>修改</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">update</span> 表名 <span class=\"token keyword\">set</span> 字段<span class=\"token operator\">=</span>某个值 <span class=\"token keyword\">where</span> 条件<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">update</span> 表名 <span class=\"token keyword\">set</span> 字段<span class=\"token number\">1</span><span class=\"token operator\">=</span>值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">2</span><span class=\"token operator\">=</span>值<span class=\"token number\">2</span> <span class=\"token keyword\">where</span> 条件<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">update</span> 表名 <span class=\"token keyword\">set</span> 字段<span class=\"token operator\">=</span>字段<span class=\"token operator\">+</span>值 <span class=\"token keyword\">where</span> 条件<span class=\"token punctuation\">;</span></code></pre>\n<ul>\n<li>删除</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">## 删除字段</span>\n<span class=\"token keyword\">delete</span> <span class=\"token keyword\">from</span> 表名 <span class=\"token keyword\">where</span> 字段<span class=\"token operator\">=</span>某个值<span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"6-类型约束和运算\"><a href=\"#6-类型约束和运算\" class=\"headerlink\" title=\"6. 类型约束和运算\"></a>6. 类型约束和运算</h3><h4 id=\"1-字段约束\"><a href=\"#1-字段约束\" class=\"headerlink\" title=\"1. 字段约束\"></a>1. 字段约束</h4><p>1）unsigned 无符号(给数值类型使用，表示为正数，不写可以表示正负数都可以)</p>\n<p>2）字段类型后面加括号限制宽度</p>\n<ul>\n<li>char(5) varchar(7) 在字符类型后面加限制表示字符串的长度</li>\n<li>int(4) 没有意义，默认无符号的int为int(11)，有符号的int(10)</li>\n<li>int(4) unsigned zerofill只有当给int类型设置有前导零时，设置int的宽度才有意义。</li>\n</ul>\n<p>3）not null 不能为空，在操作数据库时如果输入该字段的数据为NULL ，就会报错</p>\n<p>4）default 设置默认值</p>\n<p>5）primary key 主键不能为空,且唯一.一般和自动递增一起配合使用。</p>\n<p>6）auto_increment 定义列为自增属性，一般用于主键，数值会自动加1</p>\n<p>7）unique 唯一索引(数据不能重复:用户名)可以增加查询速度,但是会降低插入和更新速度</p>\n<h4 id=\"2-主键\"><a href=\"#2-主键\" class=\"headerlink\" title=\"2. 主键\"></a>2. 主键</h4><h4 id=\"3-运算符\"><a href=\"#3-运算符\" class=\"headerlink\" title=\"3. 运算符\"></a>3. 运算符</h4><ul>\n<li>算术运算符：+、 -、 *、 /、 %</li>\n<li>比较运算符：=、 &gt;、 &lt;、 &gt;=、 &lt;=、!=</li>\n<li>数据库特有的比较：in、not in、is null、is not null、like、between、and</li>\n<li>逻辑运算符：and、or、not</li>\n<li>like：支持特殊符号%和_ </li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220124161839.webp","length":2080,"excerpt":"","more":"<h2 id=\"基本操作命令\"><a href=\"#基本操作命令\" class=\"headerlink\" title=\"基本操作命令\"></a>基本操作命令</h2><h3 id=\"1-基本介绍\"><a href=\"#1-基本介绍\" class=\"headerlink\" title=\"1. 基本介绍\"></a>1. 基本介绍</h3><ul>\n<li><code>\\G</code>格式化输出</li>\n<li><code>\\S</code>查看服务端信息</li>\n<li><code>\\c</code>结束命令输入操作</li>\n<li><code>\\q</code>退出当前sql命令行模式</li>\n<li><code>\\h</code>查看帮助</li>\n</ul>\n<h3 id=\"2-操作数据库步骤\"><a href=\"#2-操作数据库步骤\" class=\"headerlink\" title=\"2. 操作数据库步骤\"></a>2. 操作数据库步骤</h3><ol>\n<li><p>连接MySQL</p>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\">mysql <span class=\"token operator\">-</span>h localhost <span class=\"token operator\">-</span>u root <span class=\"token operator\">-</span>p</code></pre>\n</li>\n<li><p>SQL语句可以换行，以分号结尾</p>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> test<span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>命令不区分大小写，关键字和函数建议用大写</p>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">WHERE</span> uid<span class=\"token operator\">=</span><span class=\"token number\">17</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>如果提示符为 ‘&gt; 那么需要输入一个’回车</p>\n</li>\n<li><p>命令打错了换行后不能修改, 可以用 \\c 取消</p>\n</li>\n</ol>\n<h3 id=\"3-数据库操作\"><a href=\"#3-数据库操作\" class=\"headerlink\" title=\"3. 数据库操作\"></a>3. 数据库操作</h3><pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">## 查看数据库</span>\n<span class=\"token keyword\">show</span> <span class=\"token keyword\">databases</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 创建数据库</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> 库名 <span class=\"token keyword\">default</span> <span class=\"token keyword\">charset</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 删除数据库</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> 库名<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 打开数据库</span>\n<span class=\"token keyword\">use</span> 库名<span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"4-数据表操作\"><a href=\"#4-数据表操作\" class=\"headerlink\" title=\"4. 数据表操作\"></a>4. 数据表操作</h3><ul>\n<li>创建表</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token punctuation\">(</span>字段名 字段类型<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 如果表不存在,则创建, 如果存在就不执行这条命令</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> <span class=\"token keyword\">exists</span> 表名<span class=\"token punctuation\">(</span>字段<span class=\"token number\">1</span> 类型<span class=\"token punctuation\">,</span>字段<span class=\"token number\">2</span> 类型<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 复制表结构及数据</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 新表 <span class=\"token keyword\">as</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 旧表<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 复制表结构不要数据</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 新表 <span class=\"token keyword\">as</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 旧表 <span class=\"token keyword\">where</span> <span class=\"token number\">2</span><span class=\"token operator\">&lt;></span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 表名<span class=\"token punctuation\">(</span>字段名，类型，<span class=\"token punctuation\">[</span>字段约束<span class=\"token punctuation\">]</span>，字段名，类型，<span class=\"token punctuation\">[</span>字段约束<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>；\n<span class=\"token comment\">## 以下创建一个 users 的表 </span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> users<span class=\"token punctuation\">(</span> \n    <span class=\"token comment\"># 创建ID字段，为正整数，不允许为空 主键，自动递增 </span>\n    id <span class=\"token keyword\">int</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span> \n\n    <span class=\"token comment\"># 创建 存储 名字的字段，为字符串类型，最大长度 5个字符，不允许为空 </span>\n    username <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> \n\n    <span class=\"token comment\"># 创建存储 密码 的字段，固定长度 32位字符， 不允许为空 </span>\n    <span class=\"token comment\"># 数据库在存储用户密码时通常存储的是加密后的密码 使用md5加密算法后 密码均为32位 所以这里固定长度为32</span>\n    password <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> \n\n    <span class=\"token comment\"># 创建 年龄 字段，不允许为空，默认值为 20 </span>\n    age <span class=\"token keyword\">tinyint</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token number\">20</span> \n\n<span class=\"token punctuation\">)</span><span class=\"token keyword\">engine</span><span class=\"token operator\">=</span><span class=\"token keyword\">innodb</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">charset</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span> </code></pre>\n<ul>\n<li>查看表</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">show</span> <span class=\"token keyword\">tables</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 查看指定用户下所有表(用户名必须大写)</span>\n<span class=\"token keyword\">select</span> 表名 <span class=\"token keyword\">from</span> all_table <span class=\"token keyword\">where</span> owner <span class=\"token operator\">=</span> upper<span class=\"token punctuation\">(</span><span class=\"token string\">'用户名'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 查看表结构</span>\n<span class=\"token keyword\">desc</span> 表名<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 查看建表语句</span>\n<span class=\"token keyword\">show</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> users<span class=\"token punctuation\">;</span></code></pre>\n<ul>\n<li>删除表</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> 表名<span class=\"token punctuation\">;</span></code></pre>\n<ul>\n<li>修改表</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">## 增加字段</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token keyword\">add</span> <span class=\"token punctuation\">(</span>字段名称 字段类型<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 修改字段</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token keyword\">modify</span> <span class=\"token punctuation\">(</span>字段名称 字段类型<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 change <span class=\"token punctuation\">(</span>字段名称 字段类型<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 修改表名</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 原表名 <span class=\"token keyword\">rename</span> <span class=\"token keyword\">as</span> 新表名\n<span class=\"token comment\"># 修改表引擎语句 </span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> users <span class=\"token keyword\">engine</span> <span class=\"token operator\">=</span> <span class=\"token string\">'myisam'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## 删除字段</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token keyword\">drop</span> <span class=\"token keyword\">column</span> 字段名称<span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"5-数据操作\"><a href=\"#5-数据操作\" class=\"headerlink\" title=\"5. 数据操作\"></a>5. 数据操作</h3><ul>\n<li>插入</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> 表名<span class=\"token punctuation\">(</span>字段<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>值<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>值<span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> 表名<span class=\"token punctuation\">(</span>字段<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>a值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>a值<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>a值<span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>b值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>b值<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>b值<span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<ul>\n<li>查询</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">## 查询所有字段</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表名<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> 字段<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">3</span> <span class=\"token keyword\">from</span> 表名<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表名 <span class=\"token keyword\">where</span> 字段<span class=\"token operator\">=</span>某个值<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span>  <span class=\"token keyword\">from</span> MyClass <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> id <span class=\"token keyword\">limit</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> </code></pre>\n<ul>\n<li>修改</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">update</span> 表名 <span class=\"token keyword\">set</span> 字段<span class=\"token operator\">=</span>某个值 <span class=\"token keyword\">where</span> 条件<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">update</span> 表名 <span class=\"token keyword\">set</span> 字段<span class=\"token number\">1</span><span class=\"token operator\">=</span>值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>字段<span class=\"token number\">2</span><span class=\"token operator\">=</span>值<span class=\"token number\">2</span> <span class=\"token keyword\">where</span> 条件<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">update</span> 表名 <span class=\"token keyword\">set</span> 字段<span class=\"token operator\">=</span>字段<span class=\"token operator\">+</span>值 <span class=\"token keyword\">where</span> 条件<span class=\"token punctuation\">;</span></code></pre>\n<ul>\n<li>删除</li>\n</ul>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">## 删除字段</span>\n<span class=\"token keyword\">delete</span> <span class=\"token keyword\">from</span> 表名 <span class=\"token keyword\">where</span> 字段<span class=\"token operator\">=</span>某个值<span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"6-类型约束和运算\"><a href=\"#6-类型约束和运算\" class=\"headerlink\" title=\"6. 类型约束和运算\"></a>6. 类型约束和运算</h3><h4 id=\"1-字段约束\"><a href=\"#1-字段约束\" class=\"headerlink\" title=\"1. 字段约束\"></a>1. 字段约束</h4><p>1）unsigned 无符号(给数值类型使用，表示为正数，不写可以表示正负数都可以)</p>\n<p>2）字段类型后面加括号限制宽度</p>\n<ul>\n<li>char(5) varchar(7) 在字符类型后面加限制表示字符串的长度</li>\n<li>int(4) 没有意义，默认无符号的int为int(11)，有符号的int(10)</li>\n<li>int(4) unsigned zerofill只有当给int类型设置有前导零时，设置int的宽度才有意义。</li>\n</ul>\n<p>3）not null 不能为空，在操作数据库时如果输入该字段的数据为NULL ，就会报错</p>\n<p>4）default 设置默认值</p>\n<p>5）primary key 主键不能为空,且唯一.一般和自动递增一起配合使用。</p>\n<p>6）auto_increment 定义列为自增属性，一般用于主键，数值会自动加1</p>\n<p>7）unique 唯一索引(数据不能重复:用户名)可以增加查询速度,但是会降低插入和更新速度</p>\n<h4 id=\"2-主键\"><a href=\"#2-主键\" class=\"headerlink\" title=\"2. 主键\"></a>2. 主键</h4><h4 id=\"3-运算符\"><a href=\"#3-运算符\" class=\"headerlink\" title=\"3. 运算符\"></a>3. 运算符</h4><ul>\n<li>算术运算符：+、 -、 *、 /、 %</li>\n<li>比较运算符：=、 &gt;、 &lt;、 &gt;=、 &lt;=、!=</li>\n<li>数据库特有的比较：in、not in、is null、is not null、like、between、and</li>\n<li>逻辑运算符：and、or、not</li>\n<li>like：支持特殊符号%和_ </li>\n</ul>\n"},{"title":"Npm","mathjax":true,"date":"2022-07-03T06:44:36.000Z","description":"npm相关知识点","_content":"\n### 查看包安装版本\n\n```bash\nnpm list # 查看已安装的 npm 的包\nnpm list -g # 查看全局安装的包\nnpm list cowsay # 查看特点的包\nnpm view cowsay version # 查看包的版本\n```\n### 安装包\n\n```bash\nnpm install cowsay\nnpm i cowsay # 简化命令\nnpm install -g cowsay # 全局安装\nnpm install -S cowsay # \nnpm install -D cowsay # \nnpm install cowsay@1.2.0 # 安装特点版本的包\nnpm view cowsay versions # 查看已发布的包的所有版本\n```\n### 卸载包\n```bash\nnpm uninsatll cowsay \nnpm uninstall -g cowsay\nnpm uninstall -S cowsay # 移除依赖包 --save-dev\nnpm uninstall -D cowsay # 移除开发时的依赖 devDependencies\n```\n### 包版本控制\n\n包的版本由3个数字控制：`x.y.z`\n+ 第一个数字是主版本\n+ 第二个数字是次版本\n+ 第三个数字是补丁版本\n版本控制符号\n+ `^` 更新该版本下的次、补丁版本，如果写入的是 ^0.13.0，则当运行 npm update 时，可以更新到 0.13.1、0.13.2 等，但不能更新到 0.14.0 或更高版本。 如果写入的是 ^1.13.0，则当运行 npm update 时，可以更新到 1.13.1、1.14.0 等，但不能更新到 2.0.0 或更高版本\n+ `~` 更新该版本下的补丁版本，如果写入的是 〜0.13.0，则当运行 npm update 时，会更新到补丁版本：即 0.13.1 可以，但 0.14.0 不可以\n+ `>` 接受高于指定版本的任何版本\n+ `>=` 接受高于对于指定版本的任何版本\n+ `-` 接受一定范围的版本\n+ `||` 组合集合\n+ `latest` 使用可用最新版本\n\n### 启动vscode\n\n```js\ncode .\n```\n\n","source":"_posts/npm.md","raw":"---\ntitle: npm\nmathjax: true\ndate: 2022-07-03 14:44:36\ntags: npm\ncategories:\ndescription: npm相关知识点\n---\n\n### 查看包安装版本\n\n```bash\nnpm list # 查看已安装的 npm 的包\nnpm list -g # 查看全局安装的包\nnpm list cowsay # 查看特点的包\nnpm view cowsay version # 查看包的版本\n```\n### 安装包\n\n```bash\nnpm install cowsay\nnpm i cowsay # 简化命令\nnpm install -g cowsay # 全局安装\nnpm install -S cowsay # \nnpm install -D cowsay # \nnpm install cowsay@1.2.0 # 安装特点版本的包\nnpm view cowsay versions # 查看已发布的包的所有版本\n```\n### 卸载包\n```bash\nnpm uninsatll cowsay \nnpm uninstall -g cowsay\nnpm uninstall -S cowsay # 移除依赖包 --save-dev\nnpm uninstall -D cowsay # 移除开发时的依赖 devDependencies\n```\n### 包版本控制\n\n包的版本由3个数字控制：`x.y.z`\n+ 第一个数字是主版本\n+ 第二个数字是次版本\n+ 第三个数字是补丁版本\n版本控制符号\n+ `^` 更新该版本下的次、补丁版本，如果写入的是 ^0.13.0，则当运行 npm update 时，可以更新到 0.13.1、0.13.2 等，但不能更新到 0.14.0 或更高版本。 如果写入的是 ^1.13.0，则当运行 npm update 时，可以更新到 1.13.1、1.14.0 等，但不能更新到 2.0.0 或更高版本\n+ `~` 更新该版本下的补丁版本，如果写入的是 〜0.13.0，则当运行 npm update 时，会更新到补丁版本：即 0.13.1 可以，但 0.14.0 不可以\n+ `>` 接受高于指定版本的任何版本\n+ `>=` 接受高于对于指定版本的任何版本\n+ `-` 接受一定范围的版本\n+ `||` 组合集合\n+ `latest` 使用可用最新版本\n\n### 启动vscode\n\n```js\ncode .\n```\n\n","slug":"npm","published":1,"updated":"2022-10-24T00:57:27.997Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt36001ojsvk6cimdfpo","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"查看包安装版本\"><a href=\"#查看包安装版本\" class=\"headerlink\" title=\"查看包安装版本\"></a>查看包安装版本</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> list <span class=\"token comment\"># 查看已安装的 npm 的包</span>\n<span class=\"token function\">npm</span> list -g <span class=\"token comment\"># 查看全局安装的包</span>\n<span class=\"token function\">npm</span> list cowsay <span class=\"token comment\"># 查看特点的包</span>\n<span class=\"token function\">npm</span> view cowsay version <span class=\"token comment\"># 查看包的版本</span></code></pre>\n<h3 id=\"安装包\"><a href=\"#安装包\" class=\"headerlink\" title=\"安装包\"></a>安装包</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> cowsay\n<span class=\"token function\">npm</span> i cowsay <span class=\"token comment\"># 简化命令</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g cowsay <span class=\"token comment\"># 全局安装</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> -S cowsay <span class=\"token comment\"># </span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> -D cowsay <span class=\"token comment\"># </span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> cowsay@1.2.0 <span class=\"token comment\"># 安装特点版本的包</span>\n<span class=\"token function\">npm</span> view cowsay versions <span class=\"token comment\"># 查看已发布的包的所有版本</span></code></pre>\n<h3 id=\"卸载包\"><a href=\"#卸载包\" class=\"headerlink\" title=\"卸载包\"></a>卸载包</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> uninsatll cowsay \n<span class=\"token function\">npm</span> uninstall -g cowsay\n<span class=\"token function\">npm</span> uninstall -S cowsay <span class=\"token comment\"># 移除依赖包 --save-dev</span>\n<span class=\"token function\">npm</span> uninstall -D cowsay <span class=\"token comment\"># 移除开发时的依赖 devDependencies</span></code></pre>\n<h3 id=\"包版本控制\"><a href=\"#包版本控制\" class=\"headerlink\" title=\"包版本控制\"></a>包版本控制</h3><p>包的版本由3个数字控制：<code>x.y.z</code></p>\n<ul>\n<li>第一个数字是主版本</li>\n<li>第二个数字是次版本</li>\n<li>第三个数字是补丁版本<br>版本控制符号</li>\n<li><code>^</code> 更新该版本下的次、补丁版本，如果写入的是 ^0.13.0，则当运行 npm update 时，可以更新到 0.13.1、0.13.2 等，但不能更新到 0.14.0 或更高版本。 如果写入的是 ^1.13.0，则当运行 npm update 时，可以更新到 1.13.1、1.14.0 等，但不能更新到 2.0.0 或更高版本</li>\n<li><code>~</code> 更新该版本下的补丁版本，如果写入的是 〜0.13.0，则当运行 npm update 时，会更新到补丁版本：即 0.13.1 可以，但 0.14.0 不可以</li>\n<li><code>&gt;</code> 接受高于指定版本的任何版本</li>\n<li><code>&gt;=</code> 接受高于对于指定版本的任何版本</li>\n<li><code>-</code> 接受一定范围的版本</li>\n<li><code>||</code> 组合集合</li>\n<li><code>latest</code> 使用可用最新版本</li>\n</ul>\n<h3 id=\"启动vscode\"><a href=\"#启动vscode\" class=\"headerlink\" title=\"启动vscode\"></a>启动vscode</h3><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">code <span class=\"token punctuation\">.</span></code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160700.webp","length":726,"excerpt":"","more":"<h3 id=\"查看包安装版本\"><a href=\"#查看包安装版本\" class=\"headerlink\" title=\"查看包安装版本\"></a>查看包安装版本</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> list <span class=\"token comment\"># 查看已安装的 npm 的包</span>\n<span class=\"token function\">npm</span> list -g <span class=\"token comment\"># 查看全局安装的包</span>\n<span class=\"token function\">npm</span> list cowsay <span class=\"token comment\"># 查看特点的包</span>\n<span class=\"token function\">npm</span> view cowsay version <span class=\"token comment\"># 查看包的版本</span></code></pre>\n<h3 id=\"安装包\"><a href=\"#安装包\" class=\"headerlink\" title=\"安装包\"></a>安装包</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> cowsay\n<span class=\"token function\">npm</span> i cowsay <span class=\"token comment\"># 简化命令</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g cowsay <span class=\"token comment\"># 全局安装</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> -S cowsay <span class=\"token comment\"># </span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> -D cowsay <span class=\"token comment\"># </span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> cowsay@1.2.0 <span class=\"token comment\"># 安装特点版本的包</span>\n<span class=\"token function\">npm</span> view cowsay versions <span class=\"token comment\"># 查看已发布的包的所有版本</span></code></pre>\n<h3 id=\"卸载包\"><a href=\"#卸载包\" class=\"headerlink\" title=\"卸载包\"></a>卸载包</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> uninsatll cowsay \n<span class=\"token function\">npm</span> uninstall -g cowsay\n<span class=\"token function\">npm</span> uninstall -S cowsay <span class=\"token comment\"># 移除依赖包 --save-dev</span>\n<span class=\"token function\">npm</span> uninstall -D cowsay <span class=\"token comment\"># 移除开发时的依赖 devDependencies</span></code></pre>\n<h3 id=\"包版本控制\"><a href=\"#包版本控制\" class=\"headerlink\" title=\"包版本控制\"></a>包版本控制</h3><p>包的版本由3个数字控制：<code>x.y.z</code></p>\n<ul>\n<li>第一个数字是主版本</li>\n<li>第二个数字是次版本</li>\n<li>第三个数字是补丁版本<br>版本控制符号</li>\n<li><code>^</code> 更新该版本下的次、补丁版本，如果写入的是 ^0.13.0，则当运行 npm update 时，可以更新到 0.13.1、0.13.2 等，但不能更新到 0.14.0 或更高版本。 如果写入的是 ^1.13.0，则当运行 npm update 时，可以更新到 1.13.1、1.14.0 等，但不能更新到 2.0.0 或更高版本</li>\n<li><code>~</code> 更新该版本下的补丁版本，如果写入的是 〜0.13.0，则当运行 npm update 时，会更新到补丁版本：即 0.13.1 可以，但 0.14.0 不可以</li>\n<li><code>&gt;</code> 接受高于指定版本的任何版本</li>\n<li><code>&gt;=</code> 接受高于对于指定版本的任何版本</li>\n<li><code>-</code> 接受一定范围的版本</li>\n<li><code>||</code> 组合集合</li>\n<li><code>latest</code> 使用可用最新版本</li>\n</ul>\n<h3 id=\"启动vscode\"><a href=\"#启动vscode\" class=\"headerlink\" title=\"启动vscode\"></a>启动vscode</h3><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">code <span class=\"token punctuation\">.</span></code></pre>\n"},{"title":"Php","date":"2022-01-07T08:39:41.000Z","description":null,"_content":"\n## PHP连接数据库\n\n1. 连接数据库\n\n  ```php\n  // 服务器链接、用户名、密码、数据库名\n  $link = mysqli_connect('localhost','user','123','sql');\n  ```\n\n2. 验证连接\n\n   ```php\n   if(!$link)\n   {\n       echo \"连接失败\";\n       // 返回最近调用函数的最后一个错误描述\n       exit(mysqli_connect_error());\n   }\n\n3. 设置默认字符编码\n\n   ```php\n   mysqli_set_charset($link,'utf8');\n   ```\n\n4. SQL查询\n\n   ```php\n   // sql查询语句 随机生成一个数并将查询到的name值赋给num\n   $sql = \"select floor(rand() * count(*)) as `num` from `name`\";\n   // 执行sql语句\n   $query = mysqli_query($link,$sql);\n   ```\n\n5. 获取记录\n\n   ```php\n   // 从结果集中取得所有行作为关联数组，或数字数组\n   mysqli_fetch_all($name);\n   // 从结果集中取得一行作为关联数组，或数字数组\n   mysqli_fetch_array($name);\n   // 从结果集中取得一行作为关联数组\n   mysqli_fetch_assoc($name);\n   // 从结果集中取得当前行，并作为对象返回\n   mysqli_fetch_object($name);\n   // 从结果集中取得一行，并作为枚举数组返回\n   mysqli_fetch_row($name);\n   ```\n   \n6. 插入数据\n\n   ```php\n   $insert = \"insert into register(username,password,session) values ('$username','$password','$rand')\";\n   mysqli_query($link,$insert)\n   ```\n\n6. 关闭数据库连接\n\n   ```php\n   mysqli_close($link);\n   ```\n\n## PHP实现页面跳转\n\n### 1、php跳转代码一句话式：\n\n```php\n<?php \n  \t$url = $_GET['url'];\n\tHeader(\"Location:$url\");  \n?> \n```\n### 2、php跳转代码if判断式：\n\n```php\n<?php\n    if($_COOKIE[\"u_type\"]){  \n    header('location:register.php');  \n}  \n\telse{  \n  \t \tsetcookie('u_type','1','86400*360');//设置cookie长期有效  \n    \theader('location:zc.html');  \n} \n?>\n```\n### 3、php跳转代码javascript式：\n\n```php\n<?php\n\t$url = register.php;\n\techo \"<!--<SCRIPT LANGUAGE=\"javascript\">\";\n\techo \"locaton.href='$url'\";\n\techo \"</SCRIPT>-->\";  \n?> \n```\n### 4、php跳转代码HTML标记式(META的REFRESH属性)：\n\n```php+HTML\n<?php\n<HTML>\n    <HEAD>\n    <META HTTP-EQUIV=\"REFRESH\" CONTENT=\"10\"; URL=register.php/>\n    </HEAD>\n    <BODY>\n    </BODY>\n</HTML>\n?>\n```\n\n### 5、php跳转代码HTTP头信息(Header函数)式：\n\n```php\n<?php\n\t$url = \"register.php;\n\tHeader(\"HTTP/1.1 303 See Other\");  \n\tHeader(\"Location: $url\");  \n\texit;   \n?>\n```\n\n## 表单相关\n\n```php\n// 获取post方法提交的表单中name值为username的值\n$_POST['username']\n// 设置cookie name value expires\nsetcookie('uid',$rand,time()+3600*24*30);\n// 设置session \nsession_start(); // 开启会话\n$_SESSION['uid'] = $rand; \n```\n\n","source":"_posts/php.md","raw":"---\ntitle: php\ndate: 2022-01-07 16:39:41\ntags: [php]\ncategories:\ndescription:\n---\n\n## PHP连接数据库\n\n1. 连接数据库\n\n  ```php\n  // 服务器链接、用户名、密码、数据库名\n  $link = mysqli_connect('localhost','user','123','sql');\n  ```\n\n2. 验证连接\n\n   ```php\n   if(!$link)\n   {\n       echo \"连接失败\";\n       // 返回最近调用函数的最后一个错误描述\n       exit(mysqli_connect_error());\n   }\n\n3. 设置默认字符编码\n\n   ```php\n   mysqli_set_charset($link,'utf8');\n   ```\n\n4. SQL查询\n\n   ```php\n   // sql查询语句 随机生成一个数并将查询到的name值赋给num\n   $sql = \"select floor(rand() * count(*)) as `num` from `name`\";\n   // 执行sql语句\n   $query = mysqli_query($link,$sql);\n   ```\n\n5. 获取记录\n\n   ```php\n   // 从结果集中取得所有行作为关联数组，或数字数组\n   mysqli_fetch_all($name);\n   // 从结果集中取得一行作为关联数组，或数字数组\n   mysqli_fetch_array($name);\n   // 从结果集中取得一行作为关联数组\n   mysqli_fetch_assoc($name);\n   // 从结果集中取得当前行，并作为对象返回\n   mysqli_fetch_object($name);\n   // 从结果集中取得一行，并作为枚举数组返回\n   mysqli_fetch_row($name);\n   ```\n   \n6. 插入数据\n\n   ```php\n   $insert = \"insert into register(username,password,session) values ('$username','$password','$rand')\";\n   mysqli_query($link,$insert)\n   ```\n\n6. 关闭数据库连接\n\n   ```php\n   mysqli_close($link);\n   ```\n\n## PHP实现页面跳转\n\n### 1、php跳转代码一句话式：\n\n```php\n<?php \n  \t$url = $_GET['url'];\n\tHeader(\"Location:$url\");  \n?> \n```\n### 2、php跳转代码if判断式：\n\n```php\n<?php\n    if($_COOKIE[\"u_type\"]){  \n    header('location:register.php');  \n}  \n\telse{  \n  \t \tsetcookie('u_type','1','86400*360');//设置cookie长期有效  \n    \theader('location:zc.html');  \n} \n?>\n```\n### 3、php跳转代码javascript式：\n\n```php\n<?php\n\t$url = register.php;\n\techo \"<!--<SCRIPT LANGUAGE=\"javascript\">\";\n\techo \"locaton.href='$url'\";\n\techo \"</SCRIPT>-->\";  \n?> \n```\n### 4、php跳转代码HTML标记式(META的REFRESH属性)：\n\n```php+HTML\n<?php\n<HTML>\n    <HEAD>\n    <META HTTP-EQUIV=\"REFRESH\" CONTENT=\"10\"; URL=register.php/>\n    </HEAD>\n    <BODY>\n    </BODY>\n</HTML>\n?>\n```\n\n### 5、php跳转代码HTTP头信息(Header函数)式：\n\n```php\n<?php\n\t$url = \"register.php;\n\tHeader(\"HTTP/1.1 303 See Other\");  \n\tHeader(\"Location: $url\");  \n\texit;   \n?>\n```\n\n## 表单相关\n\n```php\n// 获取post方法提交的表单中name值为username的值\n$_POST['username']\n// 设置cookie name value expires\nsetcookie('uid',$rand,time()+3600*24*30);\n// 设置session \nsession_start(); // 开启会话\n$_SESSION['uid'] = $rand; \n```\n\n","slug":"php","published":1,"updated":"2022-08-29T00:55:49.025Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt38001rjsvk7kdv682f","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"PHP连接数据库\"><a href=\"#PHP连接数据库\" class=\"headerlink\" title=\"PHP连接数据库\"></a>PHP连接数据库</h2><ol>\n<li><p>连接数据库</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">// 服务器链接、用户名、密码、数据库名</span>\n<span class=\"token variable\">$link</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_connect</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'123'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'sql'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>验证连接</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\">   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$link</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"连接失败\"</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">// 返回最近调用函数的最后一个错误描述</span>\n       <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_connect_error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token number\">3.</span> 设置默认字符编码\n\n   <span class=\"token string backtick-quoted-string\">``</span>`php\n   <span class=\"token function\">mysqli_set_charset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$link</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>SQL查询</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">// sql查询语句 随机生成一个数并将查询到的name值赋给num</span>\n<span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"select floor(rand() * count(*)) as `num` from `name`\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 执行sql语句</span>\n<span class=\"token variable\">$query</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$link</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>获取记录</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">// 从结果集中取得所有行作为关联数组，或数字数组</span>\n<span class=\"token function\">mysqli_fetch_all</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 从结果集中取得一行作为关联数组，或数字数组</span>\n<span class=\"token function\">mysqli_fetch_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 从结果集中取得一行作为关联数组</span>\n<span class=\"token function\">mysqli_fetch_assoc</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 从结果集中取得当前行，并作为对象返回</span>\n<span class=\"token function\">mysqli_fetch_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 从结果集中取得一行，并作为枚举数组返回</span>\n<span class=\"token function\">mysqli_fetch_row</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>插入数据</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$insert</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"insert into register(username,password,session) values ('<span class=\"token interpolation\"><span class=\"token variable\">$username</span></span>','<span class=\"token interpolation\"><span class=\"token variable\">$password</span></span>','<span class=\"token interpolation\"><span class=\"token variable\">$rand</span></span>')\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$link</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$insert</span><span class=\"token punctuation\">)</span></code></pre>\n</li>\n<li><p>关闭数据库连接</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">mysqli_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$link</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n</ol>\n<h2 id=\"PHP实现页面跳转\"><a href=\"#PHP实现页面跳转\" class=\"headerlink\" title=\"PHP实现页面跳转\"></a>PHP实现页面跳转</h2><h3 id=\"1、php跳转代码一句话式：\"><a href=\"#1、php跳转代码一句话式：\" class=\"headerlink\" title=\"1、php跳转代码一句话式：\"></a>1、php跳转代码一句话式：</h3><pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> \n  \t<span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'url'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Location:<span class=\"token interpolation\"><span class=\"token variable\">$url</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token delimiter important\">?></span></span> </code></pre>\n<h3 id=\"2、php跳转代码if判断式：\"><a href=\"#2、php跳转代码if判断式：\" class=\"headerlink\" title=\"2、php跳转代码if判断式：\"></a>2、php跳转代码if判断式：</h3><pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"u_type\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>  \n    <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'location:register.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span>  \n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>  \n  \t \t<span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'u_type'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'86400*360'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置cookie长期有效  </span>\n    \t<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'location:zc.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span> \n<span class=\"token delimiter important\">?></span></span></code></pre>\n<h3 id=\"3、php跳转代码javascript式：\"><a href=\"#3、php跳转代码javascript式：\" class=\"headerlink\" title=\"3、php跳转代码javascript式：\"></a>3、php跳转代码javascript式：</h3><pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\t<span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> register<span class=\"token operator\">.</span>php<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;!--&lt;SCRIPT LANGUAGE=\"</span>javascript<span class=\"token string double-quoted-string\">\">\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"locaton.href='<span class=\"token interpolation\"><span class=\"token variable\">$url</span></span>'\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;/SCRIPT>-->\"</span><span class=\"token punctuation\">;</span>  \n<span class=\"token delimiter important\">?></span></span> </code></pre>\n<h3 id=\"4、php跳转代码HTML标记式-META的REFRESH属性-：\"><a href=\"#4、php跳转代码HTML标记式-META的REFRESH属性-：\" class=\"headerlink\" title=\"4、php跳转代码HTML标记式(META的REFRESH属性)：\"></a>4、php跳转代码HTML标记式(META的REFRESH属性)：</h3><pre class=\"language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;?php\n&lt;HTML&gt;\n    &lt;HEAD&gt;\n    &lt;META HTTP-EQUIV&#x3D;&quot;REFRESH&quot; CONTENT&#x3D;&quot;10&quot;; URL&#x3D;register.php&#x2F;&gt;\n    &lt;&#x2F;HEAD&gt;\n    &lt;BODY&gt;\n    &lt;&#x2F;BODY&gt;\n&lt;&#x2F;HTML&gt;\n?&gt;</code></pre>\n<h3 id=\"5、php跳转代码HTTP头信息-Header函数-式：\"><a href=\"#5、php跳转代码HTTP头信息-Header函数-式：\" class=\"headerlink\" title=\"5、php跳转代码HTTP头信息(Header函数)式：\"></a>5、php跳转代码HTTP头信息(Header函数)式：</h3><pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token prolog\">&lt;?php\n\t$url = \"register.php;\n\tHeader(\"HTTP/1.1 303 See Other\");  \n\tHeader(\"Location: $url\");  \n\texit;   \n?></span></code></pre>\n<h2 id=\"表单相关\"><a href=\"#表单相关\" class=\"headerlink\" title=\"表单相关\"></a>表单相关</h2><pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">// 获取post方法提交的表单中name值为username的值</span>\n<span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// 设置cookie name value expires</span>\n<span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'uid'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$rand</span><span class=\"token punctuation\">,</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">3600</span><span class=\"token operator\">*</span><span class=\"token number\">24</span><span class=\"token operator\">*</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 设置session </span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 开启会话</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'uid'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$rand</span><span class=\"token punctuation\">;</span> </code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160701.webp","length":1672,"excerpt":"","more":"<h2 id=\"PHP连接数据库\"><a href=\"#PHP连接数据库\" class=\"headerlink\" title=\"PHP连接数据库\"></a>PHP连接数据库</h2><ol>\n<li><p>连接数据库</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">// 服务器链接、用户名、密码、数据库名</span>\n<span class=\"token variable\">$link</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_connect</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'123'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'sql'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>验证连接</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\">   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$link</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"连接失败\"</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">// 返回最近调用函数的最后一个错误描述</span>\n       <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_connect_error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token number\">3.</span> 设置默认字符编码\n\n   <span class=\"token string backtick-quoted-string\">``</span>`php\n   <span class=\"token function\">mysqli_set_charset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$link</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>SQL查询</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">// sql查询语句 随机生成一个数并将查询到的name值赋给num</span>\n<span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"select floor(rand() * count(*)) as `num` from `name`\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 执行sql语句</span>\n<span class=\"token variable\">$query</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$link</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>获取记录</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">// 从结果集中取得所有行作为关联数组，或数字数组</span>\n<span class=\"token function\">mysqli_fetch_all</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 从结果集中取得一行作为关联数组，或数字数组</span>\n<span class=\"token function\">mysqli_fetch_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 从结果集中取得一行作为关联数组</span>\n<span class=\"token function\">mysqli_fetch_assoc</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 从结果集中取得当前行，并作为对象返回</span>\n<span class=\"token function\">mysqli_fetch_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 从结果集中取得一行，并作为枚举数组返回</span>\n<span class=\"token function\">mysqli_fetch_row</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>插入数据</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$insert</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"insert into register(username,password,session) values ('<span class=\"token interpolation\"><span class=\"token variable\">$username</span></span>','<span class=\"token interpolation\"><span class=\"token variable\">$password</span></span>','<span class=\"token interpolation\"><span class=\"token variable\">$rand</span></span>')\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$link</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$insert</span><span class=\"token punctuation\">)</span></code></pre>\n</li>\n<li><p>关闭数据库连接</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">mysqli_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$link</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n</ol>\n<h2 id=\"PHP实现页面跳转\"><a href=\"#PHP实现页面跳转\" class=\"headerlink\" title=\"PHP实现页面跳转\"></a>PHP实现页面跳转</h2><h3 id=\"1、php跳转代码一句话式：\"><a href=\"#1、php跳转代码一句话式：\" class=\"headerlink\" title=\"1、php跳转代码一句话式：\"></a>1、php跳转代码一句话式：</h3><pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> \n  \t<span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'url'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Location:<span class=\"token interpolation\"><span class=\"token variable\">$url</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token delimiter important\">?></span></span> </code></pre>\n<h3 id=\"2、php跳转代码if判断式：\"><a href=\"#2、php跳转代码if判断式：\" class=\"headerlink\" title=\"2、php跳转代码if判断式：\"></a>2、php跳转代码if判断式：</h3><pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"u_type\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>  \n    <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'location:register.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span>  \n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>  \n  \t \t<span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'u_type'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'86400*360'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置cookie长期有效  </span>\n    \t<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'location:zc.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span> \n<span class=\"token delimiter important\">?></span></span></code></pre>\n<h3 id=\"3、php跳转代码javascript式：\"><a href=\"#3、php跳转代码javascript式：\" class=\"headerlink\" title=\"3、php跳转代码javascript式：\"></a>3、php跳转代码javascript式：</h3><pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\t<span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> register<span class=\"token operator\">.</span>php<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;!--&lt;SCRIPT LANGUAGE=\"</span>javascript<span class=\"token string double-quoted-string\">\">\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"locaton.href='<span class=\"token interpolation\"><span class=\"token variable\">$url</span></span>'\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;/SCRIPT>-->\"</span><span class=\"token punctuation\">;</span>  \n<span class=\"token delimiter important\">?></span></span> </code></pre>\n<h3 id=\"4、php跳转代码HTML标记式-META的REFRESH属性-：\"><a href=\"#4、php跳转代码HTML标记式-META的REFRESH属性-：\" class=\"headerlink\" title=\"4、php跳转代码HTML标记式(META的REFRESH属性)：\"></a>4、php跳转代码HTML标记式(META的REFRESH属性)：</h3><pre class=\"language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;?php\n&lt;HTML&gt;\n    &lt;HEAD&gt;\n    &lt;META HTTP-EQUIV&#x3D;&quot;REFRESH&quot; CONTENT&#x3D;&quot;10&quot;; URL&#x3D;register.php&#x2F;&gt;\n    &lt;&#x2F;HEAD&gt;\n    &lt;BODY&gt;\n    &lt;&#x2F;BODY&gt;\n&lt;&#x2F;HTML&gt;\n?&gt;</code></pre>\n<h3 id=\"5、php跳转代码HTTP头信息-Header函数-式：\"><a href=\"#5、php跳转代码HTTP头信息-Header函数-式：\" class=\"headerlink\" title=\"5、php跳转代码HTTP头信息(Header函数)式：\"></a>5、php跳转代码HTTP头信息(Header函数)式：</h3><pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token prolog\">&lt;?php\n\t$url = \"register.php;\n\tHeader(\"HTTP/1.1 303 See Other\");  \n\tHeader(\"Location: $url\");  \n\texit;   \n?></span></code></pre>\n<h2 id=\"表单相关\"><a href=\"#表单相关\" class=\"headerlink\" title=\"表单相关\"></a>表单相关</h2><pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">// 获取post方法提交的表单中name值为username的值</span>\n<span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// 设置cookie name value expires</span>\n<span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'uid'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$rand</span><span class=\"token punctuation\">,</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">3600</span><span class=\"token operator\">*</span><span class=\"token number\">24</span><span class=\"token operator\">*</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 设置session </span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 开启会话</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'uid'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$rand</span><span class=\"token punctuation\">;</span> </code></pre>\n"},{"title":"supermapAPI函数封装","mathjax":true,"date":"2022-06-06T13:39:44.000Z","description":null,"_content":"\n## 框选查询\n\n### draw图形绘制\n\ndraw控件定义\n\n```js\n// 新建绘制图层\nconst editableLayers = new L.featureGroup()\nmap.addLayer(editableLayers)\n// 定义绘制控件\nconst drawControl = new L.Control.Draw({\n    draw: {\n      //绘制线\n      polyline: true,\n      //绘制多边形\n      polygon: true,\n      //绘制矩形\n      rectangle: {\n        shapeOptions: {\n          color: '#0000FF',\n        },\n      },\n      //绘制圆\n      circle: true,\n      //绘制标注\n      marker: false,\n      //绘制圆形标注\n      circlemarker: false,\n    },\n    edit: {\n      featureGroup: editableLayers,\n    },\n  })\n// 添加绘制控件\nmap.addControl(drawControl)\n```\n\n获取绘制图形坐标\n\n```js\nasync function drawLayer(map, editableLayers) {\n  return await new Promise((resolve) => {\n    map.on(L.Draw.Event.CREATED, function (e) {\n      editableLayers.addLayer(e.layer)\n      let layer = { type: e.layerType, layer: e.layer }\n      resolve(layer)\n    })\n  })\n```\n\n### 范围查询\n\n矩形框选查询\n\n```js\nasync function searchByBounds(bounds) {\n  // 范围查询参数\n  const boundsParam = await new Promise((resolve) => {\n    const params = new L.supermap.GetFeaturesByBoundsParameters({\n      datasetNames: ['ChengduFresh:Shop'],\n      bounds: bounds,\n    })\n    resolve(params)\n  })\n\n  return await new Promise((resolve) => {\n    L.supermap.featureService(dataUrl).getFeaturesByBounds(boundsParam, function (serviceResult) {\n      resolve(serviceResult.result.features)\n    })\n  })\n}\n```\n\n几何查询\n\n```js\nasync function searchByGeometry(polygon) {\n  // 几何查询参数\n  const geometryParam = await new Promise((resolve) => {\n    const params = new L.supermap.GetFeaturesByGeometryParameters({\n      datasetNames: ['ChengduFresh:Shop'],\n      geometry: polygon,\n    })\n    resolve(params)\n  })\n\n  return await new Promise((resolve) => {\n    L.supermap\n      .featureService(dataUrl)\n      .getFeaturesByGeometry(geometryParam, function (serviceResult) {\n        resolve(serviceResult.result.features)\n      })\n  })\n}\n```\n\n\n\n\n\n","source":"_posts/supermap-0.md","raw":"---\ntitle: supermapAPI函数封装\nmathjax: true\ndate: 2022-06-06 21:39:44\ntags: [leaflet,draw]\ncategories:\ndescription:\n---\n\n## 框选查询\n\n### draw图形绘制\n\ndraw控件定义\n\n```js\n// 新建绘制图层\nconst editableLayers = new L.featureGroup()\nmap.addLayer(editableLayers)\n// 定义绘制控件\nconst drawControl = new L.Control.Draw({\n    draw: {\n      //绘制线\n      polyline: true,\n      //绘制多边形\n      polygon: true,\n      //绘制矩形\n      rectangle: {\n        shapeOptions: {\n          color: '#0000FF',\n        },\n      },\n      //绘制圆\n      circle: true,\n      //绘制标注\n      marker: false,\n      //绘制圆形标注\n      circlemarker: false,\n    },\n    edit: {\n      featureGroup: editableLayers,\n    },\n  })\n// 添加绘制控件\nmap.addControl(drawControl)\n```\n\n获取绘制图形坐标\n\n```js\nasync function drawLayer(map, editableLayers) {\n  return await new Promise((resolve) => {\n    map.on(L.Draw.Event.CREATED, function (e) {\n      editableLayers.addLayer(e.layer)\n      let layer = { type: e.layerType, layer: e.layer }\n      resolve(layer)\n    })\n  })\n```\n\n### 范围查询\n\n矩形框选查询\n\n```js\nasync function searchByBounds(bounds) {\n  // 范围查询参数\n  const boundsParam = await new Promise((resolve) => {\n    const params = new L.supermap.GetFeaturesByBoundsParameters({\n      datasetNames: ['ChengduFresh:Shop'],\n      bounds: bounds,\n    })\n    resolve(params)\n  })\n\n  return await new Promise((resolve) => {\n    L.supermap.featureService(dataUrl).getFeaturesByBounds(boundsParam, function (serviceResult) {\n      resolve(serviceResult.result.features)\n    })\n  })\n}\n```\n\n几何查询\n\n```js\nasync function searchByGeometry(polygon) {\n  // 几何查询参数\n  const geometryParam = await new Promise((resolve) => {\n    const params = new L.supermap.GetFeaturesByGeometryParameters({\n      datasetNames: ['ChengduFresh:Shop'],\n      geometry: polygon,\n    })\n    resolve(params)\n  })\n\n  return await new Promise((resolve) => {\n    L.supermap\n      .featureService(dataUrl)\n      .getFeaturesByGeometry(geometryParam, function (serviceResult) {\n        resolve(serviceResult.result.features)\n      })\n  })\n}\n```\n\n\n\n\n\n","slug":"supermap-0","published":1,"updated":"2022-08-29T00:53:50.248Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt39001vjsvk9jyi7l1e","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"框选查询\"><a href=\"#框选查询\" class=\"headerlink\" title=\"框选查询\"></a>框选查询</h2><h3 id=\"draw图形绘制\"><a href=\"#draw图形绘制\" class=\"headerlink\" title=\"draw图形绘制\"></a>draw图形绘制</h3><p>draw控件定义</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 新建绘制图层</span>\n<span class=\"token keyword\">const</span> editableLayers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">L<span class=\"token punctuation\">.</span>featureGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>editableLayers<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 定义绘制控件</span>\n<span class=\"token keyword\">const</span> drawControl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">L<span class=\"token punctuation\">.</span>Control<span class=\"token punctuation\">.</span>Draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    draw<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//绘制线</span>\n      polyline<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//绘制多边形</span>\n      polygon<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//绘制矩形</span>\n      rectangle<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        shapeOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          color<span class=\"token operator\">:</span> <span class=\"token string\">'#0000FF'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//绘制圆</span>\n      circle<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//绘制标注</span>\n      marker<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//绘制圆形标注</span>\n      circlemarker<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    edit<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      featureGroup<span class=\"token operator\">:</span> editableLayers<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 添加绘制控件</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">addControl</span><span class=\"token punctuation\">(</span>drawControl<span class=\"token punctuation\">)</span></code></pre>\n<p>获取绘制图形坐标</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">drawLayer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">map<span class=\"token punctuation\">,</span> editableLayers</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>Draw<span class=\"token punctuation\">.</span>Event<span class=\"token punctuation\">.</span><span class=\"token constant\">CREATED</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      editableLayers<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>layer<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">let</span> layer <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>layerType<span class=\"token punctuation\">,</span> layer<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>layer <span class=\"token punctuation\">}</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"范围查询\"><a href=\"#范围查询\" class=\"headerlink\" title=\"范围查询\"></a>范围查询</h3><p>矩形框选查询</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">searchByBounds</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bounds</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 范围查询参数</span>\n  <span class=\"token keyword\">const</span> boundsParam <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">L<span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span>GetFeaturesByBoundsParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      datasetNames<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ChengduFresh:Shop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      bounds<span class=\"token operator\">:</span> bounds<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span><span class=\"token function\">featureService</span><span class=\"token punctuation\">(</span>dataUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFeaturesByBounds</span><span class=\"token punctuation\">(</span>boundsParam<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">serviceResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>serviceResult<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>几何查询</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">searchByGeometry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">polygon</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 几何查询参数</span>\n  <span class=\"token keyword\">const</span> geometryParam <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">L<span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span>GetFeaturesByGeometryParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      datasetNames<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ChengduFresh:Shop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      geometry<span class=\"token operator\">:</span> polygon<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap\n      <span class=\"token punctuation\">.</span><span class=\"token function\">featureService</span><span class=\"token punctuation\">(</span>dataUrl<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">getFeaturesByGeometry</span><span class=\"token punctuation\">(</span>geometryParam<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">serviceResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>serviceResult<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220124161839.webp","length":1566,"excerpt":"","more":"<h2 id=\"框选查询\"><a href=\"#框选查询\" class=\"headerlink\" title=\"框选查询\"></a>框选查询</h2><h3 id=\"draw图形绘制\"><a href=\"#draw图形绘制\" class=\"headerlink\" title=\"draw图形绘制\"></a>draw图形绘制</h3><p>draw控件定义</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 新建绘制图层</span>\n<span class=\"token keyword\">const</span> editableLayers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">L<span class=\"token punctuation\">.</span>featureGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>editableLayers<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 定义绘制控件</span>\n<span class=\"token keyword\">const</span> drawControl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">L<span class=\"token punctuation\">.</span>Control<span class=\"token punctuation\">.</span>Draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    draw<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//绘制线</span>\n      polyline<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//绘制多边形</span>\n      polygon<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//绘制矩形</span>\n      rectangle<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        shapeOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          color<span class=\"token operator\">:</span> <span class=\"token string\">'#0000FF'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//绘制圆</span>\n      circle<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//绘制标注</span>\n      marker<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//绘制圆形标注</span>\n      circlemarker<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    edit<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      featureGroup<span class=\"token operator\">:</span> editableLayers<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 添加绘制控件</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">addControl</span><span class=\"token punctuation\">(</span>drawControl<span class=\"token punctuation\">)</span></code></pre>\n<p>获取绘制图形坐标</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">drawLayer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">map<span class=\"token punctuation\">,</span> editableLayers</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>Draw<span class=\"token punctuation\">.</span>Event<span class=\"token punctuation\">.</span><span class=\"token constant\">CREATED</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      editableLayers<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>layer<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">let</span> layer <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>layerType<span class=\"token punctuation\">,</span> layer<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>layer <span class=\"token punctuation\">}</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"范围查询\"><a href=\"#范围查询\" class=\"headerlink\" title=\"范围查询\"></a>范围查询</h3><p>矩形框选查询</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">searchByBounds</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bounds</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 范围查询参数</span>\n  <span class=\"token keyword\">const</span> boundsParam <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">L<span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span>GetFeaturesByBoundsParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      datasetNames<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ChengduFresh:Shop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      bounds<span class=\"token operator\">:</span> bounds<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span><span class=\"token function\">featureService</span><span class=\"token punctuation\">(</span>dataUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFeaturesByBounds</span><span class=\"token punctuation\">(</span>boundsParam<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">serviceResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>serviceResult<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>几何查询</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">searchByGeometry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">polygon</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 几何查询参数</span>\n  <span class=\"token keyword\">const</span> geometryParam <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">L<span class=\"token punctuation\">.</span>supermap<span class=\"token punctuation\">.</span>GetFeaturesByGeometryParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      datasetNames<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ChengduFresh:Shop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      geometry<span class=\"token operator\">:</span> polygon<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span>supermap\n      <span class=\"token punctuation\">.</span><span class=\"token function\">featureService</span><span class=\"token punctuation\">(</span>dataUrl<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">getFeaturesByGeometry</span><span class=\"token punctuation\">(</span>geometryParam<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">serviceResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>serviceResult<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n"},{"title":"Vite + Vue3 + SuperMap iClient初构建","date":"2022-03-18T03:13:54.000Z","description":"挖坑","_content":"\n# 配置\n\n## 创建项目\n\n1. 创建vue3项目模板\n\n```bash\n# npm 6.x\nnpm create vite@latest my-vue-app --template vue\nnpm create vite@latest\n```\n\n2. cd到项目文件夹\n\n3. 安装包\n\n   ```bash\n   npm i\n   ```\n\n5. 创建vite配置文件\n\n   在项目根目录创建vite.consfig.js文件\n\n\n## 项目配置\n\n1. 安装所需依赖\n\n   axios、@supermap/iclient-leaflet、leaflet等 \n\n   ```bash\n   npm i axios @supermap/iclient-leaflet leaflet -S\n\n2. router配置\n\n   ```bash\n   npm install vue-router@4\n   ```\n\n   在src目录中创建router文件夹，并创建index.js，添加路由配置\n\n   ```js\n   import { createRouter,createWebHistory } from 'vue-router'\n   \n   const routes = [{\n     path: '/',\n     name: 'home',\n     component: ()=>import('@/components/HelloWorld.vue')\n   }]\n   \n   const router = createRouter({\n     history: createWebHistory(),\n     routes\n   })\n   \n   export default router\n   ```\n\n   在main.js中\n\n   ```js\n   import router from '@/router'\n   app.use(router)\n   ```\n\n2. 添加css预处理器\n\n   ```bash\n   # .scss and .sass\n   npm add -D sass\n   \n   # .less\n   npm add -D less\n   \n   # .styl and .stylus\n     npm add -D stylus\n\n2. 解决Uncaught TypeError utils.inherits is not a function问题\n\n   在package.json中添加Elasticsearch所需包\n\n   ```json\n{\n       \"devDependencies\": {\n       \"events\": \"^3.3.0\",\n       \"util\": \"^0.12.4\"\n     }\n   }\n   ```\n\n   在vite.consfig.js文件中添加配置(无则创建)\n\n   ```js\n   import { defineConfig } from 'vite'\n   import vue from '@vitejs/plugin-vue'\n   \n   // https://vitejs.dev/config/\n   export default defineConfig({\n     define: {\n       'process.env': {},\n     }\n   })    \n   ```\n\n3. Element Plus配置\n\n   1. 安装Element Plus\n\n      ```bash\n      npm install element-plus -S\n      ```\n\n   2. 配置自动按需引入\n\n      [Element Plus官方配置](https://element-plus.gitee.io/zh-CN/guide/quickstart.html)\n\n      安装自动引入插件\n\n      ```bash\n      npm install -D unplugin-vue-components unplugin-auto-import\n      ```\n      \n      在vite.config.js中添加如下代码\n      \n      ```js\n      import AutoImport from 'unplugin-auto-import/vite'\n      import Components from 'unplugin-vue-components/vite'\n      import { ElementPlusResolver } from 'unplugin-vue-components/resolvers'\n      export default {\n        plugins: [\n          // ...\n          AutoImport({\n            resolvers: [ElementPlusResolver()],\n          }),\n          Components({\n            resolvers: [ElementPlusResolver()],\n          }),\n        ],\n      }\n      ```\n\n4. leaflet配置\n\n   在main.js中添加如下代码\n\n   ```js\n   import 'leaflet/dist/leaflet.css'\n   ```\n\n5. 示例配置\n\n1.package.json\n\n```json\n{\n  \"name\": \"vue3-demo\",\n  \"private\": true,\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"vite build\",\n    \"preview\": \"vite preview\"\n  },\n  \"dependencies\": {\n    \"@supermap/iclient-leaflet\": \"^10.2.1\",\n    \"axios\": \"^0.26.1\",\n    \"element-plus\": \"^2.1.4\",\n    \"leaflet\": \"^1.7.1\",\n    \"vant\": \"^3.4.6\",\n    \"vue\": \"^3.2.25\"\n  },\n  \"devDependencies\": {\n    \"@vitejs/plugin-vue\": \"^2.2.0\",\n    \"vite\": \"^2.8.0\",\n    \"events\": \"^3.3.0\",\n    \"util\": \"^0.12.4\"\n  }\n}\n```\n\n2.vite.config.js\n\n```js\nimport { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\nimport path from 'path'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()],\n    \n  define: {\n    'process.env': {},\n  },\n   // 路径\n   resolve: {\n    extensions: ['.js', '.vue', '.json', \".scss\"],\n    alias: {\n      '@': path.resolve(__dirname, 'src')\n    }\n  },\n  server: {\n      // 代理\n    proxy: {\n      '/gaode': {\n        target: 'https://restapi.amap.com',\n        ws: true,\n        changeOrigin: true,\n        secure: true,\n        rewrite: (path) => path.replace(/^\\/gaode/, '')\n    }\n    }\n  }\n})\n```\n\n### express\n\n1. 后端代码上传\n\n2. npm i 安装依赖\n\n3. 开放端口\n\n4. pm2 start ./项目路口文件 (pm2 start ./index.js)\n\n   ```bash\n   //pm2的常用指令\n   pm2 start ./项目入口文件 --name 一个别名\n   pm2 list\n   pm2 stop id或name\n   pm2 delete id或name\n   ```\n\n5. 在域名配置文件中添加配置\n\n```nginx\n# api为对应后端代码存放文件夹名、earth为请求接口地址\nlocation /api/earth {\n      proxy_pass http://localhost:3021/;\n}\n```\n\n","source":"_posts/supermap开发初配置.md","raw":"---\ntitle: vite + vue3 + SuperMap iClient初构建\ndate: 2022-03-18 11:13:54\ntags: [supermap]\ncategories:\ndescription: 挖坑\n---\n\n# 配置\n\n## 创建项目\n\n1. 创建vue3项目模板\n\n```bash\n# npm 6.x\nnpm create vite@latest my-vue-app --template vue\nnpm create vite@latest\n```\n\n2. cd到项目文件夹\n\n3. 安装包\n\n   ```bash\n   npm i\n   ```\n\n5. 创建vite配置文件\n\n   在项目根目录创建vite.consfig.js文件\n\n\n## 项目配置\n\n1. 安装所需依赖\n\n   axios、@supermap/iclient-leaflet、leaflet等 \n\n   ```bash\n   npm i axios @supermap/iclient-leaflet leaflet -S\n\n2. router配置\n\n   ```bash\n   npm install vue-router@4\n   ```\n\n   在src目录中创建router文件夹，并创建index.js，添加路由配置\n\n   ```js\n   import { createRouter,createWebHistory } from 'vue-router'\n   \n   const routes = [{\n     path: '/',\n     name: 'home',\n     component: ()=>import('@/components/HelloWorld.vue')\n   }]\n   \n   const router = createRouter({\n     history: createWebHistory(),\n     routes\n   })\n   \n   export default router\n   ```\n\n   在main.js中\n\n   ```js\n   import router from '@/router'\n   app.use(router)\n   ```\n\n2. 添加css预处理器\n\n   ```bash\n   # .scss and .sass\n   npm add -D sass\n   \n   # .less\n   npm add -D less\n   \n   # .styl and .stylus\n     npm add -D stylus\n\n2. 解决Uncaught TypeError utils.inherits is not a function问题\n\n   在package.json中添加Elasticsearch所需包\n\n   ```json\n{\n       \"devDependencies\": {\n       \"events\": \"^3.3.0\",\n       \"util\": \"^0.12.4\"\n     }\n   }\n   ```\n\n   在vite.consfig.js文件中添加配置(无则创建)\n\n   ```js\n   import { defineConfig } from 'vite'\n   import vue from '@vitejs/plugin-vue'\n   \n   // https://vitejs.dev/config/\n   export default defineConfig({\n     define: {\n       'process.env': {},\n     }\n   })    \n   ```\n\n3. Element Plus配置\n\n   1. 安装Element Plus\n\n      ```bash\n      npm install element-plus -S\n      ```\n\n   2. 配置自动按需引入\n\n      [Element Plus官方配置](https://element-plus.gitee.io/zh-CN/guide/quickstart.html)\n\n      安装自动引入插件\n\n      ```bash\n      npm install -D unplugin-vue-components unplugin-auto-import\n      ```\n      \n      在vite.config.js中添加如下代码\n      \n      ```js\n      import AutoImport from 'unplugin-auto-import/vite'\n      import Components from 'unplugin-vue-components/vite'\n      import { ElementPlusResolver } from 'unplugin-vue-components/resolvers'\n      export default {\n        plugins: [\n          // ...\n          AutoImport({\n            resolvers: [ElementPlusResolver()],\n          }),\n          Components({\n            resolvers: [ElementPlusResolver()],\n          }),\n        ],\n      }\n      ```\n\n4. leaflet配置\n\n   在main.js中添加如下代码\n\n   ```js\n   import 'leaflet/dist/leaflet.css'\n   ```\n\n5. 示例配置\n\n1.package.json\n\n```json\n{\n  \"name\": \"vue3-demo\",\n  \"private\": true,\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"vite build\",\n    \"preview\": \"vite preview\"\n  },\n  \"dependencies\": {\n    \"@supermap/iclient-leaflet\": \"^10.2.1\",\n    \"axios\": \"^0.26.1\",\n    \"element-plus\": \"^2.1.4\",\n    \"leaflet\": \"^1.7.1\",\n    \"vant\": \"^3.4.6\",\n    \"vue\": \"^3.2.25\"\n  },\n  \"devDependencies\": {\n    \"@vitejs/plugin-vue\": \"^2.2.0\",\n    \"vite\": \"^2.8.0\",\n    \"events\": \"^3.3.0\",\n    \"util\": \"^0.12.4\"\n  }\n}\n```\n\n2.vite.config.js\n\n```js\nimport { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\nimport path from 'path'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()],\n    \n  define: {\n    'process.env': {},\n  },\n   // 路径\n   resolve: {\n    extensions: ['.js', '.vue', '.json', \".scss\"],\n    alias: {\n      '@': path.resolve(__dirname, 'src')\n    }\n  },\n  server: {\n      // 代理\n    proxy: {\n      '/gaode': {\n        target: 'https://restapi.amap.com',\n        ws: true,\n        changeOrigin: true,\n        secure: true,\n        rewrite: (path) => path.replace(/^\\/gaode/, '')\n    }\n    }\n  }\n})\n```\n\n### express\n\n1. 后端代码上传\n\n2. npm i 安装依赖\n\n3. 开放端口\n\n4. pm2 start ./项目路口文件 (pm2 start ./index.js)\n\n   ```bash\n   //pm2的常用指令\n   pm2 start ./项目入口文件 --name 一个别名\n   pm2 list\n   pm2 stop id或name\n   pm2 delete id或name\n   ```\n\n5. 在域名配置文件中添加配置\n\n```nginx\n# api为对应后端代码存放文件夹名、earth为请求接口地址\nlocation /api/earth {\n      proxy_pass http://localhost:3021/;\n}\n```\n\n","slug":"supermap开发初配置","published":1,"updated":"2022-08-29T00:54:41.576Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3a001yjsvkatqr8snd","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><ol>\n<li>创建vue3项目模板</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># npm 6.x</span>\n<span class=\"token function\">npm</span> create vite@latest my-vue-app --template vue\n<span class=\"token function\">npm</span> create vite@latest</code></pre>\n<ol>\n<li><p>cd到项目文件夹</p>\n</li>\n<li><p>安装包</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i</code></pre>\n</li>\n<li><p>创建vite配置文件</p>\n<p>在项目根目录创建vite.consfig.js文件</p>\n</li>\n</ol>\n<h2 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h2><ol>\n<li><p>安装所需依赖</p>\n<p>axios、@supermap/iclient-leaflet、leaflet等 </p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">   <span class=\"token function\">npm</span> i axios @supermap/iclient-leaflet leaflet -S\n\n<span class=\"token number\">2</span>. router配置\n\n   ```bash\n   <span class=\"token function\">npm</span> <span class=\"token function\">install</span> vue-router@4</code></pre>\n<p>在src目录中创建router文件夹，并创建index.js，添加路由配置</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createRouter<span class=\"token punctuation\">,</span>createWebHistory <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span>\n\n<span class=\"token keyword\">const</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>\n  path<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'home'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">component</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/components/HelloWorld.vue'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">createRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  history<span class=\"token operator\">:</span> <span class=\"token function\">createWebHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  routes\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> router</code></pre>\n<p>在main.js中</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> router <span class=\"token keyword\">from</span> <span class=\"token string\">'@/router'</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">)</span></code></pre>\n</li>\n<li><p>添加css预处理器</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">   <span class=\"token comment\"># .scss and .sass</span>\n   <span class=\"token function\">npm</span> <span class=\"token function\">add</span> -D sass\n   \n   <span class=\"token comment\"># .less</span>\n   <span class=\"token function\">npm</span> <span class=\"token function\">add</span> -D <span class=\"token function\">less</span>\n   \n   <span class=\"token comment\"># .styl and .stylus</span>\n     <span class=\"token function\">npm</span> <span class=\"token function\">add</span> -D stylus\n\n<span class=\"token number\">2</span>. 解决Uncaught TypeError utils.inherits is not a function问题\n\n   在package.json中添加Elasticsearch所需包\n\n   ```json\n<span class=\"token punctuation\">&#123;</span>\n       <span class=\"token string\">\"devDependencies\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token string\">\"events\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^3.3.0\"</span>,\n       <span class=\"token string\">\"util\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^0.12.4\"</span>\n     <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span></code></pre>\n<p>在vite.consfig.js文件中添加配置(无则创建)</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineConfig <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vite'</span>\n<span class=\"token keyword\">import</span> vue <span class=\"token keyword\">from</span> <span class=\"token string\">'@vitejs/plugin-vue'</span>\n\n<span class=\"token comment\">// https://vitejs.dev/config/</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  define<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'process.env'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>    </code></pre>\n</li>\n<li><p>Element Plus配置</p>\n<ol>\n<li><p>安装Element Plus</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> element-plus -S</code></pre>\n</li>\n<li><p>配置自动按需引入</p>\n<p><a href=\"https://element-plus.gitee.io/zh-CN/guide/quickstart.html\">Element Plus官方配置</a></p>\n<p>安装自动引入插件</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -D unplugin-vue-components unplugin-auto-import</code></pre>\n<p>在vite.config.js中添加如下代码</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> AutoImport <span class=\"token keyword\">from</span> <span class=\"token string\">'unplugin-auto-import/vite'</span>\n<span class=\"token keyword\">import</span> Components <span class=\"token keyword\">from</span> <span class=\"token string\">'unplugin-vue-components/vite'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ElementPlusResolver <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'unplugin-vue-components/resolvers'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token function\">AutoImport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      resolvers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">ElementPlusResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Components</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      resolvers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">ElementPlusResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n</li>\n</ol>\n</li>\n<li><p>leaflet配置</p>\n<p>在main.js中添加如下代码</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'leaflet/dist/leaflet.css'</span></code></pre>\n</li>\n<li><p>示例配置</p>\n</li>\n</ol>\n<p>1.package.json</p>\n<pre class=\"language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue3-demo\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"private\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vite build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"preview\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vite preview\"</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"@supermap/iclient-leaflet\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^10.2.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"axios\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^0.26.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"element-plus\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.1.4\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"leaflet\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.7.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vant\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.4.6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vue\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.2.25\"</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"@vitejs/plugin-vue\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.2.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vite\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.8.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"events\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.3.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"util\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^0.12.4\"</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>2.vite.config.js</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineConfig <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vite'</span>\n<span class=\"token keyword\">import</span> vue <span class=\"token keyword\">from</span> <span class=\"token string\">'@vitejs/plugin-vue'</span>\n<span class=\"token keyword\">import</span> path <span class=\"token keyword\">from</span> <span class=\"token string\">'path'</span>\n\n<span class=\"token comment\">// https://vitejs.dev/config/</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    \n  define<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'process.env'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n   <span class=\"token comment\">// 路径</span>\n   resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'.js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.vue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".scss\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    alias<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token string\">'@'</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  server<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 代理</span>\n    proxy<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token string\">'/gaode'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token operator\">:</span> <span class=\"token string\">'https://restapi.amap.com'</span><span class=\"token punctuation\">,</span>\n        ws<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        secure<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">rewrite</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> path<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\/gaode</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"express\"><a href=\"#express\" class=\"headerlink\" title=\"express\"></a>express</h3><ol>\n<li><p>后端代码上传</p>\n</li>\n<li><p>npm i 安装依赖</p>\n</li>\n<li><p>开放端口</p>\n</li>\n<li><p>pm2 start ./项目路口文件 (pm2 start ./index.js)</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">//pm2的常用指令\npm2 start ./项目入口文件 --name 一个别名\npm2 list\npm2 stop id或name\npm2 delete id或name</code></pre>\n</li>\n<li><p>在域名配置文件中添加配置</p>\n</li>\n</ol>\n<pre class=\"language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token comment\"># api为对应后端代码存放文件夹名、earth为请求接口地址</span>\n<span class=\"token directive\"><span class=\"token keyword\">location</span> /api/earth</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token directive\"><span class=\"token keyword\">proxy_pass</span> http://localhost:3021/</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160705.jpg","length":2818,"excerpt":"","more":"<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><ol>\n<li>创建vue3项目模板</li>\n</ol>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># npm 6.x</span>\n<span class=\"token function\">npm</span> create vite@latest my-vue-app --template vue\n<span class=\"token function\">npm</span> create vite@latest</code></pre>\n<ol>\n<li><p>cd到项目文件夹</p>\n</li>\n<li><p>安装包</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i</code></pre>\n</li>\n<li><p>创建vite配置文件</p>\n<p>在项目根目录创建vite.consfig.js文件</p>\n</li>\n</ol>\n<h2 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h2><ol>\n<li><p>安装所需依赖</p>\n<p>axios、@supermap/iclient-leaflet、leaflet等 </p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">   <span class=\"token function\">npm</span> i axios @supermap/iclient-leaflet leaflet -S\n\n<span class=\"token number\">2</span>. router配置\n\n   ```bash\n   <span class=\"token function\">npm</span> <span class=\"token function\">install</span> vue-router@4</code></pre>\n<p>在src目录中创建router文件夹，并创建index.js，添加路由配置</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createRouter<span class=\"token punctuation\">,</span>createWebHistory <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span>\n\n<span class=\"token keyword\">const</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>\n  path<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'home'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">component</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/components/HelloWorld.vue'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">createRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  history<span class=\"token operator\">:</span> <span class=\"token function\">createWebHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  routes\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> router</code></pre>\n<p>在main.js中</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> router <span class=\"token keyword\">from</span> <span class=\"token string\">'@/router'</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">)</span></code></pre>\n</li>\n<li><p>添加css预处理器</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">   <span class=\"token comment\"># .scss and .sass</span>\n   <span class=\"token function\">npm</span> <span class=\"token function\">add</span> -D sass\n   \n   <span class=\"token comment\"># .less</span>\n   <span class=\"token function\">npm</span> <span class=\"token function\">add</span> -D <span class=\"token function\">less</span>\n   \n   <span class=\"token comment\"># .styl and .stylus</span>\n     <span class=\"token function\">npm</span> <span class=\"token function\">add</span> -D stylus\n\n<span class=\"token number\">2</span>. 解决Uncaught TypeError utils.inherits is not a function问题\n\n   在package.json中添加Elasticsearch所需包\n\n   ```json\n<span class=\"token punctuation\">&#123;</span>\n       <span class=\"token string\">\"devDependencies\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token string\">\"events\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^3.3.0\"</span>,\n       <span class=\"token string\">\"util\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^0.12.4\"</span>\n     <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span></code></pre>\n<p>在vite.consfig.js文件中添加配置(无则创建)</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineConfig <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vite'</span>\n<span class=\"token keyword\">import</span> vue <span class=\"token keyword\">from</span> <span class=\"token string\">'@vitejs/plugin-vue'</span>\n\n<span class=\"token comment\">// https://vitejs.dev/config/</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  define<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'process.env'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>    </code></pre>\n</li>\n<li><p>Element Plus配置</p>\n<ol>\n<li><p>安装Element Plus</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> element-plus -S</code></pre>\n</li>\n<li><p>配置自动按需引入</p>\n<p><a href=\"https://element-plus.gitee.io/zh-CN/guide/quickstart.html\">Element Plus官方配置</a></p>\n<p>安装自动引入插件</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -D unplugin-vue-components unplugin-auto-import</code></pre>\n<p>在vite.config.js中添加如下代码</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> AutoImport <span class=\"token keyword\">from</span> <span class=\"token string\">'unplugin-auto-import/vite'</span>\n<span class=\"token keyword\">import</span> Components <span class=\"token keyword\">from</span> <span class=\"token string\">'unplugin-vue-components/vite'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ElementPlusResolver <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'unplugin-vue-components/resolvers'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token function\">AutoImport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      resolvers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">ElementPlusResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Components</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      resolvers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">ElementPlusResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n</li>\n</ol>\n</li>\n<li><p>leaflet配置</p>\n<p>在main.js中添加如下代码</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'leaflet/dist/leaflet.css'</span></code></pre>\n</li>\n<li><p>示例配置</p>\n</li>\n</ol>\n<p>1.package.json</p>\n<pre class=\"language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue3-demo\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"private\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vite build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"preview\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vite preview\"</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"@supermap/iclient-leaflet\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^10.2.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"axios\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^0.26.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"element-plus\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.1.4\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"leaflet\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.7.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vant\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.4.6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vue\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.2.25\"</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"@vitejs/plugin-vue\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.2.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vite\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.8.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"events\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.3.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"util\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^0.12.4\"</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>2.vite.config.js</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineConfig <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vite'</span>\n<span class=\"token keyword\">import</span> vue <span class=\"token keyword\">from</span> <span class=\"token string\">'@vitejs/plugin-vue'</span>\n<span class=\"token keyword\">import</span> path <span class=\"token keyword\">from</span> <span class=\"token string\">'path'</span>\n\n<span class=\"token comment\">// https://vitejs.dev/config/</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    \n  define<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'process.env'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n   <span class=\"token comment\">// 路径</span>\n   resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'.js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.vue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".scss\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    alias<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token string\">'@'</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  server<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 代理</span>\n    proxy<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token string\">'/gaode'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token operator\">:</span> <span class=\"token string\">'https://restapi.amap.com'</span><span class=\"token punctuation\">,</span>\n        ws<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        secure<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">rewrite</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> path<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\/gaode</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"express\"><a href=\"#express\" class=\"headerlink\" title=\"express\"></a>express</h3><ol>\n<li><p>后端代码上传</p>\n</li>\n<li><p>npm i 安装依赖</p>\n</li>\n<li><p>开放端口</p>\n</li>\n<li><p>pm2 start ./项目路口文件 (pm2 start ./index.js)</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">//pm2的常用指令\npm2 start ./项目入口文件 --name 一个别名\npm2 list\npm2 stop id或name\npm2 delete id或name</code></pre>\n</li>\n<li><p>在域名配置文件中添加配置</p>\n</li>\n</ol>\n<pre class=\"language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token comment\"># api为对应后端代码存放文件夹名、earth为请求接口地址</span>\n<span class=\"token directive\"><span class=\"token keyword\">location</span> /api/earth</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token directive\"><span class=\"token keyword\">proxy_pass</span> http://localhost:3021/</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n"},{"title":"Tools","date":"2021-08-22T01:17:53.000Z","top":-4,"description":"一些实用工具","_content":"\n<center style='font-size:28px; font-weight: bold' >List</center>\n\n| nickname       | tools          | usage                                                        |\n| :------------- | :------------- | :----------------------------------------------------------- |\n| 油猴           | tampermonkey   | [油猴脚本插件](https://wwt.lanzouj.com/iSpRXxxtvbc)          |\n| V2ray          | V2ray          | 翻墙                                                         |\n| 小猫咪         | clash          | 翻墙                                                         |\n| SyncTrayzor    | SyncTrayzor    | [同步文件](https://github.com/canton7/SyncTrayzor)           |\n| uTools         | uTools         | [工具集](https://www.u.tools/download.html)                  |\n| Bandzip        | Bandzip        | [解压](http://www.bandisoft.com/)                            |\n| winrar         | winrar         | 解压                                                         |\n| 7-zip          | 7-zip          | [解压](https://sparanoid.com/lab/7z/)                        |\n| listen1        | listen1        | [音乐](https://github.com/listen1/listen1_chrome_extension)  |\n| IDM            | IDM            | [下载](https://wwt.lanzouj.com/iMbWFxxtv9a)                  |\n| 冰点文库       | 冰点文库       | [百度文库下载](https://wwt.lanzouj.com/ibdYfxxt03i)          |\n| bongo          | bongo          | [桌宠](https://wwt.lanzouj.com/iCdISxxu4ch)                  |\n| git            | git            | [版本控制](https://git-scm.com/)                             |\n| Hexo           | Hexo           | [静态网站搭建](https://hexo.io/zh-cn/)                       |\n| Typora         | Typora         | [Markdown编辑器](https://wwt.lanzouj.com/iS8tyxxsuze)密码:26qa |\n| 图床           | Pickgo         | [图床]()                                                     |\n| vscode         | vscode         | [前端编辑器](https://code.visualstudio.com/Download)         |\n| pycharm        | pycharm        | [python编辑器](https://www.jetbrains.com/pycharm/)           |\n| 唧唧Down       | 唧唧Down       | [B站视频下载器](https://wwt.lanzouj.com/iyHKcxxuo7c)         |\n| navicat        | navicat        | [数据库](https://wwt.lanzouj.com/itV4lxxqs1g)密码:245x       |\n| fidder         | fidder         | [抓包神器](https://wwt.lanzouj.com/iOKlWxxc95c)密码:d2yf     |\n| 4KVD_Subscribe | 4KVD_Subscribe | [批量下载youtube视频](https://wwt.lanzouj.com/i5wrYxxc91i)密码:i5d9 |\n| Xshell 7       | Xshell7        | [终端ssh](https://wwt.lanzouj.com/iqmiGxxsp1a)密码:ai3b      |\n| Xftp 7         | Xftp 7         | [linux与windows文件交互工具](https://wwt.lanzouj.com/iDuWqxxsjve)密码:19zp |\n| Xmind          | Xmind          | [思维导图](https://wwt.lanzouj.com/iK2omxxsnmj)密码:cnf1     |\n\n<center>网站</center>\n\n| 网站           | 网址                                                         |\n| -------------- | ------------------------------------------------------------ |\n| 博客站点       | [faith-hesper]([https://faith-hesper.github.io](https://faith-hesper.github.io/) ) |\n| 网站           | [lntano]([https://lntano.top](https://lntano.top/) )         |\n| 假条           | [lntano](https://lntano.top/wechat )                         |\n| 网盘资源下载器 | [AriaNg](http://114.115.150.215/AriaNg )                     |\n| 私有云盘       | [Cloudreve]([http://114.115.150.215:5212](http://114.115.150.215:5212/) ) |\n| 京东薅薅乐     | [Nolan](http://114.115.150.215:8081/login )                  |\n| 京东薅薅乐方法 | [faith-hesper]([https://faith-hesper.github.io/archives/%E4%BA%AC%E4%B8%9C%E8%96%85%E8%96%85%E4%B9%90/?t=1640264684355](https://faith-hesper.github.io/archives/京东薅薅乐/?t=1640264684355) ) |\n\n\n\n## navicat食用方法🤔\n\n有很多同学下载了Navicat Premium的注册机不知道如何使用，本教程就来教大家如何使用这个来自国外的通杀注册机\n\n首先下载地址：https://www.ghxi.com/navicat.html\n\n下载注册机\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat01_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat01_sy.png)\n\n点击按钮patch，如果你没有默认安装到C盘的话，会提示选择Navicat Premium目录的Navicat.exe文件\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat02_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat02_sy.png)\n\n提示成功后，选择语言为简体中文\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat03_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat03_sy.png)\n\n输入你的用户信息后，点击Generate创建激活码，复制这个激活码\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat04_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat04_sy.png)\n\n打开软件，会提示你注册，我们点击注册即可\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat05_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat05_sy.png)\n\n输入我们的激活码，点击激活\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat06_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat06_sy.png)\n\n会弹出提示，没有联网，因为我们最开始给他的联网激活功能破解了，这儿点击手动激活\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat07_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat07_sy.png)\n\n这时候会弹出一个手动激活的窗口，复制这一长传激活码\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat08_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat08_sy.png)\n\n复制到注册机的文本框里面粘贴，然后点击最下面的Generate按钮，即可获得离线激活码，不出意外，你的软件激活码的那个框框会自动输入离线激活码\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat09_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat09_sy.png)\n\n点击激活即可提示激活成功\n\n","source":"_posts/tools.md","raw":"---\ntitle: tools\ndate: 2021-08-22 09:17:53\ntags: [工具,tool]\ntop: -4\ncategories: 工具\ndescription: 一些实用工具\n---\n\n<center style='font-size:28px; font-weight: bold' >List</center>\n\n| nickname       | tools          | usage                                                        |\n| :------------- | :------------- | :----------------------------------------------------------- |\n| 油猴           | tampermonkey   | [油猴脚本插件](https://wwt.lanzouj.com/iSpRXxxtvbc)          |\n| V2ray          | V2ray          | 翻墙                                                         |\n| 小猫咪         | clash          | 翻墙                                                         |\n| SyncTrayzor    | SyncTrayzor    | [同步文件](https://github.com/canton7/SyncTrayzor)           |\n| uTools         | uTools         | [工具集](https://www.u.tools/download.html)                  |\n| Bandzip        | Bandzip        | [解压](http://www.bandisoft.com/)                            |\n| winrar         | winrar         | 解压                                                         |\n| 7-zip          | 7-zip          | [解压](https://sparanoid.com/lab/7z/)                        |\n| listen1        | listen1        | [音乐](https://github.com/listen1/listen1_chrome_extension)  |\n| IDM            | IDM            | [下载](https://wwt.lanzouj.com/iMbWFxxtv9a)                  |\n| 冰点文库       | 冰点文库       | [百度文库下载](https://wwt.lanzouj.com/ibdYfxxt03i)          |\n| bongo          | bongo          | [桌宠](https://wwt.lanzouj.com/iCdISxxu4ch)                  |\n| git            | git            | [版本控制](https://git-scm.com/)                             |\n| Hexo           | Hexo           | [静态网站搭建](https://hexo.io/zh-cn/)                       |\n| Typora         | Typora         | [Markdown编辑器](https://wwt.lanzouj.com/iS8tyxxsuze)密码:26qa |\n| 图床           | Pickgo         | [图床]()                                                     |\n| vscode         | vscode         | [前端编辑器](https://code.visualstudio.com/Download)         |\n| pycharm        | pycharm        | [python编辑器](https://www.jetbrains.com/pycharm/)           |\n| 唧唧Down       | 唧唧Down       | [B站视频下载器](https://wwt.lanzouj.com/iyHKcxxuo7c)         |\n| navicat        | navicat        | [数据库](https://wwt.lanzouj.com/itV4lxxqs1g)密码:245x       |\n| fidder         | fidder         | [抓包神器](https://wwt.lanzouj.com/iOKlWxxc95c)密码:d2yf     |\n| 4KVD_Subscribe | 4KVD_Subscribe | [批量下载youtube视频](https://wwt.lanzouj.com/i5wrYxxc91i)密码:i5d9 |\n| Xshell 7       | Xshell7        | [终端ssh](https://wwt.lanzouj.com/iqmiGxxsp1a)密码:ai3b      |\n| Xftp 7         | Xftp 7         | [linux与windows文件交互工具](https://wwt.lanzouj.com/iDuWqxxsjve)密码:19zp |\n| Xmind          | Xmind          | [思维导图](https://wwt.lanzouj.com/iK2omxxsnmj)密码:cnf1     |\n\n<center>网站</center>\n\n| 网站           | 网址                                                         |\n| -------------- | ------------------------------------------------------------ |\n| 博客站点       | [faith-hesper]([https://faith-hesper.github.io](https://faith-hesper.github.io/) ) |\n| 网站           | [lntano]([https://lntano.top](https://lntano.top/) )         |\n| 假条           | [lntano](https://lntano.top/wechat )                         |\n| 网盘资源下载器 | [AriaNg](http://114.115.150.215/AriaNg )                     |\n| 私有云盘       | [Cloudreve]([http://114.115.150.215:5212](http://114.115.150.215:5212/) ) |\n| 京东薅薅乐     | [Nolan](http://114.115.150.215:8081/login )                  |\n| 京东薅薅乐方法 | [faith-hesper]([https://faith-hesper.github.io/archives/%E4%BA%AC%E4%B8%9C%E8%96%85%E8%96%85%E4%B9%90/?t=1640264684355](https://faith-hesper.github.io/archives/京东薅薅乐/?t=1640264684355) ) |\n\n\n\n## navicat食用方法🤔\n\n有很多同学下载了Navicat Premium的注册机不知道如何使用，本教程就来教大家如何使用这个来自国外的通杀注册机\n\n首先下载地址：https://www.ghxi.com/navicat.html\n\n下载注册机\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat01_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat01_sy.png)\n\n点击按钮patch，如果你没有默认安装到C盘的话，会提示选择Navicat Premium目录的Navicat.exe文件\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat02_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat02_sy.png)\n\n提示成功后，选择语言为简体中文\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat03_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat03_sy.png)\n\n输入你的用户信息后，点击Generate创建激活码，复制这个激活码\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat04_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat04_sy.png)\n\n打开软件，会提示你注册，我们点击注册即可\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat05_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat05_sy.png)\n\n输入我们的激活码，点击激活\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat06_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat06_sy.png)\n\n会弹出提示，没有联网，因为我们最开始给他的联网激活功能破解了，这儿点击手动激活\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat07_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat07_sy.png)\n\n这时候会弹出一个手动激活的窗口，复制这一长传激活码\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat08_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat08_sy.png)\n\n复制到注册机的文本框里面粘贴，然后点击最下面的Generate按钮，即可获得离线激活码，不出意外，你的软件激活码的那个框框会自动输入离线激活码\n\n[![Navicat Premium12 破解教程](https://img.lovestu.com/uploads/2018/10/navicat09_sy.png)](https://img.lovestu.com/uploads/2018/10/navicat09_sy.png)\n\n点击激活即可提示激活成功\n\n","slug":"tools","published":1,"updated":"2022-08-29T00:56:34.756Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3b0021jsvk9pvgar4g","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><center style='font-size:28px; font-weight: bold' >List</center>\n\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">nickname</th>\n<th style=\"text-align:left\">tools</th>\n<th style=\"text-align:left\">usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">油猴</td>\n<td style=\"text-align:left\">tampermonkey</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iSpRXxxtvbc\">油猴脚本插件</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">V2ray</td>\n<td style=\"text-align:left\">V2ray</td>\n<td style=\"text-align:left\">翻墙</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">小猫咪</td>\n<td style=\"text-align:left\">clash</td>\n<td style=\"text-align:left\">翻墙</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SyncTrayzor</td>\n<td style=\"text-align:left\">SyncTrayzor</td>\n<td style=\"text-align:left\"><a href=\"https://github.com/canton7/SyncTrayzor\">同步文件</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">uTools</td>\n<td style=\"text-align:left\">uTools</td>\n<td style=\"text-align:left\"><a href=\"https://www.u.tools/download.html\">工具集</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Bandzip</td>\n<td style=\"text-align:left\">Bandzip</td>\n<td style=\"text-align:left\"><a href=\"http://www.bandisoft.com/\">解压</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">winrar</td>\n<td style=\"text-align:left\">winrar</td>\n<td style=\"text-align:left\">解压</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">7-zip</td>\n<td style=\"text-align:left\">7-zip</td>\n<td style=\"text-align:left\"><a href=\"https://sparanoid.com/lab/7z/\">解压</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">listen1</td>\n<td style=\"text-align:left\">listen1</td>\n<td style=\"text-align:left\"><a href=\"https://github.com/listen1/listen1_chrome_extension\">音乐</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IDM</td>\n<td style=\"text-align:left\">IDM</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iMbWFxxtv9a\">下载</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">冰点文库</td>\n<td style=\"text-align:left\">冰点文库</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/ibdYfxxt03i\">百度文库下载</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bongo</td>\n<td style=\"text-align:left\">bongo</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iCdISxxu4ch\">桌宠</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">git</td>\n<td style=\"text-align:left\">git</td>\n<td style=\"text-align:left\"><a href=\"https://git-scm.com/\">版本控制</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Hexo</td>\n<td style=\"text-align:left\">Hexo</td>\n<td style=\"text-align:left\"><a href=\"https://hexo.io/zh-cn/\">静态网站搭建</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Typora</td>\n<td style=\"text-align:left\">Typora</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iS8tyxxsuze\">Markdown编辑器</a>密码:26qa</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">图床</td>\n<td style=\"text-align:left\">Pickgo</td>\n<td style=\"text-align:left\"><a href=\"\">图床</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">vscode</td>\n<td style=\"text-align:left\">vscode</td>\n<td style=\"text-align:left\"><a href=\"https://code.visualstudio.com/Download\">前端编辑器</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pycharm</td>\n<td style=\"text-align:left\">pycharm</td>\n<td style=\"text-align:left\"><a href=\"https://www.jetbrains.com/pycharm/\">python编辑器</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">唧唧Down</td>\n<td style=\"text-align:left\">唧唧Down</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iyHKcxxuo7c\">B站视频下载器</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">navicat</td>\n<td style=\"text-align:left\">navicat</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/itV4lxxqs1g\">数据库</a>密码:245x</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">fidder</td>\n<td style=\"text-align:left\">fidder</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iOKlWxxc95c\">抓包神器</a>密码:d2yf</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4KVD_Subscribe</td>\n<td style=\"text-align:left\">4KVD_Subscribe</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/i5wrYxxc91i\">批量下载youtube视频</a>密码:i5d9</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Xshell 7</td>\n<td style=\"text-align:left\">Xshell7</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iqmiGxxsp1a\">终端ssh</a>密码:ai3b</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Xftp 7</td>\n<td style=\"text-align:left\">Xftp 7</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iDuWqxxsjve\">linux与windows文件交互工具</a>密码:19zp</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Xmind</td>\n<td style=\"text-align:left\">Xmind</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iK2omxxsnmj\">思维导图</a>密码:cnf1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<center>网站</center>\n\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>网站</th>\n<th>网址</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>博客站点</td>\n<td><a href=\"[https://faith-hesper.github.io](https://faith-hesper.github.io/\">faith-hesper</a> )</td>\n</tr>\n<tr>\n<td>网站</td>\n<td><a href=\"[https://lntano.top](https://lntano.top/\">lntano</a> )</td>\n</tr>\n<tr>\n<td>假条</td>\n<td><a href=\"https://lntano.top/wechat\">lntano</a></td>\n</tr>\n<tr>\n<td>网盘资源下载器</td>\n<td><a href=\"http://114.115.150.215/AriaNg\">AriaNg</a></td>\n</tr>\n<tr>\n<td>私有云盘</td>\n<td><a href=\"[http://114.115.150.215:5212](http://114.115.150.215:5212/\">Cloudreve</a> )</td>\n</tr>\n<tr>\n<td>京东薅薅乐</td>\n<td><a href=\"http://114.115.150.215:8081/login\">Nolan</a></td>\n</tr>\n<tr>\n<td>京东薅薅乐方法</td>\n<td><a href=\"[https://faith-hesper.github.io/archives/%E4%BA%AC%E4%B8%9C%E8%96%85%E8%96%85%E4%B9%90/?t=1640264684355](https://faith-hesper.github.io/archives/京东薅薅乐/?t=1640264684355\">faith-hesper</a> )</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"navicat食用方法🤔\"><a href=\"#navicat食用方法🤔\" class=\"headerlink\" title=\"navicat食用方法🤔\"></a>navicat食用方法🤔</h2><p>有很多同学下载了Navicat Premium的注册机不知道如何使用，本教程就来教大家如何使用这个来自国外的通杀注册机</p>\n<p>首先下载地址：<a href=\"https://www.ghxi.com/navicat.html\">https://www.ghxi.com/navicat.html</a></p>\n<p>下载注册机</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat01_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat01_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>点击按钮patch，如果你没有默认安装到C盘的话，会提示选择Navicat Premium目录的Navicat.exe文件</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat02_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat02_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>提示成功后，选择语言为简体中文</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat03_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat03_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>输入你的用户信息后，点击Generate创建激活码，复制这个激活码</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat04_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat04_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>打开软件，会提示你注册，我们点击注册即可</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat05_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat05_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>输入我们的激活码，点击激活</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat06_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat06_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>会弹出提示，没有联网，因为我们最开始给他的联网激活功能破解了，这儿点击手动激活</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat07_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat07_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>这时候会弹出一个手动激活的窗口，复制这一长传激活码</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat08_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat08_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>复制到注册机的文本框里面粘贴，然后点击最下面的Generate按钮，即可获得离线激活码，不出意外，你的软件激活码的那个框框会自动输入离线激活码</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat09_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat09_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>点击激活即可提示激活成功</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160705.jpg","length":999,"excerpt":"","more":"<center style='font-size:28px; font-weight: bold' >List</center>\n\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">nickname</th>\n<th style=\"text-align:left\">tools</th>\n<th style=\"text-align:left\">usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">油猴</td>\n<td style=\"text-align:left\">tampermonkey</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iSpRXxxtvbc\">油猴脚本插件</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">V2ray</td>\n<td style=\"text-align:left\">V2ray</td>\n<td style=\"text-align:left\">翻墙</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">小猫咪</td>\n<td style=\"text-align:left\">clash</td>\n<td style=\"text-align:left\">翻墙</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SyncTrayzor</td>\n<td style=\"text-align:left\">SyncTrayzor</td>\n<td style=\"text-align:left\"><a href=\"https://github.com/canton7/SyncTrayzor\">同步文件</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">uTools</td>\n<td style=\"text-align:left\">uTools</td>\n<td style=\"text-align:left\"><a href=\"https://www.u.tools/download.html\">工具集</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Bandzip</td>\n<td style=\"text-align:left\">Bandzip</td>\n<td style=\"text-align:left\"><a href=\"http://www.bandisoft.com/\">解压</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">winrar</td>\n<td style=\"text-align:left\">winrar</td>\n<td style=\"text-align:left\">解压</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">7-zip</td>\n<td style=\"text-align:left\">7-zip</td>\n<td style=\"text-align:left\"><a href=\"https://sparanoid.com/lab/7z/\">解压</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">listen1</td>\n<td style=\"text-align:left\">listen1</td>\n<td style=\"text-align:left\"><a href=\"https://github.com/listen1/listen1_chrome_extension\">音乐</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IDM</td>\n<td style=\"text-align:left\">IDM</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iMbWFxxtv9a\">下载</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">冰点文库</td>\n<td style=\"text-align:left\">冰点文库</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/ibdYfxxt03i\">百度文库下载</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bongo</td>\n<td style=\"text-align:left\">bongo</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iCdISxxu4ch\">桌宠</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">git</td>\n<td style=\"text-align:left\">git</td>\n<td style=\"text-align:left\"><a href=\"https://git-scm.com/\">版本控制</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Hexo</td>\n<td style=\"text-align:left\">Hexo</td>\n<td style=\"text-align:left\"><a href=\"https://hexo.io/zh-cn/\">静态网站搭建</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Typora</td>\n<td style=\"text-align:left\">Typora</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iS8tyxxsuze\">Markdown编辑器</a>密码:26qa</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">图床</td>\n<td style=\"text-align:left\">Pickgo</td>\n<td style=\"text-align:left\"><a href=\"\">图床</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">vscode</td>\n<td style=\"text-align:left\">vscode</td>\n<td style=\"text-align:left\"><a href=\"https://code.visualstudio.com/Download\">前端编辑器</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pycharm</td>\n<td style=\"text-align:left\">pycharm</td>\n<td style=\"text-align:left\"><a href=\"https://www.jetbrains.com/pycharm/\">python编辑器</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">唧唧Down</td>\n<td style=\"text-align:left\">唧唧Down</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iyHKcxxuo7c\">B站视频下载器</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">navicat</td>\n<td style=\"text-align:left\">navicat</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/itV4lxxqs1g\">数据库</a>密码:245x</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">fidder</td>\n<td style=\"text-align:left\">fidder</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iOKlWxxc95c\">抓包神器</a>密码:d2yf</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4KVD_Subscribe</td>\n<td style=\"text-align:left\">4KVD_Subscribe</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/i5wrYxxc91i\">批量下载youtube视频</a>密码:i5d9</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Xshell 7</td>\n<td style=\"text-align:left\">Xshell7</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iqmiGxxsp1a\">终端ssh</a>密码:ai3b</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Xftp 7</td>\n<td style=\"text-align:left\">Xftp 7</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iDuWqxxsjve\">linux与windows文件交互工具</a>密码:19zp</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Xmind</td>\n<td style=\"text-align:left\">Xmind</td>\n<td style=\"text-align:left\"><a href=\"https://wwt.lanzouj.com/iK2omxxsnmj\">思维导图</a>密码:cnf1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<center>网站</center>\n\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>网站</th>\n<th>网址</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>博客站点</td>\n<td><a href=\"[https://faith-hesper.github.io](https://faith-hesper.github.io/\">faith-hesper</a> )</td>\n</tr>\n<tr>\n<td>网站</td>\n<td><a href=\"[https://lntano.top](https://lntano.top/\">lntano</a> )</td>\n</tr>\n<tr>\n<td>假条</td>\n<td><a href=\"https://lntano.top/wechat\">lntano</a></td>\n</tr>\n<tr>\n<td>网盘资源下载器</td>\n<td><a href=\"http://114.115.150.215/AriaNg\">AriaNg</a></td>\n</tr>\n<tr>\n<td>私有云盘</td>\n<td><a href=\"[http://114.115.150.215:5212](http://114.115.150.215:5212/\">Cloudreve</a> )</td>\n</tr>\n<tr>\n<td>京东薅薅乐</td>\n<td><a href=\"http://114.115.150.215:8081/login\">Nolan</a></td>\n</tr>\n<tr>\n<td>京东薅薅乐方法</td>\n<td><a href=\"[https://faith-hesper.github.io/archives/%E4%BA%AC%E4%B8%9C%E8%96%85%E8%96%85%E4%B9%90/?t=1640264684355](https://faith-hesper.github.io/archives/京东薅薅乐/?t=1640264684355\">faith-hesper</a> )</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"navicat食用方法🤔\"><a href=\"#navicat食用方法🤔\" class=\"headerlink\" title=\"navicat食用方法🤔\"></a>navicat食用方法🤔</h2><p>有很多同学下载了Navicat Premium的注册机不知道如何使用，本教程就来教大家如何使用这个来自国外的通杀注册机</p>\n<p>首先下载地址：<a href=\"https://www.ghxi.com/navicat.html\">https://www.ghxi.com/navicat.html</a></p>\n<p>下载注册机</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat01_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat01_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>点击按钮patch，如果你没有默认安装到C盘的话，会提示选择Navicat Premium目录的Navicat.exe文件</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat02_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat02_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>提示成功后，选择语言为简体中文</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat03_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat03_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>输入你的用户信息后，点击Generate创建激活码，复制这个激活码</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat04_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat04_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>打开软件，会提示你注册，我们点击注册即可</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat05_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat05_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>输入我们的激活码，点击激活</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat06_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat06_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>会弹出提示，没有联网，因为我们最开始给他的联网激活功能破解了，这儿点击手动激活</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat07_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat07_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>这时候会弹出一个手动激活的窗口，复制这一长传激活码</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat08_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat08_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>复制到注册机的文本框里面粘贴，然后点击最下面的Generate按钮，即可获得离线激活码，不出意外，你的软件激活码的那个框框会自动输入离线激活码</p>\n<p><a href=\"https://img.lovestu.com/uploads/2018/10/navicat09_sy.png\"><img src=\"https://img.lovestu.com/uploads/2018/10/navicat09_sy.png\" alt=\"Navicat Premium12 破解教程\"></a></p>\n<p>点击激活即可提示激活成功</p>\n"},{"title":"Typora快捷键","date":"2021-11-13T11:44:22.000Z","top":-3,"description":"Typora快捷键包括菜单栏、文件、编辑、段落、格式、视图等","_content":"\n## 一：菜单栏\n\n+ 文件：alt+F\n+ 编辑：alt+\n+ 段落：alt+P\n+ 格式：alt+O\n+ 视图：alt+V\n+ 主题：alt+T\n+ 帮助：alt+H\n\n## 二：文件\n\n+ 新建：Ctrl+N\n+ 新建窗口：Ctrl+Shift+N\n+ 打开：Ctrl+O\n+ 快速打开：Ctrl+P\n+ 保存：Ctrl+S\n+ 另存为：Ctrl+Shift+S\n+ 偏好：Ctrl+,\n+ 关闭：Ctrl+W\n\n## 三：编辑\n\n+ 撤销：Ctrl+Z\n+ 重做：Ctrl+Y\n+ 剪切：Ctrl+X\n+ 复制：Ctrl+C\n+ 粘贴：Ctrl+V\n+ 插入链接：Ctrl+K\n+ 复制为MarkDown：Ctrl+Shift+C\n+ 粘贴为纯文本：Ctrl+Shift+V\n+ 全选：Ctrl+A\n+ 选中当前行/句：Ctrl+L\n+ 选中当前格式文本：Ctrl+E\n+ 选中当前词：Ctrl+D\n+ 跳转到文首：Ctrl+Home\n+ 跳转到所选内容：Ctrl+J\n+ 跳转到文末：Ctrl+End\n+ 查找：Ctrl+F\n+ 查找下一个：F3\n+ 查找上一个：Shift+F3\n+ 替换：Ctrl+H\n\n## 四：段落\n\n+ 标题：Ctrl+1/2/3/4/5\n+ 段落：Ctrl+0\n+ 增大标题级别：Ctrl+=\n+ 减少标题级别：Ctrl+-\n+ 表格：Ctrl+T\n+ 代码块：Ctrl+Shift+K\n+ 公式块：Ctrl+Shift+M\n+ 引用：Ctrl+Shift+Q\n+ 有序列表：Ctrl+Shift+[\n+ 无序列表：Ctrl+Shift+]\n+ 增加缩进：Ctrl+]\n+ 减少缩进：Ctrl+[\n\n## 五：格式\n\n+ 加粗：Ctrl+B\n+ 斜体：Ctrl+I\n+ 下划线：Ctrl+U\n+ 代码：Ctrl+Shift+`\n+ 删除线：Alt+Shift+5\n+ 超链接：Ctrl+K\n+ 图像：Ctrl+Shift+I\n+ 清除样式：Ctrl+\n\n## 六：视图\n\n+ 显示隐藏侧边栏：Ctrl+Shift+L\n+ 大纲视图：Ctrl+Shift+1\n+ 文档列表视图：Ctrl+Shift+2\n+ 文件树视图：Ctrl+Shift+3\n+ 源代码模式：Ctrl+/\n+ 专注模式：F8\n+ 打字机模式：F9\n+ 切换全屏：F11\n+ 实际大小：Ctrl+Shift+0\n+ 放大：Ctrl+Shift+=\n+ 缩小：Ctrl+Shift+-\n+ 应用内窗口切换：Ctrl+Tab\n+ 打开DevTools：Shift+F12\n","source":"_posts/typora快捷键.md","raw":"---\ntitle: typora快捷键\ndate: 2021-11-13 19:44:22\ntop: -3\ntags: [typora,快捷键]\ncategories: typora快捷键\ndescription: Typora快捷键包括菜单栏、文件、编辑、段落、格式、视图等\n---\n\n## 一：菜单栏\n\n+ 文件：alt+F\n+ 编辑：alt+\n+ 段落：alt+P\n+ 格式：alt+O\n+ 视图：alt+V\n+ 主题：alt+T\n+ 帮助：alt+H\n\n## 二：文件\n\n+ 新建：Ctrl+N\n+ 新建窗口：Ctrl+Shift+N\n+ 打开：Ctrl+O\n+ 快速打开：Ctrl+P\n+ 保存：Ctrl+S\n+ 另存为：Ctrl+Shift+S\n+ 偏好：Ctrl+,\n+ 关闭：Ctrl+W\n\n## 三：编辑\n\n+ 撤销：Ctrl+Z\n+ 重做：Ctrl+Y\n+ 剪切：Ctrl+X\n+ 复制：Ctrl+C\n+ 粘贴：Ctrl+V\n+ 插入链接：Ctrl+K\n+ 复制为MarkDown：Ctrl+Shift+C\n+ 粘贴为纯文本：Ctrl+Shift+V\n+ 全选：Ctrl+A\n+ 选中当前行/句：Ctrl+L\n+ 选中当前格式文本：Ctrl+E\n+ 选中当前词：Ctrl+D\n+ 跳转到文首：Ctrl+Home\n+ 跳转到所选内容：Ctrl+J\n+ 跳转到文末：Ctrl+End\n+ 查找：Ctrl+F\n+ 查找下一个：F3\n+ 查找上一个：Shift+F3\n+ 替换：Ctrl+H\n\n## 四：段落\n\n+ 标题：Ctrl+1/2/3/4/5\n+ 段落：Ctrl+0\n+ 增大标题级别：Ctrl+=\n+ 减少标题级别：Ctrl+-\n+ 表格：Ctrl+T\n+ 代码块：Ctrl+Shift+K\n+ 公式块：Ctrl+Shift+M\n+ 引用：Ctrl+Shift+Q\n+ 有序列表：Ctrl+Shift+[\n+ 无序列表：Ctrl+Shift+]\n+ 增加缩进：Ctrl+]\n+ 减少缩进：Ctrl+[\n\n## 五：格式\n\n+ 加粗：Ctrl+B\n+ 斜体：Ctrl+I\n+ 下划线：Ctrl+U\n+ 代码：Ctrl+Shift+`\n+ 删除线：Alt+Shift+5\n+ 超链接：Ctrl+K\n+ 图像：Ctrl+Shift+I\n+ 清除样式：Ctrl+\n\n## 六：视图\n\n+ 显示隐藏侧边栏：Ctrl+Shift+L\n+ 大纲视图：Ctrl+Shift+1\n+ 文档列表视图：Ctrl+Shift+2\n+ 文件树视图：Ctrl+Shift+3\n+ 源代码模式：Ctrl+/\n+ 专注模式：F8\n+ 打字机模式：F9\n+ 切换全屏：F11\n+ 实际大小：Ctrl+Shift+0\n+ 放大：Ctrl+Shift+=\n+ 缩小：Ctrl+Shift+-\n+ 应用内窗口切换：Ctrl+Tab\n+ 打开DevTools：Shift+F12\n","slug":"typora快捷键","published":1,"updated":"2022-01-12T08:23:19.780Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3d0025jsvkbxqab7iw","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"一：菜单栏\"><a href=\"#一：菜单栏\" class=\"headerlink\" title=\"一：菜单栏\"></a>一：菜单栏</h2><ul>\n<li>文件：alt+F</li>\n<li>编辑：alt+</li>\n<li>段落：alt+P</li>\n<li>格式：alt+O</li>\n<li>视图：alt+V</li>\n<li>主题：alt+T</li>\n<li>帮助：alt+H</li>\n</ul>\n<h2 id=\"二：文件\"><a href=\"#二：文件\" class=\"headerlink\" title=\"二：文件\"></a>二：文件</h2><ul>\n<li>新建：Ctrl+N</li>\n<li>新建窗口：Ctrl+Shift+N</li>\n<li>打开：Ctrl+O</li>\n<li>快速打开：Ctrl+P</li>\n<li>保存：Ctrl+S</li>\n<li>另存为：Ctrl+Shift+S</li>\n<li>偏好：Ctrl+,</li>\n<li>关闭：Ctrl+W</li>\n</ul>\n<h2 id=\"三：编辑\"><a href=\"#三：编辑\" class=\"headerlink\" title=\"三：编辑\"></a>三：编辑</h2><ul>\n<li>撤销：Ctrl+Z</li>\n<li>重做：Ctrl+Y</li>\n<li>剪切：Ctrl+X</li>\n<li>复制：Ctrl+C</li>\n<li>粘贴：Ctrl+V</li>\n<li>插入链接：Ctrl+K</li>\n<li>复制为MarkDown：Ctrl+Shift+C</li>\n<li>粘贴为纯文本：Ctrl+Shift+V</li>\n<li>全选：Ctrl+A</li>\n<li>选中当前行/句：Ctrl+L</li>\n<li>选中当前格式文本：Ctrl+E</li>\n<li>选中当前词：Ctrl+D</li>\n<li>跳转到文首：Ctrl+Home</li>\n<li>跳转到所选内容：Ctrl+J</li>\n<li>跳转到文末：Ctrl+End</li>\n<li>查找：Ctrl+F</li>\n<li>查找下一个：F3</li>\n<li>查找上一个：Shift+F3</li>\n<li>替换：Ctrl+H</li>\n</ul>\n<h2 id=\"四：段落\"><a href=\"#四：段落\" class=\"headerlink\" title=\"四：段落\"></a>四：段落</h2><ul>\n<li>标题：Ctrl+1/2/3/4/5</li>\n<li>段落：Ctrl+0</li>\n<li>增大标题级别：Ctrl+=</li>\n<li>减少标题级别：Ctrl+-</li>\n<li>表格：Ctrl+T</li>\n<li>代码块：Ctrl+Shift+K</li>\n<li>公式块：Ctrl+Shift+M</li>\n<li>引用：Ctrl+Shift+Q</li>\n<li>有序列表：Ctrl+Shift+[</li>\n<li>无序列表：Ctrl+Shift+]</li>\n<li>增加缩进：Ctrl+]</li>\n<li>减少缩进：Ctrl+[</li>\n</ul>\n<h2 id=\"五：格式\"><a href=\"#五：格式\" class=\"headerlink\" title=\"五：格式\"></a>五：格式</h2><ul>\n<li>加粗：Ctrl+B</li>\n<li>斜体：Ctrl+I</li>\n<li>下划线：Ctrl+U</li>\n<li>代码：Ctrl+Shift+`</li>\n<li>删除线：Alt+Shift+5</li>\n<li>超链接：Ctrl+K</li>\n<li>图像：Ctrl+Shift+I</li>\n<li>清除样式：Ctrl+</li>\n</ul>\n<h2 id=\"六：视图\"><a href=\"#六：视图\" class=\"headerlink\" title=\"六：视图\"></a>六：视图</h2><ul>\n<li>显示隐藏侧边栏：Ctrl+Shift+L</li>\n<li>大纲视图：Ctrl+Shift+1</li>\n<li>文档列表视图：Ctrl+Shift+2</li>\n<li>文件树视图：Ctrl+Shift+3</li>\n<li>源代码模式：Ctrl+/</li>\n<li>专注模式：F8</li>\n<li>打字机模式：F9</li>\n<li>切换全屏：F11</li>\n<li>实际大小：Ctrl+Shift+0</li>\n<li>放大：Ctrl+Shift+=</li>\n<li>缩小：Ctrl+Shift+-</li>\n<li>应用内窗口切换：Ctrl+Tab</li>\n<li>打开DevTools：Shift+F12</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160623.jpg","length":850,"excerpt":"","more":"<h2 id=\"一：菜单栏\"><a href=\"#一：菜单栏\" class=\"headerlink\" title=\"一：菜单栏\"></a>一：菜单栏</h2><ul>\n<li>文件：alt+F</li>\n<li>编辑：alt+</li>\n<li>段落：alt+P</li>\n<li>格式：alt+O</li>\n<li>视图：alt+V</li>\n<li>主题：alt+T</li>\n<li>帮助：alt+H</li>\n</ul>\n<h2 id=\"二：文件\"><a href=\"#二：文件\" class=\"headerlink\" title=\"二：文件\"></a>二：文件</h2><ul>\n<li>新建：Ctrl+N</li>\n<li>新建窗口：Ctrl+Shift+N</li>\n<li>打开：Ctrl+O</li>\n<li>快速打开：Ctrl+P</li>\n<li>保存：Ctrl+S</li>\n<li>另存为：Ctrl+Shift+S</li>\n<li>偏好：Ctrl+,</li>\n<li>关闭：Ctrl+W</li>\n</ul>\n<h2 id=\"三：编辑\"><a href=\"#三：编辑\" class=\"headerlink\" title=\"三：编辑\"></a>三：编辑</h2><ul>\n<li>撤销：Ctrl+Z</li>\n<li>重做：Ctrl+Y</li>\n<li>剪切：Ctrl+X</li>\n<li>复制：Ctrl+C</li>\n<li>粘贴：Ctrl+V</li>\n<li>插入链接：Ctrl+K</li>\n<li>复制为MarkDown：Ctrl+Shift+C</li>\n<li>粘贴为纯文本：Ctrl+Shift+V</li>\n<li>全选：Ctrl+A</li>\n<li>选中当前行/句：Ctrl+L</li>\n<li>选中当前格式文本：Ctrl+E</li>\n<li>选中当前词：Ctrl+D</li>\n<li>跳转到文首：Ctrl+Home</li>\n<li>跳转到所选内容：Ctrl+J</li>\n<li>跳转到文末：Ctrl+End</li>\n<li>查找：Ctrl+F</li>\n<li>查找下一个：F3</li>\n<li>查找上一个：Shift+F3</li>\n<li>替换：Ctrl+H</li>\n</ul>\n<h2 id=\"四：段落\"><a href=\"#四：段落\" class=\"headerlink\" title=\"四：段落\"></a>四：段落</h2><ul>\n<li>标题：Ctrl+1/2/3/4/5</li>\n<li>段落：Ctrl+0</li>\n<li>增大标题级别：Ctrl+=</li>\n<li>减少标题级别：Ctrl+-</li>\n<li>表格：Ctrl+T</li>\n<li>代码块：Ctrl+Shift+K</li>\n<li>公式块：Ctrl+Shift+M</li>\n<li>引用：Ctrl+Shift+Q</li>\n<li>有序列表：Ctrl+Shift+[</li>\n<li>无序列表：Ctrl+Shift+]</li>\n<li>增加缩进：Ctrl+]</li>\n<li>减少缩进：Ctrl+[</li>\n</ul>\n<h2 id=\"五：格式\"><a href=\"#五：格式\" class=\"headerlink\" title=\"五：格式\"></a>五：格式</h2><ul>\n<li>加粗：Ctrl+B</li>\n<li>斜体：Ctrl+I</li>\n<li>下划线：Ctrl+U</li>\n<li>代码：Ctrl+Shift+`</li>\n<li>删除线：Alt+Shift+5</li>\n<li>超链接：Ctrl+K</li>\n<li>图像：Ctrl+Shift+I</li>\n<li>清除样式：Ctrl+</li>\n</ul>\n<h2 id=\"六：视图\"><a href=\"#六：视图\" class=\"headerlink\" title=\"六：视图\"></a>六：视图</h2><ul>\n<li>显示隐藏侧边栏：Ctrl+Shift+L</li>\n<li>大纲视图：Ctrl+Shift+1</li>\n<li>文档列表视图：Ctrl+Shift+2</li>\n<li>文件树视图：Ctrl+Shift+3</li>\n<li>源代码模式：Ctrl+/</li>\n<li>专注模式：F8</li>\n<li>打字机模式：F9</li>\n<li>切换全屏：F11</li>\n<li>实际大小：Ctrl+Shift+0</li>\n<li>放大：Ctrl+Shift+=</li>\n<li>缩小：Ctrl+Shift+-</li>\n<li>应用内窗口切换：Ctrl+Tab</li>\n<li>打开DevTools：Shift+F12</li>\n</ul>\n"},{"title":"Vscode","date":"2021-07-14T09:12:49.000Z","description":"vscode","_content":"# 基础编辑\n| Ctrl+X                | 剪切行（空选定） Cut line (empty selection)                 |\n| --------------------- | ----------------------------------------------------------- |\n| Ctrl+C                | 复制行（空选定）Copy line (empty selection)                 |\n| **Ctrl+←/→**          | 移动一个单词的距离                                          |\n| **Ctrl+D**            | 选中一个单词                                                |\n| **Ctrl+L**            | 选中一行                                                    |\n| **Alt+ ↑ / ↓**        | 向上/向下移动行 Move line up/down                           |\n| **Shift+Alt + ↓ / ↑** | 向上/向下复制行 Copy line up/down                           |\n| **Ctrl+Shift+K**      | 删除行 Delete line                                          |\n| **Shift+Alt +F**      | 格式化文档                                                  |\n| **Ctrl+Enter**        | 在下面插入行 Insert line below                              |\n| **Ctrl+Shift+Enter**  | 在上面插入行 Insert line above                              |\n| **Ctrl+Shift+\\**      | 跳到匹配的括号 Jump to matching bracket                     |\n| Ctrl+] / [            | 缩进/缩进行 Indent/outdent line                             |\n| Home                  | 转到行首 Go to beginning of line                            |\n| End                   | 转到行尾 Go to end of line                                  |\n| Ctrl+Home             | 转到文件开头 Go to beginning of file                        |\n| Ctrl+End              | 转到文件末尾 Go to end of file                              |\n| Ctrl+↑ / ↓            | 向上/向下滚动行 Scroll line up/down                         |\n| Alt+PgUp / PgDown     | 向上/向下滚动页面 Scroll page up/down                       |\n| Ctrl+Shift+[          | 折叠（折叠）区域 Fold (collapse) region                     |\n| Ctrl+Shift+]          | 展开（未折叠）区域 Unfold (uncollapse) region               |\n| Ctrl+K Ctrl+[         | 折叠（未折叠）所有子区域 Fold (collapse) all subregions     |\n| Ctrl+K Ctrl+]         | 展开（未折叠）所有子区域 Unfold (uncollapse) all subregions |\n| Ctrl+K Ctrl+0         | 折叠（折叠）所有区域 Fold (collapse) all regions            |\n| Ctrl+K Ctrl+J         | 展开（未折叠）所有区域 Unfold (uncollapse) all regions      |\n| Ctrl+K Ctrl+C         | 添加行注释 Add line comment                                 |\n| Ctrl+K Ctrl+U         | 删除行注释 Remove line comment                              |\n| **Ctrl+/**            | 切换行注释 Toggle line comment                              |\n| **Shift+Alt+A**       | 切换块注释 Toggle block comment                             |\n| Alt+Z                 | 切换换行 Toggle word wrap                                   |\n\n# 搜索和替换\n\n| Ctrl + F          | 查找 Find                                                    |\n| ----------------- | ------------------------------------------------------------ |\n| Ctrl + H          | 替换 Replace                                                 |\n| F3 / Shift + F3   | 查找下一个/上一个 Find next/previous                         |\n| Alt + Enter       | 选择查找匹配的所有出现 Select all occurences of Find match   |\n| Ctrl + D          | 将选择添加到下一个查找匹配 Add selection to next Find match  |\n| Ctrl + K Ctrl + D | 将最后一个选择移至下一个查找匹配项 Move last selection to next Find match |\n| Alt + C / R / W   | 切换区分大小写/正则表达式/整个词 Toggle case-sensitive / regex / whole word |\n\n# 调试\n\n| F9              | 切换断点 Toggle breakpoint  |\n| --------------- | --------------------------- |\n| F5              | 开始/继续 Start/Continue    |\n| Shift+F5        | 停止 Stop                   |\n| F11 / Shift+F11 | 下一步/上一步 Step into/out |\n| F10             | 跳过 Step over              |\n| Ctrl+K Ctrl+I   | 显示悬停 Show hover         |\n\n# 插件\n| 名称                                                      | 作用                                                       |\n| --------------------------------------------------------- | ---------------------------------------------------------- |\n| Auto Close Tag                                            | 自动闭合标签                                               |\n| Auto Rename Tag                                           | 重命名一个HTML / XML标签时，自动重命名配对的HTML / XML标签 |\n| Better Comments                                           | 不同颜色标记不同类型的注释                                 |\n| Bracket Pair Colorizer                                    | 使用颜色标识匹配的括号                                     |\n| Chinese (Simplified) Language Pack for Visual Studio Code | 把整个VSCode的文字转换成中文                               |\n| Debugger for Chrome                                       | 启动Chrome调试器                                           |\n| Debugger for Firefox                                      | 火狐调试器                                                 |\n| gitlens                                                   | Git 增强                                                   |\n| HTML CSS Support                                          | 智能提示CSS类名以及id                                      |\n| indent-rainbow                                            | 彩虹色缩进                                                 |\n| JavaScript (ES6) code snippets                            | JavaScript代码智能提示                                     |\n| jQuery Code Snippets                                      | jQuery代码智能提示                                         |\n| LiveServer                                                | 保存HTML时自动刷新浏览器                                   |\n| Path Intellisense                                         | 路径自动补全                                               |\n| prettier-vscode                                           | 格式化代码                                                 |\n| Settings Sync                                             | 同步vscode设置到 Git Gist                                  |\n| todo-tree                                                 | 高亮显示 TODO                                              |\n| vetur                                                     | 支持vue标签、属性的智能补全                                |\n| Visual Studio IntelliCode                                 | 代码自动补全（AI-based）                                   |\n| vscode-icons                                              | 图标集，资源管理器                                         |\n| Vue 3 Snippets                                            | Vue代码片段                                                |\n","source":"_posts/vscode快捷键.md","raw":"---\ntitle: vscode\ndate: 2021-07-14 17:12:49\ntags: [vscode,快捷键]\ncategories: 编程\ndescription: vscode\n---\n# 基础编辑\n| Ctrl+X                | 剪切行（空选定） Cut line (empty selection)                 |\n| --------------------- | ----------------------------------------------------------- |\n| Ctrl+C                | 复制行（空选定）Copy line (empty selection)                 |\n| **Ctrl+←/→**          | 移动一个单词的距离                                          |\n| **Ctrl+D**            | 选中一个单词                                                |\n| **Ctrl+L**            | 选中一行                                                    |\n| **Alt+ ↑ / ↓**        | 向上/向下移动行 Move line up/down                           |\n| **Shift+Alt + ↓ / ↑** | 向上/向下复制行 Copy line up/down                           |\n| **Ctrl+Shift+K**      | 删除行 Delete line                                          |\n| **Shift+Alt +F**      | 格式化文档                                                  |\n| **Ctrl+Enter**        | 在下面插入行 Insert line below                              |\n| **Ctrl+Shift+Enter**  | 在上面插入行 Insert line above                              |\n| **Ctrl+Shift+\\**      | 跳到匹配的括号 Jump to matching bracket                     |\n| Ctrl+] / [            | 缩进/缩进行 Indent/outdent line                             |\n| Home                  | 转到行首 Go to beginning of line                            |\n| End                   | 转到行尾 Go to end of line                                  |\n| Ctrl+Home             | 转到文件开头 Go to beginning of file                        |\n| Ctrl+End              | 转到文件末尾 Go to end of file                              |\n| Ctrl+↑ / ↓            | 向上/向下滚动行 Scroll line up/down                         |\n| Alt+PgUp / PgDown     | 向上/向下滚动页面 Scroll page up/down                       |\n| Ctrl+Shift+[          | 折叠（折叠）区域 Fold (collapse) region                     |\n| Ctrl+Shift+]          | 展开（未折叠）区域 Unfold (uncollapse) region               |\n| Ctrl+K Ctrl+[         | 折叠（未折叠）所有子区域 Fold (collapse) all subregions     |\n| Ctrl+K Ctrl+]         | 展开（未折叠）所有子区域 Unfold (uncollapse) all subregions |\n| Ctrl+K Ctrl+0         | 折叠（折叠）所有区域 Fold (collapse) all regions            |\n| Ctrl+K Ctrl+J         | 展开（未折叠）所有区域 Unfold (uncollapse) all regions      |\n| Ctrl+K Ctrl+C         | 添加行注释 Add line comment                                 |\n| Ctrl+K Ctrl+U         | 删除行注释 Remove line comment                              |\n| **Ctrl+/**            | 切换行注释 Toggle line comment                              |\n| **Shift+Alt+A**       | 切换块注释 Toggle block comment                             |\n| Alt+Z                 | 切换换行 Toggle word wrap                                   |\n\n# 搜索和替换\n\n| Ctrl + F          | 查找 Find                                                    |\n| ----------------- | ------------------------------------------------------------ |\n| Ctrl + H          | 替换 Replace                                                 |\n| F3 / Shift + F3   | 查找下一个/上一个 Find next/previous                         |\n| Alt + Enter       | 选择查找匹配的所有出现 Select all occurences of Find match   |\n| Ctrl + D          | 将选择添加到下一个查找匹配 Add selection to next Find match  |\n| Ctrl + K Ctrl + D | 将最后一个选择移至下一个查找匹配项 Move last selection to next Find match |\n| Alt + C / R / W   | 切换区分大小写/正则表达式/整个词 Toggle case-sensitive / regex / whole word |\n\n# 调试\n\n| F9              | 切换断点 Toggle breakpoint  |\n| --------------- | --------------------------- |\n| F5              | 开始/继续 Start/Continue    |\n| Shift+F5        | 停止 Stop                   |\n| F11 / Shift+F11 | 下一步/上一步 Step into/out |\n| F10             | 跳过 Step over              |\n| Ctrl+K Ctrl+I   | 显示悬停 Show hover         |\n\n# 插件\n| 名称                                                      | 作用                                                       |\n| --------------------------------------------------------- | ---------------------------------------------------------- |\n| Auto Close Tag                                            | 自动闭合标签                                               |\n| Auto Rename Tag                                           | 重命名一个HTML / XML标签时，自动重命名配对的HTML / XML标签 |\n| Better Comments                                           | 不同颜色标记不同类型的注释                                 |\n| Bracket Pair Colorizer                                    | 使用颜色标识匹配的括号                                     |\n| Chinese (Simplified) Language Pack for Visual Studio Code | 把整个VSCode的文字转换成中文                               |\n| Debugger for Chrome                                       | 启动Chrome调试器                                           |\n| Debugger for Firefox                                      | 火狐调试器                                                 |\n| gitlens                                                   | Git 增强                                                   |\n| HTML CSS Support                                          | 智能提示CSS类名以及id                                      |\n| indent-rainbow                                            | 彩虹色缩进                                                 |\n| JavaScript (ES6) code snippets                            | JavaScript代码智能提示                                     |\n| jQuery Code Snippets                                      | jQuery代码智能提示                                         |\n| LiveServer                                                | 保存HTML时自动刷新浏览器                                   |\n| Path Intellisense                                         | 路径自动补全                                               |\n| prettier-vscode                                           | 格式化代码                                                 |\n| Settings Sync                                             | 同步vscode设置到 Git Gist                                  |\n| todo-tree                                                 | 高亮显示 TODO                                              |\n| vetur                                                     | 支持vue标签、属性的智能补全                                |\n| Visual Studio IntelliCode                                 | 代码自动补全（AI-based）                                   |\n| vscode-icons                                              | 图标集，资源管理器                                         |\n| Vue 3 Snippets                                            | Vue代码片段                                                |\n","slug":"vscode快捷键","published":1,"updated":"2022-08-29T00:55:16.300Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3e0027jsvkhp3i3q3r","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"基础编辑\"><a href=\"#基础编辑\" class=\"headerlink\" title=\"基础编辑\"></a>基础编辑</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Ctrl+X</th>\n<th>剪切行（空选定） Cut line (empty selection)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl+C</td>\n<td>复制行（空选定）Copy line (empty selection)</td>\n</tr>\n<tr>\n<td><strong>Ctrl+←/→</strong></td>\n<td>移动一个单词的距离</td>\n</tr>\n<tr>\n<td><strong>Ctrl+D</strong></td>\n<td>选中一个单词</td>\n</tr>\n<tr>\n<td><strong>Ctrl+L</strong></td>\n<td>选中一行</td>\n</tr>\n<tr>\n<td><strong>Alt+ ↑ / ↓</strong></td>\n<td>向上/向下移动行 Move line up/down</td>\n</tr>\n<tr>\n<td><strong>Shift+Alt + ↓ / ↑</strong></td>\n<td>向上/向下复制行 Copy line up/down</td>\n</tr>\n<tr>\n<td><strong>Ctrl+Shift+K</strong></td>\n<td>删除行 Delete line</td>\n</tr>\n<tr>\n<td><strong>Shift+Alt +F</strong></td>\n<td>格式化文档</td>\n</tr>\n<tr>\n<td><strong>Ctrl+Enter</strong></td>\n<td>在下面插入行 Insert line below</td>\n</tr>\n<tr>\n<td><strong>Ctrl+Shift+Enter</strong></td>\n<td>在上面插入行 Insert line above</td>\n</tr>\n<tr>\n<td><strong>Ctrl+Shift+\\</strong></td>\n<td>跳到匹配的括号 Jump to matching bracket</td>\n</tr>\n<tr>\n<td>Ctrl+] / [</td>\n<td>缩进/缩进行 Indent/outdent line</td>\n</tr>\n<tr>\n<td>Home</td>\n<td>转到行首 Go to beginning of line</td>\n</tr>\n<tr>\n<td>End</td>\n<td>转到行尾 Go to end of line</td>\n</tr>\n<tr>\n<td>Ctrl+Home</td>\n<td>转到文件开头 Go to beginning of file</td>\n</tr>\n<tr>\n<td>Ctrl+End</td>\n<td>转到文件末尾 Go to end of file</td>\n</tr>\n<tr>\n<td>Ctrl+↑ / ↓</td>\n<td>向上/向下滚动行 Scroll line up/down</td>\n</tr>\n<tr>\n<td>Alt+PgUp / PgDown</td>\n<td>向上/向下滚动页面 Scroll page up/down</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+[</td>\n<td>折叠（折叠）区域 Fold (collapse) region</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+]</td>\n<td>展开（未折叠）区域 Unfold (uncollapse) region</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+[</td>\n<td>折叠（未折叠）所有子区域 Fold (collapse) all subregions</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+]</td>\n<td>展开（未折叠）所有子区域 Unfold (uncollapse) all subregions</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+0</td>\n<td>折叠（折叠）所有区域 Fold (collapse) all regions</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+J</td>\n<td>展开（未折叠）所有区域 Unfold (uncollapse) all regions</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+C</td>\n<td>添加行注释 Add line comment</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+U</td>\n<td>删除行注释 Remove line comment</td>\n</tr>\n<tr>\n<td><strong>Ctrl+/</strong></td>\n<td>切换行注释 Toggle line comment</td>\n</tr>\n<tr>\n<td><strong>Shift+Alt+A</strong></td>\n<td>切换块注释 Toggle block comment</td>\n</tr>\n<tr>\n<td>Alt+Z</td>\n<td>切换换行 Toggle word wrap</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"搜索和替换\"><a href=\"#搜索和替换\" class=\"headerlink\" title=\"搜索和替换\"></a>搜索和替换</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Ctrl + F</th>\n<th>查找 Find</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl + H</td>\n<td>替换 Replace</td>\n</tr>\n<tr>\n<td>F3 / Shift + F3</td>\n<td>查找下一个/上一个 Find next/previous</td>\n</tr>\n<tr>\n<td>Alt + Enter</td>\n<td>选择查找匹配的所有出现 Select all occurences of Find match</td>\n</tr>\n<tr>\n<td>Ctrl + D</td>\n<td>将选择添加到下一个查找匹配 Add selection to next Find match</td>\n</tr>\n<tr>\n<td>Ctrl + K Ctrl + D</td>\n<td>将最后一个选择移至下一个查找匹配项 Move last selection to next Find match</td>\n</tr>\n<tr>\n<td>Alt + C / R / W</td>\n<td>切换区分大小写/正则表达式/整个词 Toggle case-sensitive / regex / whole word</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>F9</th>\n<th>切换断点 Toggle breakpoint</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>F5</td>\n<td>开始/继续 Start/Continue</td>\n</tr>\n<tr>\n<td>Shift+F5</td>\n<td>停止 Stop</td>\n</tr>\n<tr>\n<td>F11 / Shift+F11</td>\n<td>下一步/上一步 Step into/out</td>\n</tr>\n<tr>\n<td>F10</td>\n<td>跳过 Step over</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+I</td>\n<td>显示悬停 Show hover</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Auto Close Tag</td>\n<td>自动闭合标签</td>\n</tr>\n<tr>\n<td>Auto Rename Tag</td>\n<td>重命名一个HTML / XML标签时，自动重命名配对的HTML / XML标签</td>\n</tr>\n<tr>\n<td>Better Comments</td>\n<td>不同颜色标记不同类型的注释</td>\n</tr>\n<tr>\n<td>Bracket Pair Colorizer</td>\n<td>使用颜色标识匹配的括号</td>\n</tr>\n<tr>\n<td>Chinese (Simplified) Language Pack for Visual Studio Code</td>\n<td>把整个VSCode的文字转换成中文</td>\n</tr>\n<tr>\n<td>Debugger for Chrome</td>\n<td>启动Chrome调试器</td>\n</tr>\n<tr>\n<td>Debugger for Firefox</td>\n<td>火狐调试器</td>\n</tr>\n<tr>\n<td>gitlens</td>\n<td>Git 增强</td>\n</tr>\n<tr>\n<td>HTML CSS Support</td>\n<td>智能提示CSS类名以及id</td>\n</tr>\n<tr>\n<td>indent-rainbow</td>\n<td>彩虹色缩进</td>\n</tr>\n<tr>\n<td>JavaScript (ES6) code snippets</td>\n<td>JavaScript代码智能提示</td>\n</tr>\n<tr>\n<td>jQuery Code Snippets</td>\n<td>jQuery代码智能提示</td>\n</tr>\n<tr>\n<td>LiveServer</td>\n<td>保存HTML时自动刷新浏览器</td>\n</tr>\n<tr>\n<td>Path Intellisense</td>\n<td>路径自动补全</td>\n</tr>\n<tr>\n<td>prettier-vscode</td>\n<td>格式化代码</td>\n</tr>\n<tr>\n<td>Settings Sync</td>\n<td>同步vscode设置到 Git Gist</td>\n</tr>\n<tr>\n<td>todo-tree</td>\n<td>高亮显示 TODO</td>\n</tr>\n<tr>\n<td>vetur</td>\n<td>支持vue标签、属性的智能补全</td>\n</tr>\n<tr>\n<td>Visual Studio IntelliCode</td>\n<td>代码自动补全（AI-based）</td>\n</tr>\n<tr>\n<td>vscode-icons</td>\n<td>图标集，资源管理器</td>\n</tr>\n<tr>\n<td>Vue 3 Snippets</td>\n<td>Vue代码片段</td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160623.jpg","length":1993,"excerpt":"","more":"<h1 id=\"基础编辑\"><a href=\"#基础编辑\" class=\"headerlink\" title=\"基础编辑\"></a>基础编辑</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Ctrl+X</th>\n<th>剪切行（空选定） Cut line (empty selection)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl+C</td>\n<td>复制行（空选定）Copy line (empty selection)</td>\n</tr>\n<tr>\n<td><strong>Ctrl+←/→</strong></td>\n<td>移动一个单词的距离</td>\n</tr>\n<tr>\n<td><strong>Ctrl+D</strong></td>\n<td>选中一个单词</td>\n</tr>\n<tr>\n<td><strong>Ctrl+L</strong></td>\n<td>选中一行</td>\n</tr>\n<tr>\n<td><strong>Alt+ ↑ / ↓</strong></td>\n<td>向上/向下移动行 Move line up/down</td>\n</tr>\n<tr>\n<td><strong>Shift+Alt + ↓ / ↑</strong></td>\n<td>向上/向下复制行 Copy line up/down</td>\n</tr>\n<tr>\n<td><strong>Ctrl+Shift+K</strong></td>\n<td>删除行 Delete line</td>\n</tr>\n<tr>\n<td><strong>Shift+Alt +F</strong></td>\n<td>格式化文档</td>\n</tr>\n<tr>\n<td><strong>Ctrl+Enter</strong></td>\n<td>在下面插入行 Insert line below</td>\n</tr>\n<tr>\n<td><strong>Ctrl+Shift+Enter</strong></td>\n<td>在上面插入行 Insert line above</td>\n</tr>\n<tr>\n<td><strong>Ctrl+Shift+\\</strong></td>\n<td>跳到匹配的括号 Jump to matching bracket</td>\n</tr>\n<tr>\n<td>Ctrl+] / [</td>\n<td>缩进/缩进行 Indent/outdent line</td>\n</tr>\n<tr>\n<td>Home</td>\n<td>转到行首 Go to beginning of line</td>\n</tr>\n<tr>\n<td>End</td>\n<td>转到行尾 Go to end of line</td>\n</tr>\n<tr>\n<td>Ctrl+Home</td>\n<td>转到文件开头 Go to beginning of file</td>\n</tr>\n<tr>\n<td>Ctrl+End</td>\n<td>转到文件末尾 Go to end of file</td>\n</tr>\n<tr>\n<td>Ctrl+↑ / ↓</td>\n<td>向上/向下滚动行 Scroll line up/down</td>\n</tr>\n<tr>\n<td>Alt+PgUp / PgDown</td>\n<td>向上/向下滚动页面 Scroll page up/down</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+[</td>\n<td>折叠（折叠）区域 Fold (collapse) region</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+]</td>\n<td>展开（未折叠）区域 Unfold (uncollapse) region</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+[</td>\n<td>折叠（未折叠）所有子区域 Fold (collapse) all subregions</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+]</td>\n<td>展开（未折叠）所有子区域 Unfold (uncollapse) all subregions</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+0</td>\n<td>折叠（折叠）所有区域 Fold (collapse) all regions</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+J</td>\n<td>展开（未折叠）所有区域 Unfold (uncollapse) all regions</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+C</td>\n<td>添加行注释 Add line comment</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+U</td>\n<td>删除行注释 Remove line comment</td>\n</tr>\n<tr>\n<td><strong>Ctrl+/</strong></td>\n<td>切换行注释 Toggle line comment</td>\n</tr>\n<tr>\n<td><strong>Shift+Alt+A</strong></td>\n<td>切换块注释 Toggle block comment</td>\n</tr>\n<tr>\n<td>Alt+Z</td>\n<td>切换换行 Toggle word wrap</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"搜索和替换\"><a href=\"#搜索和替换\" class=\"headerlink\" title=\"搜索和替换\"></a>搜索和替换</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Ctrl + F</th>\n<th>查找 Find</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl + H</td>\n<td>替换 Replace</td>\n</tr>\n<tr>\n<td>F3 / Shift + F3</td>\n<td>查找下一个/上一个 Find next/previous</td>\n</tr>\n<tr>\n<td>Alt + Enter</td>\n<td>选择查找匹配的所有出现 Select all occurences of Find match</td>\n</tr>\n<tr>\n<td>Ctrl + D</td>\n<td>将选择添加到下一个查找匹配 Add selection to next Find match</td>\n</tr>\n<tr>\n<td>Ctrl + K Ctrl + D</td>\n<td>将最后一个选择移至下一个查找匹配项 Move last selection to next Find match</td>\n</tr>\n<tr>\n<td>Alt + C / R / W</td>\n<td>切换区分大小写/正则表达式/整个词 Toggle case-sensitive / regex / whole word</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>F9</th>\n<th>切换断点 Toggle breakpoint</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>F5</td>\n<td>开始/继续 Start/Continue</td>\n</tr>\n<tr>\n<td>Shift+F5</td>\n<td>停止 Stop</td>\n</tr>\n<tr>\n<td>F11 / Shift+F11</td>\n<td>下一步/上一步 Step into/out</td>\n</tr>\n<tr>\n<td>F10</td>\n<td>跳过 Step over</td>\n</tr>\n<tr>\n<td>Ctrl+K Ctrl+I</td>\n<td>显示悬停 Show hover</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Auto Close Tag</td>\n<td>自动闭合标签</td>\n</tr>\n<tr>\n<td>Auto Rename Tag</td>\n<td>重命名一个HTML / XML标签时，自动重命名配对的HTML / XML标签</td>\n</tr>\n<tr>\n<td>Better Comments</td>\n<td>不同颜色标记不同类型的注释</td>\n</tr>\n<tr>\n<td>Bracket Pair Colorizer</td>\n<td>使用颜色标识匹配的括号</td>\n</tr>\n<tr>\n<td>Chinese (Simplified) Language Pack for Visual Studio Code</td>\n<td>把整个VSCode的文字转换成中文</td>\n</tr>\n<tr>\n<td>Debugger for Chrome</td>\n<td>启动Chrome调试器</td>\n</tr>\n<tr>\n<td>Debugger for Firefox</td>\n<td>火狐调试器</td>\n</tr>\n<tr>\n<td>gitlens</td>\n<td>Git 增强</td>\n</tr>\n<tr>\n<td>HTML CSS Support</td>\n<td>智能提示CSS类名以及id</td>\n</tr>\n<tr>\n<td>indent-rainbow</td>\n<td>彩虹色缩进</td>\n</tr>\n<tr>\n<td>JavaScript (ES6) code snippets</td>\n<td>JavaScript代码智能提示</td>\n</tr>\n<tr>\n<td>jQuery Code Snippets</td>\n<td>jQuery代码智能提示</td>\n</tr>\n<tr>\n<td>LiveServer</td>\n<td>保存HTML时自动刷新浏览器</td>\n</tr>\n<tr>\n<td>Path Intellisense</td>\n<td>路径自动补全</td>\n</tr>\n<tr>\n<td>prettier-vscode</td>\n<td>格式化代码</td>\n</tr>\n<tr>\n<td>Settings Sync</td>\n<td>同步vscode设置到 Git Gist</td>\n</tr>\n<tr>\n<td>todo-tree</td>\n<td>高亮显示 TODO</td>\n</tr>\n<tr>\n<td>vetur</td>\n<td>支持vue标签、属性的智能补全</td>\n</tr>\n<tr>\n<td>Visual Studio IntelliCode</td>\n<td>代码自动补全（AI-based）</td>\n</tr>\n<tr>\n<td>vscode-icons</td>\n<td>图标集，资源管理器</td>\n</tr>\n<tr>\n<td>Vue 3 Snippets</td>\n<td>Vue代码片段</td>\n</tr>\n</tbody>\n</table>\n</div>\n"},{"title":"Youtube-Dl命令","date":"2021-07-13T00:25:37.000Z","description":"youtube-dl基于python实现，使用前先安装python并加入环境变量，再安装youtube-dl","_content":"\n实例\n\n```bash\nyoutube-dl --proxy http://127.0.0.1:10809 \"https://www.youtube.com/watch?v=6k8cpUkKK4c\"\n--merge-output-format mp4 --write-auto-sub --sub-lang zh-Hans --embed-sub -i \nyoutube-dl --proxy http://127.0.0.1:10809  --write-auto-sub --embed-subs --embed-thumbnail XyaBFh_6b-8\n```\n\n\n\n通用选项\n\n```bash\n-h, --help                       打印帮助文档\n    --version                        打印版本信息\n    -U, --update                     更新到最新版(需要权限)\n    -i, --ignore-errors              遇到下载错误时跳过\n    --abort-on-error                 遇到下载错误时终止\n    --dump-user-agent                显示当前使用的浏览器(User-agent)\n    --list-extractors                列出所有的提取器(支持的网站)\n    --extractor-descriptions         同上\n    --force-generic-extractor        强制使用通用提取器下载\n    --default-search PREFIX          使用此前缀补充不完整的URLs，例如：\"ytsearch2 yt-dl\" 从youtube搜索并下载两个关于yt-dl视频. 使用\"auto\"youtube-dl就会猜一个，一般效果等价于\"ytsearch\"(\"auto_warning\"猜测时加入警告).我已知支持的PREFIX：ytsearch (youtube), ytsearchdate (youtube), yvsearch (yahoo videos), gvsearch (google videos) \n    --ignore-config                  不读取配置文件，当时用了全局配置文件/etc/youtube-dl.conf:不再读取 ~/.config/youtube-dl/config (%APPDATA%/youtube-dl/config.txt on Windows)\n    --config-location PATH           使用指定路径下的配置文件\n    --flat-playlist                  列出列表视频但不下载\n    --mark-watched                   标记看过此视频 (YouTube only)\n    --no-mark-watched                不标记看过此视频 (YouTube only)\n    --no-color                       打印到屏幕上的代码不带色\n```\n\n网络选项\n\n```bash\n --proxy URL                      使用HTTP/HTTPS/SOCKS协议的代理.如：socks5://127.0.0.1:1080/.\n    --socket-timeout SECONDS         放弃连接前等待时间\n    --source-address IP              绑定的客户端IP地址\n    -4, --force-ipv4                 所有连接通过IPv4\n    -6, --force-ipv6                 所有连接通过IPv6\n```\n\n代理设置\n\n```bash\n   --geo-verification-proxy URL     使用此代理地址测试一些有地理限制的地址\n    --geo-bypass                     绕过地理限制通过伪装X-Forwarded-For HTTP头部的客户端ip\n    --no-geo-bypass                  不 绕过地理限制通过伪装X-Forwarded-For HTTP头部的客户端ip\n    --geo-bypass-country CODE        强制绕过地理限制通过提供准确的ISO 3166-2标准的国别代码\n    --geo-bypass-ip-block IP_BLOCK   强制绕过地理限制通过提供精确的无类别域间路由IP段(2018.09.13更新)\n```\n\n视频选择\n\n```bash\n   --playlist-start NUMBER          指定列表中开始下载的视频(默认为1)\n    --playlist-end NUMBER            指定列表中结束的视频(默认为last)\n    --playlist-items ITEM_SPEC       指定列表中要下载的视频项目编号.如：\"--playlist-items 1,2,5,8\"或\"--playlist-items 1-3,7,10-13\"\n    --match-title REGEX              下载标题匹配的视频(正则表达式或区分大小写的字符串)\n    --reject-title REGEX             跳过下载标题匹配的视频(正则表达式或区分大小写的字符串)\n    --max-downloads NUMBER           下载NUMBER个视频后停止\n    --min-filesize SIZE              不下载小于SIZE的视频(e.g. 50k or 44.6m)\n    --max-filesize SIZE              不下载大于SIZE的视频(e.g. 50k or 44.6m)\n    --date DATE                      仅下载上传日期在指定日期的视频\n    --datebefore DATE                仅下载上传日期在指定日期或之前的视频 (i.e. inclusive)\n    --dateafter DATE                 仅下载上传日期在指定日期或之后的视频 (i.e. inclusive)\n    --min-views COUNT                不下载观影数小于指定值的视频\n    --max-views COUNT                不下载观影数大于指定值的视频\n    --match-filter FILTER            通用视频过滤器. \n    --no-playlist                    当视频链接到一个视频和一个播放列表时，仅下载视频\n    --yes-playlist                   当视频链接到一个视频和一个播放列表时，下载视频和播放列表\n    --age-limit YEARS                下载合适上传年限的视频\n    --download-archive FILE          仅下载档案文件中未列出的影片，已下载的记录ID\n    --include-ads                    同时下载广告(实验)\n```\n\n下载选项\n\n```bash\n-r, --limit-rate RATE            最大bps (e.g. 50K or 4.2M)\n-R, --retries RETRIES            重试次数 (默认10), or \"infinite\".\n--fragment-retries RETRIES       一个分段的最大重试次数(default is 10), or \"infinite\" (DASH, hlsnative and ISM)\n--skip-unavailable-fragments     跳过不可用分段(DASH, hlsnative and ISM)\n--abort-on-unavailable-fragment  放弃某个分段当不可获取时\n--keep-fragments                 下载完成后，将下载的片段保存在磁盘上; 片段默认被删除\n--buffer-size SIZE               设置缓冲区大小buffer (e.g. 1024 or 16K) (default is 1024)\n--no-resize-buffer               不自动调整缓冲区大小.默认情况下自动调整\n--playlist-reverse               以相反的顺序下载播放列表视频\n--playlist-random                以随机的顺序下载播放列表视频\n--xattr-set-filesize             Set file xattribute ytdl.filesize with expected file size (experimental)\n--hls-prefer-native              使用本机默认HLS下载器而不是ffmpeg\n--hls-prefer-ffmpeg              使用ffmpeg而不是本机HLS下载器\n--hls-use-mpegts                 使用TS流容器来存放HLS视频,一些高级播放器允许在下载的同时播放视频\n--external-downloader COMMAND    使用指定的第三方下载工具,当前支持：aria2c,avconv,axel,curl,ffmpeg,httpie,wget\n--external-downloader-args ARGS  给第三方下载工具指定参数，如：--external-downloader aria2c --external-downloader-args -j8\n```\n\n文件系统选项\n\n```bash\n-a, --batch-file FILE            文件中包含需要下载的URL\n--id                             仅使用文件名中的视频ID\n-o, --output TEMPLATE            Output filename template, see the \"OUTPUT TEMPLATE\" for all the info\n--autonumber-start NUMBER        指定%(autonumber)s的起始值(默认为1)\n--restrict-filenames             将文件名限制为ASCII字符，并避免文件名中的“＆”和空格\n-w, --no-overwrites              不要覆盖文件\n-c, --continue                   强制恢复部分下载的文件。 默认情况下，youtube-dl仅在可能时将恢复下载。\n--no-continue                    不要恢复部分下载的文件(从头开始重新启动)\n--no-part                        不使用.part文件 - 直接写入输出文件\n--no-mtime                       不使用Last-modified header来设置文件最后修改时间\n--write-description              将视频描述写入.description文件\n--write-info-json                将视频元数据写入.info.json文件\n--write-annotations              将视频注释写入.annotations.xml文件\n--load-info-json FILE            包含视频信息的JSON文件(使用“--write-info-json”选项创建)\n--cookies FILE                   文件从中读取Cookie(经测试，export cookies插件可以使用，但firebug导出的cookies导致错误,chrome下请用cookies.txt)注意：不同平台windows、Linux、OSX之间需要转换CE LF才能使用！\n--cache-dir DIR                  文件存储位置。youtube-dl需要永久保存一些下载的信息。默认为$XDG_CACHE_HOME/youtube-dl或/.cache/youtube-dl。目前，只有YouTube播放器文件（对于具有模糊签名的视频）进行缓存，但可能会发生变化。\n--no-cache-dir                   不用缓存\n--rm-cache-dir                   删除所有缓存文件\n```\n\n缩略图\n\n```bash\n--write-thumbnail                把缩略图写入硬盘\n--write-all-thumbnails           将所有缩略图写入磁盘\n--list-thumbnails                列出所有可用的缩略图格式\n```\n\n详细/模拟选项\n\n```bash\n-q, --quiet                      激活退出模式\n--no-warnings                    忽略警告\n-s, --simulate                   不下载不存储任何文件到硬盘，模拟下载模式\n--skip-download                  不下载视频\n-g, --get-url                    模拟下载获取视频直连\n-e, --get-title                  模拟下载获取标题\n--get-id                         模拟下载获取id\n--get-thumbnail                  模拟下载获取缩略图URL\n--get-description                模拟下载获取视频描述\n--get-duration                   模拟下载获取视频长度\n--get-filename                   模拟下载获取输出视频文件名\n--get-format                     模拟下载获取输出视频格式\n-j, --dump-json                  模拟下载获取JSON information.\n-J, --dump-single-json           模拟下载获取每条命令行参数的JSON information.如果是个播放列表，就获取整个播放列表的JSON\n--print-json                     下载的同时获取视频信息的JSON\n--newline                        进度条在新行输出\n--no-progress                    不打印进度条\n--console-title                  在控制台标题栏显示进度\n-v, --verbose                    打印各种调试信息\n--dump-pages                     打印下载下来的使用base64编码的页面来调试问题（非常冗长）\n--write-pages                    将下载的中间页以文件的形式写入当前目录中以调试问题\n--print-traffic                  显示发送和读取HTTP流量\n-C, --call-home                  联系youtube-dl服务器进行调试\n--no-call-home                   不联系youtube-dl服务器进行调试\n```\n\n解决方法:\n\n```bash\n--encoding ENCODING              强制指定编码(实验)\n--no-check-certificate           禁止HTTPS证书验证\n--prefer-insecure                使用未加密的连接来检索有关视频的信息(目前仅支持YouTube)\n--user-agent UA                  指定user agent\n--referer URL                    指定自定义的referer,仅限视频来源于同一网站\n--add-header FIELD:VALUE         指定一个自定义值的HTTP头文件,使用分号分割,可以多次使用此选项\n--bidi-workaround                围绕缺少双向文本支持的终端工作。需要在PATH中有bidiv或fribidi可执行文件\n--sleep-interval SECONDS         在每次下载之前休眠的秒数，或者每次下载之前的随机睡眠的范围的下限(最小可能的睡眠秒数)与-max-sleep-interval一起使用。\n--max-sleep-interval SECONDS     每次下载前随机睡眠范围的上限(最大可能睡眠秒数)。只能与--min-sleep-interval一起使用。\n```\n\n视频格式选项\n\n```bash\n-f, --format FORMAT              视频格式代码,查看\"FORMAT SELECTION\"获取所有信息\n--all-formats                    获取所有视频格式\n--prefer-free-formats            开源的视频格式优先，除非有特定的请求\n-F, --list-formats               列出请求视频的所有可用格式\n--youtube-skip-dash-manifest     不要下载关于YouTube视频的DASH清单和相关数据\n--merge-output-format FORMAT     如果需要合并(例如bestvideo + bestaudio)，则输出到给定的容器格式。mkv，mp4，ogg，webm，flv之一。如果不需要合并，则忽略\n```\n\n字幕选项\n\n```bash\n--write-sub                      下载字幕文件\n--write-auto-sub                 下载自动生成的字幕文件 (YouTube only)\n--all-subs                       下载所有可用的字幕\n--list-subs                      列出所有字幕\n--sub-format FORMAT              字幕格式,接受格式偏好,如：\"srt\" or \"ass/srt/best\"\n--sub-lang LANGS                 要下载的字幕的语言(可选)用逗号分隔,请使用--list-subs表示可用的语言标签\n  \n```\n\n验证选项\n\n```bash\n   -u, --username USERNAME          使用ID登录\n    -p, --password PASSWORD          账户密码,如果此选项未使用,youtube-dl将交互式地询问。\n    -2, --twofactor TWOFACTOR        双因素认证码\n    -n, --netrc                      使用.netrc认证数据\n    --video-password PASSWORD        视频密码(vimeo, smotri, youku)\n  Adobe Pass Options:\n    --ap-mso MSO                     Adobe Pass多系统运营商(电视提供商)标识符,使用--ap-list-mso列出可用的MSO\n    --ap-username USERNAME           MSO账号登录\n    --ap-password PASSWORD           账户密码,如果此选项未使用,youtube-dl将交互式地询问。\n    --ap-list-mso                    列出所有支持的MSO\n```\n\n后处理选项\n\n```bash\n-x, --extract-audio              将视频文件转换为纯音频文件(需要ffmpeg或avconv和ffprobe或avprobe)\n--audio-format FORMAT            指定音频格式: \"best\", \"aac\", \"flac\", \"mp3\", \"m4a\", \"opus\", \"vorbis\", or \"wav\"; \"best\" by default;-x存在时无效\n--audio-quality QUALITY          指定ffmpeg/avconv音频质量,为VBR插入一个0(best)-9(worse)的值(默认5),或者指定比特率\n--recode-video FORMAT            必要时将视频转码为其他格式(当前支持: mp4|flv|ogg|webm|mkv|avi)\n--postprocessor-args ARGS        给后处理器提供这些参数\n-k, --keep-video                 视频文件在后处理后保存在磁盘上; 该视频默认被删除\n--no-post-overwrites             不要覆盖后处理文件; 默认情况下,后处理文件将被覆盖\n--embed-subs                     在视频中嵌入字幕(仅适用于mp4,webm和mkv视频）\n--embed-thumbnail                将缩略图嵌入音频作为封面艺术\n--add-metadata                   将元数据写入视频文件\n--metadata-from-title FORMAT     从视频标题中解析附加元数据，如歌曲标题/艺术家。格式语法和--output相似.也可以使用带有命名捕获组的正则表达式。解析的参数替换现有值。Example: --metadata-from-title \"%(artist)s - %(title)s\" matches a title like \"Coldplay - Paradise\". Example (regex): --metadata-from-title \"(?P<artist>.+?) - (?P<title>.+)\" \n--xattrs                         将元数据写入视频文件的xattrs(使用dublin core 和 xdg标准)\n--fixup POLICY                   自动更正文件的已知故障。never(不做警告), warn(只发出警告), detect_or_warn (默认;如果可以的话修复文件,否则警告)\n--prefer-avconv                  后处理时相较ffmpeg偏向于avconv\n--prefer-ffmpeg                  后处理优先使用ffmpeg\n--ffmpeg-location PATH           ffmpeg/avconv程序位置;PATH为二进制所在文件夹或者目录.\n--exec CMD                       在下载后对文件执行命令,类似于find -exec语法.示例：--exec'adb push {} /sdcard/Music/ && rm {}'\n--convert-subs FORMAT            转换字幕格式(当前支持: srt|ass|vtt)\n```\n\n","source":"_posts/youtube-dl命令.md","raw":"---\ntitle: youtube-dl命令\ndate: 2021-07-13 08:25:37\ntags: youtube-dl\ncategories: 工具\ndescription: youtube-dl基于python实现，使用前先安装python并加入环境变量，再安装youtube-dl\n---\n\n实例\n\n```bash\nyoutube-dl --proxy http://127.0.0.1:10809 \"https://www.youtube.com/watch?v=6k8cpUkKK4c\"\n--merge-output-format mp4 --write-auto-sub --sub-lang zh-Hans --embed-sub -i \nyoutube-dl --proxy http://127.0.0.1:10809  --write-auto-sub --embed-subs --embed-thumbnail XyaBFh_6b-8\n```\n\n\n\n通用选项\n\n```bash\n-h, --help                       打印帮助文档\n    --version                        打印版本信息\n    -U, --update                     更新到最新版(需要权限)\n    -i, --ignore-errors              遇到下载错误时跳过\n    --abort-on-error                 遇到下载错误时终止\n    --dump-user-agent                显示当前使用的浏览器(User-agent)\n    --list-extractors                列出所有的提取器(支持的网站)\n    --extractor-descriptions         同上\n    --force-generic-extractor        强制使用通用提取器下载\n    --default-search PREFIX          使用此前缀补充不完整的URLs，例如：\"ytsearch2 yt-dl\" 从youtube搜索并下载两个关于yt-dl视频. 使用\"auto\"youtube-dl就会猜一个，一般效果等价于\"ytsearch\"(\"auto_warning\"猜测时加入警告).我已知支持的PREFIX：ytsearch (youtube), ytsearchdate (youtube), yvsearch (yahoo videos), gvsearch (google videos) \n    --ignore-config                  不读取配置文件，当时用了全局配置文件/etc/youtube-dl.conf:不再读取 ~/.config/youtube-dl/config (%APPDATA%/youtube-dl/config.txt on Windows)\n    --config-location PATH           使用指定路径下的配置文件\n    --flat-playlist                  列出列表视频但不下载\n    --mark-watched                   标记看过此视频 (YouTube only)\n    --no-mark-watched                不标记看过此视频 (YouTube only)\n    --no-color                       打印到屏幕上的代码不带色\n```\n\n网络选项\n\n```bash\n --proxy URL                      使用HTTP/HTTPS/SOCKS协议的代理.如：socks5://127.0.0.1:1080/.\n    --socket-timeout SECONDS         放弃连接前等待时间\n    --source-address IP              绑定的客户端IP地址\n    -4, --force-ipv4                 所有连接通过IPv4\n    -6, --force-ipv6                 所有连接通过IPv6\n```\n\n代理设置\n\n```bash\n   --geo-verification-proxy URL     使用此代理地址测试一些有地理限制的地址\n    --geo-bypass                     绕过地理限制通过伪装X-Forwarded-For HTTP头部的客户端ip\n    --no-geo-bypass                  不 绕过地理限制通过伪装X-Forwarded-For HTTP头部的客户端ip\n    --geo-bypass-country CODE        强制绕过地理限制通过提供准确的ISO 3166-2标准的国别代码\n    --geo-bypass-ip-block IP_BLOCK   强制绕过地理限制通过提供精确的无类别域间路由IP段(2018.09.13更新)\n```\n\n视频选择\n\n```bash\n   --playlist-start NUMBER          指定列表中开始下载的视频(默认为1)\n    --playlist-end NUMBER            指定列表中结束的视频(默认为last)\n    --playlist-items ITEM_SPEC       指定列表中要下载的视频项目编号.如：\"--playlist-items 1,2,5,8\"或\"--playlist-items 1-3,7,10-13\"\n    --match-title REGEX              下载标题匹配的视频(正则表达式或区分大小写的字符串)\n    --reject-title REGEX             跳过下载标题匹配的视频(正则表达式或区分大小写的字符串)\n    --max-downloads NUMBER           下载NUMBER个视频后停止\n    --min-filesize SIZE              不下载小于SIZE的视频(e.g. 50k or 44.6m)\n    --max-filesize SIZE              不下载大于SIZE的视频(e.g. 50k or 44.6m)\n    --date DATE                      仅下载上传日期在指定日期的视频\n    --datebefore DATE                仅下载上传日期在指定日期或之前的视频 (i.e. inclusive)\n    --dateafter DATE                 仅下载上传日期在指定日期或之后的视频 (i.e. inclusive)\n    --min-views COUNT                不下载观影数小于指定值的视频\n    --max-views COUNT                不下载观影数大于指定值的视频\n    --match-filter FILTER            通用视频过滤器. \n    --no-playlist                    当视频链接到一个视频和一个播放列表时，仅下载视频\n    --yes-playlist                   当视频链接到一个视频和一个播放列表时，下载视频和播放列表\n    --age-limit YEARS                下载合适上传年限的视频\n    --download-archive FILE          仅下载档案文件中未列出的影片，已下载的记录ID\n    --include-ads                    同时下载广告(实验)\n```\n\n下载选项\n\n```bash\n-r, --limit-rate RATE            最大bps (e.g. 50K or 4.2M)\n-R, --retries RETRIES            重试次数 (默认10), or \"infinite\".\n--fragment-retries RETRIES       一个分段的最大重试次数(default is 10), or \"infinite\" (DASH, hlsnative and ISM)\n--skip-unavailable-fragments     跳过不可用分段(DASH, hlsnative and ISM)\n--abort-on-unavailable-fragment  放弃某个分段当不可获取时\n--keep-fragments                 下载完成后，将下载的片段保存在磁盘上; 片段默认被删除\n--buffer-size SIZE               设置缓冲区大小buffer (e.g. 1024 or 16K) (default is 1024)\n--no-resize-buffer               不自动调整缓冲区大小.默认情况下自动调整\n--playlist-reverse               以相反的顺序下载播放列表视频\n--playlist-random                以随机的顺序下载播放列表视频\n--xattr-set-filesize             Set file xattribute ytdl.filesize with expected file size (experimental)\n--hls-prefer-native              使用本机默认HLS下载器而不是ffmpeg\n--hls-prefer-ffmpeg              使用ffmpeg而不是本机HLS下载器\n--hls-use-mpegts                 使用TS流容器来存放HLS视频,一些高级播放器允许在下载的同时播放视频\n--external-downloader COMMAND    使用指定的第三方下载工具,当前支持：aria2c,avconv,axel,curl,ffmpeg,httpie,wget\n--external-downloader-args ARGS  给第三方下载工具指定参数，如：--external-downloader aria2c --external-downloader-args -j8\n```\n\n文件系统选项\n\n```bash\n-a, --batch-file FILE            文件中包含需要下载的URL\n--id                             仅使用文件名中的视频ID\n-o, --output TEMPLATE            Output filename template, see the \"OUTPUT TEMPLATE\" for all the info\n--autonumber-start NUMBER        指定%(autonumber)s的起始值(默认为1)\n--restrict-filenames             将文件名限制为ASCII字符，并避免文件名中的“＆”和空格\n-w, --no-overwrites              不要覆盖文件\n-c, --continue                   强制恢复部分下载的文件。 默认情况下，youtube-dl仅在可能时将恢复下载。\n--no-continue                    不要恢复部分下载的文件(从头开始重新启动)\n--no-part                        不使用.part文件 - 直接写入输出文件\n--no-mtime                       不使用Last-modified header来设置文件最后修改时间\n--write-description              将视频描述写入.description文件\n--write-info-json                将视频元数据写入.info.json文件\n--write-annotations              将视频注释写入.annotations.xml文件\n--load-info-json FILE            包含视频信息的JSON文件(使用“--write-info-json”选项创建)\n--cookies FILE                   文件从中读取Cookie(经测试，export cookies插件可以使用，但firebug导出的cookies导致错误,chrome下请用cookies.txt)注意：不同平台windows、Linux、OSX之间需要转换CE LF才能使用！\n--cache-dir DIR                  文件存储位置。youtube-dl需要永久保存一些下载的信息。默认为$XDG_CACHE_HOME/youtube-dl或/.cache/youtube-dl。目前，只有YouTube播放器文件（对于具有模糊签名的视频）进行缓存，但可能会发生变化。\n--no-cache-dir                   不用缓存\n--rm-cache-dir                   删除所有缓存文件\n```\n\n缩略图\n\n```bash\n--write-thumbnail                把缩略图写入硬盘\n--write-all-thumbnails           将所有缩略图写入磁盘\n--list-thumbnails                列出所有可用的缩略图格式\n```\n\n详细/模拟选项\n\n```bash\n-q, --quiet                      激活退出模式\n--no-warnings                    忽略警告\n-s, --simulate                   不下载不存储任何文件到硬盘，模拟下载模式\n--skip-download                  不下载视频\n-g, --get-url                    模拟下载获取视频直连\n-e, --get-title                  模拟下载获取标题\n--get-id                         模拟下载获取id\n--get-thumbnail                  模拟下载获取缩略图URL\n--get-description                模拟下载获取视频描述\n--get-duration                   模拟下载获取视频长度\n--get-filename                   模拟下载获取输出视频文件名\n--get-format                     模拟下载获取输出视频格式\n-j, --dump-json                  模拟下载获取JSON information.\n-J, --dump-single-json           模拟下载获取每条命令行参数的JSON information.如果是个播放列表，就获取整个播放列表的JSON\n--print-json                     下载的同时获取视频信息的JSON\n--newline                        进度条在新行输出\n--no-progress                    不打印进度条\n--console-title                  在控制台标题栏显示进度\n-v, --verbose                    打印各种调试信息\n--dump-pages                     打印下载下来的使用base64编码的页面来调试问题（非常冗长）\n--write-pages                    将下载的中间页以文件的形式写入当前目录中以调试问题\n--print-traffic                  显示发送和读取HTTP流量\n-C, --call-home                  联系youtube-dl服务器进行调试\n--no-call-home                   不联系youtube-dl服务器进行调试\n```\n\n解决方法:\n\n```bash\n--encoding ENCODING              强制指定编码(实验)\n--no-check-certificate           禁止HTTPS证书验证\n--prefer-insecure                使用未加密的连接来检索有关视频的信息(目前仅支持YouTube)\n--user-agent UA                  指定user agent\n--referer URL                    指定自定义的referer,仅限视频来源于同一网站\n--add-header FIELD:VALUE         指定一个自定义值的HTTP头文件,使用分号分割,可以多次使用此选项\n--bidi-workaround                围绕缺少双向文本支持的终端工作。需要在PATH中有bidiv或fribidi可执行文件\n--sleep-interval SECONDS         在每次下载之前休眠的秒数，或者每次下载之前的随机睡眠的范围的下限(最小可能的睡眠秒数)与-max-sleep-interval一起使用。\n--max-sleep-interval SECONDS     每次下载前随机睡眠范围的上限(最大可能睡眠秒数)。只能与--min-sleep-interval一起使用。\n```\n\n视频格式选项\n\n```bash\n-f, --format FORMAT              视频格式代码,查看\"FORMAT SELECTION\"获取所有信息\n--all-formats                    获取所有视频格式\n--prefer-free-formats            开源的视频格式优先，除非有特定的请求\n-F, --list-formats               列出请求视频的所有可用格式\n--youtube-skip-dash-manifest     不要下载关于YouTube视频的DASH清单和相关数据\n--merge-output-format FORMAT     如果需要合并(例如bestvideo + bestaudio)，则输出到给定的容器格式。mkv，mp4，ogg，webm，flv之一。如果不需要合并，则忽略\n```\n\n字幕选项\n\n```bash\n--write-sub                      下载字幕文件\n--write-auto-sub                 下载自动生成的字幕文件 (YouTube only)\n--all-subs                       下载所有可用的字幕\n--list-subs                      列出所有字幕\n--sub-format FORMAT              字幕格式,接受格式偏好,如：\"srt\" or \"ass/srt/best\"\n--sub-lang LANGS                 要下载的字幕的语言(可选)用逗号分隔,请使用--list-subs表示可用的语言标签\n  \n```\n\n验证选项\n\n```bash\n   -u, --username USERNAME          使用ID登录\n    -p, --password PASSWORD          账户密码,如果此选项未使用,youtube-dl将交互式地询问。\n    -2, --twofactor TWOFACTOR        双因素认证码\n    -n, --netrc                      使用.netrc认证数据\n    --video-password PASSWORD        视频密码(vimeo, smotri, youku)\n  Adobe Pass Options:\n    --ap-mso MSO                     Adobe Pass多系统运营商(电视提供商)标识符,使用--ap-list-mso列出可用的MSO\n    --ap-username USERNAME           MSO账号登录\n    --ap-password PASSWORD           账户密码,如果此选项未使用,youtube-dl将交互式地询问。\n    --ap-list-mso                    列出所有支持的MSO\n```\n\n后处理选项\n\n```bash\n-x, --extract-audio              将视频文件转换为纯音频文件(需要ffmpeg或avconv和ffprobe或avprobe)\n--audio-format FORMAT            指定音频格式: \"best\", \"aac\", \"flac\", \"mp3\", \"m4a\", \"opus\", \"vorbis\", or \"wav\"; \"best\" by default;-x存在时无效\n--audio-quality QUALITY          指定ffmpeg/avconv音频质量,为VBR插入一个0(best)-9(worse)的值(默认5),或者指定比特率\n--recode-video FORMAT            必要时将视频转码为其他格式(当前支持: mp4|flv|ogg|webm|mkv|avi)\n--postprocessor-args ARGS        给后处理器提供这些参数\n-k, --keep-video                 视频文件在后处理后保存在磁盘上; 该视频默认被删除\n--no-post-overwrites             不要覆盖后处理文件; 默认情况下,后处理文件将被覆盖\n--embed-subs                     在视频中嵌入字幕(仅适用于mp4,webm和mkv视频）\n--embed-thumbnail                将缩略图嵌入音频作为封面艺术\n--add-metadata                   将元数据写入视频文件\n--metadata-from-title FORMAT     从视频标题中解析附加元数据，如歌曲标题/艺术家。格式语法和--output相似.也可以使用带有命名捕获组的正则表达式。解析的参数替换现有值。Example: --metadata-from-title \"%(artist)s - %(title)s\" matches a title like \"Coldplay - Paradise\". Example (regex): --metadata-from-title \"(?P<artist>.+?) - (?P<title>.+)\" \n--xattrs                         将元数据写入视频文件的xattrs(使用dublin core 和 xdg标准)\n--fixup POLICY                   自动更正文件的已知故障。never(不做警告), warn(只发出警告), detect_or_warn (默认;如果可以的话修复文件,否则警告)\n--prefer-avconv                  后处理时相较ffmpeg偏向于avconv\n--prefer-ffmpeg                  后处理优先使用ffmpeg\n--ffmpeg-location PATH           ffmpeg/avconv程序位置;PATH为二进制所在文件夹或者目录.\n--exec CMD                       在下载后对文件执行命令,类似于find -exec语法.示例：--exec'adb push {} /sdcard/Music/ && rm {}'\n--convert-subs FORMAT            转换字幕格式(当前支持: srt|ass|vtt)\n```\n\n","slug":"youtube-dl命令","published":1,"updated":"2021-07-13T01:15:54.518Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3g002bjsvk2lwhcrm8","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>实例</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">youtube-dl --proxy http://127.0.0.1:10809 <span class=\"token string\">\"https://www.youtube.com/watch?v=6k8cpUkKK4c\"</span>\n--merge-output-format mp4 --write-auto-sub --sub-lang zh-Hans --embed-sub -i \nyoutube-dl --proxy http://127.0.0.1:10809  --write-auto-sub --embed-subs --embed-thumbnail XyaBFh_6b-8</code></pre>\n<p>通用选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-h, --help                       打印帮助文档\n    --version                        打印版本信息\n    -U, --update                     更新到最新版<span class=\"token punctuation\">(</span>需要权限<span class=\"token punctuation\">)</span>\n    -i, --ignore-errors              遇到下载错误时跳过\n    --abort-on-error                 遇到下载错误时终止\n    --dump-user-agent                显示当前使用的浏览器<span class=\"token punctuation\">(</span>User-agent<span class=\"token punctuation\">)</span>\n    --list-extractors                列出所有的提取器<span class=\"token punctuation\">(</span>支持的网站<span class=\"token punctuation\">)</span>\n    --extractor-descriptions         同上\n    --force-generic-extractor        强制使用通用提取器下载\n    --default-search PREFIX          使用此前缀补充不完整的URLs，例如：<span class=\"token string\">\"ytsearch2 yt-dl\"</span> 从youtube搜索并下载两个关于yt-dl视频. 使用<span class=\"token string\">\"auto\"</span>youtube-dl就会猜一个，一般效果等价于<span class=\"token string\">\"ytsearch\"</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"auto_warning\"</span>猜测时加入警告<span class=\"token punctuation\">)</span>.我已知支持的PREFIX：ytsearch <span class=\"token punctuation\">(</span>youtube<span class=\"token punctuation\">)</span>, ytsearchdate <span class=\"token punctuation\">(</span>youtube<span class=\"token punctuation\">)</span>, yvsearch <span class=\"token punctuation\">(</span>yahoo videos<span class=\"token punctuation\">)</span>, gvsearch <span class=\"token punctuation\">(</span>google videos<span class=\"token punctuation\">)</span> \n    --ignore-config                  不读取配置文件，当时用了全局配置文件/etc/youtube-dl.conf:不再读取 ~/.config/youtube-dl/config <span class=\"token punctuation\">(</span>%APPDATA%/youtube-dl/config.txt on Windows<span class=\"token punctuation\">)</span>\n    --config-location <span class=\"token environment constant\">PATH</span>           使用指定路径下的配置文件\n    --flat-playlist                  列出列表视频但不下载\n    --mark-watched                   标记看过此视频 <span class=\"token punctuation\">(</span>YouTube only<span class=\"token punctuation\">)</span>\n    --no-mark-watched                不标记看过此视频 <span class=\"token punctuation\">(</span>YouTube only<span class=\"token punctuation\">)</span>\n    --no-color                       打印到屏幕上的代码不带色</code></pre>\n<p>网络选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">--proxy URL                      使用HTTP/HTTPS/SOCKS协议的代理.如：socks5://127.0.0.1:1080/.\n   --socket-timeout <span class=\"token environment constant\">SECONDS</span>         放弃连接前等待时间\n   --source-address IP              绑定的客户端IP地址\n   -4, --force-ipv4                 所有连接通过IPv4\n   -6, --force-ipv6                 所有连接通过IPv6</code></pre>\n<p>代理设置</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">--geo-verification-proxy URL     使用此代理地址测试一些有地理限制的地址\n --geo-bypass                     绕过地理限制通过伪装X-Forwarded-For HTTP头部的客户端ip\n --no-geo-bypass                  不 绕过地理限制通过伪装X-Forwarded-For HTTP头部的客户端ip\n --geo-bypass-country CODE        强制绕过地理限制通过提供准确的ISO <span class=\"token number\">3166</span>-2标准的国别代码\n --geo-bypass-ip-block IP_BLOCK   强制绕过地理限制通过提供精确的无类别域间路由IP段<span class=\"token punctuation\">(</span><span class=\"token number\">2018.09</span>.13更新<span class=\"token punctuation\">)</span></code></pre>\n<p>视频选择</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">--playlist-start NUMBER          指定列表中开始下载的视频<span class=\"token punctuation\">(</span>默认为1<span class=\"token punctuation\">)</span>\n --playlist-end NUMBER            指定列表中结束的视频<span class=\"token punctuation\">(</span>默认为last<span class=\"token punctuation\">)</span>\n --playlist-items ITEM_SPEC       指定列表中要下载的视频项目编号.如：<span class=\"token string\">\"--playlist-items 1,2,5,8\"</span>或<span class=\"token string\">\"--playlist-items 1-3,7,10-13\"</span>\n --match-title REGEX              下载标题匹配的视频<span class=\"token punctuation\">(</span>正则表达式或区分大小写的字符串<span class=\"token punctuation\">)</span>\n --reject-title REGEX             跳过下载标题匹配的视频<span class=\"token punctuation\">(</span>正则表达式或区分大小写的字符串<span class=\"token punctuation\">)</span>\n --max-downloads NUMBER           下载NUMBER个视频后停止\n --min-filesize SIZE              不下载小于SIZE的视频<span class=\"token punctuation\">(</span>e.g. 50k or <span class=\"token number\">44</span>.6m<span class=\"token punctuation\">)</span>\n --max-filesize SIZE              不下载大于SIZE的视频<span class=\"token punctuation\">(</span>e.g. 50k or <span class=\"token number\">44</span>.6m<span class=\"token punctuation\">)</span>\n --date DATE                      仅下载上传日期在指定日期的视频\n --datebefore DATE                仅下载上传日期在指定日期或之前的视频 <span class=\"token punctuation\">(</span>i.e. inclusive<span class=\"token punctuation\">)</span>\n --dateafter DATE                 仅下载上传日期在指定日期或之后的视频 <span class=\"token punctuation\">(</span>i.e. inclusive<span class=\"token punctuation\">)</span>\n --min-views COUNT                不下载观影数小于指定值的视频\n --max-views COUNT                不下载观影数大于指定值的视频\n --match-filter FILTER            通用视频过滤器. \n --no-playlist                    当视频链接到一个视频和一个播放列表时，仅下载视频\n --yes-playlist                   当视频链接到一个视频和一个播放列表时，下载视频和播放列表\n --age-limit YEARS                下载合适上传年限的视频\n --download-archive FILE          仅下载档案文件中未列出的影片，已下载的记录ID\n --include-ads                    同时下载广告<span class=\"token punctuation\">(</span>实验<span class=\"token punctuation\">)</span></code></pre>\n<p>下载选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-r, --limit-rate RATE            最大bps <span class=\"token punctuation\">(</span>e.g. 50K or <span class=\"token number\">4</span>.2M<span class=\"token punctuation\">)</span>\n-R, --retries RETRIES            重试次数 <span class=\"token punctuation\">(</span>默认10<span class=\"token punctuation\">)</span>, or <span class=\"token string\">\"infinite\"</span><span class=\"token builtin class-name\">.</span>\n--fragment-retries RETRIES       一个分段的最大重试次数<span class=\"token punctuation\">(</span>default is <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>, or <span class=\"token string\">\"infinite\"</span> <span class=\"token punctuation\">(</span>DASH, hlsnative and ISM<span class=\"token punctuation\">)</span>\n--skip-unavailable-fragments     跳过不可用分段<span class=\"token punctuation\">(</span>DASH, hlsnative and ISM<span class=\"token punctuation\">)</span>\n--abort-on-unavailable-fragment  放弃某个分段当不可获取时\n--keep-fragments                 下载完成后，将下载的片段保存在磁盘上<span class=\"token punctuation\">;</span> 片段默认被删除\n--buffer-size SIZE               设置缓冲区大小buffer <span class=\"token punctuation\">(</span>e.g. <span class=\"token number\">1024</span> or 16K<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>default is <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n--no-resize-buffer               不自动调整缓冲区大小.默认情况下自动调整\n--playlist-reverse               以相反的顺序下载播放列表视频\n--playlist-random                以随机的顺序下载播放列表视频\n--xattr-set-filesize             Set <span class=\"token function\">file</span> xattribute ytdl.filesize with expected <span class=\"token function\">file</span> size <span class=\"token punctuation\">(</span>experimental<span class=\"token punctuation\">)</span>\n--hls-prefer-native              使用本机默认HLS下载器而不是ffmpeg\n--hls-prefer-ffmpeg              使用ffmpeg而不是本机HLS下载器\n--hls-use-mpegts                 使用TS流容器来存放HLS视频,一些高级播放器允许在下载的同时播放视频\n--external-downloader COMMAND    使用指定的第三方下载工具,当前支持：aria2c,avconv,axel,curl,ffmpeg,httpie,wget\n--external-downloader-args ARGS  给第三方下载工具指定参数，如：--external-downloader aria2c --external-downloader-args -j8</code></pre>\n<p>文件系统选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-a, --batch-file FILE            文件中包含需要下载的URL\n--id                             仅使用文件名中的视频ID\n-o, --output TEMPLATE            Output filename template, see the <span class=\"token string\">\"OUTPUT TEMPLATE\"</span> <span class=\"token keyword\">for</span> all the info\n--autonumber-start NUMBER        指定%<span class=\"token punctuation\">(</span>autonumber<span class=\"token punctuation\">)</span>s的起始值<span class=\"token punctuation\">(</span>默认为1<span class=\"token punctuation\">)</span>\n--restrict-filenames             将文件名限制为ASCII字符，并避免文件名中的“＆”和空格\n-w, --no-overwrites              不要覆盖文件\n-c, --continue                   强制恢复部分下载的文件。 默认情况下，youtube-dl仅在可能时将恢复下载。\n--no-continue                    不要恢复部分下载的文件<span class=\"token punctuation\">(</span>从头开始重新启动<span class=\"token punctuation\">)</span>\n--no-part                        不使用.part文件 - 直接写入输出文件\n--no-mtime                       不使用Last-modified header来设置文件最后修改时间\n--write-description              将视频描述写入.description文件\n--write-info-json                将视频元数据写入.info.json文件\n--write-annotations              将视频注释写入.annotations.xml文件\n--load-info-json FILE            包含视频信息的JSON文件<span class=\"token punctuation\">(</span>使用“--write-info-json”选项创建<span class=\"token punctuation\">)</span>\n--cookies FILE                   文件从中读取Cookie<span class=\"token punctuation\">(</span>经测试，export cookies插件可以使用，但firebug导出的cookies导致错误,chrome下请用cookies.txt<span class=\"token punctuation\">)</span>注意：不同平台windows、Linux、OSX之间需要转换CE LF才能使用！\n--cache-dir DIR                  文件存储位置。youtube-dl需要永久保存一些下载的信息。默认为<span class=\"token variable\">$XDG_CACHE_HOME</span>/youtube-dl或/.cache/youtube-dl。目前，只有YouTube播放器文件（对于具有模糊签名的视频）进行缓存，但可能会发生变化。\n--no-cache-dir                   不用缓存\n--rm-cache-dir                   删除所有缓存文件</code></pre>\n<p>缩略图</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">--write-thumbnail                把缩略图写入硬盘\n--write-all-thumbnails           将所有缩略图写入磁盘\n--list-thumbnails                列出所有可用的缩略图格式</code></pre>\n<p>详细/模拟选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-q, --quiet                      激活退出模式\n--no-warnings                    忽略警告\n-s, --simulate                   不下载不存储任何文件到硬盘，模拟下载模式\n--skip-download                  不下载视频\n-g, --get-url                    模拟下载获取视频直连\n-e, --get-title                  模拟下载获取标题\n--get-id                         模拟下载获取id\n--get-thumbnail                  模拟下载获取缩略图URL\n--get-description                模拟下载获取视频描述\n--get-duration                   模拟下载获取视频长度\n--get-filename                   模拟下载获取输出视频文件名\n--get-format                     模拟下载获取输出视频格式\n-j, --dump-json                  模拟下载获取JSON information.\n-J, --dump-single-json           模拟下载获取每条命令行参数的JSON information.如果是个播放列表，就获取整个播放列表的JSON\n--print-json                     下载的同时获取视频信息的JSON\n--newline                        进度条在新行输出\n--no-progress                    不打印进度条\n--console-title                  在控制台标题栏显示进度\n-v, --verbose                    打印各种调试信息\n--dump-pages                     打印下载下来的使用base64编码的页面来调试问题（非常冗长）\n--write-pages                    将下载的中间页以文件的形式写入当前目录中以调试问题\n--print-traffic                  显示发送和读取HTTP流量\n-C, --call-home                  联系youtube-dl服务器进行调试\n--no-call-home                   不联系youtube-dl服务器进行调试</code></pre>\n<p>解决方法:</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">--encoding ENCODING              强制指定编码<span class=\"token punctuation\">(</span>实验<span class=\"token punctuation\">)</span>\n--no-check-certificate           禁止HTTPS证书验证\n--prefer-insecure                使用未加密的连接来检索有关视频的信息<span class=\"token punctuation\">(</span>目前仅支持YouTube<span class=\"token punctuation\">)</span>\n--user-agent UA                  指定user agent\n--referer URL                    指定自定义的referer,仅限视频来源于同一网站\n--add-header FIELD:VALUE         指定一个自定义值的HTTP头文件,使用分号分割,可以多次使用此选项\n--bidi-workaround                围绕缺少双向文本支持的终端工作。需要在<span class=\"token environment constant\">PATH</span>中有bidiv或fribidi可执行文件\n--sleep-interval <span class=\"token environment constant\">SECONDS</span>         在每次下载之前休眠的秒数，或者每次下载之前的随机睡眠的范围的下限<span class=\"token punctuation\">(</span>最小可能的睡眠秒数<span class=\"token punctuation\">)</span>与-max-sleep-interval一起使用。\n--max-sleep-interval <span class=\"token environment constant\">SECONDS</span>     每次下载前随机睡眠范围的上限<span class=\"token punctuation\">(</span>最大可能睡眠秒数<span class=\"token punctuation\">)</span>。只能与--min-sleep-interval一起使用。</code></pre>\n<p>视频格式选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-f, --format FORMAT              视频格式代码,查看<span class=\"token string\">\"FORMAT SELECTION\"</span>获取所有信息\n--all-formats                    获取所有视频格式\n--prefer-free-formats            开源的视频格式优先，除非有特定的请求\n-F, --list-formats               列出请求视频的所有可用格式\n--youtube-skip-dash-manifest     不要下载关于YouTube视频的DASH清单和相关数据\n--merge-output-format FORMAT     如果需要合并<span class=\"token punctuation\">(</span>例如bestvideo + bestaudio<span class=\"token punctuation\">)</span>，则输出到给定的容器格式。mkv，mp4，ogg，webm，flv之一。如果不需要合并，则忽略</code></pre>\n<p>字幕选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">--write-sub                      下载字幕文件\n--write-auto-sub                 下载自动生成的字幕文件 <span class=\"token punctuation\">(</span>YouTube only<span class=\"token punctuation\">)</span>\n--all-subs                       下载所有可用的字幕\n--list-subs                      列出所有字幕\n--sub-format FORMAT              字幕格式,接受格式偏好,如：<span class=\"token string\">\"srt\"</span> or <span class=\"token string\">\"ass/srt/best\"</span>\n--sub-lang LANGS                 要下载的字幕的语言<span class=\"token punctuation\">(</span>可选<span class=\"token punctuation\">)</span>用逗号分隔,请使用--list-subs表示可用的语言标签\n  </code></pre>\n<p>验证选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"> -u, --username USERNAME          使用ID登录\n  -p, --password PASSWORD          账户密码,如果此选项未使用,youtube-dl将交互式地询问。\n  -2, --twofactor TWOFACTOR        双因素认证码\n  -n, --netrc                      使用.netrc认证数据\n  --video-password PASSWORD        视频密码<span class=\"token punctuation\">(</span>vimeo, smotri, youku<span class=\"token punctuation\">)</span>\nAdobe Pass Options:\n  --ap-mso MSO                     Adobe Pass多系统运营商<span class=\"token punctuation\">(</span>电视提供商<span class=\"token punctuation\">)</span>标识符,使用--ap-list-mso列出可用的MSO\n  --ap-username USERNAME           MSO账号登录\n  --ap-password PASSWORD           账户密码,如果此选项未使用,youtube-dl将交互式地询问。\n  --ap-list-mso                    列出所有支持的MSO</code></pre>\n<p>后处理选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-x, --extract-audio              将视频文件转换为纯音频文件<span class=\"token punctuation\">(</span>需要ffmpeg或avconv和ffprobe或avprobe<span class=\"token punctuation\">)</span>\n--audio-format FORMAT            指定音频格式: <span class=\"token string\">\"best\"</span>, <span class=\"token string\">\"aac\"</span>, <span class=\"token string\">\"flac\"</span>, <span class=\"token string\">\"mp3\"</span>, <span class=\"token string\">\"m4a\"</span>, <span class=\"token string\">\"opus\"</span>, <span class=\"token string\">\"vorbis\"</span>, or <span class=\"token string\">\"wav\"</span><span class=\"token punctuation\">;</span> <span class=\"token string\">\"best\"</span> by default<span class=\"token punctuation\">;</span>-x存在时无效\n--audio-quality QUALITY          指定ffmpeg/avconv音频质量,为VBR插入一个0<span class=\"token punctuation\">(</span>best<span class=\"token punctuation\">)</span>-9<span class=\"token punctuation\">(</span>worse<span class=\"token punctuation\">)</span>的值<span class=\"token punctuation\">(</span>默认5<span class=\"token punctuation\">)</span>,或者指定比特率\n--recode-video FORMAT            必要时将视频转码为其他格式<span class=\"token punctuation\">(</span>当前支持: mp4<span class=\"token operator\">|</span>flv<span class=\"token operator\">|</span>ogg<span class=\"token operator\">|</span>webm<span class=\"token operator\">|</span>mkv<span class=\"token operator\">|</span>avi<span class=\"token punctuation\">)</span>\n--postprocessor-args ARGS        给后处理器提供这些参数\n-k, --keep-video                 视频文件在后处理后保存在磁盘上<span class=\"token punctuation\">;</span> 该视频默认被删除\n--no-post-overwrites             不要覆盖后处理文件<span class=\"token punctuation\">;</span> 默认情况下,后处理文件将被覆盖\n--embed-subs                     在视频中嵌入字幕<span class=\"token punctuation\">(</span>仅适用于mp4,webm和mkv视频）\n--embed-thumbnail                将缩略图嵌入音频作为封面艺术\n--add-metadata                   将元数据写入视频文件\n--metadata-from-title FORMAT     从视频标题中解析附加元数据，如歌曲标题/艺术家。格式语法和--output相似.也可以使用带有命名捕获组的正则表达式。解析的参数替换现有值。Example: --metadata-from-title <span class=\"token string\">\"%(artist)s - %(title)s\"</span> matches a title like <span class=\"token string\">\"Coldplay - Paradise\"</span><span class=\"token builtin class-name\">.</span> Example <span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">)</span>: --metadata-from-title <span class=\"token string\">\"(?P&lt;artist>.+?) - (?P&lt;title>.+)\"</span> \n--xattrs                         将元数据写入视频文件的xattrs<span class=\"token punctuation\">(</span>使用dublin core 和 xdg标准<span class=\"token punctuation\">)</span>\n--fixup POLICY                   自动更正文件的已知故障。never<span class=\"token punctuation\">(</span>不做警告<span class=\"token punctuation\">)</span>, warn<span class=\"token punctuation\">(</span>只发出警告<span class=\"token punctuation\">)</span>, detect_or_warn <span class=\"token punctuation\">(</span>默认<span class=\"token punctuation\">;</span>如果可以的话修复文件,否则警告<span class=\"token punctuation\">)</span>\n--prefer-avconv                  后处理时相较ffmpeg偏向于avconv\n--prefer-ffmpeg                  后处理优先使用ffmpeg\n--ffmpeg-location <span class=\"token environment constant\">PATH</span>           ffmpeg/avconv程序位置<span class=\"token punctuation\">;</span><span class=\"token environment constant\">PATH</span>为二进制所在文件夹或者目录.\n--exec CMD                       在下载后对文件执行命令,类似于find -exec语法.示例：--exec<span class=\"token string\">'adb push &#123;&#125; /sdcard/Music/ &amp;&amp; rm &#123;&#125;'</span>\n--convert-subs FORMAT            转换字幕格式<span class=\"token punctuation\">(</span>当前支持: srt<span class=\"token operator\">|</span>ass<span class=\"token operator\">|</span>vtt<span class=\"token punctuation\">)</span></code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160654.webp","length":7321,"excerpt":"","more":"<p>实例</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">youtube-dl --proxy http://127.0.0.1:10809 <span class=\"token string\">\"https://www.youtube.com/watch?v=6k8cpUkKK4c\"</span>\n--merge-output-format mp4 --write-auto-sub --sub-lang zh-Hans --embed-sub -i \nyoutube-dl --proxy http://127.0.0.1:10809  --write-auto-sub --embed-subs --embed-thumbnail XyaBFh_6b-8</code></pre>\n<p>通用选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-h, --help                       打印帮助文档\n    --version                        打印版本信息\n    -U, --update                     更新到最新版<span class=\"token punctuation\">(</span>需要权限<span class=\"token punctuation\">)</span>\n    -i, --ignore-errors              遇到下载错误时跳过\n    --abort-on-error                 遇到下载错误时终止\n    --dump-user-agent                显示当前使用的浏览器<span class=\"token punctuation\">(</span>User-agent<span class=\"token punctuation\">)</span>\n    --list-extractors                列出所有的提取器<span class=\"token punctuation\">(</span>支持的网站<span class=\"token punctuation\">)</span>\n    --extractor-descriptions         同上\n    --force-generic-extractor        强制使用通用提取器下载\n    --default-search PREFIX          使用此前缀补充不完整的URLs，例如：<span class=\"token string\">\"ytsearch2 yt-dl\"</span> 从youtube搜索并下载两个关于yt-dl视频. 使用<span class=\"token string\">\"auto\"</span>youtube-dl就会猜一个，一般效果等价于<span class=\"token string\">\"ytsearch\"</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"auto_warning\"</span>猜测时加入警告<span class=\"token punctuation\">)</span>.我已知支持的PREFIX：ytsearch <span class=\"token punctuation\">(</span>youtube<span class=\"token punctuation\">)</span>, ytsearchdate <span class=\"token punctuation\">(</span>youtube<span class=\"token punctuation\">)</span>, yvsearch <span class=\"token punctuation\">(</span>yahoo videos<span class=\"token punctuation\">)</span>, gvsearch <span class=\"token punctuation\">(</span>google videos<span class=\"token punctuation\">)</span> \n    --ignore-config                  不读取配置文件，当时用了全局配置文件/etc/youtube-dl.conf:不再读取 ~/.config/youtube-dl/config <span class=\"token punctuation\">(</span>%APPDATA%/youtube-dl/config.txt on Windows<span class=\"token punctuation\">)</span>\n    --config-location <span class=\"token environment constant\">PATH</span>           使用指定路径下的配置文件\n    --flat-playlist                  列出列表视频但不下载\n    --mark-watched                   标记看过此视频 <span class=\"token punctuation\">(</span>YouTube only<span class=\"token punctuation\">)</span>\n    --no-mark-watched                不标记看过此视频 <span class=\"token punctuation\">(</span>YouTube only<span class=\"token punctuation\">)</span>\n    --no-color                       打印到屏幕上的代码不带色</code></pre>\n<p>网络选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">--proxy URL                      使用HTTP/HTTPS/SOCKS协议的代理.如：socks5://127.0.0.1:1080/.\n   --socket-timeout <span class=\"token environment constant\">SECONDS</span>         放弃连接前等待时间\n   --source-address IP              绑定的客户端IP地址\n   -4, --force-ipv4                 所有连接通过IPv4\n   -6, --force-ipv6                 所有连接通过IPv6</code></pre>\n<p>代理设置</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">--geo-verification-proxy URL     使用此代理地址测试一些有地理限制的地址\n --geo-bypass                     绕过地理限制通过伪装X-Forwarded-For HTTP头部的客户端ip\n --no-geo-bypass                  不 绕过地理限制通过伪装X-Forwarded-For HTTP头部的客户端ip\n --geo-bypass-country CODE        强制绕过地理限制通过提供准确的ISO <span class=\"token number\">3166</span>-2标准的国别代码\n --geo-bypass-ip-block IP_BLOCK   强制绕过地理限制通过提供精确的无类别域间路由IP段<span class=\"token punctuation\">(</span><span class=\"token number\">2018.09</span>.13更新<span class=\"token punctuation\">)</span></code></pre>\n<p>视频选择</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">--playlist-start NUMBER          指定列表中开始下载的视频<span class=\"token punctuation\">(</span>默认为1<span class=\"token punctuation\">)</span>\n --playlist-end NUMBER            指定列表中结束的视频<span class=\"token punctuation\">(</span>默认为last<span class=\"token punctuation\">)</span>\n --playlist-items ITEM_SPEC       指定列表中要下载的视频项目编号.如：<span class=\"token string\">\"--playlist-items 1,2,5,8\"</span>或<span class=\"token string\">\"--playlist-items 1-3,7,10-13\"</span>\n --match-title REGEX              下载标题匹配的视频<span class=\"token punctuation\">(</span>正则表达式或区分大小写的字符串<span class=\"token punctuation\">)</span>\n --reject-title REGEX             跳过下载标题匹配的视频<span class=\"token punctuation\">(</span>正则表达式或区分大小写的字符串<span class=\"token punctuation\">)</span>\n --max-downloads NUMBER           下载NUMBER个视频后停止\n --min-filesize SIZE              不下载小于SIZE的视频<span class=\"token punctuation\">(</span>e.g. 50k or <span class=\"token number\">44</span>.6m<span class=\"token punctuation\">)</span>\n --max-filesize SIZE              不下载大于SIZE的视频<span class=\"token punctuation\">(</span>e.g. 50k or <span class=\"token number\">44</span>.6m<span class=\"token punctuation\">)</span>\n --date DATE                      仅下载上传日期在指定日期的视频\n --datebefore DATE                仅下载上传日期在指定日期或之前的视频 <span class=\"token punctuation\">(</span>i.e. inclusive<span class=\"token punctuation\">)</span>\n --dateafter DATE                 仅下载上传日期在指定日期或之后的视频 <span class=\"token punctuation\">(</span>i.e. inclusive<span class=\"token punctuation\">)</span>\n --min-views COUNT                不下载观影数小于指定值的视频\n --max-views COUNT                不下载观影数大于指定值的视频\n --match-filter FILTER            通用视频过滤器. \n --no-playlist                    当视频链接到一个视频和一个播放列表时，仅下载视频\n --yes-playlist                   当视频链接到一个视频和一个播放列表时，下载视频和播放列表\n --age-limit YEARS                下载合适上传年限的视频\n --download-archive FILE          仅下载档案文件中未列出的影片，已下载的记录ID\n --include-ads                    同时下载广告<span class=\"token punctuation\">(</span>实验<span class=\"token punctuation\">)</span></code></pre>\n<p>下载选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-r, --limit-rate RATE            最大bps <span class=\"token punctuation\">(</span>e.g. 50K or <span class=\"token number\">4</span>.2M<span class=\"token punctuation\">)</span>\n-R, --retries RETRIES            重试次数 <span class=\"token punctuation\">(</span>默认10<span class=\"token punctuation\">)</span>, or <span class=\"token string\">\"infinite\"</span><span class=\"token builtin class-name\">.</span>\n--fragment-retries RETRIES       一个分段的最大重试次数<span class=\"token punctuation\">(</span>default is <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>, or <span class=\"token string\">\"infinite\"</span> <span class=\"token punctuation\">(</span>DASH, hlsnative and ISM<span class=\"token punctuation\">)</span>\n--skip-unavailable-fragments     跳过不可用分段<span class=\"token punctuation\">(</span>DASH, hlsnative and ISM<span class=\"token punctuation\">)</span>\n--abort-on-unavailable-fragment  放弃某个分段当不可获取时\n--keep-fragments                 下载完成后，将下载的片段保存在磁盘上<span class=\"token punctuation\">;</span> 片段默认被删除\n--buffer-size SIZE               设置缓冲区大小buffer <span class=\"token punctuation\">(</span>e.g. <span class=\"token number\">1024</span> or 16K<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>default is <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n--no-resize-buffer               不自动调整缓冲区大小.默认情况下自动调整\n--playlist-reverse               以相反的顺序下载播放列表视频\n--playlist-random                以随机的顺序下载播放列表视频\n--xattr-set-filesize             Set <span class=\"token function\">file</span> xattribute ytdl.filesize with expected <span class=\"token function\">file</span> size <span class=\"token punctuation\">(</span>experimental<span class=\"token punctuation\">)</span>\n--hls-prefer-native              使用本机默认HLS下载器而不是ffmpeg\n--hls-prefer-ffmpeg              使用ffmpeg而不是本机HLS下载器\n--hls-use-mpegts                 使用TS流容器来存放HLS视频,一些高级播放器允许在下载的同时播放视频\n--external-downloader COMMAND    使用指定的第三方下载工具,当前支持：aria2c,avconv,axel,curl,ffmpeg,httpie,wget\n--external-downloader-args ARGS  给第三方下载工具指定参数，如：--external-downloader aria2c --external-downloader-args -j8</code></pre>\n<p>文件系统选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-a, --batch-file FILE            文件中包含需要下载的URL\n--id                             仅使用文件名中的视频ID\n-o, --output TEMPLATE            Output filename template, see the <span class=\"token string\">\"OUTPUT TEMPLATE\"</span> <span class=\"token keyword\">for</span> all the info\n--autonumber-start NUMBER        指定%<span class=\"token punctuation\">(</span>autonumber<span class=\"token punctuation\">)</span>s的起始值<span class=\"token punctuation\">(</span>默认为1<span class=\"token punctuation\">)</span>\n--restrict-filenames             将文件名限制为ASCII字符，并避免文件名中的“＆”和空格\n-w, --no-overwrites              不要覆盖文件\n-c, --continue                   强制恢复部分下载的文件。 默认情况下，youtube-dl仅在可能时将恢复下载。\n--no-continue                    不要恢复部分下载的文件<span class=\"token punctuation\">(</span>从头开始重新启动<span class=\"token punctuation\">)</span>\n--no-part                        不使用.part文件 - 直接写入输出文件\n--no-mtime                       不使用Last-modified header来设置文件最后修改时间\n--write-description              将视频描述写入.description文件\n--write-info-json                将视频元数据写入.info.json文件\n--write-annotations              将视频注释写入.annotations.xml文件\n--load-info-json FILE            包含视频信息的JSON文件<span class=\"token punctuation\">(</span>使用“--write-info-json”选项创建<span class=\"token punctuation\">)</span>\n--cookies FILE                   文件从中读取Cookie<span class=\"token punctuation\">(</span>经测试，export cookies插件可以使用，但firebug导出的cookies导致错误,chrome下请用cookies.txt<span class=\"token punctuation\">)</span>注意：不同平台windows、Linux、OSX之间需要转换CE LF才能使用！\n--cache-dir DIR                  文件存储位置。youtube-dl需要永久保存一些下载的信息。默认为<span class=\"token variable\">$XDG_CACHE_HOME</span>/youtube-dl或/.cache/youtube-dl。目前，只有YouTube播放器文件（对于具有模糊签名的视频）进行缓存，但可能会发生变化。\n--no-cache-dir                   不用缓存\n--rm-cache-dir                   删除所有缓存文件</code></pre>\n<p>缩略图</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">--write-thumbnail                把缩略图写入硬盘\n--write-all-thumbnails           将所有缩略图写入磁盘\n--list-thumbnails                列出所有可用的缩略图格式</code></pre>\n<p>详细/模拟选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-q, --quiet                      激活退出模式\n--no-warnings                    忽略警告\n-s, --simulate                   不下载不存储任何文件到硬盘，模拟下载模式\n--skip-download                  不下载视频\n-g, --get-url                    模拟下载获取视频直连\n-e, --get-title                  模拟下载获取标题\n--get-id                         模拟下载获取id\n--get-thumbnail                  模拟下载获取缩略图URL\n--get-description                模拟下载获取视频描述\n--get-duration                   模拟下载获取视频长度\n--get-filename                   模拟下载获取输出视频文件名\n--get-format                     模拟下载获取输出视频格式\n-j, --dump-json                  模拟下载获取JSON information.\n-J, --dump-single-json           模拟下载获取每条命令行参数的JSON information.如果是个播放列表，就获取整个播放列表的JSON\n--print-json                     下载的同时获取视频信息的JSON\n--newline                        进度条在新行输出\n--no-progress                    不打印进度条\n--console-title                  在控制台标题栏显示进度\n-v, --verbose                    打印各种调试信息\n--dump-pages                     打印下载下来的使用base64编码的页面来调试问题（非常冗长）\n--write-pages                    将下载的中间页以文件的形式写入当前目录中以调试问题\n--print-traffic                  显示发送和读取HTTP流量\n-C, --call-home                  联系youtube-dl服务器进行调试\n--no-call-home                   不联系youtube-dl服务器进行调试</code></pre>\n<p>解决方法:</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">--encoding ENCODING              强制指定编码<span class=\"token punctuation\">(</span>实验<span class=\"token punctuation\">)</span>\n--no-check-certificate           禁止HTTPS证书验证\n--prefer-insecure                使用未加密的连接来检索有关视频的信息<span class=\"token punctuation\">(</span>目前仅支持YouTube<span class=\"token punctuation\">)</span>\n--user-agent UA                  指定user agent\n--referer URL                    指定自定义的referer,仅限视频来源于同一网站\n--add-header FIELD:VALUE         指定一个自定义值的HTTP头文件,使用分号分割,可以多次使用此选项\n--bidi-workaround                围绕缺少双向文本支持的终端工作。需要在<span class=\"token environment constant\">PATH</span>中有bidiv或fribidi可执行文件\n--sleep-interval <span class=\"token environment constant\">SECONDS</span>         在每次下载之前休眠的秒数，或者每次下载之前的随机睡眠的范围的下限<span class=\"token punctuation\">(</span>最小可能的睡眠秒数<span class=\"token punctuation\">)</span>与-max-sleep-interval一起使用。\n--max-sleep-interval <span class=\"token environment constant\">SECONDS</span>     每次下载前随机睡眠范围的上限<span class=\"token punctuation\">(</span>最大可能睡眠秒数<span class=\"token punctuation\">)</span>。只能与--min-sleep-interval一起使用。</code></pre>\n<p>视频格式选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-f, --format FORMAT              视频格式代码,查看<span class=\"token string\">\"FORMAT SELECTION\"</span>获取所有信息\n--all-formats                    获取所有视频格式\n--prefer-free-formats            开源的视频格式优先，除非有特定的请求\n-F, --list-formats               列出请求视频的所有可用格式\n--youtube-skip-dash-manifest     不要下载关于YouTube视频的DASH清单和相关数据\n--merge-output-format FORMAT     如果需要合并<span class=\"token punctuation\">(</span>例如bestvideo + bestaudio<span class=\"token punctuation\">)</span>，则输出到给定的容器格式。mkv，mp4，ogg，webm，flv之一。如果不需要合并，则忽略</code></pre>\n<p>字幕选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">--write-sub                      下载字幕文件\n--write-auto-sub                 下载自动生成的字幕文件 <span class=\"token punctuation\">(</span>YouTube only<span class=\"token punctuation\">)</span>\n--all-subs                       下载所有可用的字幕\n--list-subs                      列出所有字幕\n--sub-format FORMAT              字幕格式,接受格式偏好,如：<span class=\"token string\">\"srt\"</span> or <span class=\"token string\">\"ass/srt/best\"</span>\n--sub-lang LANGS                 要下载的字幕的语言<span class=\"token punctuation\">(</span>可选<span class=\"token punctuation\">)</span>用逗号分隔,请使用--list-subs表示可用的语言标签\n  </code></pre>\n<p>验证选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"> -u, --username USERNAME          使用ID登录\n  -p, --password PASSWORD          账户密码,如果此选项未使用,youtube-dl将交互式地询问。\n  -2, --twofactor TWOFACTOR        双因素认证码\n  -n, --netrc                      使用.netrc认证数据\n  --video-password PASSWORD        视频密码<span class=\"token punctuation\">(</span>vimeo, smotri, youku<span class=\"token punctuation\">)</span>\nAdobe Pass Options:\n  --ap-mso MSO                     Adobe Pass多系统运营商<span class=\"token punctuation\">(</span>电视提供商<span class=\"token punctuation\">)</span>标识符,使用--ap-list-mso列出可用的MSO\n  --ap-username USERNAME           MSO账号登录\n  --ap-password PASSWORD           账户密码,如果此选项未使用,youtube-dl将交互式地询问。\n  --ap-list-mso                    列出所有支持的MSO</code></pre>\n<p>后处理选项</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">-x, --extract-audio              将视频文件转换为纯音频文件<span class=\"token punctuation\">(</span>需要ffmpeg或avconv和ffprobe或avprobe<span class=\"token punctuation\">)</span>\n--audio-format FORMAT            指定音频格式: <span class=\"token string\">\"best\"</span>, <span class=\"token string\">\"aac\"</span>, <span class=\"token string\">\"flac\"</span>, <span class=\"token string\">\"mp3\"</span>, <span class=\"token string\">\"m4a\"</span>, <span class=\"token string\">\"opus\"</span>, <span class=\"token string\">\"vorbis\"</span>, or <span class=\"token string\">\"wav\"</span><span class=\"token punctuation\">;</span> <span class=\"token string\">\"best\"</span> by default<span class=\"token punctuation\">;</span>-x存在时无效\n--audio-quality QUALITY          指定ffmpeg/avconv音频质量,为VBR插入一个0<span class=\"token punctuation\">(</span>best<span class=\"token punctuation\">)</span>-9<span class=\"token punctuation\">(</span>worse<span class=\"token punctuation\">)</span>的值<span class=\"token punctuation\">(</span>默认5<span class=\"token punctuation\">)</span>,或者指定比特率\n--recode-video FORMAT            必要时将视频转码为其他格式<span class=\"token punctuation\">(</span>当前支持: mp4<span class=\"token operator\">|</span>flv<span class=\"token operator\">|</span>ogg<span class=\"token operator\">|</span>webm<span class=\"token operator\">|</span>mkv<span class=\"token operator\">|</span>avi<span class=\"token punctuation\">)</span>\n--postprocessor-args ARGS        给后处理器提供这些参数\n-k, --keep-video                 视频文件在后处理后保存在磁盘上<span class=\"token punctuation\">;</span> 该视频默认被删除\n--no-post-overwrites             不要覆盖后处理文件<span class=\"token punctuation\">;</span> 默认情况下,后处理文件将被覆盖\n--embed-subs                     在视频中嵌入字幕<span class=\"token punctuation\">(</span>仅适用于mp4,webm和mkv视频）\n--embed-thumbnail                将缩略图嵌入音频作为封面艺术\n--add-metadata                   将元数据写入视频文件\n--metadata-from-title FORMAT     从视频标题中解析附加元数据，如歌曲标题/艺术家。格式语法和--output相似.也可以使用带有命名捕获组的正则表达式。解析的参数替换现有值。Example: --metadata-from-title <span class=\"token string\">\"%(artist)s - %(title)s\"</span> matches a title like <span class=\"token string\">\"Coldplay - Paradise\"</span><span class=\"token builtin class-name\">.</span> Example <span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">)</span>: --metadata-from-title <span class=\"token string\">\"(?P&lt;artist>.+?) - (?P&lt;title>.+)\"</span> \n--xattrs                         将元数据写入视频文件的xattrs<span class=\"token punctuation\">(</span>使用dublin core 和 xdg标准<span class=\"token punctuation\">)</span>\n--fixup POLICY                   自动更正文件的已知故障。never<span class=\"token punctuation\">(</span>不做警告<span class=\"token punctuation\">)</span>, warn<span class=\"token punctuation\">(</span>只发出警告<span class=\"token punctuation\">)</span>, detect_or_warn <span class=\"token punctuation\">(</span>默认<span class=\"token punctuation\">;</span>如果可以的话修复文件,否则警告<span class=\"token punctuation\">)</span>\n--prefer-avconv                  后处理时相较ffmpeg偏向于avconv\n--prefer-ffmpeg                  后处理优先使用ffmpeg\n--ffmpeg-location <span class=\"token environment constant\">PATH</span>           ffmpeg/avconv程序位置<span class=\"token punctuation\">;</span><span class=\"token environment constant\">PATH</span>为二进制所在文件夹或者目录.\n--exec CMD                       在下载后对文件执行命令,类似于find -exec语法.示例：--exec<span class=\"token string\">'adb push &#123;&#125; /sdcard/Music/ &amp;&amp; rm &#123;&#125;'</span>\n--convert-subs FORMAT            转换字幕格式<span class=\"token punctuation\">(</span>当前支持: srt<span class=\"token operator\">|</span>ass<span class=\"token operator\">|</span>vtt<span class=\"token punctuation\">)</span></code></pre>\n"},{"title":"Vue","date":"2022-02-28T09:18:13.000Z","description":null,"_content":"\n## 基本命令\n\n### vue CLI\n\n```bash\n# 创建项目\nnpm create project\n# 本地运行\nnpm run serve\n# 打包\nnpm build\n```\n\nwebpack\n\n```bash\n# 初始化包文件\nnpm init\n```\n\n## vue2基础语法\n\n### 指令\n\n1. v-if\n\n\t```vue\n\t<template>\n\t<div>\n\t\t<div v-if=\"Math.random() > 0.5\">\n\t  \tNow you see me\n\t\t</div>\n\t\t<div v-else>\n\t \t Now you don't\n\t\t</div>\n\t</div>\n\t</template>\n\n2. v-for\n\n\t```vue\n\t<template>\n\t    <div>\n\t        <div v-for=\"(item, index) in items\"></div>\n\t        <div v-for=\"(val, key) in object\"></div>\n\t\t\t<div v-for=\"(val, name, index) in object\"></div>\n\t    </div>\n\t</template>\n\n2. v-on\n\n   用于绑定和监听事件，\n\n   + 缩写: @\n   + 修饰符\n     + `.stop` - 调用 `event.stopPropagation()`。\n     + `.prevent` - 调用 `event.preventDefault()`。\n     + `.capture` - 添加事件侦听器时使用 capture 模式。\n     + `.self` - 只当事件是从侦听器绑定的元素本身触发时才触发回调。\n     + `.{keyCode | keyAlias}` - 只当事件是从特定键触发时才触发回调。\n     + `.native` - 监听组件根元素的原生事件。\n     + `.once` - 只触发一次回调。\n     + `.left` - (2.2.0) 只当点击鼠标左键时触发。\n     + `.right` - (2.2.0) 只当点击鼠标右键时触发。\n     + `.middle` - (2.2.0) 只当点击鼠标中键时触发。\n     + `.passive` - (2.3.0) 以 `{ passive: true }` 模式添加侦听器\n\n   ```vue\n   <!-- 内联语句 $event为事件原型-->\n   <button v-on:click=\"doThat('hello', $event)\"></button>\n   <!-- 动态事件缩写 (2.6.0+) -->\n   <button @[event]=\"doThis\"></button>\n   <!-- 停止冒泡 -->\n   <button @click.stop=\"doThis\"></button>\n   <!-- 阻止默认行为 -->\n   <button @click.prevent=\"doThis\"></button>\n   ```\n\n3. v-bind\n\n   动态绑定属性值\n\n   + 缩写为 :\n\n   ```vue\n   <!-- class 绑定 -->\n   <div :class=\"{ red: isRed }\"></div>\n   <div :class=\"[classA, classB]\"></div>\n   <div :class=\"[classA, { classB: isB, classC: isC }]\">\n   \n   <!-- style 绑定 -->\n   <div :style=\"{ fontSize: size + 'px' }\"></div>\n   <div :style=\"[styleObjectA, styleObjectB]\"></div>\n   \n   <!-- 绑定一个全是 attribute 的对象 -->\n   <div v-bind=\"{ id: someProp, 'other-attr': otherProp }\"></div>\n   ```\n\n4. v-model\n\n   表单数据双向绑定\n\n   + **限制**：\n\n     + `<input>`\n     + `<select>`\n     + `<textarea>`\n     + components\n\n     **修饰符**：\n\n     + [`.lazy`](https://cn.vuejs.org/v2/guide/forms.html#lazy) - 取代 `input` 监听 `change` 事件\n     + [`.number`](https://cn.vuejs.org/v2/guide/forms.html#number) - 输入字符串转为有效\n     + [`.trim`](https://cn.vuejs.org/v2/guide/forms.html#trim) - 输入首尾空格过滤\n\n   ```html\n   <div id=\"example-4\">\n     <input type=\"radio\" id=\"one\" value=\"One\" v-model=\"picked\">\n     <label for=\"one\">One</label>\n     <br>\n     <input type=\"radio\" id=\"two\" value=\"Two\" v-model=\"picked\">\n     <label for=\"two\">Two</label>\n     <br>\n     <span>Picked: {{ picked }}</span>\n   </div>\n   ```\n\n   ```js\n   new Vue({\n     el: '#example-4',\n     data: {\n       picked: ''\n     }\n   })\n   ```\n\n5. v-slot\n\n  组件A中有如下代码\n\n  ```vue\n  <template>\n  \t<div>\n          <p>\n              xxxxx\n      \t</p>\n          <Cov>\n              这里的代码将插入到组件Cov中的<slot></slot>位置\n      \t</Cov>\n      </div>\n  </template>\n  ```\n\n  组件Cov中有如下代码🐎\n\n  ```vue\n  <template>\n  \t<div>\n          <p>\n              xxxxx\n      \t</p>\n          <slot></slot>\n      </div>\n  </template>\n  ```\n\n6. 综合实例\n\n   ```vue\n   <template>\n   <div>\n   <tr v-for=\"(item, index) in riskArea\"  :key=\"index\" style=\"text-align: left;\">\n        <td style=\"background-color:#00bec9;\"><div class=\"bt\" @click=\"listClick(item.cities,index,$event)\"> <img src=\"../../assets/img/index.png\" style=\"width: 0.8rem; margin-right: 5px\">{{ item | cityName}}</div></td>\n        <td>{{ item.yesterdayLocalConfirmedCount | data_announced}}</td>\n        <td>{{ item.currentConfirmedCount }}</td>\n        <td>{{ item.currentDangerCount }}</td>\n        <td @click=\"detail(item.provinceShortName,item.statisticsData)\"><a  :href='\"#/province/\"+item.provinceShortName'>详情</a></td>\n   </tr>\n   </div>\n   </template>\n   ```\n\n   ### 组件注册\n\n   ### Prop\n\n   ### 插槽\n\n   ### 过滤器\n\n   ### 生命周期函数\n\n   ### 路由\n\n   ## 配置\n\n   ```js\n   // vue.config.js 配置\n   module.exports = {\n       publicPath: './', //基本路径\n       outputDir: \"dist\", // 输出目录\n       assetsDir: 'static',\t//放置生成的静态资源 (js、css、img、fonts) 的目录\n       indexPath: \"index.html\",\n       productionSourceMap: false, //生产环境是否生成 sourceMap 文件\n       // 代理\n       devServer: {\n           proxy: {\n               // 以/interface代替/interface.sina.cn,将所有https://interface.sina.cn请求重写为https:/interface\n               '/interface': {\n                   target: 'https://interface.sina.cn', // 将/interface 代理为https://interface.sina.cn/\n                   ws: true,\n                   changeOrigin: true, // 在本地会创建一个虚拟服务端，然后发送请求的数据，并同时接收请求的数据，这样服务端和服务端进行数据的交互就不会有跨域问题\n                   secure: true,\n                   pathRewrite: {\n                       // 路径重写，\n                       '^/interface': 'https://interface.sina.cn', // 替换target中的请求地址，也就是说以后你在请求https://interface.sina.cn/xxx 只需填/interface/\n                   },\n               }\n           },\n       }\n   }\n   \n   ```\n\n   ## Vue3\n   \n   1. reactive 将对象转换为响应式对象\n   2. ref 将数据转换为响应式数据\n   3. torefs 把响应式对象转换为普通对象，普通对象的每个property都是一个ref \n   4. provide 父组件 inject 子组件\n","source":"_posts/vue.md","raw":"---\ntitle: vue\ndate: 2022-02-28 17:18:13\ntags: [前端,vue]\ncategories: vue\ndescription:\n---\n\n## 基本命令\n\n### vue CLI\n\n```bash\n# 创建项目\nnpm create project\n# 本地运行\nnpm run serve\n# 打包\nnpm build\n```\n\nwebpack\n\n```bash\n# 初始化包文件\nnpm init\n```\n\n## vue2基础语法\n\n### 指令\n\n1. v-if\n\n\t```vue\n\t<template>\n\t<div>\n\t\t<div v-if=\"Math.random() > 0.5\">\n\t  \tNow you see me\n\t\t</div>\n\t\t<div v-else>\n\t \t Now you don't\n\t\t</div>\n\t</div>\n\t</template>\n\n2. v-for\n\n\t```vue\n\t<template>\n\t    <div>\n\t        <div v-for=\"(item, index) in items\"></div>\n\t        <div v-for=\"(val, key) in object\"></div>\n\t\t\t<div v-for=\"(val, name, index) in object\"></div>\n\t    </div>\n\t</template>\n\n2. v-on\n\n   用于绑定和监听事件，\n\n   + 缩写: @\n   + 修饰符\n     + `.stop` - 调用 `event.stopPropagation()`。\n     + `.prevent` - 调用 `event.preventDefault()`。\n     + `.capture` - 添加事件侦听器时使用 capture 模式。\n     + `.self` - 只当事件是从侦听器绑定的元素本身触发时才触发回调。\n     + `.{keyCode | keyAlias}` - 只当事件是从特定键触发时才触发回调。\n     + `.native` - 监听组件根元素的原生事件。\n     + `.once` - 只触发一次回调。\n     + `.left` - (2.2.0) 只当点击鼠标左键时触发。\n     + `.right` - (2.2.0) 只当点击鼠标右键时触发。\n     + `.middle` - (2.2.0) 只当点击鼠标中键时触发。\n     + `.passive` - (2.3.0) 以 `{ passive: true }` 模式添加侦听器\n\n   ```vue\n   <!-- 内联语句 $event为事件原型-->\n   <button v-on:click=\"doThat('hello', $event)\"></button>\n   <!-- 动态事件缩写 (2.6.0+) -->\n   <button @[event]=\"doThis\"></button>\n   <!-- 停止冒泡 -->\n   <button @click.stop=\"doThis\"></button>\n   <!-- 阻止默认行为 -->\n   <button @click.prevent=\"doThis\"></button>\n   ```\n\n3. v-bind\n\n   动态绑定属性值\n\n   + 缩写为 :\n\n   ```vue\n   <!-- class 绑定 -->\n   <div :class=\"{ red: isRed }\"></div>\n   <div :class=\"[classA, classB]\"></div>\n   <div :class=\"[classA, { classB: isB, classC: isC }]\">\n   \n   <!-- style 绑定 -->\n   <div :style=\"{ fontSize: size + 'px' }\"></div>\n   <div :style=\"[styleObjectA, styleObjectB]\"></div>\n   \n   <!-- 绑定一个全是 attribute 的对象 -->\n   <div v-bind=\"{ id: someProp, 'other-attr': otherProp }\"></div>\n   ```\n\n4. v-model\n\n   表单数据双向绑定\n\n   + **限制**：\n\n     + `<input>`\n     + `<select>`\n     + `<textarea>`\n     + components\n\n     **修饰符**：\n\n     + [`.lazy`](https://cn.vuejs.org/v2/guide/forms.html#lazy) - 取代 `input` 监听 `change` 事件\n     + [`.number`](https://cn.vuejs.org/v2/guide/forms.html#number) - 输入字符串转为有效\n     + [`.trim`](https://cn.vuejs.org/v2/guide/forms.html#trim) - 输入首尾空格过滤\n\n   ```html\n   <div id=\"example-4\">\n     <input type=\"radio\" id=\"one\" value=\"One\" v-model=\"picked\">\n     <label for=\"one\">One</label>\n     <br>\n     <input type=\"radio\" id=\"two\" value=\"Two\" v-model=\"picked\">\n     <label for=\"two\">Two</label>\n     <br>\n     <span>Picked: {{ picked }}</span>\n   </div>\n   ```\n\n   ```js\n   new Vue({\n     el: '#example-4',\n     data: {\n       picked: ''\n     }\n   })\n   ```\n\n5. v-slot\n\n  组件A中有如下代码\n\n  ```vue\n  <template>\n  \t<div>\n          <p>\n              xxxxx\n      \t</p>\n          <Cov>\n              这里的代码将插入到组件Cov中的<slot></slot>位置\n      \t</Cov>\n      </div>\n  </template>\n  ```\n\n  组件Cov中有如下代码🐎\n\n  ```vue\n  <template>\n  \t<div>\n          <p>\n              xxxxx\n      \t</p>\n          <slot></slot>\n      </div>\n  </template>\n  ```\n\n6. 综合实例\n\n   ```vue\n   <template>\n   <div>\n   <tr v-for=\"(item, index) in riskArea\"  :key=\"index\" style=\"text-align: left;\">\n        <td style=\"background-color:#00bec9;\"><div class=\"bt\" @click=\"listClick(item.cities,index,$event)\"> <img src=\"../../assets/img/index.png\" style=\"width: 0.8rem; margin-right: 5px\">{{ item | cityName}}</div></td>\n        <td>{{ item.yesterdayLocalConfirmedCount | data_announced}}</td>\n        <td>{{ item.currentConfirmedCount }}</td>\n        <td>{{ item.currentDangerCount }}</td>\n        <td @click=\"detail(item.provinceShortName,item.statisticsData)\"><a  :href='\"#/province/\"+item.provinceShortName'>详情</a></td>\n   </tr>\n   </div>\n   </template>\n   ```\n\n   ### 组件注册\n\n   ### Prop\n\n   ### 插槽\n\n   ### 过滤器\n\n   ### 生命周期函数\n\n   ### 路由\n\n   ## 配置\n\n   ```js\n   // vue.config.js 配置\n   module.exports = {\n       publicPath: './', //基本路径\n       outputDir: \"dist\", // 输出目录\n       assetsDir: 'static',\t//放置生成的静态资源 (js、css、img、fonts) 的目录\n       indexPath: \"index.html\",\n       productionSourceMap: false, //生产环境是否生成 sourceMap 文件\n       // 代理\n       devServer: {\n           proxy: {\n               // 以/interface代替/interface.sina.cn,将所有https://interface.sina.cn请求重写为https:/interface\n               '/interface': {\n                   target: 'https://interface.sina.cn', // 将/interface 代理为https://interface.sina.cn/\n                   ws: true,\n                   changeOrigin: true, // 在本地会创建一个虚拟服务端，然后发送请求的数据，并同时接收请求的数据，这样服务端和服务端进行数据的交互就不会有跨域问题\n                   secure: true,\n                   pathRewrite: {\n                       // 路径重写，\n                       '^/interface': 'https://interface.sina.cn', // 替换target中的请求地址，也就是说以后你在请求https://interface.sina.cn/xxx 只需填/interface/\n                   },\n               }\n           },\n       }\n   }\n   \n   ```\n\n   ## Vue3\n   \n   1. reactive 将对象转换为响应式对象\n   2. ref 将数据转换为响应式数据\n   3. torefs 把响应式对象转换为普通对象，普通对象的每个property都是一个ref \n   4. provide 父组件 inject 子组件\n","slug":"vue","published":1,"updated":"2022-08-16T13:17:08.066Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3h002djsvkb4bj9ev3","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"基本命令\"><a href=\"#基本命令\" class=\"headerlink\" title=\"基本命令\"></a>基本命令</h2><h3 id=\"vue-CLI\"><a href=\"#vue-CLI\" class=\"headerlink\" title=\"vue CLI\"></a>vue CLI</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 创建项目</span>\n<span class=\"token function\">npm</span> create project\n<span class=\"token comment\"># 本地运行</span>\n<span class=\"token function\">npm</span> run serve\n<span class=\"token comment\"># 打包</span>\n<span class=\"token function\">npm</span> build</code></pre>\n<p>webpack</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 初始化包文件</span>\n<span class=\"token function\">npm</span> init</code></pre>\n<h2 id=\"vue2基础语法\"><a href=\"#vue2基础语法\" class=\"headerlink\" title=\"vue2基础语法\"></a>vue2基础语法</h2><h3 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h3><ol>\n<li><p>v-if</p>\n <pre class=\"language-vue\" data-language=\"vue\"><code class=\"language-vue\">\t&lt;template&gt;\n\t&lt;div&gt;\n\t\t&lt;div v-if&#x3D;&quot;Math.random() &gt; 0.5&quot;&gt;\n\t  \tNow you see me\n\t\t&lt;&#x2F;div&gt;\n\t\t&lt;div v-else&gt;\n\t \t Now you don&#39;t\n\t\t&lt;&#x2F;div&gt;\n\t&lt;&#x2F;div&gt;\n\t&lt;&#x2F;template&gt;\n\n2. v-for\n\n\t&#96;&#96;&#96;vue\n\t&lt;template&gt;\n\t    &lt;div&gt;\n\t        &lt;div v-for&#x3D;&quot;(item, index) in items&quot;&gt;&lt;&#x2F;div&gt;\n\t        &lt;div v-for&#x3D;&quot;(val, key) in object&quot;&gt;&lt;&#x2F;div&gt;\n\t\t\t&lt;div v-for&#x3D;&quot;(val, name, index) in object&quot;&gt;&lt;&#x2F;div&gt;\n\t    &lt;&#x2F;div&gt;\n\t&lt;&#x2F;template&gt;\n\n2. v-on\n\n   用于绑定和监听事件，\n\n   + 缩写: @\n   + 修饰符\n     + &#96;.stop&#96; - 调用 &#96;event.stopPropagation()&#96;。\n     + &#96;.prevent&#96; - 调用 &#96;event.preventDefault()&#96;。\n     + &#96;.capture&#96; - 添加事件侦听器时使用 capture 模式。\n     + &#96;.self&#96; - 只当事件是从侦听器绑定的元素本身触发时才触发回调。\n     + &#96;.&#123;keyCode | keyAlias&#125;&#96; - 只当事件是从特定键触发时才触发回调。\n     + &#96;.native&#96; - 监听组件根元素的原生事件。\n     + &#96;.once&#96; - 只触发一次回调。\n     + &#96;.left&#96; - (2.2.0) 只当点击鼠标左键时触发。\n     + &#96;.right&#96; - (2.2.0) 只当点击鼠标右键时触发。\n     + &#96;.middle&#96; - (2.2.0) 只当点击鼠标中键时触发。\n     + &#96;.passive&#96; - (2.3.0) 以 &#96;&#123; passive: true &#125;&#96; 模式添加侦听器\n\n   &#96;&#96;&#96;vue\n   &lt;!-- 内联语句 $event为事件原型--&gt;\n   &lt;button v-on:click&#x3D;&quot;doThat(&#39;hello&#39;, $event)&quot;&gt;&lt;&#x2F;button&gt;\n   &lt;!-- 动态事件缩写 (2.6.0+) --&gt;\n   &lt;button @[event]&#x3D;&quot;doThis&quot;&gt;&lt;&#x2F;button&gt;\n   &lt;!-- 停止冒泡 --&gt;\n   &lt;button @click.stop&#x3D;&quot;doThis&quot;&gt;&lt;&#x2F;button&gt;\n   &lt;!-- 阻止默认行为 --&gt;\n   &lt;button @click.prevent&#x3D;&quot;doThis&quot;&gt;&lt;&#x2F;button&gt;</code></pre>\n</li>\n<li><p>v-bind</p>\n<p>动态绑定属性值</p>\n<ul>\n<li>缩写为 :</li>\n</ul>\n<pre class=\"language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!-- class 绑定 --&gt;\n&lt;div :class&#x3D;&quot;&#123; red: isRed &#125;&quot;&gt;&lt;&#x2F;div&gt;\n&lt;div :class&#x3D;&quot;[classA, classB]&quot;&gt;&lt;&#x2F;div&gt;\n&lt;div :class&#x3D;&quot;[classA, &#123; classB: isB, classC: isC &#125;]&quot;&gt;\n\n&lt;!-- style 绑定 --&gt;\n&lt;div :style&#x3D;&quot;&#123; fontSize: size + &#39;px&#39; &#125;&quot;&gt;&lt;&#x2F;div&gt;\n&lt;div :style&#x3D;&quot;[styleObjectA, styleObjectB]&quot;&gt;&lt;&#x2F;div&gt;\n\n&lt;!-- 绑定一个全是 attribute 的对象 --&gt;\n&lt;div v-bind&#x3D;&quot;&#123; id: someProp, &#39;other-attr&#39;: otherProp &#125;&quot;&gt;&lt;&#x2F;div&gt;</code></pre>\n</li>\n<li><p>v-model</p>\n<p>表单数据双向绑定</p>\n<ul>\n<li><p><strong>限制</strong>：</p>\n<ul>\n<li><code>&lt;input&gt;</code></li>\n<li><code>&lt;select&gt;</code></li>\n<li><code>&lt;textarea&gt;</code></li>\n<li>components</li>\n</ul>\n<p><strong>修饰符</strong>：</p>\n<ul>\n<li><a href=\"https://cn.vuejs.org/v2/guide/forms.html#lazy\"><code>.lazy</code></a> - 取代 <code>input</code> 监听 <code>change</code> 事件</li>\n<li><a href=\"https://cn.vuejs.org/v2/guide/forms.html#number\"><code>.number</code></a> - 输入字符串转为有效</li>\n<li><a href=\"https://cn.vuejs.org/v2/guide/forms.html#trim\"><code>.trim</code></a> - 输入首尾空格过滤</li>\n</ul>\n</li>\n</ul>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>example-4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>One<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>One<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>two<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Two<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>two<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Two<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Picked: &#123;&#123; picked &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">'#example-4'</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    picked<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></code></pre>\n</li>\n<li><p>v-slot</p>\n<p>组件A中有如下代码</p>\n<pre class=\"language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n\t&lt;div&gt;\n        &lt;p&gt;\n            xxxxx\n    \t&lt;&#x2F;p&gt;\n        &lt;Cov&gt;\n            这里的代码将插入到组件Cov中的&lt;slot&gt;&lt;&#x2F;slot&gt;位置\n    \t&lt;&#x2F;Cov&gt;\n    &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n<p>组件Cov中有如下代码🐎</p>\n<pre class=\"language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n\t&lt;div&gt;\n        &lt;p&gt;\n            xxxxx\n    \t&lt;&#x2F;p&gt;\n        &lt;slot&gt;&lt;&#x2F;slot&gt;\n    &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n</li>\n<li><p>综合实例</p>\n<pre class=\"language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n&lt;div&gt;\n&lt;tr v-for&#x3D;&quot;(item, index) in riskArea&quot;  :key&#x3D;&quot;index&quot; style&#x3D;&quot;text-align: left;&quot;&gt;\n     &lt;td style&#x3D;&quot;background-color:#00bec9;&quot;&gt;&lt;div class&#x3D;&quot;bt&quot; @click&#x3D;&quot;listClick(item.cities,index,$event)&quot;&gt; &lt;img src&#x3D;&quot;..&#x2F;..&#x2F;assets&#x2F;img&#x2F;index.png&quot; style&#x3D;&quot;width: 0.8rem; margin-right: 5px&quot;&gt;&#123;&#123; item | cityName&#125;&#125;&lt;&#x2F;div&gt;&lt;&#x2F;td&gt;\n     &lt;td&gt;&#123;&#123; item.yesterdayLocalConfirmedCount | data_announced&#125;&#125;&lt;&#x2F;td&gt;\n     &lt;td&gt;&#123;&#123; item.currentConfirmedCount &#125;&#125;&lt;&#x2F;td&gt;\n     &lt;td&gt;&#123;&#123; item.currentDangerCount &#125;&#125;&lt;&#x2F;td&gt;\n     &lt;td @click&#x3D;&quot;detail(item.provinceShortName,item.statisticsData)&quot;&gt;&lt;a  :href&#x3D;&#39;&quot;#&#x2F;province&#x2F;&quot;+item.provinceShortName&#39;&gt;详情&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;\n&lt;&#x2F;tr&gt;\n&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n<h3 id=\"组件注册\"><a href=\"#组件注册\" class=\"headerlink\" title=\"组件注册\"></a>组件注册</h3><h3 id=\"Prop\"><a href=\"#Prop\" class=\"headerlink\" title=\"Prop\"></a>Prop</h3><h3 id=\"插槽\"><a href=\"#插槽\" class=\"headerlink\" title=\"插槽\"></a>插槽</h3><h3 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h3><h3 id=\"生命周期函数\"><a href=\"#生命周期函数\" class=\"headerlink\" title=\"生命周期函数\"></a>生命周期函数</h3><h3 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h3><h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// vue.config.js 配置</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    publicPath<span class=\"token operator\">:</span> <span class=\"token string\">'./'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//基本路径</span>\n    outputDir<span class=\"token operator\">:</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 输出目录</span>\n    assetsDir<span class=\"token operator\">:</span> <span class=\"token string\">'static'</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">//放置生成的静态资源 (js、css、img、fonts) 的目录</span>\n    indexPath<span class=\"token operator\">:</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">,</span>\n    productionSourceMap<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//生产环境是否生成 sourceMap 文件</span>\n    <span class=\"token comment\">// 代理</span>\n    devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        proxy<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 以/interface代替/interface.sina.cn,将所有https://interface.sina.cn请求重写为https:/interface</span>\n            <span class=\"token string\">'/interface'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                target<span class=\"token operator\">:</span> <span class=\"token string\">'https://interface.sina.cn'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 将/interface 代理为https://interface.sina.cn/</span>\n                ws<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 在本地会创建一个虚拟服务端，然后发送请求的数据，并同时接收请求的数据，这样服务端和服务端进行数据的交互就不会有跨域问题</span>\n                secure<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                pathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token comment\">// 路径重写，</span>\n                    <span class=\"token string\">'^/interface'</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://interface.sina.cn'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 替换target中的请求地址，也就是说以后你在请求https://interface.sina.cn/xxx 只需填/interface/</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</code></pre>\n<h2 id=\"Vue3\"><a href=\"#Vue3\" class=\"headerlink\" title=\"Vue3\"></a>Vue3</h2><ol>\n<li>reactive 将对象转换为响应式对象</li>\n<li>ref 将数据转换为响应式数据</li>\n<li>torefs 把响应式对象转换为普通对象，普通对象的每个property都是一个ref </li>\n<li>provide 父组件 inject 子组件</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160705.jpg","length":4702,"excerpt":"","more":"<h2 id=\"基本命令\"><a href=\"#基本命令\" class=\"headerlink\" title=\"基本命令\"></a>基本命令</h2><h3 id=\"vue-CLI\"><a href=\"#vue-CLI\" class=\"headerlink\" title=\"vue CLI\"></a>vue CLI</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 创建项目</span>\n<span class=\"token function\">npm</span> create project\n<span class=\"token comment\"># 本地运行</span>\n<span class=\"token function\">npm</span> run serve\n<span class=\"token comment\"># 打包</span>\n<span class=\"token function\">npm</span> build</code></pre>\n<p>webpack</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 初始化包文件</span>\n<span class=\"token function\">npm</span> init</code></pre>\n<h2 id=\"vue2基础语法\"><a href=\"#vue2基础语法\" class=\"headerlink\" title=\"vue2基础语法\"></a>vue2基础语法</h2><h3 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h3><ol>\n<li><p>v-if</p>\n <pre class=\"language-vue\" data-language=\"vue\"><code class=\"language-vue\">\t&lt;template&gt;\n\t&lt;div&gt;\n\t\t&lt;div v-if&#x3D;&quot;Math.random() &gt; 0.5&quot;&gt;\n\t  \tNow you see me\n\t\t&lt;&#x2F;div&gt;\n\t\t&lt;div v-else&gt;\n\t \t Now you don&#39;t\n\t\t&lt;&#x2F;div&gt;\n\t&lt;&#x2F;div&gt;\n\t&lt;&#x2F;template&gt;\n\n2. v-for\n\n\t&#96;&#96;&#96;vue\n\t&lt;template&gt;\n\t    &lt;div&gt;\n\t        &lt;div v-for&#x3D;&quot;(item, index) in items&quot;&gt;&lt;&#x2F;div&gt;\n\t        &lt;div v-for&#x3D;&quot;(val, key) in object&quot;&gt;&lt;&#x2F;div&gt;\n\t\t\t&lt;div v-for&#x3D;&quot;(val, name, index) in object&quot;&gt;&lt;&#x2F;div&gt;\n\t    &lt;&#x2F;div&gt;\n\t&lt;&#x2F;template&gt;\n\n2. v-on\n\n   用于绑定和监听事件，\n\n   + 缩写: @\n   + 修饰符\n     + &#96;.stop&#96; - 调用 &#96;event.stopPropagation()&#96;。\n     + &#96;.prevent&#96; - 调用 &#96;event.preventDefault()&#96;。\n     + &#96;.capture&#96; - 添加事件侦听器时使用 capture 模式。\n     + &#96;.self&#96; - 只当事件是从侦听器绑定的元素本身触发时才触发回调。\n     + &#96;.&#123;keyCode | keyAlias&#125;&#96; - 只当事件是从特定键触发时才触发回调。\n     + &#96;.native&#96; - 监听组件根元素的原生事件。\n     + &#96;.once&#96; - 只触发一次回调。\n     + &#96;.left&#96; - (2.2.0) 只当点击鼠标左键时触发。\n     + &#96;.right&#96; - (2.2.0) 只当点击鼠标右键时触发。\n     + &#96;.middle&#96; - (2.2.0) 只当点击鼠标中键时触发。\n     + &#96;.passive&#96; - (2.3.0) 以 &#96;&#123; passive: true &#125;&#96; 模式添加侦听器\n\n   &#96;&#96;&#96;vue\n   &lt;!-- 内联语句 $event为事件原型--&gt;\n   &lt;button v-on:click&#x3D;&quot;doThat(&#39;hello&#39;, $event)&quot;&gt;&lt;&#x2F;button&gt;\n   &lt;!-- 动态事件缩写 (2.6.0+) --&gt;\n   &lt;button @[event]&#x3D;&quot;doThis&quot;&gt;&lt;&#x2F;button&gt;\n   &lt;!-- 停止冒泡 --&gt;\n   &lt;button @click.stop&#x3D;&quot;doThis&quot;&gt;&lt;&#x2F;button&gt;\n   &lt;!-- 阻止默认行为 --&gt;\n   &lt;button @click.prevent&#x3D;&quot;doThis&quot;&gt;&lt;&#x2F;button&gt;</code></pre>\n</li>\n<li><p>v-bind</p>\n<p>动态绑定属性值</p>\n<ul>\n<li>缩写为 :</li>\n</ul>\n<pre class=\"language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!-- class 绑定 --&gt;\n&lt;div :class&#x3D;&quot;&#123; red: isRed &#125;&quot;&gt;&lt;&#x2F;div&gt;\n&lt;div :class&#x3D;&quot;[classA, classB]&quot;&gt;&lt;&#x2F;div&gt;\n&lt;div :class&#x3D;&quot;[classA, &#123; classB: isB, classC: isC &#125;]&quot;&gt;\n\n&lt;!-- style 绑定 --&gt;\n&lt;div :style&#x3D;&quot;&#123; fontSize: size + &#39;px&#39; &#125;&quot;&gt;&lt;&#x2F;div&gt;\n&lt;div :style&#x3D;&quot;[styleObjectA, styleObjectB]&quot;&gt;&lt;&#x2F;div&gt;\n\n&lt;!-- 绑定一个全是 attribute 的对象 --&gt;\n&lt;div v-bind&#x3D;&quot;&#123; id: someProp, &#39;other-attr&#39;: otherProp &#125;&quot;&gt;&lt;&#x2F;div&gt;</code></pre>\n</li>\n<li><p>v-model</p>\n<p>表单数据双向绑定</p>\n<ul>\n<li><p><strong>限制</strong>：</p>\n<ul>\n<li><code>&lt;input&gt;</code></li>\n<li><code>&lt;select&gt;</code></li>\n<li><code>&lt;textarea&gt;</code></li>\n<li>components</li>\n</ul>\n<p><strong>修饰符</strong>：</p>\n<ul>\n<li><a href=\"https://cn.vuejs.org/v2/guide/forms.html#lazy\"><code>.lazy</code></a> - 取代 <code>input</code> 监听 <code>change</code> 事件</li>\n<li><a href=\"https://cn.vuejs.org/v2/guide/forms.html#number\"><code>.number</code></a> - 输入字符串转为有效</li>\n<li><a href=\"https://cn.vuejs.org/v2/guide/forms.html#trim\"><code>.trim</code></a> - 输入首尾空格过滤</li>\n</ul>\n</li>\n</ul>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>example-4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>One<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>One<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>two<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Two<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>two<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Two<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Picked: &#123;&#123; picked &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">'#example-4'</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    picked<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></code></pre>\n</li>\n<li><p>v-slot</p>\n<p>组件A中有如下代码</p>\n<pre class=\"language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n\t&lt;div&gt;\n        &lt;p&gt;\n            xxxxx\n    \t&lt;&#x2F;p&gt;\n        &lt;Cov&gt;\n            这里的代码将插入到组件Cov中的&lt;slot&gt;&lt;&#x2F;slot&gt;位置\n    \t&lt;&#x2F;Cov&gt;\n    &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n<p>组件Cov中有如下代码🐎</p>\n<pre class=\"language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n\t&lt;div&gt;\n        &lt;p&gt;\n            xxxxx\n    \t&lt;&#x2F;p&gt;\n        &lt;slot&gt;&lt;&#x2F;slot&gt;\n    &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n</li>\n<li><p>综合实例</p>\n<pre class=\"language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n&lt;div&gt;\n&lt;tr v-for&#x3D;&quot;(item, index) in riskArea&quot;  :key&#x3D;&quot;index&quot; style&#x3D;&quot;text-align: left;&quot;&gt;\n     &lt;td style&#x3D;&quot;background-color:#00bec9;&quot;&gt;&lt;div class&#x3D;&quot;bt&quot; @click&#x3D;&quot;listClick(item.cities,index,$event)&quot;&gt; &lt;img src&#x3D;&quot;..&#x2F;..&#x2F;assets&#x2F;img&#x2F;index.png&quot; style&#x3D;&quot;width: 0.8rem; margin-right: 5px&quot;&gt;&#123;&#123; item | cityName&#125;&#125;&lt;&#x2F;div&gt;&lt;&#x2F;td&gt;\n     &lt;td&gt;&#123;&#123; item.yesterdayLocalConfirmedCount | data_announced&#125;&#125;&lt;&#x2F;td&gt;\n     &lt;td&gt;&#123;&#123; item.currentConfirmedCount &#125;&#125;&lt;&#x2F;td&gt;\n     &lt;td&gt;&#123;&#123; item.currentDangerCount &#125;&#125;&lt;&#x2F;td&gt;\n     &lt;td @click&#x3D;&quot;detail(item.provinceShortName,item.statisticsData)&quot;&gt;&lt;a  :href&#x3D;&#39;&quot;#&#x2F;province&#x2F;&quot;+item.provinceShortName&#39;&gt;详情&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;\n&lt;&#x2F;tr&gt;\n&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n<h3 id=\"组件注册\"><a href=\"#组件注册\" class=\"headerlink\" title=\"组件注册\"></a>组件注册</h3><h3 id=\"Prop\"><a href=\"#Prop\" class=\"headerlink\" title=\"Prop\"></a>Prop</h3><h3 id=\"插槽\"><a href=\"#插槽\" class=\"headerlink\" title=\"插槽\"></a>插槽</h3><h3 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h3><h3 id=\"生命周期函数\"><a href=\"#生命周期函数\" class=\"headerlink\" title=\"生命周期函数\"></a>生命周期函数</h3><h3 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h3><h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// vue.config.js 配置</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    publicPath<span class=\"token operator\">:</span> <span class=\"token string\">'./'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//基本路径</span>\n    outputDir<span class=\"token operator\">:</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 输出目录</span>\n    assetsDir<span class=\"token operator\">:</span> <span class=\"token string\">'static'</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">//放置生成的静态资源 (js、css、img、fonts) 的目录</span>\n    indexPath<span class=\"token operator\">:</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">,</span>\n    productionSourceMap<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//生产环境是否生成 sourceMap 文件</span>\n    <span class=\"token comment\">// 代理</span>\n    devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        proxy<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 以/interface代替/interface.sina.cn,将所有https://interface.sina.cn请求重写为https:/interface</span>\n            <span class=\"token string\">'/interface'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                target<span class=\"token operator\">:</span> <span class=\"token string\">'https://interface.sina.cn'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 将/interface 代理为https://interface.sina.cn/</span>\n                ws<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 在本地会创建一个虚拟服务端，然后发送请求的数据，并同时接收请求的数据，这样服务端和服务端进行数据的交互就不会有跨域问题</span>\n                secure<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                pathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token comment\">// 路径重写，</span>\n                    <span class=\"token string\">'^/interface'</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://interface.sina.cn'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 替换target中的请求地址，也就是说以后你在请求https://interface.sina.cn/xxx 只需填/interface/</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</code></pre>\n<h2 id=\"Vue3\"><a href=\"#Vue3\" class=\"headerlink\" title=\"Vue3\"></a>Vue3</h2><ol>\n<li>reactive 将对象转换为响应式对象</li>\n<li>ref 将数据转换为响应式数据</li>\n<li>torefs 把响应式对象转换为普通对象，普通对象的每个property都是一个ref </li>\n<li>provide 父组件 inject 子组件</li>\n</ol>\n</li>\n</ol>\n"},{"title":"专题图","mathjax":true,"date":"2022-05-05T01:11:57.000Z","description":null,"_content":"\n## [专题图](https://wenku.baidu.com/view/4cf95af8cbd376eeaeaad1f34693daef5ef71380.html?fr=income1-wk_app_search_ctr-search)\n\n1. 专题地图有哪些基本特征？说明与普通地图的不同\n\n   1. 专题地图只将一种或几种与主题相关联的要素特别完备而详细的显示,而其他要素的现实则较为概略,甚至不予显示。\n   2. 内容更加广泛多样\n   3. 不仅可以表示现象的现状及其分布，而且能表示现象的动态变化和发展规律\n\n2. 说明学习专题图课程对学习遥感、地理信息系统俩课程的关系\n\n     遥感技术出现以前，专题地图的编制方法停留在从图到图、从统计资料到制图的传统作业过程。随着遥感技术的产生和发展，使专题地图制图从内容、形式到成图方法都有了根本性的突破。遥感信息在图像的分辨率、几何精度﹑影像质量及构建立体像对方面都伴随着传感器的不断改进、技术处理方法的不断完善而越来越能满足不同比例尺专题制图对资料提出的要求。遥感信息的现势性、宏观性、多时相性和立体覆盖能力,使其成为专题地图制图的重要信息源。\n\n     地理信息系统的发展是从地图制图和地籍管理开始的,因此地理信息系统的主要功能之一是用于地图制图,但是它把地图这种独特的视觉化的效果和空间分析功能同数据库操作集成在-起,强调空间概念,注重空间分析,形成了强大的分析功能。\n\n     各种专题地图可以作为地理信息系统中的数据源之一被采用、加工,并为地理信息系统进行空间查询和分析提供依据;同时,更高层次的实用分析结论又再次以专题地图的形式再现。因此专题地图不仅是地理信息系统构建时不可缺少的资源,也是地理信息系统分析成果的可视化表达。熟悉并掌握专题地图中空间物体或现象的各种分类、分级及表示方法,无疑对地理信息系统建立时进行数据分类、属性确定﹑数据管理、图形编辑与管理,数据模型的建立与分析等诸方面起着重要的作用。\n\n   1. 遥感技术丰富了专题制图的形式、内容，满足了不同比例尺专题制图对资料提出的要求\n   2. 遥感信息的现势性、宏观性、多时相性和立体覆盖能力,使其成为专题地图制图的重要信息源\n   3. 遥感技术提高了成图的准确性，极大地减少人力和时间成本\n   4. 地理信息系统的主要功能之一就是地图制图\n   5. 专题地图可以作为地理信息系统中的数据源之一被采用、加工,并为地理信息系统进行空间查询和分析提供依据\n   6. 专题地图不仅是地理信息系统构建时不可缺少的资源,也是地理信息系统分析成果的可视化表达\n\n3. 范围法与质地法有何不同\n\n   1. 质底法：布满整个区域面状现象的表示方法。\n   2. 范围法：间断呈片状的面状现象的表示方法。\n   3. 质底法偏重于表示现象的质量特征，称为定性数据的表示方法\n   4. 范围法表示的是某一种或几种专题现象分布的具体范围，几种现象的分布范围可有重叠,在范围外无此类现象也可为空白，可以表示现象的渐进性和渗透性﹔质底法表示全制图区域内按照现象的质量指标进行的分区，分区不可能重叠,全区也无空白。\n   5. 范围法是根据各具体现象的各自分布状况描绘它们的范围轮廓;质底法中的各区域则是在统一的原则和要求下,经过科学的概括而划分的。\n   6. 范围法表示的图上，同一种颜色或晕线（花纹)只代表一种具体的现象范围;质底法同一颜色有时固定的代表某一类现象，有时则不一定固定的代表某种现象。\n\n4. 分区统计图表法与符号法有什么区别\n\n   1. 两种方法采用的图形可以完全一样，但图形意义不同\n   2. 符号法中的每个符号在地图上的位置代表具体物体的实地位置,它的大小表示该现象在该点的数量指标,因此制图时需要知道符号相应的准确位置和统计资料的数量指标\n   3. 分区统计图表中的每个图形并不代表某一具体物体,而是代表某个区划单位内某全部现象的总和,它可配置在区域内的适当位置,制图时只需要个区划单位的统计资料.因此,分区统计图表法不宜与符号法或其他精确定位的表示方法配合使用。\n\n5. 阐述量表系统及数据的分类、分级方法有哪些\n\n6. 专题地图由哪些方面的要素构成\n\n   1. 数学要素：坐标网、比例尺、地理定向等内容\n   2. 专题要素：专题要素是专题地图内容的主体。可以表示一种或多种要素\n   3. 地理地图要素：地理底图是以普通地图为基础，根据专题内容的需要重新编制的专题内容不可能孤立的存在,必须依附于一定的地理基础，两者分别处于不同的层面∶表现地图主题的专题内容以各种符号组成第一层面，地理底图则以较浅淡的色彩作为第二层面。两者在内容与形式上具有一定的内在联系。地理底图是专题地图不可分割的组成部分\n\n7. 专题地图按其内容的专题性质，通常分为三种基本类型\n\n   自然地图：地势图、地质图、地貌图、水文图、土壤图\n\n   人文地图：政区、人口、经济、文化\n\n   其他专题地图：航空图、航海图、城市地图、规划设计地图\n\n   从其内容的数据特征可分为：定性数据、定量数据\n\n   按其内容在地图上的概况程度分为：解析型图、合成型图、综合型图\n\n   数据特征分类：定性数据、定量数据\n\n   专题现象概况程度分类：分析图、组合图、综合图\n\n   用途分类：普通地图、专题地图\n\n1. 等值线法的特点\n   1. 等值线法用来表示连续分布于整个制图区域的各种变化渐移的现象。\n   2. 在采用这种方法时，每个点所具有的数据指标都必须完全是同一性质的。如:等高线必须根据同精度测量和化为同高程起算基准的成果，才能正确反映实际情况。\n   3. 单独一条等高线只表示数值相等各点之间的连线，不能表示某种现象的变化情况，只能组成一个系统后，才能表示现象的分布特征。\n   4. 等值线的间隔最好保持一定的常数，这样有利于根据等值线的疏密程度判断现象的变化程度。\n   5. 等值线和分层设色相配合时，各层的颜色随现象数值的变化改变其饱和度，冷暖和亮度等，以表示现象的质和量的变化特征及其明显性。\n   6. 等值线直接加数量注记可以显示其数量指标，无需另作图例。\n   7. 各种地图上等值线法不但反应了现象的强度,还反映了随时间变化的现象，现象的移动，\n      现象的重复及或然率。\n\n7. 数据的分级处理的基本原则\n   1. 客观反映数据的分布特征，以数据的集群性作为分级数的重要依据。\n   2. 分级界限应该在数据变化显著特征上，使各级内部差异尽可能的小，等级之间的差异尽可能的大\n   3. 分级的结果:一般是中间级别包含的单元多，两端级别包含单元较少。也有要求分级单元数近似相等。\n   4. 根据地图的用途和要素特征，要保留个别的特征级别和分级界限。5.为了用途的方便，应适当地保持凑整地分级界限。\n   5. 对于离散分布的现象，且物理个数不多，相邻级别的分级界限可以断开;对于连续分布现象的分级，其界限必须是相互连续的，并要正确处理分级点的所属关系\n\n8. 专题地图编制的基本原则\n   1. 严密的科学性:专题地图在编制过程中，很多是以科学学说为依据，以科学研究成果和实地调查成果为资料编制的。\n   2. 高度的综合性:专题地图反应的内容是某一专门的主题，目的是揭示这一特点现象的分布规律。\n   3. 精美的艺术性:专题地图的科学内容是通过它的特殊艺术形式表达出来的，这些均体现于专题地图的符号设计，色彩设计，图表设计，整饰和图面配置之中。\n   4. 较强的实用性:编绘专题地图不仅仅是要客观地反应所描述对象的分布，发生发育的规律性及其动态变化，更重要的是要使这些地图为国民经济建设和生产实践服务。\n\n9. 定量数据的符号表达\n   1. 连续比例符号:优点:符号大小与它所代表的数量指标都是连续的。一对一关系\n\n缺点:要花很多时间计算代表每一个数量指标的符号准线长度;在绘制符号的技术上也有一定的困难;一览性差。\n\n2. 分级比率符号:优点:符号大小与它所代表的数量指标不连续。多对一关系。确定相应符号大小的工作量减轻。\n\n缺点:不能表示出同一级别内专题要素在数量指标上的差别。扩大或缩小特定数值的符号大小。\n            \t 3．条件比率符号:优点:面积大小与专题要素的数量指标成附加条件正比，容易表达最值差异大的指标，可以根据要求放大或缩小特定区间符号大小\n缺点:符号大小与所反映的专题要素不是绝对正比\n            \t 4．绝对比率符号:优点:面积大小与专题要素的数量指标成正比;符号大小与所反映的专\n题要素的数量指标一致。\n缺点:最值差别悬殊时，难以同时得以表达，数量指标差别小时，符号大小接近，不易区分。\n\n10. 分带计算\n\n​\t我国**1:2.5-1:50万地形图均采用6度分带**；**1:1万及更大比例尺地形图采用3度分带**\n\n![分带](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220505204013.png)\n\n11. [分幅计算](http://www.360doc.com/content/19/0331/17/29346318_825521630.shtml)\n\n<center>J50D002002</center>\t\n![image-20220505210036722](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220505210038.png)\n\n![image-20220505210113712](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220505210115.png)\n\n## 题目\n\n下列哪种做坐标系不属于表述点在椭球面上的位置的坐标系统 高斯直角坐标系\n\n以下投影方式不属于几何投影的是 多圆锥投影\n\n栅格数据与矢量数据相比 结果简单冗余度大\n\n栅格数据的结构特点是\n\n水准测量的高程属于 正常高\n\n下列属于地心坐标系的是 WGS84坐标系 cgcs2000\n\n地图投影按照投影性质可分为 圆锥 圆柱 方位\n\n我国基本比例尺地形图均采用 高斯投影\n\n投影是指建立两个点集之间一一对应的映射关系\n\nGNSS测量高程属于（ 大地高  ），指的是过点的法线方向测定点到椭球面的距离。\n\n测绘领域，海拔也称（ 绝对高程 ），指的是地面点沿重力线方向到（ 大地水准面）的距离，这段铅锤距离称为（ 正高 ）\n\n我国采用（平均海平面）作为高程基准面\n","source":"_posts/专题图.md","raw":"---\ntitle: 专题图\nmathjax: true\ndate: 2022-05-05 09:11:57\ntags:\ncategories:\ndescription:\n---\n\n## [专题图](https://wenku.baidu.com/view/4cf95af8cbd376eeaeaad1f34693daef5ef71380.html?fr=income1-wk_app_search_ctr-search)\n\n1. 专题地图有哪些基本特征？说明与普通地图的不同\n\n   1. 专题地图只将一种或几种与主题相关联的要素特别完备而详细的显示,而其他要素的现实则较为概略,甚至不予显示。\n   2. 内容更加广泛多样\n   3. 不仅可以表示现象的现状及其分布，而且能表示现象的动态变化和发展规律\n\n2. 说明学习专题图课程对学习遥感、地理信息系统俩课程的关系\n\n     遥感技术出现以前，专题地图的编制方法停留在从图到图、从统计资料到制图的传统作业过程。随着遥感技术的产生和发展，使专题地图制图从内容、形式到成图方法都有了根本性的突破。遥感信息在图像的分辨率、几何精度﹑影像质量及构建立体像对方面都伴随着传感器的不断改进、技术处理方法的不断完善而越来越能满足不同比例尺专题制图对资料提出的要求。遥感信息的现势性、宏观性、多时相性和立体覆盖能力,使其成为专题地图制图的重要信息源。\n\n     地理信息系统的发展是从地图制图和地籍管理开始的,因此地理信息系统的主要功能之一是用于地图制图,但是它把地图这种独特的视觉化的效果和空间分析功能同数据库操作集成在-起,强调空间概念,注重空间分析,形成了强大的分析功能。\n\n     各种专题地图可以作为地理信息系统中的数据源之一被采用、加工,并为地理信息系统进行空间查询和分析提供依据;同时,更高层次的实用分析结论又再次以专题地图的形式再现。因此专题地图不仅是地理信息系统构建时不可缺少的资源,也是地理信息系统分析成果的可视化表达。熟悉并掌握专题地图中空间物体或现象的各种分类、分级及表示方法,无疑对地理信息系统建立时进行数据分类、属性确定﹑数据管理、图形编辑与管理,数据模型的建立与分析等诸方面起着重要的作用。\n\n   1. 遥感技术丰富了专题制图的形式、内容，满足了不同比例尺专题制图对资料提出的要求\n   2. 遥感信息的现势性、宏观性、多时相性和立体覆盖能力,使其成为专题地图制图的重要信息源\n   3. 遥感技术提高了成图的准确性，极大地减少人力和时间成本\n   4. 地理信息系统的主要功能之一就是地图制图\n   5. 专题地图可以作为地理信息系统中的数据源之一被采用、加工,并为地理信息系统进行空间查询和分析提供依据\n   6. 专题地图不仅是地理信息系统构建时不可缺少的资源,也是地理信息系统分析成果的可视化表达\n\n3. 范围法与质地法有何不同\n\n   1. 质底法：布满整个区域面状现象的表示方法。\n   2. 范围法：间断呈片状的面状现象的表示方法。\n   3. 质底法偏重于表示现象的质量特征，称为定性数据的表示方法\n   4. 范围法表示的是某一种或几种专题现象分布的具体范围，几种现象的分布范围可有重叠,在范围外无此类现象也可为空白，可以表示现象的渐进性和渗透性﹔质底法表示全制图区域内按照现象的质量指标进行的分区，分区不可能重叠,全区也无空白。\n   5. 范围法是根据各具体现象的各自分布状况描绘它们的范围轮廓;质底法中的各区域则是在统一的原则和要求下,经过科学的概括而划分的。\n   6. 范围法表示的图上，同一种颜色或晕线（花纹)只代表一种具体的现象范围;质底法同一颜色有时固定的代表某一类现象，有时则不一定固定的代表某种现象。\n\n4. 分区统计图表法与符号法有什么区别\n\n   1. 两种方法采用的图形可以完全一样，但图形意义不同\n   2. 符号法中的每个符号在地图上的位置代表具体物体的实地位置,它的大小表示该现象在该点的数量指标,因此制图时需要知道符号相应的准确位置和统计资料的数量指标\n   3. 分区统计图表中的每个图形并不代表某一具体物体,而是代表某个区划单位内某全部现象的总和,它可配置在区域内的适当位置,制图时只需要个区划单位的统计资料.因此,分区统计图表法不宜与符号法或其他精确定位的表示方法配合使用。\n\n5. 阐述量表系统及数据的分类、分级方法有哪些\n\n6. 专题地图由哪些方面的要素构成\n\n   1. 数学要素：坐标网、比例尺、地理定向等内容\n   2. 专题要素：专题要素是专题地图内容的主体。可以表示一种或多种要素\n   3. 地理地图要素：地理底图是以普通地图为基础，根据专题内容的需要重新编制的专题内容不可能孤立的存在,必须依附于一定的地理基础，两者分别处于不同的层面∶表现地图主题的专题内容以各种符号组成第一层面，地理底图则以较浅淡的色彩作为第二层面。两者在内容与形式上具有一定的内在联系。地理底图是专题地图不可分割的组成部分\n\n7. 专题地图按其内容的专题性质，通常分为三种基本类型\n\n   自然地图：地势图、地质图、地貌图、水文图、土壤图\n\n   人文地图：政区、人口、经济、文化\n\n   其他专题地图：航空图、航海图、城市地图、规划设计地图\n\n   从其内容的数据特征可分为：定性数据、定量数据\n\n   按其内容在地图上的概况程度分为：解析型图、合成型图、综合型图\n\n   数据特征分类：定性数据、定量数据\n\n   专题现象概况程度分类：分析图、组合图、综合图\n\n   用途分类：普通地图、专题地图\n\n1. 等值线法的特点\n   1. 等值线法用来表示连续分布于整个制图区域的各种变化渐移的现象。\n   2. 在采用这种方法时，每个点所具有的数据指标都必须完全是同一性质的。如:等高线必须根据同精度测量和化为同高程起算基准的成果，才能正确反映实际情况。\n   3. 单独一条等高线只表示数值相等各点之间的连线，不能表示某种现象的变化情况，只能组成一个系统后，才能表示现象的分布特征。\n   4. 等值线的间隔最好保持一定的常数，这样有利于根据等值线的疏密程度判断现象的变化程度。\n   5. 等值线和分层设色相配合时，各层的颜色随现象数值的变化改变其饱和度，冷暖和亮度等，以表示现象的质和量的变化特征及其明显性。\n   6. 等值线直接加数量注记可以显示其数量指标，无需另作图例。\n   7. 各种地图上等值线法不但反应了现象的强度,还反映了随时间变化的现象，现象的移动，\n      现象的重复及或然率。\n\n7. 数据的分级处理的基本原则\n   1. 客观反映数据的分布特征，以数据的集群性作为分级数的重要依据。\n   2. 分级界限应该在数据变化显著特征上，使各级内部差异尽可能的小，等级之间的差异尽可能的大\n   3. 分级的结果:一般是中间级别包含的单元多，两端级别包含单元较少。也有要求分级单元数近似相等。\n   4. 根据地图的用途和要素特征，要保留个别的特征级别和分级界限。5.为了用途的方便，应适当地保持凑整地分级界限。\n   5. 对于离散分布的现象，且物理个数不多，相邻级别的分级界限可以断开;对于连续分布现象的分级，其界限必须是相互连续的，并要正确处理分级点的所属关系\n\n8. 专题地图编制的基本原则\n   1. 严密的科学性:专题地图在编制过程中，很多是以科学学说为依据，以科学研究成果和实地调查成果为资料编制的。\n   2. 高度的综合性:专题地图反应的内容是某一专门的主题，目的是揭示这一特点现象的分布规律。\n   3. 精美的艺术性:专题地图的科学内容是通过它的特殊艺术形式表达出来的，这些均体现于专题地图的符号设计，色彩设计，图表设计，整饰和图面配置之中。\n   4. 较强的实用性:编绘专题地图不仅仅是要客观地反应所描述对象的分布，发生发育的规律性及其动态变化，更重要的是要使这些地图为国民经济建设和生产实践服务。\n\n9. 定量数据的符号表达\n   1. 连续比例符号:优点:符号大小与它所代表的数量指标都是连续的。一对一关系\n\n缺点:要花很多时间计算代表每一个数量指标的符号准线长度;在绘制符号的技术上也有一定的困难;一览性差。\n\n2. 分级比率符号:优点:符号大小与它所代表的数量指标不连续。多对一关系。确定相应符号大小的工作量减轻。\n\n缺点:不能表示出同一级别内专题要素在数量指标上的差别。扩大或缩小特定数值的符号大小。\n            \t 3．条件比率符号:优点:面积大小与专题要素的数量指标成附加条件正比，容易表达最值差异大的指标，可以根据要求放大或缩小特定区间符号大小\n缺点:符号大小与所反映的专题要素不是绝对正比\n            \t 4．绝对比率符号:优点:面积大小与专题要素的数量指标成正比;符号大小与所反映的专\n题要素的数量指标一致。\n缺点:最值差别悬殊时，难以同时得以表达，数量指标差别小时，符号大小接近，不易区分。\n\n10. 分带计算\n\n​\t我国**1:2.5-1:50万地形图均采用6度分带**；**1:1万及更大比例尺地形图采用3度分带**\n\n![分带](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220505204013.png)\n\n11. [分幅计算](http://www.360doc.com/content/19/0331/17/29346318_825521630.shtml)\n\n<center>J50D002002</center>\t\n![image-20220505210036722](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220505210038.png)\n\n![image-20220505210113712](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220505210115.png)\n\n## 题目\n\n下列哪种做坐标系不属于表述点在椭球面上的位置的坐标系统 高斯直角坐标系\n\n以下投影方式不属于几何投影的是 多圆锥投影\n\n栅格数据与矢量数据相比 结果简单冗余度大\n\n栅格数据的结构特点是\n\n水准测量的高程属于 正常高\n\n下列属于地心坐标系的是 WGS84坐标系 cgcs2000\n\n地图投影按照投影性质可分为 圆锥 圆柱 方位\n\n我国基本比例尺地形图均采用 高斯投影\n\n投影是指建立两个点集之间一一对应的映射关系\n\nGNSS测量高程属于（ 大地高  ），指的是过点的法线方向测定点到椭球面的距离。\n\n测绘领域，海拔也称（ 绝对高程 ），指的是地面点沿重力线方向到（ 大地水准面）的距离，这段铅锤距离称为（ 正高 ）\n\n我国采用（平均海平面）作为高程基准面\n","slug":"专题图","published":1,"updated":"2022-05-18T01:35:41.820Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3j002fjsvkgi3c6dym","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"专题图\"><a href=\"#专题图\" class=\"headerlink\" title=\"专题图\"></a><a href=\"https://wenku.baidu.com/view/4cf95af8cbd376eeaeaad1f34693daef5ef71380.html?fr=income1-wk_app_search_ctr-search\">专题图</a></h2><ol>\n<li><p>专题地图有哪些基本特征？说明与普通地图的不同</p>\n<ol>\n<li>专题地图只将一种或几种与主题相关联的要素特别完备而详细的显示,而其他要素的现实则较为概略,甚至不予显示。</li>\n<li>内容更加广泛多样</li>\n<li>不仅可以表示现象的现状及其分布，而且能表示现象的动态变化和发展规律</li>\n</ol>\n</li>\n<li><p>说明学习专题图课程对学习遥感、地理信息系统俩课程的关系</p>\n<p>  遥感技术出现以前，专题地图的编制方法停留在从图到图、从统计资料到制图的传统作业过程。随着遥感技术的产生和发展，使专题地图制图从内容、形式到成图方法都有了根本性的突破。遥感信息在图像的分辨率、几何精度﹑影像质量及构建立体像对方面都伴随着传感器的不断改进、技术处理方法的不断完善而越来越能满足不同比例尺专题制图对资料提出的要求。遥感信息的现势性、宏观性、多时相性和立体覆盖能力,使其成为专题地图制图的重要信息源。</p>\n<p>  地理信息系统的发展是从地图制图和地籍管理开始的,因此地理信息系统的主要功能之一是用于地图制图,但是它把地图这种独特的视觉化的效果和空间分析功能同数据库操作集成在-起,强调空间概念,注重空间分析,形成了强大的分析功能。</p>\n<p>  各种专题地图可以作为地理信息系统中的数据源之一被采用、加工,并为地理信息系统进行空间查询和分析提供依据;同时,更高层次的实用分析结论又再次以专题地图的形式再现。因此专题地图不仅是地理信息系统构建时不可缺少的资源,也是地理信息系统分析成果的可视化表达。熟悉并掌握专题地图中空间物体或现象的各种分类、分级及表示方法,无疑对地理信息系统建立时进行数据分类、属性确定﹑数据管理、图形编辑与管理,数据模型的建立与分析等诸方面起着重要的作用。</p>\n<ol>\n<li>遥感技术丰富了专题制图的形式、内容，满足了不同比例尺专题制图对资料提出的要求</li>\n<li>遥感信息的现势性、宏观性、多时相性和立体覆盖能力,使其成为专题地图制图的重要信息源</li>\n<li>遥感技术提高了成图的准确性，极大地减少人力和时间成本</li>\n<li>地理信息系统的主要功能之一就是地图制图</li>\n<li>专题地图可以作为地理信息系统中的数据源之一被采用、加工,并为地理信息系统进行空间查询和分析提供依据</li>\n<li>专题地图不仅是地理信息系统构建时不可缺少的资源,也是地理信息系统分析成果的可视化表达</li>\n</ol>\n</li>\n<li><p>范围法与质地法有何不同</p>\n<ol>\n<li>质底法：布满整个区域面状现象的表示方法。</li>\n<li>范围法：间断呈片状的面状现象的表示方法。</li>\n<li>质底法偏重于表示现象的质量特征，称为定性数据的表示方法</li>\n<li>范围法表示的是某一种或几种专题现象分布的具体范围，几种现象的分布范围可有重叠,在范围外无此类现象也可为空白，可以表示现象的渐进性和渗透性﹔质底法表示全制图区域内按照现象的质量指标进行的分区，分区不可能重叠,全区也无空白。</li>\n<li>范围法是根据各具体现象的各自分布状况描绘它们的范围轮廓;质底法中的各区域则是在统一的原则和要求下,经过科学的概括而划分的。</li>\n<li>范围法表示的图上，同一种颜色或晕线（花纹)只代表一种具体的现象范围;质底法同一颜色有时固定的代表某一类现象，有时则不一定固定的代表某种现象。</li>\n</ol>\n</li>\n<li><p>分区统计图表法与符号法有什么区别</p>\n<ol>\n<li>两种方法采用的图形可以完全一样，但图形意义不同</li>\n<li>符号法中的每个符号在地图上的位置代表具体物体的实地位置,它的大小表示该现象在该点的数量指标,因此制图时需要知道符号相应的准确位置和统计资料的数量指标</li>\n<li>分区统计图表中的每个图形并不代表某一具体物体,而是代表某个区划单位内某全部现象的总和,它可配置在区域内的适当位置,制图时只需要个区划单位的统计资料.因此,分区统计图表法不宜与符号法或其他精确定位的表示方法配合使用。</li>\n</ol>\n</li>\n<li><p>阐述量表系统及数据的分类、分级方法有哪些</p>\n</li>\n<li><p>专题地图由哪些方面的要素构成</p>\n<ol>\n<li>数学要素：坐标网、比例尺、地理定向等内容</li>\n<li>专题要素：专题要素是专题地图内容的主体。可以表示一种或多种要素</li>\n<li>地理地图要素：地理底图是以普通地图为基础，根据专题内容的需要重新编制的专题内容不可能孤立的存在,必须依附于一定的地理基础，两者分别处于不同的层面∶表现地图主题的专题内容以各种符号组成第一层面，地理底图则以较浅淡的色彩作为第二层面。两者在内容与形式上具有一定的内在联系。地理底图是专题地图不可分割的组成部分</li>\n</ol>\n</li>\n<li><p>专题地图按其内容的专题性质，通常分为三种基本类型</p>\n<p>自然地图：地势图、地质图、地貌图、水文图、土壤图</p>\n<p>人文地图：政区、人口、经济、文化</p>\n<p>其他专题地图：航空图、航海图、城市地图、规划设计地图</p>\n<p>从其内容的数据特征可分为：定性数据、定量数据</p>\n<p>按其内容在地图上的概况程度分为：解析型图、合成型图、综合型图</p>\n<p>数据特征分类：定性数据、定量数据</p>\n<p>专题现象概况程度分类：分析图、组合图、综合图</p>\n<p>用途分类：普通地图、专题地图</p>\n</li>\n<li><p>等值线法的特点</p>\n<ol>\n<li>等值线法用来表示连续分布于整个制图区域的各种变化渐移的现象。</li>\n<li>在采用这种方法时，每个点所具有的数据指标都必须完全是同一性质的。如:等高线必须根据同精度测量和化为同高程起算基准的成果，才能正确反映实际情况。</li>\n<li>单独一条等高线只表示数值相等各点之间的连线，不能表示某种现象的变化情况，只能组成一个系统后，才能表示现象的分布特征。</li>\n<li>等值线的间隔最好保持一定的常数，这样有利于根据等值线的疏密程度判断现象的变化程度。</li>\n<li>等值线和分层设色相配合时，各层的颜色随现象数值的变化改变其饱和度，冷暖和亮度等，以表示现象的质和量的变化特征及其明显性。</li>\n<li>等值线直接加数量注记可以显示其数量指标，无需另作图例。</li>\n<li>各种地图上等值线法不但反应了现象的强度,还反映了随时间变化的现象，现象的移动，<br>现象的重复及或然率。</li>\n</ol>\n</li>\n<li><p>数据的分级处理的基本原则</p>\n<ol>\n<li>客观反映数据的分布特征，以数据的集群性作为分级数的重要依据。</li>\n<li>分级界限应该在数据变化显著特征上，使各级内部差异尽可能的小，等级之间的差异尽可能的大</li>\n<li>分级的结果:一般是中间级别包含的单元多，两端级别包含单元较少。也有要求分级单元数近似相等。</li>\n<li>根据地图的用途和要素特征，要保留个别的特征级别和分级界限。5.为了用途的方便，应适当地保持凑整地分级界限。</li>\n<li>对于离散分布的现象，且物理个数不多，相邻级别的分级界限可以断开;对于连续分布现象的分级，其界限必须是相互连续的，并要正确处理分级点的所属关系</li>\n</ol>\n</li>\n<li><p>专题地图编制的基本原则</p>\n<ol>\n<li>严密的科学性:专题地图在编制过程中，很多是以科学学说为依据，以科学研究成果和实地调查成果为资料编制的。</li>\n<li>高度的综合性:专题地图反应的内容是某一专门的主题，目的是揭示这一特点现象的分布规律。</li>\n<li>精美的艺术性:专题地图的科学内容是通过它的特殊艺术形式表达出来的，这些均体现于专题地图的符号设计，色彩设计，图表设计，整饰和图面配置之中。</li>\n<li>较强的实用性:编绘专题地图不仅仅是要客观地反应所描述对象的分布，发生发育的规律性及其动态变化，更重要的是要使这些地图为国民经济建设和生产实践服务。</li>\n</ol>\n</li>\n<li><p>定量数据的符号表达</p>\n<ol>\n<li>连续比例符号:优点:符号大小与它所代表的数量指标都是连续的。一对一关系</li>\n</ol>\n</li>\n</ol>\n<p>缺点:要花很多时间计算代表每一个数量指标的符号准线长度;在绘制符号的技术上也有一定的困难;一览性差。</p>\n<ol>\n<li>分级比率符号:优点:符号大小与它所代表的数量指标不连续。多对一关系。确定相应符号大小的工作量减轻。</li>\n</ol>\n<p>缺点:不能表示出同一级别内专题要素在数量指标上的差别。扩大或缩小特定数值的符号大小。<br>                 3．条件比率符号:优点:面积大小与专题要素的数量指标成附加条件正比，容易表达最值差异大的指标，可以根据要求放大或缩小特定区间符号大小<br>缺点:符号大小与所反映的专题要素不是绝对正比<br>                 4．绝对比率符号:优点:面积大小与专题要素的数量指标成正比;符号大小与所反映的专<br>题要素的数量指标一致。<br>缺点:最值差别悬殊时，难以同时得以表达，数量指标差别小时，符号大小接近，不易区分。</p>\n<ol>\n<li>分带计算</li>\n</ol>\n<p>​    我国<strong>1:2.5-1:50万地形图均采用6度分带</strong>；<strong>1:1万及更大比例尺地形图采用3度分带</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220505204013.png\" alt=\"分带\"></p>\n<ol>\n<li><a href=\"http://www.360doc.com/content/19/0331/17/29346318_825521630.shtml\">分幅计算</a></li>\n</ol>\n<p><center>J50D002002</center><br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220505210038.png\" alt=\"image-20220505210036722\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220505210115.png\" alt=\"image-20220505210113712\"></p>\n<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>下列哪种做坐标系不属于表述点在椭球面上的位置的坐标系统 高斯直角坐标系</p>\n<p>以下投影方式不属于几何投影的是 多圆锥投影</p>\n<p>栅格数据与矢量数据相比 结果简单冗余度大</p>\n<p>栅格数据的结构特点是</p>\n<p>水准测量的高程属于 正常高</p>\n<p>下列属于地心坐标系的是 WGS84坐标系 cgcs2000</p>\n<p>地图投影按照投影性质可分为 圆锥 圆柱 方位</p>\n<p>我国基本比例尺地形图均采用 高斯投影</p>\n<p>投影是指建立两个点集之间一一对应的映射关系</p>\n<p>GNSS测量高程属于（ 大地高  ），指的是过点的法线方向测定点到椭球面的距离。</p>\n<p>测绘领域，海拔也称（ 绝对高程 ），指的是地面点沿重力线方向到（ 大地水准面）的距离，这段铅锤距离称为（ 正高 ）</p>\n<p>我国采用（平均海平面）作为高程基准面</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160705.jpg","length":3413,"excerpt":"","more":"<h2 id=\"专题图\"><a href=\"#专题图\" class=\"headerlink\" title=\"专题图\"></a><a href=\"https://wenku.baidu.com/view/4cf95af8cbd376eeaeaad1f34693daef5ef71380.html?fr=income1-wk_app_search_ctr-search\">专题图</a></h2><ol>\n<li><p>专题地图有哪些基本特征？说明与普通地图的不同</p>\n<ol>\n<li>专题地图只将一种或几种与主题相关联的要素特别完备而详细的显示,而其他要素的现实则较为概略,甚至不予显示。</li>\n<li>内容更加广泛多样</li>\n<li>不仅可以表示现象的现状及其分布，而且能表示现象的动态变化和发展规律</li>\n</ol>\n</li>\n<li><p>说明学习专题图课程对学习遥感、地理信息系统俩课程的关系</p>\n<p>  遥感技术出现以前，专题地图的编制方法停留在从图到图、从统计资料到制图的传统作业过程。随着遥感技术的产生和发展，使专题地图制图从内容、形式到成图方法都有了根本性的突破。遥感信息在图像的分辨率、几何精度﹑影像质量及构建立体像对方面都伴随着传感器的不断改进、技术处理方法的不断完善而越来越能满足不同比例尺专题制图对资料提出的要求。遥感信息的现势性、宏观性、多时相性和立体覆盖能力,使其成为专题地图制图的重要信息源。</p>\n<p>  地理信息系统的发展是从地图制图和地籍管理开始的,因此地理信息系统的主要功能之一是用于地图制图,但是它把地图这种独特的视觉化的效果和空间分析功能同数据库操作集成在-起,强调空间概念,注重空间分析,形成了强大的分析功能。</p>\n<p>  各种专题地图可以作为地理信息系统中的数据源之一被采用、加工,并为地理信息系统进行空间查询和分析提供依据;同时,更高层次的实用分析结论又再次以专题地图的形式再现。因此专题地图不仅是地理信息系统构建时不可缺少的资源,也是地理信息系统分析成果的可视化表达。熟悉并掌握专题地图中空间物体或现象的各种分类、分级及表示方法,无疑对地理信息系统建立时进行数据分类、属性确定﹑数据管理、图形编辑与管理,数据模型的建立与分析等诸方面起着重要的作用。</p>\n<ol>\n<li>遥感技术丰富了专题制图的形式、内容，满足了不同比例尺专题制图对资料提出的要求</li>\n<li>遥感信息的现势性、宏观性、多时相性和立体覆盖能力,使其成为专题地图制图的重要信息源</li>\n<li>遥感技术提高了成图的准确性，极大地减少人力和时间成本</li>\n<li>地理信息系统的主要功能之一就是地图制图</li>\n<li>专题地图可以作为地理信息系统中的数据源之一被采用、加工,并为地理信息系统进行空间查询和分析提供依据</li>\n<li>专题地图不仅是地理信息系统构建时不可缺少的资源,也是地理信息系统分析成果的可视化表达</li>\n</ol>\n</li>\n<li><p>范围法与质地法有何不同</p>\n<ol>\n<li>质底法：布满整个区域面状现象的表示方法。</li>\n<li>范围法：间断呈片状的面状现象的表示方法。</li>\n<li>质底法偏重于表示现象的质量特征，称为定性数据的表示方法</li>\n<li>范围法表示的是某一种或几种专题现象分布的具体范围，几种现象的分布范围可有重叠,在范围外无此类现象也可为空白，可以表示现象的渐进性和渗透性﹔质底法表示全制图区域内按照现象的质量指标进行的分区，分区不可能重叠,全区也无空白。</li>\n<li>范围法是根据各具体现象的各自分布状况描绘它们的范围轮廓;质底法中的各区域则是在统一的原则和要求下,经过科学的概括而划分的。</li>\n<li>范围法表示的图上，同一种颜色或晕线（花纹)只代表一种具体的现象范围;质底法同一颜色有时固定的代表某一类现象，有时则不一定固定的代表某种现象。</li>\n</ol>\n</li>\n<li><p>分区统计图表法与符号法有什么区别</p>\n<ol>\n<li>两种方法采用的图形可以完全一样，但图形意义不同</li>\n<li>符号法中的每个符号在地图上的位置代表具体物体的实地位置,它的大小表示该现象在该点的数量指标,因此制图时需要知道符号相应的准确位置和统计资料的数量指标</li>\n<li>分区统计图表中的每个图形并不代表某一具体物体,而是代表某个区划单位内某全部现象的总和,它可配置在区域内的适当位置,制图时只需要个区划单位的统计资料.因此,分区统计图表法不宜与符号法或其他精确定位的表示方法配合使用。</li>\n</ol>\n</li>\n<li><p>阐述量表系统及数据的分类、分级方法有哪些</p>\n</li>\n<li><p>专题地图由哪些方面的要素构成</p>\n<ol>\n<li>数学要素：坐标网、比例尺、地理定向等内容</li>\n<li>专题要素：专题要素是专题地图内容的主体。可以表示一种或多种要素</li>\n<li>地理地图要素：地理底图是以普通地图为基础，根据专题内容的需要重新编制的专题内容不可能孤立的存在,必须依附于一定的地理基础，两者分别处于不同的层面∶表现地图主题的专题内容以各种符号组成第一层面，地理底图则以较浅淡的色彩作为第二层面。两者在内容与形式上具有一定的内在联系。地理底图是专题地图不可分割的组成部分</li>\n</ol>\n</li>\n<li><p>专题地图按其内容的专题性质，通常分为三种基本类型</p>\n<p>自然地图：地势图、地质图、地貌图、水文图、土壤图</p>\n<p>人文地图：政区、人口、经济、文化</p>\n<p>其他专题地图：航空图、航海图、城市地图、规划设计地图</p>\n<p>从其内容的数据特征可分为：定性数据、定量数据</p>\n<p>按其内容在地图上的概况程度分为：解析型图、合成型图、综合型图</p>\n<p>数据特征分类：定性数据、定量数据</p>\n<p>专题现象概况程度分类：分析图、组合图、综合图</p>\n<p>用途分类：普通地图、专题地图</p>\n</li>\n<li><p>等值线法的特点</p>\n<ol>\n<li>等值线法用来表示连续分布于整个制图区域的各种变化渐移的现象。</li>\n<li>在采用这种方法时，每个点所具有的数据指标都必须完全是同一性质的。如:等高线必须根据同精度测量和化为同高程起算基准的成果，才能正确反映实际情况。</li>\n<li>单独一条等高线只表示数值相等各点之间的连线，不能表示某种现象的变化情况，只能组成一个系统后，才能表示现象的分布特征。</li>\n<li>等值线的间隔最好保持一定的常数，这样有利于根据等值线的疏密程度判断现象的变化程度。</li>\n<li>等值线和分层设色相配合时，各层的颜色随现象数值的变化改变其饱和度，冷暖和亮度等，以表示现象的质和量的变化特征及其明显性。</li>\n<li>等值线直接加数量注记可以显示其数量指标，无需另作图例。</li>\n<li>各种地图上等值线法不但反应了现象的强度,还反映了随时间变化的现象，现象的移动，<br>现象的重复及或然率。</li>\n</ol>\n</li>\n<li><p>数据的分级处理的基本原则</p>\n<ol>\n<li>客观反映数据的分布特征，以数据的集群性作为分级数的重要依据。</li>\n<li>分级界限应该在数据变化显著特征上，使各级内部差异尽可能的小，等级之间的差异尽可能的大</li>\n<li>分级的结果:一般是中间级别包含的单元多，两端级别包含单元较少。也有要求分级单元数近似相等。</li>\n<li>根据地图的用途和要素特征，要保留个别的特征级别和分级界限。5.为了用途的方便，应适当地保持凑整地分级界限。</li>\n<li>对于离散分布的现象，且物理个数不多，相邻级别的分级界限可以断开;对于连续分布现象的分级，其界限必须是相互连续的，并要正确处理分级点的所属关系</li>\n</ol>\n</li>\n<li><p>专题地图编制的基本原则</p>\n<ol>\n<li>严密的科学性:专题地图在编制过程中，很多是以科学学说为依据，以科学研究成果和实地调查成果为资料编制的。</li>\n<li>高度的综合性:专题地图反应的内容是某一专门的主题，目的是揭示这一特点现象的分布规律。</li>\n<li>精美的艺术性:专题地图的科学内容是通过它的特殊艺术形式表达出来的，这些均体现于专题地图的符号设计，色彩设计，图表设计，整饰和图面配置之中。</li>\n<li>较强的实用性:编绘专题地图不仅仅是要客观地反应所描述对象的分布，发生发育的规律性及其动态变化，更重要的是要使这些地图为国民经济建设和生产实践服务。</li>\n</ol>\n</li>\n<li><p>定量数据的符号表达</p>\n<ol>\n<li>连续比例符号:优点:符号大小与它所代表的数量指标都是连续的。一对一关系</li>\n</ol>\n</li>\n</ol>\n<p>缺点:要花很多时间计算代表每一个数量指标的符号准线长度;在绘制符号的技术上也有一定的困难;一览性差。</p>\n<ol>\n<li>分级比率符号:优点:符号大小与它所代表的数量指标不连续。多对一关系。确定相应符号大小的工作量减轻。</li>\n</ol>\n<p>缺点:不能表示出同一级别内专题要素在数量指标上的差别。扩大或缩小特定数值的符号大小。<br>                 3．条件比率符号:优点:面积大小与专题要素的数量指标成附加条件正比，容易表达最值差异大的指标，可以根据要求放大或缩小特定区间符号大小<br>缺点:符号大小与所反映的专题要素不是绝对正比<br>                 4．绝对比率符号:优点:面积大小与专题要素的数量指标成正比;符号大小与所反映的专<br>题要素的数量指标一致。<br>缺点:最值差别悬殊时，难以同时得以表达，数量指标差别小时，符号大小接近，不易区分。</p>\n<ol>\n<li>分带计算</li>\n</ol>\n<p>​    我国<strong>1:2.5-1:50万地形图均采用6度分带</strong>；<strong>1:1万及更大比例尺地形图采用3度分带</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220505204013.png\" alt=\"分带\"></p>\n<ol>\n<li><a href=\"http://www.360doc.com/content/19/0331/17/29346318_825521630.shtml\">分幅计算</a></li>\n</ol>\n<p><center>J50D002002</center><br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220505210038.png\" alt=\"image-20220505210036722\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220505210115.png\" alt=\"image-20220505210113712\"></p>\n<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>下列哪种做坐标系不属于表述点在椭球面上的位置的坐标系统 高斯直角坐标系</p>\n<p>以下投影方式不属于几何投影的是 多圆锥投影</p>\n<p>栅格数据与矢量数据相比 结果简单冗余度大</p>\n<p>栅格数据的结构特点是</p>\n<p>水准测量的高程属于 正常高</p>\n<p>下列属于地心坐标系的是 WGS84坐标系 cgcs2000</p>\n<p>地图投影按照投影性质可分为 圆锥 圆柱 方位</p>\n<p>我国基本比例尺地形图均采用 高斯投影</p>\n<p>投影是指建立两个点集之间一一对应的映射关系</p>\n<p>GNSS测量高程属于（ 大地高  ），指的是过点的法线方向测定点到椭球面的距离。</p>\n<p>测绘领域，海拔也称（ 绝对高程 ），指的是地面点沿重力线方向到（ 大地水准面）的距离，这段铅锤距离称为（ 正高 ）</p>\n<p>我国采用（平均海平面）作为高程基准面</p>\n"},{"title":"京东薅薅乐","date":"2021-12-23T11:34:20.000Z","top":null,"description":"京东薅一薅","_content":"\n##  开始\n\n<h2>\n    <center>活动一览</center>\n</h2>\n\n| 活动         | 入口                                                         | 羊毛🐑                                          |\n| ------------ | ------------------------------------------------------------ | ---------------------------------------------- |\n| 东东农场     | 京东APP-首页/玩一玩/我的-东东农场                            | 2级12红包(1周)、3级25红包(1月)、4级50红包(2月) |\n| 东东萌宠     | 京东APP-首页/玩一玩/我的-东东萌宠                            | 4块勋章15红包、5块勋章20红包                   |\n| 金融养猪     | 京东金融->我的->金融养猪                                     | 5元立减券(APP通用)                             |\n| 天天提鹅     | 京东金融->我的->天天提鹅                                     | 视频会员                                       |\n| 惊喜牧场     | 京东->我的->农场右滑->更多游戏                               | 零元购+红包(仅限惊喜使用)                      |\n| 财富岛       | 京东->我的->农场右滑->更多游戏                               | 零元购+红包(仅限惊喜使用)                      |\n| 合成珍珠     | 财富岛点击游戏城                                             | 红包(仅限惊喜使用)                             |\n| 集魔方       | 京东-新品-集魔方                                             | 兑换京豆                                       |\n| 勋章         | 农场-水车-双十一集勋章                                       | 红包、水滴、京豆                               |\n| 领现金       | 京东APP-首页/玩一玩/我的-领现金                              | 现金提现+红包                                  |\n| 发财挖宝     | 京东极速版->首页->发财挖宝                                   | 现金提现+红包                                  |\n| 签到免单     | 京东极速版->首页->签到免单                                   | 签到免单                                       |\n| 发财大赢家   | 京东极速版->首页->发财大赢家                                 | 现金提现+红包                                  |\n| 极速金币     | 京东极速版->我的->金币                                       | 兑换红包(仅限极速版使用)                       |\n| 京东赚赚     | 微信->京东赚赚小程序->底部赚好礼->提现无门槛红包             | 兑换红包(仅限极速版使用)                       |\n| 京东秒杀     | 京东->中间频道往右划找到京东秒杀->中间点立即签到->兑换无门槛红包 | 兑换红包                                       |\n| 东东健康社区 | 京东APP-首页/玩一玩/我的-东东健康社区                        | 零元购                                         |\n| 东东超市     | 京东APP-首页/玩一玩/我的-东东超市                            | 零元购                                         |\n| 京东到家     | 微信搜京东到家-首页-免费水果                                 | 免费水果                                       |\n| 摇钱树       | 京东->中间频道往右划找到摇钱树                               | 抵现                                           |\n\n+ 上面网站登陆京东后扫码即可有每日资产推送\n<img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160655.jpeg\" style=\"zoom:200%;\" />\n\n+ 现在qq、微信机器人已经具备群聊、私聊登录jd账号并获取cookie（后简称ck）的能力，后面会截图给出使用方法\n+ 可以在群里，或者加好友后发送“登陆”、“登录”都可以，根据提示进行登录，登陆后可以进行查询操作\n\n####  一: 登陆\n\n<center>QQ机器人命令列表</center>\n\n| 命令                                                 | 作用               |\n| ---------------------------------------------------- | ------------------ |\n| 河北疫情                                             | 查询疫情           |\n| 登陆                                                 | 京东账号登陆       |\n| 查询                                                 | 查询京东资产       |\n| 账号管理                                             | 进行京东账号管理   |\n| jd unbind                                            | QQ与京东账号解绑   |\n| 下载 url                                             | 百度网盘下载       |\n| 成语接龙                                             | 成语接龙           |\n| 小爱 ?                                               | 召唤小爱           |\n| 高风险地区or中风险地区                               | 查询高、中风险地区 |\n| vip https://www.iqiyi.com/v_1euutpl76d0.html         | 免会员看付费视频   |\n| 去水印https://www.iqiyi.com/v_1euutpl76d0.video      | 抖音视频去水印     |\n| 河北天气or河北天气预报                               | 天气预报           |\n| 音乐                                                 | 随机网易云音乐     |\n| 一言                                                 | 随机句子           |\n| 165最佳身材                                          | 致命打击           |\n| 双鱼座星座今日、明日、本周、本月运势or双鱼座星座运势 | 星座运势           |\n\n1. 私聊或在群里发送登陆”、“登录，机器人会回复你相关信息，请根据提示进行操作即可登录jd并获取ck\n\n   + 短信登录的jd后，ck有效期一般为**一个月**，当ck过期后，需要重新进行短信登录\n   + 做好登陆后私聊我进行备注，没有备注的到期后自动踢🦶“下车”\n   + ck包含你的jd信息，不要轻易随便给陌生人你的ck（除非信得过的人，比如我）\n   + ck可以通过更改jd密码更换\n   + **记得关闭设置–支付设置–免密支付（没开通更好）**\n\n2. 说说微信、qq的**机器人**可以做什么\n\n   + 帮你登录jd并获取ck，自动上传到服务器进行任务\n\n   + 可以进行性价比比价\n\n     + 你发送京东链接到群里，机器人会自动帮你对比商品价格\n     + 淘宝链接还没有调试好，可以先发给我，我给你转链接\n\n   + 可以自动搜索并领\n\n     取隐藏优惠券\n\n     + 在商品界面，点击“复制连击”，把链接发到群里，机器人会自动领取优惠券，然后点击机器人的链接进行下单\n     + 淘宝链接不回复的私聊我\n\n   + 凡是通过机器人发送链接下单的，私聊我会有**惊喜红包**呦\n\n   + 可以进行娱乐游戏：成语接龙等\n\n   + 可以呼唤“小爱同学”\n\n   + 下面是登录教程：\n\n     + 对机器人说 ”登录“，然后根据机器人回复输入”手机号“”验证码“，机器人会自动帮你登录，当提示登录成功后即完成，然后你可以发送查询，查询你的jd相关信息，如下图所示：\n     + 发送登录\n\n   + 当你的ck过期（一般一个月）后，你就需要重新按照以上步骤重新登录\n\n二：登陆可以干什么（为什么要登陆）\n\n> 京东红包仅限京东APP使用、同理惊喜、极速版红包\n\n#####  为什么有些需要手动点击进去\n\n+ 京东有很多小活动、任务、等\n\n+ 有的需要创建你的账号、有的需要名字、有的需要手动选择想要的物品\n\n+ 所以很多活动需要你**手动**进去，完成**新手教程**后，脚本才能给你跑，就是说需要你开启活动\n\n+ 目前可以根据这个图片指引，手动参加活动（图片很长，请仔细观看，有的活动找不到没关系，跳过就行了）\n\n\n#####  我不想用了？怎么退出\n\n+ 只需要私聊我，然后就可以退出\n\n### 京豆使用\n\n1. 首先你需要完成上面的步骤，然后发送查询，机器人会回复你\n   1. [![image-20211109155838262](https://img.menglei.xyz/images/2021/11/09/image-20211109155838262.png)](https://img.menglei.xyz/images/2021/11/09/image-20211109155838262.png)\n   2. 京豆是可以抵现金的，详细请看官方[京豆使用规则](https://help.jd.com/user/issue/167-331.html)[![image-20211109160041434](https://img.menglei.xyz/images/2021/11/09/image-20211109160041434.png)](https://img.menglei.xyz/images/2021/11/09/image-20211109160041434.png)\n   3. 你有惊喜的红包，但是不能在京东使用，可以这样\n      1. 京东选择你想要的产品\n      2. 你在京东看上了一条\n      3. 然后分享——复制链接——发到群里\n      4. 在点击“去抢购”\n      5. 再打开的链接中（或者跳转到京东）：点击添加到购物车\n      6. 然后打开“惊喜”app（没登陆的京东一键登录）\n      7. 点击购物车——然后去结算\n      8. 然后选择使用京豆（这里叫喜豆，其实是一比一的），在选择红包\n      9. ok了，一个订单就完成了\n\n##  下面是一些可能有用的\n\n+ 你最好需要下载的app有**京喜、京东极速版**app\n\n1. 下面按个看一下\n\n   + **京东app**\n\n     + 首页搜索   *“玩一玩”* （改名了）  “边玩边赚” 四个字，把里面所有的链接点一遍，选择商品、建立账号啥的，然后脚本会给你做这些任务（参考上面的图片）\n     + 红包提现：京东玩一玩–领现金  ，点击即可提现到微信，第一次2元。第二次可以提现10元，第三次30元 ；反正我提了不少了\n\n   + ####  京喜app\n\n     + 很多红包是仅限在京喜app中使用的，你下载京喜后，登录你的京东账号，你就会发现头像下方有红包，可能是几块钱、也可能10几块，   但是你要记得，这个红包🧧周期短，可能每天过期几块钱，当你买东西花光了这里的红包，过几天他就会自动增长到几块钱（不知道卖啥的话，就买纸，哈哈哈哈哈）\n     + 京喜牧场：牧场中有鸡蛋，鸡蛋可以换相应的东西，根据自身需求换购\n     + 京喜工厂： 可以选择商品，脚本会自动给你跑（比京东工厂靠谱感觉）\n     + 京喜财富岛：可以换购商品，自行查看\n     + 京喜还有很多不知道的，欢迎补充\n\n   + **京东极速版app**\n\n     + 这个app很爽呀，毕竟白嫖的多\n     + 正常下载，登录京东账号\n     + 下面有金币XXXX（个）–这里脚本每天会给你做任务，你会获得金币  10000=1元，基本每天可以获得1元左右，点击进入可以看到换红包🧧界面（推荐换购50元的）；红包属于无门槛宏红包，比如说你看到一个51元的产品，你可以花费1元+刚才的50元红包进行购买\n     + 别的我没怎么注意，这个金币已经很好了\n\n##  结束，撒花🎉\n\n","source":"_posts/京东薅薅乐.md","raw":"---\ntitle: 京东薅薅乐\ndate: 2021-12-23 19:34:20\ntop: \ndescription: 京东薅一薅\n---\n\n##  开始\n\n<h2>\n    <center>活动一览</center>\n</h2>\n\n| 活动         | 入口                                                         | 羊毛🐑                                          |\n| ------------ | ------------------------------------------------------------ | ---------------------------------------------- |\n| 东东农场     | 京东APP-首页/玩一玩/我的-东东农场                            | 2级12红包(1周)、3级25红包(1月)、4级50红包(2月) |\n| 东东萌宠     | 京东APP-首页/玩一玩/我的-东东萌宠                            | 4块勋章15红包、5块勋章20红包                   |\n| 金融养猪     | 京东金融->我的->金融养猪                                     | 5元立减券(APP通用)                             |\n| 天天提鹅     | 京东金融->我的->天天提鹅                                     | 视频会员                                       |\n| 惊喜牧场     | 京东->我的->农场右滑->更多游戏                               | 零元购+红包(仅限惊喜使用)                      |\n| 财富岛       | 京东->我的->农场右滑->更多游戏                               | 零元购+红包(仅限惊喜使用)                      |\n| 合成珍珠     | 财富岛点击游戏城                                             | 红包(仅限惊喜使用)                             |\n| 集魔方       | 京东-新品-集魔方                                             | 兑换京豆                                       |\n| 勋章         | 农场-水车-双十一集勋章                                       | 红包、水滴、京豆                               |\n| 领现金       | 京东APP-首页/玩一玩/我的-领现金                              | 现金提现+红包                                  |\n| 发财挖宝     | 京东极速版->首页->发财挖宝                                   | 现金提现+红包                                  |\n| 签到免单     | 京东极速版->首页->签到免单                                   | 签到免单                                       |\n| 发财大赢家   | 京东极速版->首页->发财大赢家                                 | 现金提现+红包                                  |\n| 极速金币     | 京东极速版->我的->金币                                       | 兑换红包(仅限极速版使用)                       |\n| 京东赚赚     | 微信->京东赚赚小程序->底部赚好礼->提现无门槛红包             | 兑换红包(仅限极速版使用)                       |\n| 京东秒杀     | 京东->中间频道往右划找到京东秒杀->中间点立即签到->兑换无门槛红包 | 兑换红包                                       |\n| 东东健康社区 | 京东APP-首页/玩一玩/我的-东东健康社区                        | 零元购                                         |\n| 东东超市     | 京东APP-首页/玩一玩/我的-东东超市                            | 零元购                                         |\n| 京东到家     | 微信搜京东到家-首页-免费水果                                 | 免费水果                                       |\n| 摇钱树       | 京东->中间频道往右划找到摇钱树                               | 抵现                                           |\n\n+ 上面网站登陆京东后扫码即可有每日资产推送\n<img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160655.jpeg\" style=\"zoom:200%;\" />\n\n+ 现在qq、微信机器人已经具备群聊、私聊登录jd账号并获取cookie（后简称ck）的能力，后面会截图给出使用方法\n+ 可以在群里，或者加好友后发送“登陆”、“登录”都可以，根据提示进行登录，登陆后可以进行查询操作\n\n####  一: 登陆\n\n<center>QQ机器人命令列表</center>\n\n| 命令                                                 | 作用               |\n| ---------------------------------------------------- | ------------------ |\n| 河北疫情                                             | 查询疫情           |\n| 登陆                                                 | 京东账号登陆       |\n| 查询                                                 | 查询京东资产       |\n| 账号管理                                             | 进行京东账号管理   |\n| jd unbind                                            | QQ与京东账号解绑   |\n| 下载 url                                             | 百度网盘下载       |\n| 成语接龙                                             | 成语接龙           |\n| 小爱 ?                                               | 召唤小爱           |\n| 高风险地区or中风险地区                               | 查询高、中风险地区 |\n| vip https://www.iqiyi.com/v_1euutpl76d0.html         | 免会员看付费视频   |\n| 去水印https://www.iqiyi.com/v_1euutpl76d0.video      | 抖音视频去水印     |\n| 河北天气or河北天气预报                               | 天气预报           |\n| 音乐                                                 | 随机网易云音乐     |\n| 一言                                                 | 随机句子           |\n| 165最佳身材                                          | 致命打击           |\n| 双鱼座星座今日、明日、本周、本月运势or双鱼座星座运势 | 星座运势           |\n\n1. 私聊或在群里发送登陆”、“登录，机器人会回复你相关信息，请根据提示进行操作即可登录jd并获取ck\n\n   + 短信登录的jd后，ck有效期一般为**一个月**，当ck过期后，需要重新进行短信登录\n   + 做好登陆后私聊我进行备注，没有备注的到期后自动踢🦶“下车”\n   + ck包含你的jd信息，不要轻易随便给陌生人你的ck（除非信得过的人，比如我）\n   + ck可以通过更改jd密码更换\n   + **记得关闭设置–支付设置–免密支付（没开通更好）**\n\n2. 说说微信、qq的**机器人**可以做什么\n\n   + 帮你登录jd并获取ck，自动上传到服务器进行任务\n\n   + 可以进行性价比比价\n\n     + 你发送京东链接到群里，机器人会自动帮你对比商品价格\n     + 淘宝链接还没有调试好，可以先发给我，我给你转链接\n\n   + 可以自动搜索并领\n\n     取隐藏优惠券\n\n     + 在商品界面，点击“复制连击”，把链接发到群里，机器人会自动领取优惠券，然后点击机器人的链接进行下单\n     + 淘宝链接不回复的私聊我\n\n   + 凡是通过机器人发送链接下单的，私聊我会有**惊喜红包**呦\n\n   + 可以进行娱乐游戏：成语接龙等\n\n   + 可以呼唤“小爱同学”\n\n   + 下面是登录教程：\n\n     + 对机器人说 ”登录“，然后根据机器人回复输入”手机号“”验证码“，机器人会自动帮你登录，当提示登录成功后即完成，然后你可以发送查询，查询你的jd相关信息，如下图所示：\n     + 发送登录\n\n   + 当你的ck过期（一般一个月）后，你就需要重新按照以上步骤重新登录\n\n二：登陆可以干什么（为什么要登陆）\n\n> 京东红包仅限京东APP使用、同理惊喜、极速版红包\n\n#####  为什么有些需要手动点击进去\n\n+ 京东有很多小活动、任务、等\n\n+ 有的需要创建你的账号、有的需要名字、有的需要手动选择想要的物品\n\n+ 所以很多活动需要你**手动**进去，完成**新手教程**后，脚本才能给你跑，就是说需要你开启活动\n\n+ 目前可以根据这个图片指引，手动参加活动（图片很长，请仔细观看，有的活动找不到没关系，跳过就行了）\n\n\n#####  我不想用了？怎么退出\n\n+ 只需要私聊我，然后就可以退出\n\n### 京豆使用\n\n1. 首先你需要完成上面的步骤，然后发送查询，机器人会回复你\n   1. [![image-20211109155838262](https://img.menglei.xyz/images/2021/11/09/image-20211109155838262.png)](https://img.menglei.xyz/images/2021/11/09/image-20211109155838262.png)\n   2. 京豆是可以抵现金的，详细请看官方[京豆使用规则](https://help.jd.com/user/issue/167-331.html)[![image-20211109160041434](https://img.menglei.xyz/images/2021/11/09/image-20211109160041434.png)](https://img.menglei.xyz/images/2021/11/09/image-20211109160041434.png)\n   3. 你有惊喜的红包，但是不能在京东使用，可以这样\n      1. 京东选择你想要的产品\n      2. 你在京东看上了一条\n      3. 然后分享——复制链接——发到群里\n      4. 在点击“去抢购”\n      5. 再打开的链接中（或者跳转到京东）：点击添加到购物车\n      6. 然后打开“惊喜”app（没登陆的京东一键登录）\n      7. 点击购物车——然后去结算\n      8. 然后选择使用京豆（这里叫喜豆，其实是一比一的），在选择红包\n      9. ok了，一个订单就完成了\n\n##  下面是一些可能有用的\n\n+ 你最好需要下载的app有**京喜、京东极速版**app\n\n1. 下面按个看一下\n\n   + **京东app**\n\n     + 首页搜索   *“玩一玩”* （改名了）  “边玩边赚” 四个字，把里面所有的链接点一遍，选择商品、建立账号啥的，然后脚本会给你做这些任务（参考上面的图片）\n     + 红包提现：京东玩一玩–领现金  ，点击即可提现到微信，第一次2元。第二次可以提现10元，第三次30元 ；反正我提了不少了\n\n   + ####  京喜app\n\n     + 很多红包是仅限在京喜app中使用的，你下载京喜后，登录你的京东账号，你就会发现头像下方有红包，可能是几块钱、也可能10几块，   但是你要记得，这个红包🧧周期短，可能每天过期几块钱，当你买东西花光了这里的红包，过几天他就会自动增长到几块钱（不知道卖啥的话，就买纸，哈哈哈哈哈）\n     + 京喜牧场：牧场中有鸡蛋，鸡蛋可以换相应的东西，根据自身需求换购\n     + 京喜工厂： 可以选择商品，脚本会自动给你跑（比京东工厂靠谱感觉）\n     + 京喜财富岛：可以换购商品，自行查看\n     + 京喜还有很多不知道的，欢迎补充\n\n   + **京东极速版app**\n\n     + 这个app很爽呀，毕竟白嫖的多\n     + 正常下载，登录京东账号\n     + 下面有金币XXXX（个）–这里脚本每天会给你做任务，你会获得金币  10000=1元，基本每天可以获得1元左右，点击进入可以看到换红包🧧界面（推荐换购50元的）；红包属于无门槛宏红包，比如说你看到一个51元的产品，你可以花费1元+刚才的50元红包进行购买\n     + 别的我没怎么注意，这个金币已经很好了\n\n##  结束，撒花🎉\n\n","slug":"京东薅薅乐","published":1,"updated":"2022-08-16T13:17:47.263Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3k002ijsvk1ukmdlvx","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><h2>\n    <center>活动一览</center>\n</h2>\n\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>活动</th>\n<th>入口</th>\n<th>羊毛🐑</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>东东农场</td>\n<td>京东APP-首页/玩一玩/我的-东东农场</td>\n<td>2级12红包(1周)、3级25红包(1月)、4级50红包(2月)</td>\n</tr>\n<tr>\n<td>东东萌宠</td>\n<td>京东APP-首页/玩一玩/我的-东东萌宠</td>\n<td>4块勋章15红包、5块勋章20红包</td>\n</tr>\n<tr>\n<td>金融养猪</td>\n<td>京东金融-&gt;我的-&gt;金融养猪</td>\n<td>5元立减券(APP通用)</td>\n</tr>\n<tr>\n<td>天天提鹅</td>\n<td>京东金融-&gt;我的-&gt;天天提鹅</td>\n<td>视频会员</td>\n</tr>\n<tr>\n<td>惊喜牧场</td>\n<td>京东-&gt;我的-&gt;农场右滑-&gt;更多游戏</td>\n<td>零元购+红包(仅限惊喜使用)</td>\n</tr>\n<tr>\n<td>财富岛</td>\n<td>京东-&gt;我的-&gt;农场右滑-&gt;更多游戏</td>\n<td>零元购+红包(仅限惊喜使用)</td>\n</tr>\n<tr>\n<td>合成珍珠</td>\n<td>财富岛点击游戏城</td>\n<td>红包(仅限惊喜使用)</td>\n</tr>\n<tr>\n<td>集魔方</td>\n<td>京东-新品-集魔方</td>\n<td>兑换京豆</td>\n</tr>\n<tr>\n<td>勋章</td>\n<td>农场-水车-双十一集勋章</td>\n<td>红包、水滴、京豆</td>\n</tr>\n<tr>\n<td>领现金</td>\n<td>京东APP-首页/玩一玩/我的-领现金</td>\n<td>现金提现+红包</td>\n</tr>\n<tr>\n<td>发财挖宝</td>\n<td>京东极速版-&gt;首页-&gt;发财挖宝</td>\n<td>现金提现+红包</td>\n</tr>\n<tr>\n<td>签到免单</td>\n<td>京东极速版-&gt;首页-&gt;签到免单</td>\n<td>签到免单</td>\n</tr>\n<tr>\n<td>发财大赢家</td>\n<td>京东极速版-&gt;首页-&gt;发财大赢家</td>\n<td>现金提现+红包</td>\n</tr>\n<tr>\n<td>极速金币</td>\n<td>京东极速版-&gt;我的-&gt;金币</td>\n<td>兑换红包(仅限极速版使用)</td>\n</tr>\n<tr>\n<td>京东赚赚</td>\n<td>微信-&gt;京东赚赚小程序-&gt;底部赚好礼-&gt;提现无门槛红包</td>\n<td>兑换红包(仅限极速版使用)</td>\n</tr>\n<tr>\n<td>京东秒杀</td>\n<td>京东-&gt;中间频道往右划找到京东秒杀-&gt;中间点立即签到-&gt;兑换无门槛红包</td>\n<td>兑换红包</td>\n</tr>\n<tr>\n<td>东东健康社区</td>\n<td>京东APP-首页/玩一玩/我的-东东健康社区</td>\n<td>零元购</td>\n</tr>\n<tr>\n<td>东东超市</td>\n<td>京东APP-首页/玩一玩/我的-东东超市</td>\n<td>零元购</td>\n</tr>\n<tr>\n<td>京东到家</td>\n<td>微信搜京东到家-首页-免费水果</td>\n<td>免费水果</td>\n</tr>\n<tr>\n<td>摇钱树</td>\n<td>京东-&gt;中间频道往右划找到摇钱树</td>\n<td>抵现</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li><p>上面网站登陆京东后扫码即可有每日资产推送<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160655.jpeg\" style=\"zoom:200%;\" /></p>\n</li>\n<li><p>现在qq、微信机器人已经具备群聊、私聊登录jd账号并获取cookie（后简称ck）的能力，后面会截图给出使用方法</p>\n</li>\n<li>可以在群里，或者加好友后发送“登陆”、“登录”都可以，根据提示进行登录，登陆后可以进行查询操作</li>\n</ul>\n<h4 id=\"一-登陆\"><a href=\"#一-登陆\" class=\"headerlink\" title=\"一: 登陆\"></a>一: 登陆</h4><center>QQ机器人命令列表</center>\n\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>河北疫情</td>\n<td>查询疫情</td>\n</tr>\n<tr>\n<td>登陆</td>\n<td>京东账号登陆</td>\n</tr>\n<tr>\n<td>查询</td>\n<td>查询京东资产</td>\n</tr>\n<tr>\n<td>账号管理</td>\n<td>进行京东账号管理</td>\n</tr>\n<tr>\n<td>jd unbind</td>\n<td>QQ与京东账号解绑</td>\n</tr>\n<tr>\n<td>下载 url</td>\n<td>百度网盘下载</td>\n</tr>\n<tr>\n<td>成语接龙</td>\n<td>成语接龙</td>\n</tr>\n<tr>\n<td>小爱 ?</td>\n<td>召唤小爱</td>\n</tr>\n<tr>\n<td>高风险地区or中风险地区</td>\n<td>查询高、中风险地区</td>\n</tr>\n<tr>\n<td>vip <a href=\"https://www.iqiyi.com/v_1euutpl76d0.html\">https://www.iqiyi.com/v_1euutpl76d0.html</a></td>\n<td>免会员看付费视频</td>\n</tr>\n<tr>\n<td>去水印<a href=\"https://www.iqiyi.com/v_1euutpl76d0.video\">https://www.iqiyi.com/v_1euutpl76d0.video</a></td>\n<td>抖音视频去水印</td>\n</tr>\n<tr>\n<td>河北天气or河北天气预报</td>\n<td>天气预报</td>\n</tr>\n<tr>\n<td>音乐</td>\n<td>随机网易云音乐</td>\n</tr>\n<tr>\n<td>一言</td>\n<td>随机句子</td>\n</tr>\n<tr>\n<td>165最佳身材</td>\n<td>致命打击</td>\n</tr>\n<tr>\n<td>双鱼座星座今日、明日、本周、本月运势or双鱼座星座运势</td>\n<td>星座运势</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ol>\n<li><p>私聊或在群里发送登陆”、“登录，机器人会回复你相关信息，请根据提示进行操作即可登录jd并获取ck</p>\n<ul>\n<li>短信登录的jd后，ck有效期一般为<strong>一个月</strong>，当ck过期后，需要重新进行短信登录</li>\n<li>做好登陆后私聊我进行备注，没有备注的到期后自动踢🦶“下车”</li>\n<li>ck包含你的jd信息，不要轻易随便给陌生人你的ck（除非信得过的人，比如我）</li>\n<li>ck可以通过更改jd密码更换</li>\n<li><strong>记得关闭设置–支付设置–免密支付（没开通更好）</strong></li>\n</ul>\n</li>\n<li><p>说说微信、qq的<strong>机器人</strong>可以做什么</p>\n<ul>\n<li><p>帮你登录jd并获取ck，自动上传到服务器进行任务</p>\n</li>\n<li><p>可以进行性价比比价</p>\n<ul>\n<li>你发送京东链接到群里，机器人会自动帮你对比商品价格</li>\n<li>淘宝链接还没有调试好，可以先发给我，我给你转链接</li>\n</ul>\n</li>\n<li><p>可以自动搜索并领</p>\n<p>取隐藏优惠券</p>\n<ul>\n<li>在商品界面，点击“复制连击”，把链接发到群里，机器人会自动领取优惠券，然后点击机器人的链接进行下单</li>\n<li>淘宝链接不回复的私聊我</li>\n</ul>\n</li>\n<li><p>凡是通过机器人发送链接下单的，私聊我会有<strong>惊喜红包</strong>呦</p>\n</li>\n<li><p>可以进行娱乐游戏：成语接龙等</p>\n</li>\n<li><p>可以呼唤“小爱同学”</p>\n</li>\n<li><p>下面是登录教程：</p>\n<ul>\n<li>对机器人说 ”登录“，然后根据机器人回复输入”手机号“”验证码“，机器人会自动帮你登录，当提示登录成功后即完成，然后你可以发送查询，查询你的jd相关信息，如下图所示：</li>\n<li>发送登录</li>\n</ul>\n</li>\n<li><p>当你的ck过期（一般一个月）后，你就需要重新按照以上步骤重新登录</p>\n</li>\n</ul>\n</li>\n</ol>\n<p>二：登陆可以干什么（为什么要登陆）</p>\n<blockquote>\n<p>京东红包仅限京东APP使用、同理惊喜、极速版红包</p>\n</blockquote>\n<h5 id=\"为什么有些需要手动点击进去\"><a href=\"#为什么有些需要手动点击进去\" class=\"headerlink\" title=\"为什么有些需要手动点击进去\"></a>为什么有些需要手动点击进去</h5><ul>\n<li><p>京东有很多小活动、任务、等</p>\n</li>\n<li><p>有的需要创建你的账号、有的需要名字、有的需要手动选择想要的物品</p>\n</li>\n<li><p>所以很多活动需要你<strong>手动</strong>进去，完成<strong>新手教程</strong>后，脚本才能给你跑，就是说需要你开启活动</p>\n</li>\n<li><p>目前可以根据这个图片指引，手动参加活动（图片很长，请仔细观看，有的活动找不到没关系，跳过就行了）</p>\n</li>\n</ul>\n<h5 id=\"我不想用了？怎么退出\"><a href=\"#我不想用了？怎么退出\" class=\"headerlink\" title=\"我不想用了？怎么退出\"></a>我不想用了？怎么退出</h5><ul>\n<li>只需要私聊我，然后就可以退出</li>\n</ul>\n<h3 id=\"京豆使用\"><a href=\"#京豆使用\" class=\"headerlink\" title=\"京豆使用\"></a>京豆使用</h3><ol>\n<li>首先你需要完成上面的步骤，然后发送查询，机器人会回复你<ol>\n<li><a href=\"https://img.menglei.xyz/images/2021/11/09/image-20211109155838262.png\"><img src=\"https://img.menglei.xyz/images/2021/11/09/image-20211109155838262.png\" alt=\"image-20211109155838262\"></a></li>\n<li>京豆是可以抵现金的，详细请看官方<a href=\"https://help.jd.com/user/issue/167-331.html\">京豆使用规则</a><a href=\"https://img.menglei.xyz/images/2021/11/09/image-20211109160041434.png\"><img src=\"https://img.menglei.xyz/images/2021/11/09/image-20211109160041434.png\" alt=\"image-20211109160041434\"></a></li>\n<li>你有惊喜的红包，但是不能在京东使用，可以这样<ol>\n<li>京东选择你想要的产品</li>\n<li>你在京东看上了一条</li>\n<li>然后分享——复制链接——发到群里</li>\n<li>在点击“去抢购”</li>\n<li>再打开的链接中（或者跳转到京东）：点击添加到购物车</li>\n<li>然后打开“惊喜”app（没登陆的京东一键登录）</li>\n<li>点击购物车——然后去结算</li>\n<li>然后选择使用京豆（这里叫喜豆，其实是一比一的），在选择红包</li>\n<li>ok了，一个订单就完成了</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"下面是一些可能有用的\"><a href=\"#下面是一些可能有用的\" class=\"headerlink\" title=\"下面是一些可能有用的\"></a>下面是一些可能有用的</h2><ul>\n<li>你最好需要下载的app有<strong>京喜、京东极速版</strong>app</li>\n</ul>\n<ol>\n<li><p>下面按个看一下</p>\n<ul>\n<li><p><strong>京东app</strong></p>\n<ul>\n<li>首页搜索   <em>“玩一玩”</em> （改名了）  “边玩边赚” 四个字，把里面所有的链接点一遍，选择商品、建立账号啥的，然后脚本会给你做这些任务（参考上面的图片）</li>\n<li>红包提现：京东玩一玩–领现金  ，点击即可提现到微信，第一次2元。第二次可以提现10元，第三次30元 ；反正我提了不少了</li>\n</ul>\n</li>\n<li><h4 id=\"京喜app\"><a href=\"#京喜app\" class=\"headerlink\" title=\"京喜app\"></a>京喜app</h4><ul>\n<li>很多红包是仅限在京喜app中使用的，你下载京喜后，登录你的京东账号，你就会发现头像下方有红包，可能是几块钱、也可能10几块，   但是你要记得，这个红包🧧周期短，可能每天过期几块钱，当你买东西花光了这里的红包，过几天他就会自动增长到几块钱（不知道卖啥的话，就买纸，哈哈哈哈哈）</li>\n<li>京喜牧场：牧场中有鸡蛋，鸡蛋可以换相应的东西，根据自身需求换购</li>\n<li>京喜工厂： 可以选择商品，脚本会自动给你跑（比京东工厂靠谱感觉）</li>\n<li>京喜财富岛：可以换购商品，自行查看</li>\n<li>京喜还有很多不知道的，欢迎补充</li>\n</ul>\n</li>\n<li><p><strong>京东极速版app</strong></p>\n<ul>\n<li>这个app很爽呀，毕竟白嫖的多</li>\n<li>正常下载，登录京东账号</li>\n<li>下面有金币XXXX（个）–这里脚本每天会给你做任务，你会获得金币  10000=1元，基本每天可以获得1元左右，点击进入可以看到换红包🧧界面（推荐换购50元的）；红包属于无门槛宏红包，比如说你看到一个51元的产品，你可以花费1元+刚才的50元红包进行购买</li>\n<li>别的我没怎么注意，这个金币已经很好了</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"结束，撒花🎉\"><a href=\"#结束，撒花🎉\" class=\"headerlink\" title=\"结束，撒花🎉\"></a>结束，撒花🎉</h2>","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160624.jpg","length":2667,"excerpt":"","more":"<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><h2>\n    <center>活动一览</center>\n</h2>\n\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>活动</th>\n<th>入口</th>\n<th>羊毛🐑</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>东东农场</td>\n<td>京东APP-首页/玩一玩/我的-东东农场</td>\n<td>2级12红包(1周)、3级25红包(1月)、4级50红包(2月)</td>\n</tr>\n<tr>\n<td>东东萌宠</td>\n<td>京东APP-首页/玩一玩/我的-东东萌宠</td>\n<td>4块勋章15红包、5块勋章20红包</td>\n</tr>\n<tr>\n<td>金融养猪</td>\n<td>京东金融-&gt;我的-&gt;金融养猪</td>\n<td>5元立减券(APP通用)</td>\n</tr>\n<tr>\n<td>天天提鹅</td>\n<td>京东金融-&gt;我的-&gt;天天提鹅</td>\n<td>视频会员</td>\n</tr>\n<tr>\n<td>惊喜牧场</td>\n<td>京东-&gt;我的-&gt;农场右滑-&gt;更多游戏</td>\n<td>零元购+红包(仅限惊喜使用)</td>\n</tr>\n<tr>\n<td>财富岛</td>\n<td>京东-&gt;我的-&gt;农场右滑-&gt;更多游戏</td>\n<td>零元购+红包(仅限惊喜使用)</td>\n</tr>\n<tr>\n<td>合成珍珠</td>\n<td>财富岛点击游戏城</td>\n<td>红包(仅限惊喜使用)</td>\n</tr>\n<tr>\n<td>集魔方</td>\n<td>京东-新品-集魔方</td>\n<td>兑换京豆</td>\n</tr>\n<tr>\n<td>勋章</td>\n<td>农场-水车-双十一集勋章</td>\n<td>红包、水滴、京豆</td>\n</tr>\n<tr>\n<td>领现金</td>\n<td>京东APP-首页/玩一玩/我的-领现金</td>\n<td>现金提现+红包</td>\n</tr>\n<tr>\n<td>发财挖宝</td>\n<td>京东极速版-&gt;首页-&gt;发财挖宝</td>\n<td>现金提现+红包</td>\n</tr>\n<tr>\n<td>签到免单</td>\n<td>京东极速版-&gt;首页-&gt;签到免单</td>\n<td>签到免单</td>\n</tr>\n<tr>\n<td>发财大赢家</td>\n<td>京东极速版-&gt;首页-&gt;发财大赢家</td>\n<td>现金提现+红包</td>\n</tr>\n<tr>\n<td>极速金币</td>\n<td>京东极速版-&gt;我的-&gt;金币</td>\n<td>兑换红包(仅限极速版使用)</td>\n</tr>\n<tr>\n<td>京东赚赚</td>\n<td>微信-&gt;京东赚赚小程序-&gt;底部赚好礼-&gt;提现无门槛红包</td>\n<td>兑换红包(仅限极速版使用)</td>\n</tr>\n<tr>\n<td>京东秒杀</td>\n<td>京东-&gt;中间频道往右划找到京东秒杀-&gt;中间点立即签到-&gt;兑换无门槛红包</td>\n<td>兑换红包</td>\n</tr>\n<tr>\n<td>东东健康社区</td>\n<td>京东APP-首页/玩一玩/我的-东东健康社区</td>\n<td>零元购</td>\n</tr>\n<tr>\n<td>东东超市</td>\n<td>京东APP-首页/玩一玩/我的-东东超市</td>\n<td>零元购</td>\n</tr>\n<tr>\n<td>京东到家</td>\n<td>微信搜京东到家-首页-免费水果</td>\n<td>免费水果</td>\n</tr>\n<tr>\n<td>摇钱树</td>\n<td>京东-&gt;中间频道往右划找到摇钱树</td>\n<td>抵现</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li><p>上面网站登陆京东后扫码即可有每日资产推送<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160655.jpeg\" style=\"zoom:200%;\" /></p>\n</li>\n<li><p>现在qq、微信机器人已经具备群聊、私聊登录jd账号并获取cookie（后简称ck）的能力，后面会截图给出使用方法</p>\n</li>\n<li>可以在群里，或者加好友后发送“登陆”、“登录”都可以，根据提示进行登录，登陆后可以进行查询操作</li>\n</ul>\n<h4 id=\"一-登陆\"><a href=\"#一-登陆\" class=\"headerlink\" title=\"一: 登陆\"></a>一: 登陆</h4><center>QQ机器人命令列表</center>\n\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>河北疫情</td>\n<td>查询疫情</td>\n</tr>\n<tr>\n<td>登陆</td>\n<td>京东账号登陆</td>\n</tr>\n<tr>\n<td>查询</td>\n<td>查询京东资产</td>\n</tr>\n<tr>\n<td>账号管理</td>\n<td>进行京东账号管理</td>\n</tr>\n<tr>\n<td>jd unbind</td>\n<td>QQ与京东账号解绑</td>\n</tr>\n<tr>\n<td>下载 url</td>\n<td>百度网盘下载</td>\n</tr>\n<tr>\n<td>成语接龙</td>\n<td>成语接龙</td>\n</tr>\n<tr>\n<td>小爱 ?</td>\n<td>召唤小爱</td>\n</tr>\n<tr>\n<td>高风险地区or中风险地区</td>\n<td>查询高、中风险地区</td>\n</tr>\n<tr>\n<td>vip <a href=\"https://www.iqiyi.com/v_1euutpl76d0.html\">https://www.iqiyi.com/v_1euutpl76d0.html</a></td>\n<td>免会员看付费视频</td>\n</tr>\n<tr>\n<td>去水印<a href=\"https://www.iqiyi.com/v_1euutpl76d0.video\">https://www.iqiyi.com/v_1euutpl76d0.video</a></td>\n<td>抖音视频去水印</td>\n</tr>\n<tr>\n<td>河北天气or河北天气预报</td>\n<td>天气预报</td>\n</tr>\n<tr>\n<td>音乐</td>\n<td>随机网易云音乐</td>\n</tr>\n<tr>\n<td>一言</td>\n<td>随机句子</td>\n</tr>\n<tr>\n<td>165最佳身材</td>\n<td>致命打击</td>\n</tr>\n<tr>\n<td>双鱼座星座今日、明日、本周、本月运势or双鱼座星座运势</td>\n<td>星座运势</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ol>\n<li><p>私聊或在群里发送登陆”、“登录，机器人会回复你相关信息，请根据提示进行操作即可登录jd并获取ck</p>\n<ul>\n<li>短信登录的jd后，ck有效期一般为<strong>一个月</strong>，当ck过期后，需要重新进行短信登录</li>\n<li>做好登陆后私聊我进行备注，没有备注的到期后自动踢🦶“下车”</li>\n<li>ck包含你的jd信息，不要轻易随便给陌生人你的ck（除非信得过的人，比如我）</li>\n<li>ck可以通过更改jd密码更换</li>\n<li><strong>记得关闭设置–支付设置–免密支付（没开通更好）</strong></li>\n</ul>\n</li>\n<li><p>说说微信、qq的<strong>机器人</strong>可以做什么</p>\n<ul>\n<li><p>帮你登录jd并获取ck，自动上传到服务器进行任务</p>\n</li>\n<li><p>可以进行性价比比价</p>\n<ul>\n<li>你发送京东链接到群里，机器人会自动帮你对比商品价格</li>\n<li>淘宝链接还没有调试好，可以先发给我，我给你转链接</li>\n</ul>\n</li>\n<li><p>可以自动搜索并领</p>\n<p>取隐藏优惠券</p>\n<ul>\n<li>在商品界面，点击“复制连击”，把链接发到群里，机器人会自动领取优惠券，然后点击机器人的链接进行下单</li>\n<li>淘宝链接不回复的私聊我</li>\n</ul>\n</li>\n<li><p>凡是通过机器人发送链接下单的，私聊我会有<strong>惊喜红包</strong>呦</p>\n</li>\n<li><p>可以进行娱乐游戏：成语接龙等</p>\n</li>\n<li><p>可以呼唤“小爱同学”</p>\n</li>\n<li><p>下面是登录教程：</p>\n<ul>\n<li>对机器人说 ”登录“，然后根据机器人回复输入”手机号“”验证码“，机器人会自动帮你登录，当提示登录成功后即完成，然后你可以发送查询，查询你的jd相关信息，如下图所示：</li>\n<li>发送登录</li>\n</ul>\n</li>\n<li><p>当你的ck过期（一般一个月）后，你就需要重新按照以上步骤重新登录</p>\n</li>\n</ul>\n</li>\n</ol>\n<p>二：登陆可以干什么（为什么要登陆）</p>\n<blockquote>\n<p>京东红包仅限京东APP使用、同理惊喜、极速版红包</p>\n</blockquote>\n<h5 id=\"为什么有些需要手动点击进去\"><a href=\"#为什么有些需要手动点击进去\" class=\"headerlink\" title=\"为什么有些需要手动点击进去\"></a>为什么有些需要手动点击进去</h5><ul>\n<li><p>京东有很多小活动、任务、等</p>\n</li>\n<li><p>有的需要创建你的账号、有的需要名字、有的需要手动选择想要的物品</p>\n</li>\n<li><p>所以很多活动需要你<strong>手动</strong>进去，完成<strong>新手教程</strong>后，脚本才能给你跑，就是说需要你开启活动</p>\n</li>\n<li><p>目前可以根据这个图片指引，手动参加活动（图片很长，请仔细观看，有的活动找不到没关系，跳过就行了）</p>\n</li>\n</ul>\n<h5 id=\"我不想用了？怎么退出\"><a href=\"#我不想用了？怎么退出\" class=\"headerlink\" title=\"我不想用了？怎么退出\"></a>我不想用了？怎么退出</h5><ul>\n<li>只需要私聊我，然后就可以退出</li>\n</ul>\n<h3 id=\"京豆使用\"><a href=\"#京豆使用\" class=\"headerlink\" title=\"京豆使用\"></a>京豆使用</h3><ol>\n<li>首先你需要完成上面的步骤，然后发送查询，机器人会回复你<ol>\n<li><a href=\"https://img.menglei.xyz/images/2021/11/09/image-20211109155838262.png\"><img src=\"https://img.menglei.xyz/images/2021/11/09/image-20211109155838262.png\" alt=\"image-20211109155838262\"></a></li>\n<li>京豆是可以抵现金的，详细请看官方<a href=\"https://help.jd.com/user/issue/167-331.html\">京豆使用规则</a><a href=\"https://img.menglei.xyz/images/2021/11/09/image-20211109160041434.png\"><img src=\"https://img.menglei.xyz/images/2021/11/09/image-20211109160041434.png\" alt=\"image-20211109160041434\"></a></li>\n<li>你有惊喜的红包，但是不能在京东使用，可以这样<ol>\n<li>京东选择你想要的产品</li>\n<li>你在京东看上了一条</li>\n<li>然后分享——复制链接——发到群里</li>\n<li>在点击“去抢购”</li>\n<li>再打开的链接中（或者跳转到京东）：点击添加到购物车</li>\n<li>然后打开“惊喜”app（没登陆的京东一键登录）</li>\n<li>点击购物车——然后去结算</li>\n<li>然后选择使用京豆（这里叫喜豆，其实是一比一的），在选择红包</li>\n<li>ok了，一个订单就完成了</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"下面是一些可能有用的\"><a href=\"#下面是一些可能有用的\" class=\"headerlink\" title=\"下面是一些可能有用的\"></a>下面是一些可能有用的</h2><ul>\n<li>你最好需要下载的app有<strong>京喜、京东极速版</strong>app</li>\n</ul>\n<ol>\n<li><p>下面按个看一下</p>\n<ul>\n<li><p><strong>京东app</strong></p>\n<ul>\n<li>首页搜索   <em>“玩一玩”</em> （改名了）  “边玩边赚” 四个字，把里面所有的链接点一遍，选择商品、建立账号啥的，然后脚本会给你做这些任务（参考上面的图片）</li>\n<li>红包提现：京东玩一玩–领现金  ，点击即可提现到微信，第一次2元。第二次可以提现10元，第三次30元 ；反正我提了不少了</li>\n</ul>\n</li>\n<li><h4 id=\"京喜app\"><a href=\"#京喜app\" class=\"headerlink\" title=\"京喜app\"></a>京喜app</h4><ul>\n<li>很多红包是仅限在京喜app中使用的，你下载京喜后，登录你的京东账号，你就会发现头像下方有红包，可能是几块钱、也可能10几块，   但是你要记得，这个红包🧧周期短，可能每天过期几块钱，当你买东西花光了这里的红包，过几天他就会自动增长到几块钱（不知道卖啥的话，就买纸，哈哈哈哈哈）</li>\n<li>京喜牧场：牧场中有鸡蛋，鸡蛋可以换相应的东西，根据自身需求换购</li>\n<li>京喜工厂： 可以选择商品，脚本会自动给你跑（比京东工厂靠谱感觉）</li>\n<li>京喜财富岛：可以换购商品，自行查看</li>\n<li>京喜还有很多不知道的，欢迎补充</li>\n</ul>\n</li>\n<li><p><strong>京东极速版app</strong></p>\n<ul>\n<li>这个app很爽呀，毕竟白嫖的多</li>\n<li>正常下载，登录京东账号</li>\n<li>下面有金币XXXX（个）–这里脚本每天会给你做任务，你会获得金币  10000=1元，基本每天可以获得1元左右，点击进入可以看到换红包🧧界面（推荐换购50元的）；红包属于无门槛宏红包，比如说你看到一个51元的产品，你可以花费1元+刚才的50元红包进行购买</li>\n<li>别的我没怎么注意，这个金币已经很好了</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"结束，撒花🎉\"><a href=\"#结束，撒花🎉\" class=\"headerlink\" title=\"结束，撒花🎉\"></a>结束，撒花🎉</h2>"},{"title":"人造立体视觉","date":"2021-07-05T08:30:08.000Z","mathjax":true,"description":"人造立体视觉","_content":"\n## 人眼分辨率\n\n### 第一分辨率\n\n+ 用单眼所能观察出**两点**间的的最小距离\n+ 大小为45<sup>''</sup>\n\n### 第二分辨率\n\n+ 用单眼所能观察出两条**平行线**间的最小距离\n+ 大小为20<sup>''</sup>\n+ 双眼观察精度比单眼高$\\sqrt2$倍，第一分辨率为30<sup>''</sup>,\n+ 第二分辨率为12<sup>''</sup>\n\n## 立体视觉\n\n### 立体视觉\n\n+ 人眼双眼观察景物可判断其远近，得到景物的立体效应，这种现象称为人眼的立体视觉\n+ <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703225706.png\"/>\n\n### 生理视差\n\n+ 生理视差是产生立体感觉的生理基础\n+ 人眼分辨远近的本质是生理视差\n\n## 人造立体视觉\n\n### 定义\n\n\n\n### 条件\n\n1.立体像对\n\n+ 两张像片必须是在两个不同位置对同一景物摄取的立体像对(摄影测量时，规定摄影时保持像片的重叠度在60%以上)\n\n2.分像条件\n\n+ 每只眼睛必须只能观察像对的一张像片(左眼看左片，右眼看右片)\n\n3.两张像片上相同景物(同名像点)的连线与眼基线应大致平行\n\n4.两张像片的比例尺(差别<15%),否则需要zoom系统等进行调节\n\n## 立体观察与量测\n\n### 立体观察方法\n\n+ 立体镜观察\n\n  桥式立体镜\n\n  反光立体镜\n\n+  双目镜观察光路的立体观察\n\n+  叠映影像立体观察\n\n   红绿色互补法\n\n   同步闪闭法(液晶眼镜)\n\n   偏振光法\n\n### 立体量测\n\n+ 像对立体量测目的：找出同名像点，获取同名像点的坐标\n+ 左右视差 x之差\n+ 上下视差 y之差\n\n## 立体像对中特殊的点线面\n\n### 同名像点\n\n+ 同名光线在左右像片上的构像\n\n### 同名光线\n\n+ 同一地面点发出的两条光线\n\n### 同名核线\n\n+ 核面与左右像片面的交线\n\n### 核面\n\n+ 摄影基线与某一地面点组成的平面\n\n  <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703225614.png\"/>\n\n## 获取地面点坐标的三种方式\n\n+ 后方交会+前方交会\n\n+ 相对定向+绝对定向\n\n+ 光束法\n\n  \n\n  \n\n","source":"_posts/人造立体视觉.md","raw":"---\ntitle: 人造立体视觉\ndate: 2021-07-05 16:30:08\ncategories: [GIS,摄影测量,人造立体视觉]\ntags: 摄影测量\nmathjax: true\ndescription: 人造立体视觉\n---\n\n## 人眼分辨率\n\n### 第一分辨率\n\n+ 用单眼所能观察出**两点**间的的最小距离\n+ 大小为45<sup>''</sup>\n\n### 第二分辨率\n\n+ 用单眼所能观察出两条**平行线**间的最小距离\n+ 大小为20<sup>''</sup>\n+ 双眼观察精度比单眼高$\\sqrt2$倍，第一分辨率为30<sup>''</sup>,\n+ 第二分辨率为12<sup>''</sup>\n\n## 立体视觉\n\n### 立体视觉\n\n+ 人眼双眼观察景物可判断其远近，得到景物的立体效应，这种现象称为人眼的立体视觉\n+ <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703225706.png\"/>\n\n### 生理视差\n\n+ 生理视差是产生立体感觉的生理基础\n+ 人眼分辨远近的本质是生理视差\n\n## 人造立体视觉\n\n### 定义\n\n\n\n### 条件\n\n1.立体像对\n\n+ 两张像片必须是在两个不同位置对同一景物摄取的立体像对(摄影测量时，规定摄影时保持像片的重叠度在60%以上)\n\n2.分像条件\n\n+ 每只眼睛必须只能观察像对的一张像片(左眼看左片，右眼看右片)\n\n3.两张像片上相同景物(同名像点)的连线与眼基线应大致平行\n\n4.两张像片的比例尺(差别<15%),否则需要zoom系统等进行调节\n\n## 立体观察与量测\n\n### 立体观察方法\n\n+ 立体镜观察\n\n  桥式立体镜\n\n  反光立体镜\n\n+  双目镜观察光路的立体观察\n\n+  叠映影像立体观察\n\n   红绿色互补法\n\n   同步闪闭法(液晶眼镜)\n\n   偏振光法\n\n### 立体量测\n\n+ 像对立体量测目的：找出同名像点，获取同名像点的坐标\n+ 左右视差 x之差\n+ 上下视差 y之差\n\n## 立体像对中特殊的点线面\n\n### 同名像点\n\n+ 同名光线在左右像片上的构像\n\n### 同名光线\n\n+ 同一地面点发出的两条光线\n\n### 同名核线\n\n+ 核面与左右像片面的交线\n\n### 核面\n\n+ 摄影基线与某一地面点组成的平面\n\n  <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703225614.png\"/>\n\n## 获取地面点坐标的三种方式\n\n+ 后方交会+前方交会\n\n+ 相对定向+绝对定向\n\n+ 光束法\n\n  \n\n  \n\n","slug":"人造立体视觉","published":1,"updated":"2021-12-27T08:06:56.322Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3l002jjsvkh2iq8kwi","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"人眼分辨率\"><a href=\"#人眼分辨率\" class=\"headerlink\" title=\"人眼分辨率\"></a>人眼分辨率</h2><h3 id=\"第一分辨率\"><a href=\"#第一分辨率\" class=\"headerlink\" title=\"第一分辨率\"></a>第一分辨率</h3><ul>\n<li>用单眼所能观察出<strong>两点</strong>间的的最小距离</li>\n<li>大小为45<sup>‘’</sup></li>\n</ul>\n<h3 id=\"第二分辨率\"><a href=\"#第二分辨率\" class=\"headerlink\" title=\"第二分辨率\"></a>第二分辨率</h3><ul>\n<li>用单眼所能观察出两条<strong>平行线</strong>间的最小距离</li>\n<li>大小为20<sup>‘’</sup></li>\n<li>双眼观察精度比单眼高<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.225ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.061ex\" height=\"2.398ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -960.5 1353 1060\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msqrt\"><g transform=\"translate(853,0)\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(0,100.5)\"><path data-c=\"221A\" d=\"M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z\"></path></g><rect width=\"500\" height=\"60\" x=\"853\" y=\"840.5\"></rect></g></g></g></svg></mjx-container>倍，第一分辨率为30<sup>‘’</sup>,</li>\n<li>第二分辨率为12<sup>‘’</sup></li>\n</ul>\n<h2 id=\"立体视觉\"><a href=\"#立体视觉\" class=\"headerlink\" title=\"立体视觉\"></a>立体视觉</h2><h3 id=\"立体视觉-1\"><a href=\"#立体视觉-1\" class=\"headerlink\" title=\"立体视觉\"></a>立体视觉</h3><ul>\n<li>人眼双眼观察景物可判断其远近，得到景物的立体效应，这种现象称为人眼的立体视觉</li>\n<li><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703225706.png\"></li>\n</ul>\n<h3 id=\"生理视差\"><a href=\"#生理视差\" class=\"headerlink\" title=\"生理视差\"></a>生理视差</h3><ul>\n<li>生理视差是产生立体感觉的生理基础</li>\n<li>人眼分辨远近的本质是生理视差</li>\n</ul>\n<h2 id=\"人造立体视觉\"><a href=\"#人造立体视觉\" class=\"headerlink\" title=\"人造立体视觉\"></a>人造立体视觉</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><h3 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h3><p>1.立体像对</p>\n<ul>\n<li>两张像片必须是在两个不同位置对同一景物摄取的立体像对(摄影测量时，规定摄影时保持像片的重叠度在60%以上)</li>\n</ul>\n<p>2.分像条件</p>\n<ul>\n<li>每只眼睛必须只能观察像对的一张像片(左眼看左片，右眼看右片)</li>\n</ul>\n<p>3.两张像片上相同景物(同名像点)的连线与眼基线应大致平行</p>\n<p>4.两张像片的比例尺(差别&lt;15%),否则需要zoom系统等进行调节</p>\n<h2 id=\"立体观察与量测\"><a href=\"#立体观察与量测\" class=\"headerlink\" title=\"立体观察与量测\"></a>立体观察与量测</h2><h3 id=\"立体观察方法\"><a href=\"#立体观察方法\" class=\"headerlink\" title=\"立体观察方法\"></a>立体观察方法</h3><ul>\n<li><p>立体镜观察</p>\n<p>桥式立体镜</p>\n<p>反光立体镜</p>\n</li>\n<li><p>双目镜观察光路的立体观察</p>\n</li>\n<li><p>叠映影像立体观察</p>\n<p>红绿色互补法</p>\n<p>同步闪闭法(液晶眼镜)</p>\n<p>偏振光法</p>\n</li>\n</ul>\n<h3 id=\"立体量测\"><a href=\"#立体量测\" class=\"headerlink\" title=\"立体量测\"></a>立体量测</h3><ul>\n<li>像对立体量测目的：找出同名像点，获取同名像点的坐标</li>\n<li>左右视差 x之差</li>\n<li>上下视差 y之差</li>\n</ul>\n<h2 id=\"立体像对中特殊的点线面\"><a href=\"#立体像对中特殊的点线面\" class=\"headerlink\" title=\"立体像对中特殊的点线面\"></a>立体像对中特殊的点线面</h2><h3 id=\"同名像点\"><a href=\"#同名像点\" class=\"headerlink\" title=\"同名像点\"></a>同名像点</h3><ul>\n<li>同名光线在左右像片上的构像</li>\n</ul>\n<h3 id=\"同名光线\"><a href=\"#同名光线\" class=\"headerlink\" title=\"同名光线\"></a>同名光线</h3><ul>\n<li>同一地面点发出的两条光线</li>\n</ul>\n<h3 id=\"同名核线\"><a href=\"#同名核线\" class=\"headerlink\" title=\"同名核线\"></a>同名核线</h3><ul>\n<li>核面与左右像片面的交线</li>\n</ul>\n<h3 id=\"核面\"><a href=\"#核面\" class=\"headerlink\" title=\"核面\"></a>核面</h3><ul>\n<li><p>摄影基线与某一地面点组成的平面</p>\n<p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703225614.png\"></p>\n</li>\n</ul>\n<h2 id=\"获取地面点坐标的三种方式\"><a href=\"#获取地面点坐标的三种方式\" class=\"headerlink\" title=\"获取地面点坐标的三种方式\"></a>获取地面点坐标的三种方式</h2><ul>\n<li><p>后方交会+前方交会</p>\n</li>\n<li><p>相对定向+绝对定向</p>\n</li>\n<li><p>光束法</p>\n</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160624.jpg","length":578,"excerpt":"","more":"<h2 id=\"人眼分辨率\"><a href=\"#人眼分辨率\" class=\"headerlink\" title=\"人眼分辨率\"></a>人眼分辨率</h2><h3 id=\"第一分辨率\"><a href=\"#第一分辨率\" class=\"headerlink\" title=\"第一分辨率\"></a>第一分辨率</h3><ul>\n<li>用单眼所能观察出<strong>两点</strong>间的的最小距离</li>\n<li>大小为45<sup>‘’</sup></li>\n</ul>\n<h3 id=\"第二分辨率\"><a href=\"#第二分辨率\" class=\"headerlink\" title=\"第二分辨率\"></a>第二分辨率</h3><ul>\n<li>用单眼所能观察出两条<strong>平行线</strong>间的最小距离</li>\n<li>大小为20<sup>‘’</sup></li>\n<li>双眼观察精度比单眼高<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.225ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.061ex\" height=\"2.398ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -960.5 1353 1060\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msqrt\"><g transform=\"translate(853,0)\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(0,100.5)\"><path data-c=\"221A\" d=\"M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z\"></path></g><rect width=\"500\" height=\"60\" x=\"853\" y=\"840.5\"></rect></g></g></g></svg></mjx-container>倍，第一分辨率为30<sup>‘’</sup>,</li>\n<li>第二分辨率为12<sup>‘’</sup></li>\n</ul>\n<h2 id=\"立体视觉\"><a href=\"#立体视觉\" class=\"headerlink\" title=\"立体视觉\"></a>立体视觉</h2><h3 id=\"立体视觉-1\"><a href=\"#立体视觉-1\" class=\"headerlink\" title=\"立体视觉\"></a>立体视觉</h3><ul>\n<li>人眼双眼观察景物可判断其远近，得到景物的立体效应，这种现象称为人眼的立体视觉</li>\n<li><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703225706.png\"></li>\n</ul>\n<h3 id=\"生理视差\"><a href=\"#生理视差\" class=\"headerlink\" title=\"生理视差\"></a>生理视差</h3><ul>\n<li>生理视差是产生立体感觉的生理基础</li>\n<li>人眼分辨远近的本质是生理视差</li>\n</ul>\n<h2 id=\"人造立体视觉\"><a href=\"#人造立体视觉\" class=\"headerlink\" title=\"人造立体视觉\"></a>人造立体视觉</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><h3 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h3><p>1.立体像对</p>\n<ul>\n<li>两张像片必须是在两个不同位置对同一景物摄取的立体像对(摄影测量时，规定摄影时保持像片的重叠度在60%以上)</li>\n</ul>\n<p>2.分像条件</p>\n<ul>\n<li>每只眼睛必须只能观察像对的一张像片(左眼看左片，右眼看右片)</li>\n</ul>\n<p>3.两张像片上相同景物(同名像点)的连线与眼基线应大致平行</p>\n<p>4.两张像片的比例尺(差别&lt;15%),否则需要zoom系统等进行调节</p>\n<h2 id=\"立体观察与量测\"><a href=\"#立体观察与量测\" class=\"headerlink\" title=\"立体观察与量测\"></a>立体观察与量测</h2><h3 id=\"立体观察方法\"><a href=\"#立体观察方法\" class=\"headerlink\" title=\"立体观察方法\"></a>立体观察方法</h3><ul>\n<li><p>立体镜观察</p>\n<p>桥式立体镜</p>\n<p>反光立体镜</p>\n</li>\n<li><p>双目镜观察光路的立体观察</p>\n</li>\n<li><p>叠映影像立体观察</p>\n<p>红绿色互补法</p>\n<p>同步闪闭法(液晶眼镜)</p>\n<p>偏振光法</p>\n</li>\n</ul>\n<h3 id=\"立体量测\"><a href=\"#立体量测\" class=\"headerlink\" title=\"立体量测\"></a>立体量测</h3><ul>\n<li>像对立体量测目的：找出同名像点，获取同名像点的坐标</li>\n<li>左右视差 x之差</li>\n<li>上下视差 y之差</li>\n</ul>\n<h2 id=\"立体像对中特殊的点线面\"><a href=\"#立体像对中特殊的点线面\" class=\"headerlink\" title=\"立体像对中特殊的点线面\"></a>立体像对中特殊的点线面</h2><h3 id=\"同名像点\"><a href=\"#同名像点\" class=\"headerlink\" title=\"同名像点\"></a>同名像点</h3><ul>\n<li>同名光线在左右像片上的构像</li>\n</ul>\n<h3 id=\"同名光线\"><a href=\"#同名光线\" class=\"headerlink\" title=\"同名光线\"></a>同名光线</h3><ul>\n<li>同一地面点发出的两条光线</li>\n</ul>\n<h3 id=\"同名核线\"><a href=\"#同名核线\" class=\"headerlink\" title=\"同名核线\"></a>同名核线</h3><ul>\n<li>核面与左右像片面的交线</li>\n</ul>\n<h3 id=\"核面\"><a href=\"#核面\" class=\"headerlink\" title=\"核面\"></a>核面</h3><ul>\n<li><p>摄影基线与某一地面点组成的平面</p>\n<p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703225614.png\"></p>\n</li>\n</ul>\n<h2 id=\"获取地面点坐标的三种方式\"><a href=\"#获取地面点坐标的三种方式\" class=\"headerlink\" title=\"获取地面点坐标的三种方式\"></a>获取地面点坐标的三种方式</h2><ul>\n<li><p>后方交会+前方交会</p>\n</li>\n<li><p>相对定向+绝对定向</p>\n</li>\n<li><p>光束法</p>\n</li>\n</ul>\n"},{"title":"傻妞","date":"2021-11-11T06:29:09.000Z","password":"shaniu","description":"傻妞命令大全","_content":"\n## 官方配置文件\n\n```bash\n傻妞机器人名\nset sillyGirl name 傻妞\n傻妞http服务端口\nset sillyGirl port 8080\n傻妞消息撤回等待时间，单位秒\nset sillyGirl duration 5\n傻妞自动升级是否通知\nset sillyGirl update_notify false\n是否开启傻妞自动更新\nset sillyGirl auto_update true\n傻妞内置赞赏码\nset sillyGirl appreciate https://gitee.com/aiancandle/sillyGirl/raw/main/appreciate.jpg\n是否启动http服务\nset sillyGirl enable_http_server false\n设置青龙openapi的client_id参数\nset qinglong client_id ?\n设置青龙openapi的client_secret参数\nset qinglong client_secret ?\n青龙是否开启自动隐藏重复任务功能\nset qinglong autoCronHideDuplicate true\n设置青龙面板地址\nset qinglong host http://127.0.0.1:5700\n设置qq登录账号\nset qq uin 10000\n设置qq登录密码\nset qq password 123456789\n设置qq临时消息默认群号\nset qq tempMessageGroupCode ?\n指定要监听的qq群\nset qq onGroups g1&g2&g3...\n设置是否自动同意好友请求\nset qq auto_friend false\n设置是否对监听自身消息\nset qq onself true\n设置qq管理员\nset qq masters q1&q2&q3...\n设置接受通知的qq账号\nset qq notifier q1&q2&q3...\n设置qq设备信息(自动生成)\nset qq device.json ?\n设置qq登录令牌(自动生成)\nset qq session.token ?\n设置telegram机器人token\nset tg token ?\n设置telegram机器人代理\nset tg http_proxy ?\n设置telegram机器人管理员\nset tg masters t1&t2&t3...\n设置接受通知的telegram账号\nset tg notifier t1&t2&t3...\n设置微信公众平台app_id\nset wxmp app_id ?\n设置微信公众平台app_secret\nset wxmp app_secret ?\n设置微信公众平台token\nset wxmp token ?\n设置微信公众平台encoding_aes_key\nset wxmp encoding_aes_key ?\n设置微信公众平台管理员\nset wxmp masters w1&w2&w3...\n傻妞内置微信插件，依赖于可爱猫和http-sdk\n傻妞远程处理接口 /wx/receive\n设置插件调用地址，确保傻妞可以访问可爱猫端口\nset wx api_url ?\n设置图片转发模式，否则可能会出现此图片来自xx未经允许不得使用的提示\nset wx relay_mode true\n设置指定转发地址，格式为 https://域名/relay?url=%s，不知道不用填\nset wx relaier ?\n设置傻妞是否动态网络地址，适用于傻妞家庭宽带而可爱猫在云服务器的情况下\nset wx sillyGirl_dynamic_ip true\n设置可爱猫是否动态网络地址，适用于可爱猫家庭宽带而傻妞在云服务器的情况下\nset wx keaimao_dynamic_ip true\n设置可爱猫端口\nset wx keaimao_port ?\n```\n\n\n\n## 对接QQ 微信 tg\n\n```bash\n# 设置qq管理员\nset qq masters ?\n# 设置接受通知的qq账号，默认管理员接受\nset qq notifier ?\n# 设置qq群号，不指定则监听所有群\nset qq groupCode 群号，?：set qq groupCode 654321\n# QQ机器人自动通过好友申请请求命令，默认不处理。通过后会将事件推送给管理员。\nset qq auto_friend true\n# 指定系统通知发送对象命令，如不设置默认发送给所有管理员。\nset [im type] notifiers [accounts join by '&'] \n# 设置telegram机器人管理员\nset tg masters ?\n# 设置接受通知的telegram账号，默认管理员接受\nset tg notifier ?\n# 设置Telegram bot 代理命令\nset tg url xxxxx\n# 设置微信公众平台管理员\nset wxmp masters ?\n# 设置微信管理员\nset wx masters ?\n# 查询群号\ngroupCode\n# 升级傻妞\n升级/更新\n# 关闭傻妞自动回复\nset qq onself false\n# 重启傻妞，自动静默运行\n重启\n# 注销qqbot命令\ndelete qq session.token #重新运行扫码重新即可。\n# 重启并静默运行\n# 获取傻妞的命令列表\n命令\n# 解决开机自启和崩溃重启\n守护傻妞\n# 关闭守护模式\nsystemctl disable sillyGirl #守护模式会导致没法自动升级\n# 打赏：会返回打赏码，方便大家咨询问题\nset sillyGirl appreciate [自己的打赏码地址] #当然，你也可以换成自己的打赏码，但不是很建议\n# 禁用自动更新指令\nset sillyGirl auto_update false\n# 傻妞忽略通知命令，默认忽略。\nset sillyGirl ignore_notify true\n# 傻妞开启http服务，默认关闭\nset sillyGirl enable_http_server true #使用微信公众号、短网址服务的朋友需要开启。\n# 返利间谍模式\nset qq spy_on ?\n# 管理员推送绑定pushplus指令\nset sillyGirl pushplus [token]\n# 关键词撤回功能\nset sillyGirl recall 关键词1&关键词2... #关键词支持正则表达式。\n# 关键词回复功能\nset reply ? ? #第一个问号是支持正则的关键词，第二个问号是回复的内容。\n# 屏蔽京东口令小妙招\nset sillyGirl recall [\\s\\S]*[^0-9a-zA-Z=][0-9a-zA-Z]{14}[^0-9a-zA-Z;][\\s\\S]*\n# 遇见傻妞被被杀死，请执行命令\nsystemctl stop sillyGirl && systemctl disable sillyGirl\n```\n\n## 对接青龙\n\n```bash\n# 对接青龙\nset qinglong host http://xxxxxx:xx ##一定要加\"http://\"，我第一次没加，就翻车了。\nset qinglong client_id xxxxxx ##第一步创建青龙应用获取的，直接复制粘贴\nset qinglong client_secret xxxxx ##第一步创建青龙应用获取的，直接复制粘贴\n# 使用命令\n^ql\\s+config$\n^ql\\s+envs$\n^ql\\s+env\\s+get\\s+(.+)$\n^ql\\s+env\\s+find\\s+(.+)$\n^ql\\s+env\\s+set\\s+(\\S+)\\s+(.+)$\n^ql\\s+env\\s+remark\\s+(\\S+)\\s+(.+)$\n^ql\\s+env\\s+disable\\s+(.+)$\n^ql\\s+env\\s+enable\\s+(.+)$\n^ql\\s+crons$\n^ql\\s+cron\\s+status\\s+(.+)$\n^ql\\s+cron\\s+run\\s+(.+)$\n^ql\\s+cron\\s+stop\\s+(.+)$\n^ql\\s+cron\\s+enable\\s+(.+)$\n^ql\\s+cron\\s+disable\\s+(.+)$\n^ql\\s+cron\\s+find\\s+(.+)$\n^ql\\s+cron\\s+logs\\s+(.+)$\n^ql\\s+cron\\s+hide\\s+duplicate$\n# cookie状态查询命令\nql cookie status \n# 下载单个脚本\nql raw ?\n# 运行脚本\nql task ?\n# 拉库指令\nql repo ? 例：ql repo https://github.com/cdle/carry.git\n#关闭自动隐藏任务命令：\nset qinglong autoCronHideDuplicate false\n```\n\n## 对接芝士\n\n```bash\n^jd\\s+asset\\s+(.+)$ ^查询 (\\S+)$\n# 资产推送$\n资产推送 #会根据绑定的qq一对一推送\n# 资产推送定时\n九点例子： set jd_cookie asset_push 0 9 * * * ，包括失效提醒。\n# 查询资产 \n查询or查询 [序号] #命令\"查询\"绑定账号资产命令；命令\"查询 1\"，查询指定账号资产，注意空格，顺序为青龙的ck排序，支持匹配绑定的社交账号\n# 获取绑定的社交账号\njd imOf [ck或pt_pin] 。\n# 查询今日豆子变化\n^jd\\s+today\\s+bean[(](\\S+)[)]$\n# 查询昨日豆子变化\n^jd\\s+yestoday\\s+bean[(](\\S+)[)]$\n# 查询豆子变化\n^jd\\s+bean[(](\\S+)[)]$\n# wskey转换\n更新狗东账号 #转换 wskey 到 cookie\n^jd\\s+eueu\\s+(.+)$\n^jd\\s+find\\s+(.+)$\n^jd\\s+exchange\\s+(\\S+)\\s+(.+)$\n^jd\\s+enable\\s+(.+)$\n^jd\\s+disable\\s+(.+)$\n^jd\\s+remark\\s+(\\S+)\\s+(.+)$\n# JD账号绑定qq号码\nset pinQQ pt_pin qq号码，?：set pinQQ jd_xxxxxx 123456\n# 取消JD账号绑定qq号码\ndelete pinQQ pt_pin，?：delete pinQQ jd_xxxxxx\n# 解绑im账号 对应的所有京东账号：\njd unbind im，?：jd unbind 10000\n# JD账号绑定TG账号（可由）\nset pinTG pt_pin TGID（找getmyid获取）\n# 取消JD账号绑定TG账号\ndelete pinTG pt_pin\n# 设置wskey自动转cooke定时：\nset jdWSCK update 56 * * * *\n# 解绑京东账号\njd unbind 可以解绑名下所有京东账号\n#给绑定该京东账号的社交账号发送消息\njd send pt_pin msg ,pt_pin填all则发给所有。\n# ck提交\npt_key=([^;=\\s]+);\\s*pt_pin=([^;=\\s]+) 例：直接发抓到的ck，格式参考命令\n# wskey提交\npin=([^;=\\s]+);\\s*wskey=([^;=\\s]+) 例：直接发抓到的ck，格式参考命令\n# 限制查询频率\nset jd_cookie query_wait_time [限制秒数] 例:set jd_cookie query_wait_time 60\n# 设置阿东登录地址\nset jd_cookie adong_addr 阿东ip:端口\n# 设置阿东qq机器人账号\nset jd_cookie selfQid 机器人qq账号\n# 登录狗东账号\n登录或登陆 \n# 退出狗东登录\nq或退出登陆\n# 删除阿东地址 \ndelete jd_cookie adong_addr 例：delete jd_cookie adong_addr 127.0.0.1:5701\n# 给绑定该京东账号的社交账号发送消息\njd send pt_pin msg #pt_pin填all则发给所有。\n# 解锁内测功能\n申请内测 #打赏作者进内测群，请打出“申请内测”。需要set tg masters [myuid]。没有用tg的，请在/etc/sillyGirl/sets.conf加上一行命令。\n```\n\n## 对接阿东\n\n```bash\n    # 设置阿东登陆地址\n    set jd_cookie adong_addr 阿东ip:端口 例：set jd_cookie adong_addr 192.168.1.1:5702\n    #不需要http://前缀！！！ 不需要http://前缀！！！ 不需要http://前缀！！！ 重要事情说三遍！！！\n    # 设置登录坑位\n    set jd_cookie login_num ?\n    # 设置阿东qq机器人\n    set jd_cookie selfQid 机器人qq账号 例：set jd_cookie selfQid 5875632147\n    #这里的机器人qq账号，请务必和阿东go-cqhttp配置中config.yml里qq一样。\n    # 解绑阿东域名\n    delete jd_cookie adong_addr\n    #使用命令：\n    1、“登录”或“登陆”：登录某东\n    2、“q“：退出登录\n```\n\n## 对接小爱同学\n\n```bash\n# 小爱同学，可以指定API，对小爱说对话模式即可开启连续对话模式，闭嘴可关闭。\nset sillyGirl 小爱同学 http://81.70.100.130/api/xiaoai.php?msg=%s&n=text #挂了就自己换\nset sillyGirl 小爱同学 http://jiuli.xiaoapi.cn/i/xiaoai_tts.php?msg=%s #挂了就自己换\n# 处理json格式数据的小爱api，不填获取整个文本\nset sillyGirl 小爱同学gjson text\n# 删除处理json格式数据的小爱api\nsilly delete 小爱同学gjson\n# 使用方法：\n1、唤起小爱：发送“小爱+想说的话”，例如：小爱今天天气。\n2、对话模式：发送“小爱对话模式”开启，发送“闭嘴”结束。\n3、成语接龙：发送“成语接龙”开始。这个可应该不是小爱同学的功能，但我懒得单独写它了。\n```\n\n## 傻妞脚本\n\n```javascript\n// [rule: ^demo(.*)$] 使用正则匹配,括号中为期望匹配的值\n// [rule: demo ?] 使用问号匹配\n// [rule: demo] 直接匹配\n// [cron: 36 11,17 * * *] 定时任务\n// [admin: true] 是否只允许管理员使用\n// [disable: false] 是否禁用\n// [priority: 10] 匹配优先级\n// [server: 1 ] 如果不指定rule和cron时,设置为非空则指定为一个空服务,否则这个js不会加载\n//上下文获取\nparam(n)//获取rule中期望捕获的第n个字符串,中文需要使用 encodeURI(param(n))\nImType()//聊天来源类型如:qq,wx等,其中fake为特殊调用可能为cron调用\nGetUserID()//发送人用户id\nGetUsername()//发送人昵称\nGetChatID()//群号\nGetChatname()//群名\nGetContent()//获取接受到的消息\nisAdmin()//发送人是否管理员\n//系统功能相关\ncancall(name)//返回特殊调用的函数\ncall(name,value)//特殊调用\nDebug(log)//打印日志\nsleep(millisecond)//休眠\nGroupBan(uid, time)//群禁言,需要在群聊才可用\nGroupKick(uid, reject)//群踢人,reject为是否拉黑名单,需要在群聊才可用\nrequest({\n        url:\"\",//必须\n        method:\"\",//get,post,put,delete,可选,默认get\n        headers:{},//可选\n        body:\"\",//可选\n        dataType:\"\",//location=>重定向url,json=>尝试解析为对象,否则为body字符串,可选\n        useproxy:false,//可选\n})//发送请求\n//存储相关 sillyGirl存储结构为 {mainKey1:{key1:value,key2:value},mainKey2:{key1:value,key2:value}}}\nbucketGet(mainKey,key)//取值\nbucketSet(mainKey,key,value)//存值\n    bucketKeys(mainKey)//获取所有key名称\n    get(key)//同bucketGet(\"otto\",key)\n    set(key,value)//同bucketSet(\"otto\",key,value)\n    //消息相关\n    input(time /*[,str]*/)//等待下一个消息,str不为空时可接受其他群的消息 str可选\n    breakIn(str)//生成一个新的消息向下传递,可以被所有命令处理(包括当前js,所以需要防止递归)\n    Continue()//消息继续向下传递，可以被其他命令处理\n    Delete()//撤回接受到的这条消息\n    image(string)//图片地址转可拼接消息字符串\n    push({\n        imType:string,//发送到指定渠道,如qq,wx,必须有\n        userID:\"\",//groupCode不为0时为@指定用户,可选\n        groupCode:\"\",//可选\n        content:string,//发送消息\n        })//给指定im发送消息\nnotifyMasters(string)//通知管理员\nsendText(string)//发送文本\nsendImage(url)//发送图片\nsendVideo(url)//发送视频\n```\n\n\n\n","source":"_posts/傻妞.md","raw":"---\ntitle: 傻妞\ndate: 2021-11-11 14:29:09\ntags: 傻妞\ncategories: 傻妞\npassword: shaniu\ndescription: 傻妞命令大全\n---\n\n## 官方配置文件\n\n```bash\n傻妞机器人名\nset sillyGirl name 傻妞\n傻妞http服务端口\nset sillyGirl port 8080\n傻妞消息撤回等待时间，单位秒\nset sillyGirl duration 5\n傻妞自动升级是否通知\nset sillyGirl update_notify false\n是否开启傻妞自动更新\nset sillyGirl auto_update true\n傻妞内置赞赏码\nset sillyGirl appreciate https://gitee.com/aiancandle/sillyGirl/raw/main/appreciate.jpg\n是否启动http服务\nset sillyGirl enable_http_server false\n设置青龙openapi的client_id参数\nset qinglong client_id ?\n设置青龙openapi的client_secret参数\nset qinglong client_secret ?\n青龙是否开启自动隐藏重复任务功能\nset qinglong autoCronHideDuplicate true\n设置青龙面板地址\nset qinglong host http://127.0.0.1:5700\n设置qq登录账号\nset qq uin 10000\n设置qq登录密码\nset qq password 123456789\n设置qq临时消息默认群号\nset qq tempMessageGroupCode ?\n指定要监听的qq群\nset qq onGroups g1&g2&g3...\n设置是否自动同意好友请求\nset qq auto_friend false\n设置是否对监听自身消息\nset qq onself true\n设置qq管理员\nset qq masters q1&q2&q3...\n设置接受通知的qq账号\nset qq notifier q1&q2&q3...\n设置qq设备信息(自动生成)\nset qq device.json ?\n设置qq登录令牌(自动生成)\nset qq session.token ?\n设置telegram机器人token\nset tg token ?\n设置telegram机器人代理\nset tg http_proxy ?\n设置telegram机器人管理员\nset tg masters t1&t2&t3...\n设置接受通知的telegram账号\nset tg notifier t1&t2&t3...\n设置微信公众平台app_id\nset wxmp app_id ?\n设置微信公众平台app_secret\nset wxmp app_secret ?\n设置微信公众平台token\nset wxmp token ?\n设置微信公众平台encoding_aes_key\nset wxmp encoding_aes_key ?\n设置微信公众平台管理员\nset wxmp masters w1&w2&w3...\n傻妞内置微信插件，依赖于可爱猫和http-sdk\n傻妞远程处理接口 /wx/receive\n设置插件调用地址，确保傻妞可以访问可爱猫端口\nset wx api_url ?\n设置图片转发模式，否则可能会出现此图片来自xx未经允许不得使用的提示\nset wx relay_mode true\n设置指定转发地址，格式为 https://域名/relay?url=%s，不知道不用填\nset wx relaier ?\n设置傻妞是否动态网络地址，适用于傻妞家庭宽带而可爱猫在云服务器的情况下\nset wx sillyGirl_dynamic_ip true\n设置可爱猫是否动态网络地址，适用于可爱猫家庭宽带而傻妞在云服务器的情况下\nset wx keaimao_dynamic_ip true\n设置可爱猫端口\nset wx keaimao_port ?\n```\n\n\n\n## 对接QQ 微信 tg\n\n```bash\n# 设置qq管理员\nset qq masters ?\n# 设置接受通知的qq账号，默认管理员接受\nset qq notifier ?\n# 设置qq群号，不指定则监听所有群\nset qq groupCode 群号，?：set qq groupCode 654321\n# QQ机器人自动通过好友申请请求命令，默认不处理。通过后会将事件推送给管理员。\nset qq auto_friend true\n# 指定系统通知发送对象命令，如不设置默认发送给所有管理员。\nset [im type] notifiers [accounts join by '&'] \n# 设置telegram机器人管理员\nset tg masters ?\n# 设置接受通知的telegram账号，默认管理员接受\nset tg notifier ?\n# 设置Telegram bot 代理命令\nset tg url xxxxx\n# 设置微信公众平台管理员\nset wxmp masters ?\n# 设置微信管理员\nset wx masters ?\n# 查询群号\ngroupCode\n# 升级傻妞\n升级/更新\n# 关闭傻妞自动回复\nset qq onself false\n# 重启傻妞，自动静默运行\n重启\n# 注销qqbot命令\ndelete qq session.token #重新运行扫码重新即可。\n# 重启并静默运行\n# 获取傻妞的命令列表\n命令\n# 解决开机自启和崩溃重启\n守护傻妞\n# 关闭守护模式\nsystemctl disable sillyGirl #守护模式会导致没法自动升级\n# 打赏：会返回打赏码，方便大家咨询问题\nset sillyGirl appreciate [自己的打赏码地址] #当然，你也可以换成自己的打赏码，但不是很建议\n# 禁用自动更新指令\nset sillyGirl auto_update false\n# 傻妞忽略通知命令，默认忽略。\nset sillyGirl ignore_notify true\n# 傻妞开启http服务，默认关闭\nset sillyGirl enable_http_server true #使用微信公众号、短网址服务的朋友需要开启。\n# 返利间谍模式\nset qq spy_on ?\n# 管理员推送绑定pushplus指令\nset sillyGirl pushplus [token]\n# 关键词撤回功能\nset sillyGirl recall 关键词1&关键词2... #关键词支持正则表达式。\n# 关键词回复功能\nset reply ? ? #第一个问号是支持正则的关键词，第二个问号是回复的内容。\n# 屏蔽京东口令小妙招\nset sillyGirl recall [\\s\\S]*[^0-9a-zA-Z=][0-9a-zA-Z]{14}[^0-9a-zA-Z;][\\s\\S]*\n# 遇见傻妞被被杀死，请执行命令\nsystemctl stop sillyGirl && systemctl disable sillyGirl\n```\n\n## 对接青龙\n\n```bash\n# 对接青龙\nset qinglong host http://xxxxxx:xx ##一定要加\"http://\"，我第一次没加，就翻车了。\nset qinglong client_id xxxxxx ##第一步创建青龙应用获取的，直接复制粘贴\nset qinglong client_secret xxxxx ##第一步创建青龙应用获取的，直接复制粘贴\n# 使用命令\n^ql\\s+config$\n^ql\\s+envs$\n^ql\\s+env\\s+get\\s+(.+)$\n^ql\\s+env\\s+find\\s+(.+)$\n^ql\\s+env\\s+set\\s+(\\S+)\\s+(.+)$\n^ql\\s+env\\s+remark\\s+(\\S+)\\s+(.+)$\n^ql\\s+env\\s+disable\\s+(.+)$\n^ql\\s+env\\s+enable\\s+(.+)$\n^ql\\s+crons$\n^ql\\s+cron\\s+status\\s+(.+)$\n^ql\\s+cron\\s+run\\s+(.+)$\n^ql\\s+cron\\s+stop\\s+(.+)$\n^ql\\s+cron\\s+enable\\s+(.+)$\n^ql\\s+cron\\s+disable\\s+(.+)$\n^ql\\s+cron\\s+find\\s+(.+)$\n^ql\\s+cron\\s+logs\\s+(.+)$\n^ql\\s+cron\\s+hide\\s+duplicate$\n# cookie状态查询命令\nql cookie status \n# 下载单个脚本\nql raw ?\n# 运行脚本\nql task ?\n# 拉库指令\nql repo ? 例：ql repo https://github.com/cdle/carry.git\n#关闭自动隐藏任务命令：\nset qinglong autoCronHideDuplicate false\n```\n\n## 对接芝士\n\n```bash\n^jd\\s+asset\\s+(.+)$ ^查询 (\\S+)$\n# 资产推送$\n资产推送 #会根据绑定的qq一对一推送\n# 资产推送定时\n九点例子： set jd_cookie asset_push 0 9 * * * ，包括失效提醒。\n# 查询资产 \n查询or查询 [序号] #命令\"查询\"绑定账号资产命令；命令\"查询 1\"，查询指定账号资产，注意空格，顺序为青龙的ck排序，支持匹配绑定的社交账号\n# 获取绑定的社交账号\njd imOf [ck或pt_pin] 。\n# 查询今日豆子变化\n^jd\\s+today\\s+bean[(](\\S+)[)]$\n# 查询昨日豆子变化\n^jd\\s+yestoday\\s+bean[(](\\S+)[)]$\n# 查询豆子变化\n^jd\\s+bean[(](\\S+)[)]$\n# wskey转换\n更新狗东账号 #转换 wskey 到 cookie\n^jd\\s+eueu\\s+(.+)$\n^jd\\s+find\\s+(.+)$\n^jd\\s+exchange\\s+(\\S+)\\s+(.+)$\n^jd\\s+enable\\s+(.+)$\n^jd\\s+disable\\s+(.+)$\n^jd\\s+remark\\s+(\\S+)\\s+(.+)$\n# JD账号绑定qq号码\nset pinQQ pt_pin qq号码，?：set pinQQ jd_xxxxxx 123456\n# 取消JD账号绑定qq号码\ndelete pinQQ pt_pin，?：delete pinQQ jd_xxxxxx\n# 解绑im账号 对应的所有京东账号：\njd unbind im，?：jd unbind 10000\n# JD账号绑定TG账号（可由）\nset pinTG pt_pin TGID（找getmyid获取）\n# 取消JD账号绑定TG账号\ndelete pinTG pt_pin\n# 设置wskey自动转cooke定时：\nset jdWSCK update 56 * * * *\n# 解绑京东账号\njd unbind 可以解绑名下所有京东账号\n#给绑定该京东账号的社交账号发送消息\njd send pt_pin msg ,pt_pin填all则发给所有。\n# ck提交\npt_key=([^;=\\s]+);\\s*pt_pin=([^;=\\s]+) 例：直接发抓到的ck，格式参考命令\n# wskey提交\npin=([^;=\\s]+);\\s*wskey=([^;=\\s]+) 例：直接发抓到的ck，格式参考命令\n# 限制查询频率\nset jd_cookie query_wait_time [限制秒数] 例:set jd_cookie query_wait_time 60\n# 设置阿东登录地址\nset jd_cookie adong_addr 阿东ip:端口\n# 设置阿东qq机器人账号\nset jd_cookie selfQid 机器人qq账号\n# 登录狗东账号\n登录或登陆 \n# 退出狗东登录\nq或退出登陆\n# 删除阿东地址 \ndelete jd_cookie adong_addr 例：delete jd_cookie adong_addr 127.0.0.1:5701\n# 给绑定该京东账号的社交账号发送消息\njd send pt_pin msg #pt_pin填all则发给所有。\n# 解锁内测功能\n申请内测 #打赏作者进内测群，请打出“申请内测”。需要set tg masters [myuid]。没有用tg的，请在/etc/sillyGirl/sets.conf加上一行命令。\n```\n\n## 对接阿东\n\n```bash\n    # 设置阿东登陆地址\n    set jd_cookie adong_addr 阿东ip:端口 例：set jd_cookie adong_addr 192.168.1.1:5702\n    #不需要http://前缀！！！ 不需要http://前缀！！！ 不需要http://前缀！！！ 重要事情说三遍！！！\n    # 设置登录坑位\n    set jd_cookie login_num ?\n    # 设置阿东qq机器人\n    set jd_cookie selfQid 机器人qq账号 例：set jd_cookie selfQid 5875632147\n    #这里的机器人qq账号，请务必和阿东go-cqhttp配置中config.yml里qq一样。\n    # 解绑阿东域名\n    delete jd_cookie adong_addr\n    #使用命令：\n    1、“登录”或“登陆”：登录某东\n    2、“q“：退出登录\n```\n\n## 对接小爱同学\n\n```bash\n# 小爱同学，可以指定API，对小爱说对话模式即可开启连续对话模式，闭嘴可关闭。\nset sillyGirl 小爱同学 http://81.70.100.130/api/xiaoai.php?msg=%s&n=text #挂了就自己换\nset sillyGirl 小爱同学 http://jiuli.xiaoapi.cn/i/xiaoai_tts.php?msg=%s #挂了就自己换\n# 处理json格式数据的小爱api，不填获取整个文本\nset sillyGirl 小爱同学gjson text\n# 删除处理json格式数据的小爱api\nsilly delete 小爱同学gjson\n# 使用方法：\n1、唤起小爱：发送“小爱+想说的话”，例如：小爱今天天气。\n2、对话模式：发送“小爱对话模式”开启，发送“闭嘴”结束。\n3、成语接龙：发送“成语接龙”开始。这个可应该不是小爱同学的功能，但我懒得单独写它了。\n```\n\n## 傻妞脚本\n\n```javascript\n// [rule: ^demo(.*)$] 使用正则匹配,括号中为期望匹配的值\n// [rule: demo ?] 使用问号匹配\n// [rule: demo] 直接匹配\n// [cron: 36 11,17 * * *] 定时任务\n// [admin: true] 是否只允许管理员使用\n// [disable: false] 是否禁用\n// [priority: 10] 匹配优先级\n// [server: 1 ] 如果不指定rule和cron时,设置为非空则指定为一个空服务,否则这个js不会加载\n//上下文获取\nparam(n)//获取rule中期望捕获的第n个字符串,中文需要使用 encodeURI(param(n))\nImType()//聊天来源类型如:qq,wx等,其中fake为特殊调用可能为cron调用\nGetUserID()//发送人用户id\nGetUsername()//发送人昵称\nGetChatID()//群号\nGetChatname()//群名\nGetContent()//获取接受到的消息\nisAdmin()//发送人是否管理员\n//系统功能相关\ncancall(name)//返回特殊调用的函数\ncall(name,value)//特殊调用\nDebug(log)//打印日志\nsleep(millisecond)//休眠\nGroupBan(uid, time)//群禁言,需要在群聊才可用\nGroupKick(uid, reject)//群踢人,reject为是否拉黑名单,需要在群聊才可用\nrequest({\n        url:\"\",//必须\n        method:\"\",//get,post,put,delete,可选,默认get\n        headers:{},//可选\n        body:\"\",//可选\n        dataType:\"\",//location=>重定向url,json=>尝试解析为对象,否则为body字符串,可选\n        useproxy:false,//可选\n})//发送请求\n//存储相关 sillyGirl存储结构为 {mainKey1:{key1:value,key2:value},mainKey2:{key1:value,key2:value}}}\nbucketGet(mainKey,key)//取值\nbucketSet(mainKey,key,value)//存值\n    bucketKeys(mainKey)//获取所有key名称\n    get(key)//同bucketGet(\"otto\",key)\n    set(key,value)//同bucketSet(\"otto\",key,value)\n    //消息相关\n    input(time /*[,str]*/)//等待下一个消息,str不为空时可接受其他群的消息 str可选\n    breakIn(str)//生成一个新的消息向下传递,可以被所有命令处理(包括当前js,所以需要防止递归)\n    Continue()//消息继续向下传递，可以被其他命令处理\n    Delete()//撤回接受到的这条消息\n    image(string)//图片地址转可拼接消息字符串\n    push({\n        imType:string,//发送到指定渠道,如qq,wx,必须有\n        userID:\"\",//groupCode不为0时为@指定用户,可选\n        groupCode:\"\",//可选\n        content:string,//发送消息\n        })//给指定im发送消息\nnotifyMasters(string)//通知管理员\nsendText(string)//发送文本\nsendImage(url)//发送图片\nsendVideo(url)//发送视频\n```\n\n\n\n","slug":"傻妞","published":1,"updated":"2021-12-29T01:47:34.264Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3m002njsvkabi1h4vm","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"官方配置文件\"><a href=\"#官方配置文件\" class=\"headerlink\" title=\"官方配置文件\"></a>官方配置文件</h2><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">傻妞机器人名\n<span class=\"token builtin class-name\">set</span> sillyGirl name 傻妞\n傻妞http服务端口\n<span class=\"token builtin class-name\">set</span> sillyGirl port <span class=\"token number\">8080</span>\n傻妞消息撤回等待时间，单位秒\n<span class=\"token builtin class-name\">set</span> sillyGirl duration <span class=\"token number\">5</span>\n傻妞自动升级是否通知\n<span class=\"token builtin class-name\">set</span> sillyGirl update_notify <span class=\"token boolean\">false</span>\n是否开启傻妞自动更新\n<span class=\"token builtin class-name\">set</span> sillyGirl auto_update <span class=\"token boolean\">true</span>\n傻妞内置赞赏码\n<span class=\"token builtin class-name\">set</span> sillyGirl appreciate https://gitee.com/aiancandle/sillyGirl/raw/main/appreciate.jpg\n是否启动http服务\n<span class=\"token builtin class-name\">set</span> sillyGirl enable_http_server <span class=\"token boolean\">false</span>\n设置青龙openapi的client_id参数\n<span class=\"token builtin class-name\">set</span> qinglong client_id ?\n设置青龙openapi的client_secret参数\n<span class=\"token builtin class-name\">set</span> qinglong client_secret ?\n青龙是否开启自动隐藏重复任务功能\n<span class=\"token builtin class-name\">set</span> qinglong autoCronHideDuplicate <span class=\"token boolean\">true</span>\n设置青龙面板地址\n<span class=\"token builtin class-name\">set</span> qinglong <span class=\"token function\">host</span> http://127.0.0.1:5700\n设置qq登录账号\n<span class=\"token builtin class-name\">set</span> qq uin <span class=\"token number\">10000</span>\n设置qq登录密码\n<span class=\"token builtin class-name\">set</span> qq password <span class=\"token number\">123456789</span>\n设置qq临时消息默认群号\n<span class=\"token builtin class-name\">set</span> qq tempMessageGroupCode ?\n指定要监听的qq群\n<span class=\"token builtin class-name\">set</span> qq onGroups g1<span class=\"token operator\">&amp;</span>g2<span class=\"token operator\">&amp;</span>g3<span class=\"token punctuation\">..</span>.\n设置是否自动同意好友请求\n<span class=\"token builtin class-name\">set</span> qq auto_friend <span class=\"token boolean\">false</span>\n设置是否对监听自身消息\n<span class=\"token builtin class-name\">set</span> qq onself <span class=\"token boolean\">true</span>\n设置qq管理员\n<span class=\"token builtin class-name\">set</span> qq masters q1<span class=\"token operator\">&amp;</span>q2<span class=\"token operator\">&amp;</span>q3<span class=\"token punctuation\">..</span>.\n设置接受通知的qq账号\n<span class=\"token builtin class-name\">set</span> qq notifier q1<span class=\"token operator\">&amp;</span>q2<span class=\"token operator\">&amp;</span>q3<span class=\"token punctuation\">..</span>.\n设置qq设备信息<span class=\"token punctuation\">(</span>自动生成<span class=\"token punctuation\">)</span>\n<span class=\"token builtin class-name\">set</span> qq device.json ?\n设置qq登录令牌<span class=\"token punctuation\">(</span>自动生成<span class=\"token punctuation\">)</span>\n<span class=\"token builtin class-name\">set</span> qq session.token ?\n设置telegram机器人token\n<span class=\"token builtin class-name\">set</span> tg token ?\n设置telegram机器人代理\n<span class=\"token builtin class-name\">set</span> tg http_proxy ?\n设置telegram机器人管理员\n<span class=\"token builtin class-name\">set</span> tg masters t1<span class=\"token operator\">&amp;</span>t2<span class=\"token operator\">&amp;</span>t3<span class=\"token punctuation\">..</span>.\n设置接受通知的telegram账号\n<span class=\"token builtin class-name\">set</span> tg notifier t1<span class=\"token operator\">&amp;</span>t2<span class=\"token operator\">&amp;</span>t3<span class=\"token punctuation\">..</span>.\n设置微信公众平台app_id\n<span class=\"token builtin class-name\">set</span> wxmp app_id ?\n设置微信公众平台app_secret\n<span class=\"token builtin class-name\">set</span> wxmp app_secret ?\n设置微信公众平台token\n<span class=\"token builtin class-name\">set</span> wxmp token ?\n设置微信公众平台encoding_aes_key\n<span class=\"token builtin class-name\">set</span> wxmp encoding_aes_key ?\n设置微信公众平台管理员\n<span class=\"token builtin class-name\">set</span> wxmp masters w1<span class=\"token operator\">&amp;</span>w2<span class=\"token operator\">&amp;</span>w3<span class=\"token punctuation\">..</span>.\n傻妞内置微信插件，依赖于可爱猫和http-sdk\n傻妞远程处理接口 /wx/receive\n设置插件调用地址，确保傻妞可以访问可爱猫端口\n<span class=\"token builtin class-name\">set</span> wx api_url ?\n设置图片转发模式，否则可能会出现此图片来自xx未经允许不得使用的提示\n<span class=\"token builtin class-name\">set</span> wx relay_mode <span class=\"token boolean\">true</span>\n设置指定转发地址，格式为 https://域名/relay?url<span class=\"token operator\">=</span>%s，不知道不用填\n<span class=\"token builtin class-name\">set</span> wx relaier ?\n设置傻妞是否动态网络地址，适用于傻妞家庭宽带而可爱猫在云服务器的情况下\n<span class=\"token builtin class-name\">set</span> wx sillyGirl_dynamic_ip <span class=\"token boolean\">true</span>\n设置可爱猫是否动态网络地址，适用于可爱猫家庭宽带而傻妞在云服务器的情况下\n<span class=\"token builtin class-name\">set</span> wx keaimao_dynamic_ip <span class=\"token boolean\">true</span>\n设置可爱猫端口\n<span class=\"token builtin class-name\">set</span> wx keaimao_port ?</code></pre>\n<h2 id=\"对接QQ-微信-tg\"><a href=\"#对接QQ-微信-tg\" class=\"headerlink\" title=\"对接QQ 微信 tg\"></a>对接QQ 微信 tg</h2><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 设置qq管理员</span>\n<span class=\"token builtin class-name\">set</span> qq masters ?\n<span class=\"token comment\"># 设置接受通知的qq账号，默认管理员接受</span>\n<span class=\"token builtin class-name\">set</span> qq notifier ?\n<span class=\"token comment\"># 设置qq群号，不指定则监听所有群</span>\n<span class=\"token builtin class-name\">set</span> qq groupCode 群号，?：set qq groupCode <span class=\"token number\">654321</span>\n<span class=\"token comment\"># QQ机器人自动通过好友申请请求命令，默认不处理。通过后会将事件推送给管理员。</span>\n<span class=\"token builtin class-name\">set</span> qq auto_friend <span class=\"token boolean\">true</span>\n<span class=\"token comment\"># 指定系统通知发送对象命令，如不设置默认发送给所有管理员。</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">[</span>im type<span class=\"token punctuation\">]</span> notifiers <span class=\"token punctuation\">[</span>accounts <span class=\"token function\">join</span> by <span class=\"token string\">'&amp;'</span><span class=\"token punctuation\">]</span> \n<span class=\"token comment\"># 设置telegram机器人管理员</span>\n<span class=\"token builtin class-name\">set</span> tg masters ?\n<span class=\"token comment\"># 设置接受通知的telegram账号，默认管理员接受</span>\n<span class=\"token builtin class-name\">set</span> tg notifier ?\n<span class=\"token comment\"># 设置Telegram bot 代理命令</span>\n<span class=\"token builtin class-name\">set</span> tg url xxxxx\n<span class=\"token comment\"># 设置微信公众平台管理员</span>\n<span class=\"token builtin class-name\">set</span> wxmp masters ?\n<span class=\"token comment\"># 设置微信管理员</span>\n<span class=\"token builtin class-name\">set</span> wx masters ?\n<span class=\"token comment\"># 查询群号</span>\ngroupCode\n<span class=\"token comment\"># 升级傻妞</span>\n升级/更新\n<span class=\"token comment\"># 关闭傻妞自动回复</span>\n<span class=\"token builtin class-name\">set</span> qq onself <span class=\"token boolean\">false</span>\n<span class=\"token comment\"># 重启傻妞，自动静默运行</span>\n重启\n<span class=\"token comment\"># 注销qqbot命令</span>\ndelete qq session.token <span class=\"token comment\">#重新运行扫码重新即可。</span>\n<span class=\"token comment\"># 重启并静默运行</span>\n<span class=\"token comment\"># 获取傻妞的命令列表</span>\n命令\n<span class=\"token comment\"># 解决开机自启和崩溃重启</span>\n守护傻妞\n<span class=\"token comment\"># 关闭守护模式</span>\nsystemctl disable sillyGirl <span class=\"token comment\">#守护模式会导致没法自动升级</span>\n<span class=\"token comment\"># 打赏：会返回打赏码，方便大家咨询问题</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl appreciate <span class=\"token punctuation\">[</span>自己的打赏码地址<span class=\"token punctuation\">]</span> <span class=\"token comment\">#当然，你也可以换成自己的打赏码，但不是很建议</span>\n<span class=\"token comment\"># 禁用自动更新指令</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl auto_update <span class=\"token boolean\">false</span>\n<span class=\"token comment\"># 傻妞忽略通知命令，默认忽略。</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl ignore_notify <span class=\"token boolean\">true</span>\n<span class=\"token comment\"># 傻妞开启http服务，默认关闭</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl enable_http_server <span class=\"token boolean\">true</span> <span class=\"token comment\">#使用微信公众号、短网址服务的朋友需要开启。</span>\n<span class=\"token comment\"># 返利间谍模式</span>\n<span class=\"token builtin class-name\">set</span> qq spy_on ?\n<span class=\"token comment\"># 管理员推送绑定pushplus指令</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl pushplus <span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 关键词撤回功能</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl recall 关键词1<span class=\"token operator\">&amp;</span>关键词2<span class=\"token punctuation\">..</span>. <span class=\"token comment\">#关键词支持正则表达式。</span>\n<span class=\"token comment\"># 关键词回复功能</span>\n<span class=\"token builtin class-name\">set</span> reply ? ? <span class=\"token comment\">#第一个问号是支持正则的关键词，第二个问号是回复的内容。</span>\n<span class=\"token comment\"># 屏蔽京东口令小妙招</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl recall <span class=\"token punctuation\">[</span><span class=\"token punctuation\">\\</span>s<span class=\"token punctuation\">\\</span>S<span class=\"token punctuation\">]</span>*<span class=\"token punctuation\">[</span>^0-9a-zA-Z<span class=\"token operator\">=</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9a-zA-Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">14</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>^0-9a-zA-Z<span class=\"token punctuation\">;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">\\</span>s<span class=\"token punctuation\">\\</span>S<span class=\"token punctuation\">]</span>*\n<span class=\"token comment\"># 遇见傻妞被被杀死，请执行命令</span>\nsystemctl stop sillyGirl <span class=\"token operator\">&amp;&amp;</span> systemctl disable sillyGirl</code></pre>\n<h2 id=\"对接青龙\"><a href=\"#对接青龙\" class=\"headerlink\" title=\"对接青龙\"></a>对接青龙</h2><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 对接青龙</span>\n<span class=\"token builtin class-name\">set</span> qinglong <span class=\"token function\">host</span> http://xxxxxx:xx <span class=\"token comment\">##一定要加\"http://\"，我第一次没加，就翻车了。</span>\n<span class=\"token builtin class-name\">set</span> qinglong client_id xxxxxx <span class=\"token comment\">##第一步创建青龙应用获取的，直接复制粘贴</span>\n<span class=\"token builtin class-name\">set</span> qinglong client_secret xxxxx <span class=\"token comment\">##第一步创建青龙应用获取的，直接复制粘贴</span>\n<span class=\"token comment\"># 使用命令</span>\n^ql<span class=\"token punctuation\">\\</span>s+config$\n^ql<span class=\"token punctuation\">\\</span>s+envs$\n^ql<span class=\"token punctuation\">\\</span>s+env<span class=\"token punctuation\">\\</span>s+get<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+env<span class=\"token punctuation\">\\</span>s+find<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+env<span class=\"token punctuation\">\\</span>s+set<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+env<span class=\"token punctuation\">\\</span>s+remark<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+env<span class=\"token punctuation\">\\</span>s+disable<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+env<span class=\"token punctuation\">\\</span>s+enable<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+crons$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+status<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+run<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+stop<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+enable<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+disable<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+find<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+logs<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+hide<span class=\"token punctuation\">\\</span>s+duplicate$\n<span class=\"token comment\"># cookie状态查询命令</span>\nql cookie status \n<span class=\"token comment\"># 下载单个脚本</span>\nql raw ?\n<span class=\"token comment\"># 运行脚本</span>\nql task ?\n<span class=\"token comment\"># 拉库指令</span>\nql repo ? 例：ql repo https://github.com/cdle/carry.git\n<span class=\"token comment\">#关闭自动隐藏任务命令：</span>\n<span class=\"token builtin class-name\">set</span> qinglong autoCronHideDuplicate <span class=\"token boolean\">false</span></code></pre>\n<h2 id=\"对接芝士\"><a href=\"#对接芝士\" class=\"headerlink\" title=\"对接芝士\"></a>对接芝士</h2><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">^jd<span class=\"token punctuation\">\\</span>s+asset<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$ ^查询 <span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span>$\n<span class=\"token comment\"># 资产推送$</span>\n资产推送 <span class=\"token comment\">#会根据绑定的qq一对一推送</span>\n<span class=\"token comment\"># 资产推送定时</span>\n九点例子： <span class=\"token builtin class-name\">set</span> jd_cookie asset_push <span class=\"token number\">0</span> <span class=\"token number\">9</span> * * * ，包括失效提醒。\n<span class=\"token comment\"># 查询资产 </span>\n查询or查询 <span class=\"token punctuation\">[</span>序号<span class=\"token punctuation\">]</span> <span class=\"token comment\">#命令\"查询\"绑定账号资产命令；命令\"查询 1\"，查询指定账号资产，注意空格，顺序为青龙的ck排序，支持匹配绑定的社交账号</span>\n<span class=\"token comment\"># 获取绑定的社交账号</span>\njd imOf <span class=\"token punctuation\">[</span>ck或pt_pin<span class=\"token punctuation\">]</span> 。\n<span class=\"token comment\"># 查询今日豆子变化</span>\n^jd<span class=\"token punctuation\">\\</span>s+today<span class=\"token punctuation\">\\</span>s+bean<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>$\n<span class=\"token comment\"># 查询昨日豆子变化</span>\n^jd<span class=\"token punctuation\">\\</span>s+yestoday<span class=\"token punctuation\">\\</span>s+bean<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>$\n<span class=\"token comment\"># 查询豆子变化</span>\n^jd<span class=\"token punctuation\">\\</span>s+bean<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>$\n<span class=\"token comment\"># wskey转换</span>\n更新狗东账号 <span class=\"token comment\">#转换 wskey 到 cookie</span>\n^jd<span class=\"token punctuation\">\\</span>s+eueu<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^jd<span class=\"token punctuation\">\\</span>s+find<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^jd<span class=\"token punctuation\">\\</span>s+exchange<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^jd<span class=\"token punctuation\">\\</span>s+enable<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^jd<span class=\"token punctuation\">\\</span>s+disable<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^jd<span class=\"token punctuation\">\\</span>s+remark<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n<span class=\"token comment\"># JD账号绑定qq号码</span>\n<span class=\"token builtin class-name\">set</span> pinQQ pt_pin qq号码，?：set pinQQ jd_xxxxxx <span class=\"token number\">123456</span>\n<span class=\"token comment\"># 取消JD账号绑定qq号码</span>\ndelete pinQQ pt_pin，?：delete pinQQ jd_xxxxxx\n<span class=\"token comment\"># 解绑im账号 对应的所有京东账号：</span>\njd unbind im，?：jd unbind <span class=\"token number\">10000</span>\n<span class=\"token comment\"># JD账号绑定TG账号（可由）</span>\n<span class=\"token builtin class-name\">set</span> pinTG pt_pin TGID（找getmyid获取）\n<span class=\"token comment\"># 取消JD账号绑定TG账号</span>\ndelete pinTG pt_pin\n<span class=\"token comment\"># 设置wskey自动转cooke定时：</span>\n<span class=\"token builtin class-name\">set</span> jdWSCK update <span class=\"token number\">56</span> * * * *\n<span class=\"token comment\"># 解绑京东账号</span>\njd unbind 可以解绑名下所有京东账号\n<span class=\"token comment\">#给绑定该京东账号的社交账号发送消息</span>\njd send pt_pin msg ,pt_pin填all则发给所有。\n<span class=\"token comment\"># ck提交</span>\n<span class=\"token assign-left variable\">pt_key</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>^<span class=\"token punctuation\">;</span><span class=\"token operator\">=</span><span class=\"token punctuation\">\\</span>s<span class=\"token punctuation\">]</span>+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">\\</span>s*pt_pin<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>^<span class=\"token punctuation\">;</span><span class=\"token operator\">=</span><span class=\"token punctuation\">\\</span>s<span class=\"token punctuation\">]</span>+<span class=\"token punctuation\">)</span> 例：直接发抓到的ck，格式参考命令\n<span class=\"token comment\"># wskey提交</span>\n<span class=\"token assign-left variable\">pin</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>^<span class=\"token punctuation\">;</span><span class=\"token operator\">=</span><span class=\"token punctuation\">\\</span>s<span class=\"token punctuation\">]</span>+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">\\</span>s*wskey<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>^<span class=\"token punctuation\">;</span><span class=\"token operator\">=</span><span class=\"token punctuation\">\\</span>s<span class=\"token punctuation\">]</span>+<span class=\"token punctuation\">)</span> 例：直接发抓到的ck，格式参考命令\n<span class=\"token comment\"># 限制查询频率</span>\n<span class=\"token builtin class-name\">set</span> jd_cookie query_wait_time <span class=\"token punctuation\">[</span>限制秒数<span class=\"token punctuation\">]</span> 例:set jd_cookie query_wait_time <span class=\"token number\">60</span>\n<span class=\"token comment\"># 设置阿东登录地址</span>\n<span class=\"token builtin class-name\">set</span> jd_cookie adong_addr 阿东ip:端口\n<span class=\"token comment\"># 设置阿东qq机器人账号</span>\n<span class=\"token builtin class-name\">set</span> jd_cookie selfQid 机器人qq账号\n<span class=\"token comment\"># 登录狗东账号</span>\n登录或登陆 \n<span class=\"token comment\"># 退出狗东登录</span>\nq或退出登陆\n<span class=\"token comment\"># 删除阿东地址 </span>\ndelete jd_cookie adong_addr 例：delete jd_cookie adong_addr <span class=\"token number\">127.0</span>.0.1:5701\n<span class=\"token comment\"># 给绑定该京东账号的社交账号发送消息</span>\njd send pt_pin msg <span class=\"token comment\">#pt_pin填all则发给所有。</span>\n<span class=\"token comment\"># 解锁内测功能</span>\n申请内测 <span class=\"token comment\">#打赏作者进内测群，请打出“申请内测”。需要set tg masters [myuid]。没有用tg的，请在/etc/sillyGirl/sets.conf加上一行命令。</span></code></pre>\n<h2 id=\"对接阿东\"><a href=\"#对接阿东\" class=\"headerlink\" title=\"对接阿东\"></a>对接阿东</h2><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 设置阿东登陆地址</span>\n<span class=\"token builtin class-name\">set</span> jd_cookie adong_addr 阿东ip:端口 例：set jd_cookie adong_addr <span class=\"token number\">192.168</span>.1.1:5702\n<span class=\"token comment\">#不需要http://前缀！！！ 不需要http://前缀！！！ 不需要http://前缀！！！ 重要事情说三遍！！！</span>\n<span class=\"token comment\"># 设置登录坑位</span>\n<span class=\"token builtin class-name\">set</span> jd_cookie login_num ?\n<span class=\"token comment\"># 设置阿东qq机器人</span>\n<span class=\"token builtin class-name\">set</span> jd_cookie selfQid 机器人qq账号 例：set jd_cookie selfQid <span class=\"token number\">5875632147</span>\n<span class=\"token comment\">#这里的机器人qq账号，请务必和阿东go-cqhttp配置中config.yml里qq一样。</span>\n<span class=\"token comment\"># 解绑阿东域名</span>\ndelete jd_cookie adong_addr\n<span class=\"token comment\">#使用命令：</span>\n<span class=\"token number\">1</span>、“登录”或“登陆”：登录某东\n<span class=\"token number\">2</span>、“q“：退出登录</code></pre>\n<h2 id=\"对接小爱同学\"><a href=\"#对接小爱同学\" class=\"headerlink\" title=\"对接小爱同学\"></a>对接小爱同学</h2><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 小爱同学，可以指定API，对小爱说对话模式即可开启连续对话模式，闭嘴可关闭。</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl 小爱同学 http://81.70.100.130/api/xiaoai.php?msg<span class=\"token operator\">=</span>%s<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">n</span><span class=\"token operator\">=</span>text <span class=\"token comment\">#挂了就自己换</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl 小爱同学 http://jiuli.xiaoapi.cn/i/xiaoai_tts.php?msg<span class=\"token operator\">=</span>%s <span class=\"token comment\">#挂了就自己换</span>\n<span class=\"token comment\"># 处理json格式数据的小爱api，不填获取整个文本</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl 小爱同学gjson text\n<span class=\"token comment\"># 删除处理json格式数据的小爱api</span>\nsilly delete 小爱同学gjson\n<span class=\"token comment\"># 使用方法：</span>\n<span class=\"token number\">1</span>、唤起小爱：发送“小爱+想说的话”，例如：小爱今天天气。\n<span class=\"token number\">2</span>、对话模式：发送“小爱对话模式”开启，发送“闭嘴”结束。\n<span class=\"token number\">3</span>、成语接龙：发送“成语接龙”开始。这个可应该不是小爱同学的功能，但我懒得单独写它了。</code></pre>\n<h2 id=\"傻妞脚本\"><a href=\"#傻妞脚本\" class=\"headerlink\" title=\"傻妞脚本\"></a>傻妞脚本</h2><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// [rule: ^demo(.*)$] 使用正则匹配,括号中为期望匹配的值</span>\n<span class=\"token comment\">// [rule: demo ?] 使用问号匹配</span>\n<span class=\"token comment\">// [rule: demo] 直接匹配</span>\n<span class=\"token comment\">// [cron: 36 11,17 * * *] 定时任务</span>\n<span class=\"token comment\">// [admin: true] 是否只允许管理员使用</span>\n<span class=\"token comment\">// [disable: false] 是否禁用</span>\n<span class=\"token comment\">// [priority: 10] 匹配优先级</span>\n<span class=\"token comment\">// [server: 1 ] 如果不指定rule和cron时,设置为非空则指定为一个空服务,否则这个js不会加载</span>\n<span class=\"token comment\">//上下文获取</span>\n<span class=\"token function\">param</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token comment\">//获取rule中期望捕获的第n个字符串,中文需要使用 encodeURI(param(n))</span>\n<span class=\"token function\">ImType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//聊天来源类型如:qq,wx等,其中fake为特殊调用可能为cron调用</span>\n<span class=\"token function\">GetUserID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//发送人用户id</span>\n<span class=\"token function\">GetUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//发送人昵称</span>\n<span class=\"token function\">GetChatID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//群号</span>\n<span class=\"token function\">GetChatname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//群名</span>\n<span class=\"token function\">GetContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//获取接受到的消息</span>\n<span class=\"token function\">isAdmin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//发送人是否管理员</span>\n<span class=\"token comment\">//系统功能相关</span>\n<span class=\"token function\">cancall</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token comment\">//返回特殊调用的函数</span>\n<span class=\"token function\">call</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token comment\">//特殊调用</span>\n<span class=\"token function\">Debug</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">)</span><span class=\"token comment\">//打印日志</span>\n<span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>millisecond<span class=\"token punctuation\">)</span><span class=\"token comment\">//休眠</span>\n<span class=\"token function\">GroupBan</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span><span class=\"token comment\">//群禁言,需要在群聊才可用</span>\n<span class=\"token function\">GroupKick</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span><span class=\"token comment\">//群踢人,reject为是否拉黑名单,需要在群聊才可用</span>\n<span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        url<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//必须</span>\n        method<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//get,post,put,delete,可选,默认get</span>\n        headers<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//可选</span>\n        body<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//可选</span>\n        dataType<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//location=>重定向url,json=>尝试解析为对象,否则为body字符串,可选</span>\n        useproxy<span class=\"token operator\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//可选</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//发送请求</span>\n<span class=\"token comment\">//存储相关 sillyGirl存储结构为 &#123;mainKey1:&#123;key1:value,key2:value&#125;,mainKey2:&#123;key1:value,key2:value&#125;&#125;&#125;</span>\n<span class=\"token function\">bucketGet</span><span class=\"token punctuation\">(</span>mainKey<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token comment\">//取值</span>\n<span class=\"token function\">bucketSet</span><span class=\"token punctuation\">(</span>mainKey<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token comment\">//存值</span>\n    <span class=\"token function\">bucketKeys</span><span class=\"token punctuation\">(</span>mainKey<span class=\"token punctuation\">)</span><span class=\"token comment\">//获取所有key名称</span>\n    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token comment\">//同bucketGet(\"otto\",key)</span>\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token comment\">//同bucketSet(\"otto\",key,value)</span>\n    <span class=\"token comment\">//消息相关</span>\n    <span class=\"token function\">input</span><span class=\"token punctuation\">(</span>time <span class=\"token comment\">/*[,str]*/</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//等待下一个消息,str不为空时可接受其他群的消息 str可选</span>\n    <span class=\"token function\">breakIn</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token comment\">//生成一个新的消息向下传递,可以被所有命令处理(包括当前js,所以需要防止递归)</span>\n    <span class=\"token function\">Continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//消息继续向下传递，可以被其他命令处理</span>\n    <span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//撤回接受到的这条消息</span>\n    <span class=\"token function\">image</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token comment\">//图片地址转可拼接消息字符串</span>\n    <span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        imType<span class=\"token operator\">:</span>string<span class=\"token punctuation\">,</span><span class=\"token comment\">//发送到指定渠道,如qq,wx,必须有</span>\n        userID<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//groupCode不为0时为@指定用户,可选</span>\n        groupCode<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//可选</span>\n        content<span class=\"token operator\">:</span>string<span class=\"token punctuation\">,</span><span class=\"token comment\">//发送消息</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//给指定im发送消息</span>\n<span class=\"token function\">notifyMasters</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token comment\">//通知管理员</span>\n<span class=\"token function\">sendText</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token comment\">//发送文本</span>\n<span class=\"token function\">sendImage</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token comment\">//发送图片</span>\n<span class=\"token function\">sendVideo</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token comment\">//发送视频</span></code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160701.webp","length":6954,"excerpt":"","more":"<h2 id=\"官方配置文件\"><a href=\"#官方配置文件\" class=\"headerlink\" title=\"官方配置文件\"></a>官方配置文件</h2><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">傻妞机器人名\n<span class=\"token builtin class-name\">set</span> sillyGirl name 傻妞\n傻妞http服务端口\n<span class=\"token builtin class-name\">set</span> sillyGirl port <span class=\"token number\">8080</span>\n傻妞消息撤回等待时间，单位秒\n<span class=\"token builtin class-name\">set</span> sillyGirl duration <span class=\"token number\">5</span>\n傻妞自动升级是否通知\n<span class=\"token builtin class-name\">set</span> sillyGirl update_notify <span class=\"token boolean\">false</span>\n是否开启傻妞自动更新\n<span class=\"token builtin class-name\">set</span> sillyGirl auto_update <span class=\"token boolean\">true</span>\n傻妞内置赞赏码\n<span class=\"token builtin class-name\">set</span> sillyGirl appreciate https://gitee.com/aiancandle/sillyGirl/raw/main/appreciate.jpg\n是否启动http服务\n<span class=\"token builtin class-name\">set</span> sillyGirl enable_http_server <span class=\"token boolean\">false</span>\n设置青龙openapi的client_id参数\n<span class=\"token builtin class-name\">set</span> qinglong client_id ?\n设置青龙openapi的client_secret参数\n<span class=\"token builtin class-name\">set</span> qinglong client_secret ?\n青龙是否开启自动隐藏重复任务功能\n<span class=\"token builtin class-name\">set</span> qinglong autoCronHideDuplicate <span class=\"token boolean\">true</span>\n设置青龙面板地址\n<span class=\"token builtin class-name\">set</span> qinglong <span class=\"token function\">host</span> http://127.0.0.1:5700\n设置qq登录账号\n<span class=\"token builtin class-name\">set</span> qq uin <span class=\"token number\">10000</span>\n设置qq登录密码\n<span class=\"token builtin class-name\">set</span> qq password <span class=\"token number\">123456789</span>\n设置qq临时消息默认群号\n<span class=\"token builtin class-name\">set</span> qq tempMessageGroupCode ?\n指定要监听的qq群\n<span class=\"token builtin class-name\">set</span> qq onGroups g1<span class=\"token operator\">&amp;</span>g2<span class=\"token operator\">&amp;</span>g3<span class=\"token punctuation\">..</span>.\n设置是否自动同意好友请求\n<span class=\"token builtin class-name\">set</span> qq auto_friend <span class=\"token boolean\">false</span>\n设置是否对监听自身消息\n<span class=\"token builtin class-name\">set</span> qq onself <span class=\"token boolean\">true</span>\n设置qq管理员\n<span class=\"token builtin class-name\">set</span> qq masters q1<span class=\"token operator\">&amp;</span>q2<span class=\"token operator\">&amp;</span>q3<span class=\"token punctuation\">..</span>.\n设置接受通知的qq账号\n<span class=\"token builtin class-name\">set</span> qq notifier q1<span class=\"token operator\">&amp;</span>q2<span class=\"token operator\">&amp;</span>q3<span class=\"token punctuation\">..</span>.\n设置qq设备信息<span class=\"token punctuation\">(</span>自动生成<span class=\"token punctuation\">)</span>\n<span class=\"token builtin class-name\">set</span> qq device.json ?\n设置qq登录令牌<span class=\"token punctuation\">(</span>自动生成<span class=\"token punctuation\">)</span>\n<span class=\"token builtin class-name\">set</span> qq session.token ?\n设置telegram机器人token\n<span class=\"token builtin class-name\">set</span> tg token ?\n设置telegram机器人代理\n<span class=\"token builtin class-name\">set</span> tg http_proxy ?\n设置telegram机器人管理员\n<span class=\"token builtin class-name\">set</span> tg masters t1<span class=\"token operator\">&amp;</span>t2<span class=\"token operator\">&amp;</span>t3<span class=\"token punctuation\">..</span>.\n设置接受通知的telegram账号\n<span class=\"token builtin class-name\">set</span> tg notifier t1<span class=\"token operator\">&amp;</span>t2<span class=\"token operator\">&amp;</span>t3<span class=\"token punctuation\">..</span>.\n设置微信公众平台app_id\n<span class=\"token builtin class-name\">set</span> wxmp app_id ?\n设置微信公众平台app_secret\n<span class=\"token builtin class-name\">set</span> wxmp app_secret ?\n设置微信公众平台token\n<span class=\"token builtin class-name\">set</span> wxmp token ?\n设置微信公众平台encoding_aes_key\n<span class=\"token builtin class-name\">set</span> wxmp encoding_aes_key ?\n设置微信公众平台管理员\n<span class=\"token builtin class-name\">set</span> wxmp masters w1<span class=\"token operator\">&amp;</span>w2<span class=\"token operator\">&amp;</span>w3<span class=\"token punctuation\">..</span>.\n傻妞内置微信插件，依赖于可爱猫和http-sdk\n傻妞远程处理接口 /wx/receive\n设置插件调用地址，确保傻妞可以访问可爱猫端口\n<span class=\"token builtin class-name\">set</span> wx api_url ?\n设置图片转发模式，否则可能会出现此图片来自xx未经允许不得使用的提示\n<span class=\"token builtin class-name\">set</span> wx relay_mode <span class=\"token boolean\">true</span>\n设置指定转发地址，格式为 https://域名/relay?url<span class=\"token operator\">=</span>%s，不知道不用填\n<span class=\"token builtin class-name\">set</span> wx relaier ?\n设置傻妞是否动态网络地址，适用于傻妞家庭宽带而可爱猫在云服务器的情况下\n<span class=\"token builtin class-name\">set</span> wx sillyGirl_dynamic_ip <span class=\"token boolean\">true</span>\n设置可爱猫是否动态网络地址，适用于可爱猫家庭宽带而傻妞在云服务器的情况下\n<span class=\"token builtin class-name\">set</span> wx keaimao_dynamic_ip <span class=\"token boolean\">true</span>\n设置可爱猫端口\n<span class=\"token builtin class-name\">set</span> wx keaimao_port ?</code></pre>\n<h2 id=\"对接QQ-微信-tg\"><a href=\"#对接QQ-微信-tg\" class=\"headerlink\" title=\"对接QQ 微信 tg\"></a>对接QQ 微信 tg</h2><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 设置qq管理员</span>\n<span class=\"token builtin class-name\">set</span> qq masters ?\n<span class=\"token comment\"># 设置接受通知的qq账号，默认管理员接受</span>\n<span class=\"token builtin class-name\">set</span> qq notifier ?\n<span class=\"token comment\"># 设置qq群号，不指定则监听所有群</span>\n<span class=\"token builtin class-name\">set</span> qq groupCode 群号，?：set qq groupCode <span class=\"token number\">654321</span>\n<span class=\"token comment\"># QQ机器人自动通过好友申请请求命令，默认不处理。通过后会将事件推送给管理员。</span>\n<span class=\"token builtin class-name\">set</span> qq auto_friend <span class=\"token boolean\">true</span>\n<span class=\"token comment\"># 指定系统通知发送对象命令，如不设置默认发送给所有管理员。</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">[</span>im type<span class=\"token punctuation\">]</span> notifiers <span class=\"token punctuation\">[</span>accounts <span class=\"token function\">join</span> by <span class=\"token string\">'&amp;'</span><span class=\"token punctuation\">]</span> \n<span class=\"token comment\"># 设置telegram机器人管理员</span>\n<span class=\"token builtin class-name\">set</span> tg masters ?\n<span class=\"token comment\"># 设置接受通知的telegram账号，默认管理员接受</span>\n<span class=\"token builtin class-name\">set</span> tg notifier ?\n<span class=\"token comment\"># 设置Telegram bot 代理命令</span>\n<span class=\"token builtin class-name\">set</span> tg url xxxxx\n<span class=\"token comment\"># 设置微信公众平台管理员</span>\n<span class=\"token builtin class-name\">set</span> wxmp masters ?\n<span class=\"token comment\"># 设置微信管理员</span>\n<span class=\"token builtin class-name\">set</span> wx masters ?\n<span class=\"token comment\"># 查询群号</span>\ngroupCode\n<span class=\"token comment\"># 升级傻妞</span>\n升级/更新\n<span class=\"token comment\"># 关闭傻妞自动回复</span>\n<span class=\"token builtin class-name\">set</span> qq onself <span class=\"token boolean\">false</span>\n<span class=\"token comment\"># 重启傻妞，自动静默运行</span>\n重启\n<span class=\"token comment\"># 注销qqbot命令</span>\ndelete qq session.token <span class=\"token comment\">#重新运行扫码重新即可。</span>\n<span class=\"token comment\"># 重启并静默运行</span>\n<span class=\"token comment\"># 获取傻妞的命令列表</span>\n命令\n<span class=\"token comment\"># 解决开机自启和崩溃重启</span>\n守护傻妞\n<span class=\"token comment\"># 关闭守护模式</span>\nsystemctl disable sillyGirl <span class=\"token comment\">#守护模式会导致没法自动升级</span>\n<span class=\"token comment\"># 打赏：会返回打赏码，方便大家咨询问题</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl appreciate <span class=\"token punctuation\">[</span>自己的打赏码地址<span class=\"token punctuation\">]</span> <span class=\"token comment\">#当然，你也可以换成自己的打赏码，但不是很建议</span>\n<span class=\"token comment\"># 禁用自动更新指令</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl auto_update <span class=\"token boolean\">false</span>\n<span class=\"token comment\"># 傻妞忽略通知命令，默认忽略。</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl ignore_notify <span class=\"token boolean\">true</span>\n<span class=\"token comment\"># 傻妞开启http服务，默认关闭</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl enable_http_server <span class=\"token boolean\">true</span> <span class=\"token comment\">#使用微信公众号、短网址服务的朋友需要开启。</span>\n<span class=\"token comment\"># 返利间谍模式</span>\n<span class=\"token builtin class-name\">set</span> qq spy_on ?\n<span class=\"token comment\"># 管理员推送绑定pushplus指令</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl pushplus <span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 关键词撤回功能</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl recall 关键词1<span class=\"token operator\">&amp;</span>关键词2<span class=\"token punctuation\">..</span>. <span class=\"token comment\">#关键词支持正则表达式。</span>\n<span class=\"token comment\"># 关键词回复功能</span>\n<span class=\"token builtin class-name\">set</span> reply ? ? <span class=\"token comment\">#第一个问号是支持正则的关键词，第二个问号是回复的内容。</span>\n<span class=\"token comment\"># 屏蔽京东口令小妙招</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl recall <span class=\"token punctuation\">[</span><span class=\"token punctuation\">\\</span>s<span class=\"token punctuation\">\\</span>S<span class=\"token punctuation\">]</span>*<span class=\"token punctuation\">[</span>^0-9a-zA-Z<span class=\"token operator\">=</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9a-zA-Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">14</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>^0-9a-zA-Z<span class=\"token punctuation\">;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">\\</span>s<span class=\"token punctuation\">\\</span>S<span class=\"token punctuation\">]</span>*\n<span class=\"token comment\"># 遇见傻妞被被杀死，请执行命令</span>\nsystemctl stop sillyGirl <span class=\"token operator\">&amp;&amp;</span> systemctl disable sillyGirl</code></pre>\n<h2 id=\"对接青龙\"><a href=\"#对接青龙\" class=\"headerlink\" title=\"对接青龙\"></a>对接青龙</h2><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 对接青龙</span>\n<span class=\"token builtin class-name\">set</span> qinglong <span class=\"token function\">host</span> http://xxxxxx:xx <span class=\"token comment\">##一定要加\"http://\"，我第一次没加，就翻车了。</span>\n<span class=\"token builtin class-name\">set</span> qinglong client_id xxxxxx <span class=\"token comment\">##第一步创建青龙应用获取的，直接复制粘贴</span>\n<span class=\"token builtin class-name\">set</span> qinglong client_secret xxxxx <span class=\"token comment\">##第一步创建青龙应用获取的，直接复制粘贴</span>\n<span class=\"token comment\"># 使用命令</span>\n^ql<span class=\"token punctuation\">\\</span>s+config$\n^ql<span class=\"token punctuation\">\\</span>s+envs$\n^ql<span class=\"token punctuation\">\\</span>s+env<span class=\"token punctuation\">\\</span>s+get<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+env<span class=\"token punctuation\">\\</span>s+find<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+env<span class=\"token punctuation\">\\</span>s+set<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+env<span class=\"token punctuation\">\\</span>s+remark<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+env<span class=\"token punctuation\">\\</span>s+disable<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+env<span class=\"token punctuation\">\\</span>s+enable<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+crons$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+status<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+run<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+stop<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+enable<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+disable<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+find<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+logs<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^ql<span class=\"token punctuation\">\\</span>s+cron<span class=\"token punctuation\">\\</span>s+hide<span class=\"token punctuation\">\\</span>s+duplicate$\n<span class=\"token comment\"># cookie状态查询命令</span>\nql cookie status \n<span class=\"token comment\"># 下载单个脚本</span>\nql raw ?\n<span class=\"token comment\"># 运行脚本</span>\nql task ?\n<span class=\"token comment\"># 拉库指令</span>\nql repo ? 例：ql repo https://github.com/cdle/carry.git\n<span class=\"token comment\">#关闭自动隐藏任务命令：</span>\n<span class=\"token builtin class-name\">set</span> qinglong autoCronHideDuplicate <span class=\"token boolean\">false</span></code></pre>\n<h2 id=\"对接芝士\"><a href=\"#对接芝士\" class=\"headerlink\" title=\"对接芝士\"></a>对接芝士</h2><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">^jd<span class=\"token punctuation\">\\</span>s+asset<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$ ^查询 <span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span>$\n<span class=\"token comment\"># 资产推送$</span>\n资产推送 <span class=\"token comment\">#会根据绑定的qq一对一推送</span>\n<span class=\"token comment\"># 资产推送定时</span>\n九点例子： <span class=\"token builtin class-name\">set</span> jd_cookie asset_push <span class=\"token number\">0</span> <span class=\"token number\">9</span> * * * ，包括失效提醒。\n<span class=\"token comment\"># 查询资产 </span>\n查询or查询 <span class=\"token punctuation\">[</span>序号<span class=\"token punctuation\">]</span> <span class=\"token comment\">#命令\"查询\"绑定账号资产命令；命令\"查询 1\"，查询指定账号资产，注意空格，顺序为青龙的ck排序，支持匹配绑定的社交账号</span>\n<span class=\"token comment\"># 获取绑定的社交账号</span>\njd imOf <span class=\"token punctuation\">[</span>ck或pt_pin<span class=\"token punctuation\">]</span> 。\n<span class=\"token comment\"># 查询今日豆子变化</span>\n^jd<span class=\"token punctuation\">\\</span>s+today<span class=\"token punctuation\">\\</span>s+bean<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>$\n<span class=\"token comment\"># 查询昨日豆子变化</span>\n^jd<span class=\"token punctuation\">\\</span>s+yestoday<span class=\"token punctuation\">\\</span>s+bean<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>$\n<span class=\"token comment\"># 查询豆子变化</span>\n^jd<span class=\"token punctuation\">\\</span>s+bean<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>$\n<span class=\"token comment\"># wskey转换</span>\n更新狗东账号 <span class=\"token comment\">#转换 wskey 到 cookie</span>\n^jd<span class=\"token punctuation\">\\</span>s+eueu<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^jd<span class=\"token punctuation\">\\</span>s+find<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^jd<span class=\"token punctuation\">\\</span>s+exchange<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^jd<span class=\"token punctuation\">\\</span>s+enable<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^jd<span class=\"token punctuation\">\\</span>s+disable<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n^jd<span class=\"token punctuation\">\\</span>s+remark<span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>s+<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>$\n<span class=\"token comment\"># JD账号绑定qq号码</span>\n<span class=\"token builtin class-name\">set</span> pinQQ pt_pin qq号码，?：set pinQQ jd_xxxxxx <span class=\"token number\">123456</span>\n<span class=\"token comment\"># 取消JD账号绑定qq号码</span>\ndelete pinQQ pt_pin，?：delete pinQQ jd_xxxxxx\n<span class=\"token comment\"># 解绑im账号 对应的所有京东账号：</span>\njd unbind im，?：jd unbind <span class=\"token number\">10000</span>\n<span class=\"token comment\"># JD账号绑定TG账号（可由）</span>\n<span class=\"token builtin class-name\">set</span> pinTG pt_pin TGID（找getmyid获取）\n<span class=\"token comment\"># 取消JD账号绑定TG账号</span>\ndelete pinTG pt_pin\n<span class=\"token comment\"># 设置wskey自动转cooke定时：</span>\n<span class=\"token builtin class-name\">set</span> jdWSCK update <span class=\"token number\">56</span> * * * *\n<span class=\"token comment\"># 解绑京东账号</span>\njd unbind 可以解绑名下所有京东账号\n<span class=\"token comment\">#给绑定该京东账号的社交账号发送消息</span>\njd send pt_pin msg ,pt_pin填all则发给所有。\n<span class=\"token comment\"># ck提交</span>\n<span class=\"token assign-left variable\">pt_key</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>^<span class=\"token punctuation\">;</span><span class=\"token operator\">=</span><span class=\"token punctuation\">\\</span>s<span class=\"token punctuation\">]</span>+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">\\</span>s*pt_pin<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>^<span class=\"token punctuation\">;</span><span class=\"token operator\">=</span><span class=\"token punctuation\">\\</span>s<span class=\"token punctuation\">]</span>+<span class=\"token punctuation\">)</span> 例：直接发抓到的ck，格式参考命令\n<span class=\"token comment\"># wskey提交</span>\n<span class=\"token assign-left variable\">pin</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>^<span class=\"token punctuation\">;</span><span class=\"token operator\">=</span><span class=\"token punctuation\">\\</span>s<span class=\"token punctuation\">]</span>+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">\\</span>s*wskey<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>^<span class=\"token punctuation\">;</span><span class=\"token operator\">=</span><span class=\"token punctuation\">\\</span>s<span class=\"token punctuation\">]</span>+<span class=\"token punctuation\">)</span> 例：直接发抓到的ck，格式参考命令\n<span class=\"token comment\"># 限制查询频率</span>\n<span class=\"token builtin class-name\">set</span> jd_cookie query_wait_time <span class=\"token punctuation\">[</span>限制秒数<span class=\"token punctuation\">]</span> 例:set jd_cookie query_wait_time <span class=\"token number\">60</span>\n<span class=\"token comment\"># 设置阿东登录地址</span>\n<span class=\"token builtin class-name\">set</span> jd_cookie adong_addr 阿东ip:端口\n<span class=\"token comment\"># 设置阿东qq机器人账号</span>\n<span class=\"token builtin class-name\">set</span> jd_cookie selfQid 机器人qq账号\n<span class=\"token comment\"># 登录狗东账号</span>\n登录或登陆 \n<span class=\"token comment\"># 退出狗东登录</span>\nq或退出登陆\n<span class=\"token comment\"># 删除阿东地址 </span>\ndelete jd_cookie adong_addr 例：delete jd_cookie adong_addr <span class=\"token number\">127.0</span>.0.1:5701\n<span class=\"token comment\"># 给绑定该京东账号的社交账号发送消息</span>\njd send pt_pin msg <span class=\"token comment\">#pt_pin填all则发给所有。</span>\n<span class=\"token comment\"># 解锁内测功能</span>\n申请内测 <span class=\"token comment\">#打赏作者进内测群，请打出“申请内测”。需要set tg masters [myuid]。没有用tg的，请在/etc/sillyGirl/sets.conf加上一行命令。</span></code></pre>\n<h2 id=\"对接阿东\"><a href=\"#对接阿东\" class=\"headerlink\" title=\"对接阿东\"></a>对接阿东</h2><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 设置阿东登陆地址</span>\n<span class=\"token builtin class-name\">set</span> jd_cookie adong_addr 阿东ip:端口 例：set jd_cookie adong_addr <span class=\"token number\">192.168</span>.1.1:5702\n<span class=\"token comment\">#不需要http://前缀！！！ 不需要http://前缀！！！ 不需要http://前缀！！！ 重要事情说三遍！！！</span>\n<span class=\"token comment\"># 设置登录坑位</span>\n<span class=\"token builtin class-name\">set</span> jd_cookie login_num ?\n<span class=\"token comment\"># 设置阿东qq机器人</span>\n<span class=\"token builtin class-name\">set</span> jd_cookie selfQid 机器人qq账号 例：set jd_cookie selfQid <span class=\"token number\">5875632147</span>\n<span class=\"token comment\">#这里的机器人qq账号，请务必和阿东go-cqhttp配置中config.yml里qq一样。</span>\n<span class=\"token comment\"># 解绑阿东域名</span>\ndelete jd_cookie adong_addr\n<span class=\"token comment\">#使用命令：</span>\n<span class=\"token number\">1</span>、“登录”或“登陆”：登录某东\n<span class=\"token number\">2</span>、“q“：退出登录</code></pre>\n<h2 id=\"对接小爱同学\"><a href=\"#对接小爱同学\" class=\"headerlink\" title=\"对接小爱同学\"></a>对接小爱同学</h2><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 小爱同学，可以指定API，对小爱说对话模式即可开启连续对话模式，闭嘴可关闭。</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl 小爱同学 http://81.70.100.130/api/xiaoai.php?msg<span class=\"token operator\">=</span>%s<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">n</span><span class=\"token operator\">=</span>text <span class=\"token comment\">#挂了就自己换</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl 小爱同学 http://jiuli.xiaoapi.cn/i/xiaoai_tts.php?msg<span class=\"token operator\">=</span>%s <span class=\"token comment\">#挂了就自己换</span>\n<span class=\"token comment\"># 处理json格式数据的小爱api，不填获取整个文本</span>\n<span class=\"token builtin class-name\">set</span> sillyGirl 小爱同学gjson text\n<span class=\"token comment\"># 删除处理json格式数据的小爱api</span>\nsilly delete 小爱同学gjson\n<span class=\"token comment\"># 使用方法：</span>\n<span class=\"token number\">1</span>、唤起小爱：发送“小爱+想说的话”，例如：小爱今天天气。\n<span class=\"token number\">2</span>、对话模式：发送“小爱对话模式”开启，发送“闭嘴”结束。\n<span class=\"token number\">3</span>、成语接龙：发送“成语接龙”开始。这个可应该不是小爱同学的功能，但我懒得单独写它了。</code></pre>\n<h2 id=\"傻妞脚本\"><a href=\"#傻妞脚本\" class=\"headerlink\" title=\"傻妞脚本\"></a>傻妞脚本</h2><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// [rule: ^demo(.*)$] 使用正则匹配,括号中为期望匹配的值</span>\n<span class=\"token comment\">// [rule: demo ?] 使用问号匹配</span>\n<span class=\"token comment\">// [rule: demo] 直接匹配</span>\n<span class=\"token comment\">// [cron: 36 11,17 * * *] 定时任务</span>\n<span class=\"token comment\">// [admin: true] 是否只允许管理员使用</span>\n<span class=\"token comment\">// [disable: false] 是否禁用</span>\n<span class=\"token comment\">// [priority: 10] 匹配优先级</span>\n<span class=\"token comment\">// [server: 1 ] 如果不指定rule和cron时,设置为非空则指定为一个空服务,否则这个js不会加载</span>\n<span class=\"token comment\">//上下文获取</span>\n<span class=\"token function\">param</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token comment\">//获取rule中期望捕获的第n个字符串,中文需要使用 encodeURI(param(n))</span>\n<span class=\"token function\">ImType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//聊天来源类型如:qq,wx等,其中fake为特殊调用可能为cron调用</span>\n<span class=\"token function\">GetUserID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//发送人用户id</span>\n<span class=\"token function\">GetUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//发送人昵称</span>\n<span class=\"token function\">GetChatID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//群号</span>\n<span class=\"token function\">GetChatname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//群名</span>\n<span class=\"token function\">GetContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//获取接受到的消息</span>\n<span class=\"token function\">isAdmin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//发送人是否管理员</span>\n<span class=\"token comment\">//系统功能相关</span>\n<span class=\"token function\">cancall</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token comment\">//返回特殊调用的函数</span>\n<span class=\"token function\">call</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token comment\">//特殊调用</span>\n<span class=\"token function\">Debug</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">)</span><span class=\"token comment\">//打印日志</span>\n<span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>millisecond<span class=\"token punctuation\">)</span><span class=\"token comment\">//休眠</span>\n<span class=\"token function\">GroupBan</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span><span class=\"token comment\">//群禁言,需要在群聊才可用</span>\n<span class=\"token function\">GroupKick</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span><span class=\"token comment\">//群踢人,reject为是否拉黑名单,需要在群聊才可用</span>\n<span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        url<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//必须</span>\n        method<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//get,post,put,delete,可选,默认get</span>\n        headers<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//可选</span>\n        body<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//可选</span>\n        dataType<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//location=>重定向url,json=>尝试解析为对象,否则为body字符串,可选</span>\n        useproxy<span class=\"token operator\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//可选</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//发送请求</span>\n<span class=\"token comment\">//存储相关 sillyGirl存储结构为 &#123;mainKey1:&#123;key1:value,key2:value&#125;,mainKey2:&#123;key1:value,key2:value&#125;&#125;&#125;</span>\n<span class=\"token function\">bucketGet</span><span class=\"token punctuation\">(</span>mainKey<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token comment\">//取值</span>\n<span class=\"token function\">bucketSet</span><span class=\"token punctuation\">(</span>mainKey<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token comment\">//存值</span>\n    <span class=\"token function\">bucketKeys</span><span class=\"token punctuation\">(</span>mainKey<span class=\"token punctuation\">)</span><span class=\"token comment\">//获取所有key名称</span>\n    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token comment\">//同bucketGet(\"otto\",key)</span>\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token comment\">//同bucketSet(\"otto\",key,value)</span>\n    <span class=\"token comment\">//消息相关</span>\n    <span class=\"token function\">input</span><span class=\"token punctuation\">(</span>time <span class=\"token comment\">/*[,str]*/</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//等待下一个消息,str不为空时可接受其他群的消息 str可选</span>\n    <span class=\"token function\">breakIn</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token comment\">//生成一个新的消息向下传递,可以被所有命令处理(包括当前js,所以需要防止递归)</span>\n    <span class=\"token function\">Continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//消息继续向下传递，可以被其他命令处理</span>\n    <span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//撤回接受到的这条消息</span>\n    <span class=\"token function\">image</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token comment\">//图片地址转可拼接消息字符串</span>\n    <span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        imType<span class=\"token operator\">:</span>string<span class=\"token punctuation\">,</span><span class=\"token comment\">//发送到指定渠道,如qq,wx,必须有</span>\n        userID<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//groupCode不为0时为@指定用户,可选</span>\n        groupCode<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//可选</span>\n        content<span class=\"token operator\">:</span>string<span class=\"token punctuation\">,</span><span class=\"token comment\">//发送消息</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//给指定im发送消息</span>\n<span class=\"token function\">notifyMasters</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token comment\">//通知管理员</span>\n<span class=\"token function\">sendText</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token comment\">//发送文本</span>\n<span class=\"token function\">sendImage</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token comment\">//发送图片</span>\n<span class=\"token function\">sendVideo</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token comment\">//发送视频</span></code></pre>\n"},{"title":"位置与几何关系分析","date":"2021-11-11T01:50:49.000Z","description":"空间几何关系即是由空间目标几何特征所引起或决定的空间关系。即与空间目标的位置、形状、距离、方位等基本几何特征相关联的空间关系","_content":"\n## 邻近分析\n\n邻近度：表达空间目标**距离关系**的重要物流量之一，表示地理空间中目标地物**距离相近**的程度\n\n### <span id=\"缓冲区\">缓冲区分析</span>\n\n1. #### 缓冲区、缓冲区分析\n\n   缓冲区：为识别**地理实体或空间物体(点、线、面)**对周围地物的**影响度**而建立的具有一定宽度的带状区域，**不包含原来点、线或面要素**的多边形\n\n   + 点、线、面要素缓冲区\n   + 均质缓冲区\n   + 非均质缓冲区\n\n   缓冲区分析：对一组或一类地物按照缓冲的**距离**条件，建立缓冲，从而实现空间数据在**二维空间得以扩展**，来**确定分析对象或筛选范围的**信息分析方法\n\n2. #### 缓冲区类型\n\n   基于点要素的缓冲区：\n\n   > 通常以点为圆心、以一定距离为半径的圆\n\n   基于线要素的缓冲区：\n\n   > 通常是以线为中心轴线，距中心轴线一定距离的平行条带多边形\n\n   基于面要素的缓冲区：\n\n   > 向外或内扩展一定距离以生成新的多边形\n\n   缓冲区分析三要素：\n\n   + 主体：表示分析的主要目标，一般分为点源、线源、和面源三类\n   + 邻近对象：表示受主体影响的客体，例如行政界限变更时所影响的水土流失范围等\n   + 对象的作用条件：表示主体邻近对象施加作用的影响条件或影响强度\n\n3. #### 缓冲区实现的基本算法\n\n4. #### <span id=\"缓冲区分析应用\">缓冲区分析应用</span>\n\n   ##### 1. 案例一\n\n   实习背景\n\n   > 如何找到环境好、购物方便、小孩上学方便的居住区地段是购房者最关心的问题，因此，为了辅助购房者的决策，需要从总体上对商品房的信息进行研究分析，**找出满足购房者需要的区域**，并对**城市区域住房条件分定等级**。\n\n   所寻求的区域应满足：\n\n   > 离主要交通要道200米之外，以减少噪音污染(ST为道路数据中的类型为交通要道要素)；\n   > 在商业中心服务范围之内，服务范围以商业中心700米之内；\n   > 距名牌高中750米之内，以便小孩上学便捷；\n   > 距名胜古迹500米之内，环境优雅\n\n   步骤：\n\n   > 1. 交通网络图层栅格查询选择出市区的主要交通道路\n   > 2. 对选择的主干道进行缓冲区建立，指定缓冲区半径为200米\n   > 3. 建立商业中心缓冲区，缓冲半径为700米\n   > 4. 建立名胜古迹缓冲区，缓冲半径为500米\n   > 5. 建立名牌高中缓冲区，缓冲半径为750米\n   > 6. 对商业中心缓冲区、名牌高中缓冲区、名胜古迹缓冲区进行叠置分析的交集操作\n   > 7. 用主干道缓冲区对获得的三个区域的交集进行图层擦除，得到满足购房需求的区域\n   \n   > 1. 对前四个缓冲区添加字段，主干道缓冲区字段值赋值-1，另三个图层赋值为1\n   > 2. 将四个图层进行合并，连接全部字段\n   > 3. 打开生成图层的属性列表，添加分类字段并计算4个字段的和进行分定等级\n   > 4. 设置分级显示图层，完成住房条件分定等级\n   \n   ##### 2. 案例二\n   \n     获准在某林区采伐，为防止水土流失，规定不得在河流周围1km内采伐林木。另外，为便于运输，决定将采伐区定在道路周围5km 之内。请找出符合上逑条件的采伐区，输出森林采伐图。\n   \n     > (1)将该地区具有相同比例尺且进行配准的道路分布图﹑河流分布图﹑森林分布图，进行预处理和数字化;\n     > (2)利用河流分布图生成1km 的等距缓冲区;\n     >\n     > (3)利用道路分布图生成5km的等距缓冲区;\n     > (4)森林分布图中可采伐林地﹑道路缓冲区及河流缓冲区图进行叠置，叠置条件表达式为:采伐区=森林分布图中可伐林地∩道路周围5km缓冲区∩非河流周围1km缓冲区\n     > (5)将上逑3张图进行两两叠置,所得结果即为森林采伐图\n\n### <span id=\"泰森多边形\">泰森多边形分析</span>\n\n1. 定义\n\n   > 由**点图层**生成其**近邻多边形图层**，来表示该标识点的影响范围,\n   > 确保在一个多边形内的每个采样点与该多边形内的已知点更接近\n   > 而与其他的已知点相距较远，是**局部拟合插值法**的一种。每个\n   > 点对应一个新生成的多边形，该输入点作为多边形的标识点，**相**\n   > **邻标识点到其“公共边”的距离相等**\n\n2. 实现过程\n\n   > 由输入点相连生成三角网\n   > 对每个三角形的边作垂直平分线;删除原三角形\n   > 而每个输入点作为多边形的标识点,垂直平分线作为泰森多边形的边\n\n3. 应用与特点分析\n\n   特点：\n\n   + 多边形的多少取决于采样点的数量\n   + 多边形的面积和形状取决于样本点的分布\n   + 多边形的属性来源于单个采样点，与其他点无关\n   + 泰森多边形内部的均质与边界的突变\n\n   应用：\n\n   + 大气质量评估与污染气体分布\n\n## <span id=\"叠加分析\">叠置分析</span>\n\n### 定义\n\n综合不同图层、可能改变图层内空间要素的分析方法。指**同一地区、同种参考系统(坐标系统，分带与基准面)下**的两组或两组以上要素的数据文件进行叠置，根据两组的属性来建立具有**多重属性的多边形**或进行多边形范围内的属性特性的统计分析。\n\n### 目的\n\n**寻找和确定同时具有多种地理属性的分布区域**\n\n### 矢量数据的叠置分析及问题\n\n#### 点面叠置\n\n![点面叠置](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111153942.png)\n\n> 应用\n\n+ 得到某省内雨量站点的个数\n\n+ 某水文站点属于哪个行政区划\n\n+ 城市邮局分布密度\n\n#### 线面叠置\n\n![线面叠置](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211119152726.png)\n\n> ​\t应用\n\n+ 某省区内高速公路的长度\n+ 某段公路属于哪个行政区划\n+ 城市的河网密度\n+ 某条河流流经行政区\n\n#### 面面叠置\n\n![面面叠置](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111184045.png)\n\n> 应用\n\n+ 某省区内有哪几种土地利用类型\n+ 不同级别的灾害分区的植被覆盖情况\n+ 某行政区划内的地层岩性分布情况\n\n### 基本方法\n\n#### 图层合并\n\n并集：保留两个输入层中所有多边形\n\n![图层合并](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111185938.png)\n\n#### 交集操作\n\n交集：保留两个输入层中的公共区域\n\n![交集](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190005.png)\n\n#### 图层擦除\n\n![擦除](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190036.png)\n\n#### 识别叠加\n\n> 以输入图层为界，保留边界内的所有多边形\n\n![识别叠加](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190240.png)\n\n#### 对称差值\n\n#### 修正更新\n\n> 输出层为一个经删除处理后的图层与一个新特征图层进行合并后的结果\n\n![修正更新](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190437.png)\n\n#### 裁剪\n\n> 输出层为按一个图层的边界，对另外一个图层的内容要素进行截取后的结果\n\n![擦除](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190621.png)\n\n#### 交集取反\n\n> 保留两个输入层中的公共区域的反\n\n![交集取反](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111191207.png)\n\n## 栅格数据分析\n\n### <span id=\"距离分析\">距离分析</span>\n\n1. 源栅格\n\n   > 源即距离分析中的目标或目的地\n\n2. 成本栅格\n\n   > 记录了通过每一单元的通行成本\n\n3. 成本距离\n\n   > 记录每个栅格到距离最近、成本最低的源的最少累加成本\n\n4. 方向栅格\n\n   > 从每一单元出发，沿着最低累计成本路径到达最近源的路线方向\n\n5. 分配栅格\n\n   > 记录每一单元点隶属的最近源信息，单元值就是其最近源的值\n\n6. 直线距离\n\n   > 通过直线距离函数，计算每个栅格与最近源之间的欧氏距离，并按距离远近分级\n\n7. 最短路径\n\n   > 通过最短路径函数获取从一个起点或一组起点出发，到达一个目标地或一组目标地的最短直线路径或最小成本路径\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211122123502.png)\n\n### 密度分析\n\n针对一些点要素（或线要素）的特征值（如人口数）并不是集中在点上（或线上）的特点，对要素的特征值进行空间分配，从而更加真实地反映要素的分布\n\n#### 1. 简单密度\n\n#### 2.核密度\n\n### <span id=\"统计分析\">统计分析</span>\n\n#### 1. 单元统计\n\n以**栅格单元为单位**来进行单元统计分析，单元统计输入数据集必须是来源于同一个地理区域，并且采用相同的坐标系统\n\n#### 2.领域统计\n\n邻域统计是以待计算栅格为中心，向其周围扩展**一定邻域**，在单元对应的**邻域范围指定的单元上**进行统计分析，然后将结果值输出到该单元位置\n\n> 四种领域分析窗口：矩形领域、圆形领域、环形领域、扇形领域\n\n#### 3.分区统计\n\n分区统计，即以一个数据集的**分区为基础**，对另一个数据集进行统计分析，包括计算数值范围、最大值、最小值、标准差等等。分区统计是在每一个分区的基础上进行统计，输出结果时**同一分区被赋予相同的单一输出统计值**\n\n一个分区就是在栅格数据中拥有相同值的栅格单元，而**不考虑他们是否邻近**\n\n### <span id=\"重分类\">重分类分析</span>\n\n重分类是将**属性数据的类别转换成新类**，即基于栅格数据原有数值类型，对原有数值类型按照一定的原则重新进行分类，从而得到**一组新值**并输出\n\n重分类过程\n\n+ 新值替换：用一组新值取代栅格数据原来一组数值\n+ 重新分类：将原来几个数值重新组合成一个新的数值\n+ 旧值合并：用一个新值取代栅格数据原来一段数值区间或几类数值\n+ 空值设置：将栅格数据原来某个数值统一设置为空值\n\n### <span id=\"地图代数\">栅格计算(地图代数)</span>\n\n> 两个以上层面的栅格数据系统，以**某种函数关系**作为复合分析的依据进行**逐网格运算**，从而得到新的栅格数据系统的过程\n\n1. 代数运算\n\n   > 加减乘除、取整\n\n2. 逻辑运算\n\n   > 关系、布尔\n","source":"_posts/位置与几何关系分析.md","raw":"---\ntitle: 位置与几何关系分析\ndate: 2021-11-11 09:50:49\ntags: GIS空间分析\ncategories: [GIS,GIS空间分析,位置与几何关系分析]\ndescription: 空间几何关系即是由空间目标几何特征所引起或决定的空间关系。即与空间目标的位置、形状、距离、方位等基本几何特征相关联的空间关系\n---\n\n## 邻近分析\n\n邻近度：表达空间目标**距离关系**的重要物流量之一，表示地理空间中目标地物**距离相近**的程度\n\n### <span id=\"缓冲区\">缓冲区分析</span>\n\n1. #### 缓冲区、缓冲区分析\n\n   缓冲区：为识别**地理实体或空间物体(点、线、面)**对周围地物的**影响度**而建立的具有一定宽度的带状区域，**不包含原来点、线或面要素**的多边形\n\n   + 点、线、面要素缓冲区\n   + 均质缓冲区\n   + 非均质缓冲区\n\n   缓冲区分析：对一组或一类地物按照缓冲的**距离**条件，建立缓冲，从而实现空间数据在**二维空间得以扩展**，来**确定分析对象或筛选范围的**信息分析方法\n\n2. #### 缓冲区类型\n\n   基于点要素的缓冲区：\n\n   > 通常以点为圆心、以一定距离为半径的圆\n\n   基于线要素的缓冲区：\n\n   > 通常是以线为中心轴线，距中心轴线一定距离的平行条带多边形\n\n   基于面要素的缓冲区：\n\n   > 向外或内扩展一定距离以生成新的多边形\n\n   缓冲区分析三要素：\n\n   + 主体：表示分析的主要目标，一般分为点源、线源、和面源三类\n   + 邻近对象：表示受主体影响的客体，例如行政界限变更时所影响的水土流失范围等\n   + 对象的作用条件：表示主体邻近对象施加作用的影响条件或影响强度\n\n3. #### 缓冲区实现的基本算法\n\n4. #### <span id=\"缓冲区分析应用\">缓冲区分析应用</span>\n\n   ##### 1. 案例一\n\n   实习背景\n\n   > 如何找到环境好、购物方便、小孩上学方便的居住区地段是购房者最关心的问题，因此，为了辅助购房者的决策，需要从总体上对商品房的信息进行研究分析，**找出满足购房者需要的区域**，并对**城市区域住房条件分定等级**。\n\n   所寻求的区域应满足：\n\n   > 离主要交通要道200米之外，以减少噪音污染(ST为道路数据中的类型为交通要道要素)；\n   > 在商业中心服务范围之内，服务范围以商业中心700米之内；\n   > 距名牌高中750米之内，以便小孩上学便捷；\n   > 距名胜古迹500米之内，环境优雅\n\n   步骤：\n\n   > 1. 交通网络图层栅格查询选择出市区的主要交通道路\n   > 2. 对选择的主干道进行缓冲区建立，指定缓冲区半径为200米\n   > 3. 建立商业中心缓冲区，缓冲半径为700米\n   > 4. 建立名胜古迹缓冲区，缓冲半径为500米\n   > 5. 建立名牌高中缓冲区，缓冲半径为750米\n   > 6. 对商业中心缓冲区、名牌高中缓冲区、名胜古迹缓冲区进行叠置分析的交集操作\n   > 7. 用主干道缓冲区对获得的三个区域的交集进行图层擦除，得到满足购房需求的区域\n   \n   > 1. 对前四个缓冲区添加字段，主干道缓冲区字段值赋值-1，另三个图层赋值为1\n   > 2. 将四个图层进行合并，连接全部字段\n   > 3. 打开生成图层的属性列表，添加分类字段并计算4个字段的和进行分定等级\n   > 4. 设置分级显示图层，完成住房条件分定等级\n   \n   ##### 2. 案例二\n   \n     获准在某林区采伐，为防止水土流失，规定不得在河流周围1km内采伐林木。另外，为便于运输，决定将采伐区定在道路周围5km 之内。请找出符合上逑条件的采伐区，输出森林采伐图。\n   \n     > (1)将该地区具有相同比例尺且进行配准的道路分布图﹑河流分布图﹑森林分布图，进行预处理和数字化;\n     > (2)利用河流分布图生成1km 的等距缓冲区;\n     >\n     > (3)利用道路分布图生成5km的等距缓冲区;\n     > (4)森林分布图中可采伐林地﹑道路缓冲区及河流缓冲区图进行叠置，叠置条件表达式为:采伐区=森林分布图中可伐林地∩道路周围5km缓冲区∩非河流周围1km缓冲区\n     > (5)将上逑3张图进行两两叠置,所得结果即为森林采伐图\n\n### <span id=\"泰森多边形\">泰森多边形分析</span>\n\n1. 定义\n\n   > 由**点图层**生成其**近邻多边形图层**，来表示该标识点的影响范围,\n   > 确保在一个多边形内的每个采样点与该多边形内的已知点更接近\n   > 而与其他的已知点相距较远，是**局部拟合插值法**的一种。每个\n   > 点对应一个新生成的多边形，该输入点作为多边形的标识点，**相**\n   > **邻标识点到其“公共边”的距离相等**\n\n2. 实现过程\n\n   > 由输入点相连生成三角网\n   > 对每个三角形的边作垂直平分线;删除原三角形\n   > 而每个输入点作为多边形的标识点,垂直平分线作为泰森多边形的边\n\n3. 应用与特点分析\n\n   特点：\n\n   + 多边形的多少取决于采样点的数量\n   + 多边形的面积和形状取决于样本点的分布\n   + 多边形的属性来源于单个采样点，与其他点无关\n   + 泰森多边形内部的均质与边界的突变\n\n   应用：\n\n   + 大气质量评估与污染气体分布\n\n## <span id=\"叠加分析\">叠置分析</span>\n\n### 定义\n\n综合不同图层、可能改变图层内空间要素的分析方法。指**同一地区、同种参考系统(坐标系统，分带与基准面)下**的两组或两组以上要素的数据文件进行叠置，根据两组的属性来建立具有**多重属性的多边形**或进行多边形范围内的属性特性的统计分析。\n\n### 目的\n\n**寻找和确定同时具有多种地理属性的分布区域**\n\n### 矢量数据的叠置分析及问题\n\n#### 点面叠置\n\n![点面叠置](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111153942.png)\n\n> 应用\n\n+ 得到某省内雨量站点的个数\n\n+ 某水文站点属于哪个行政区划\n\n+ 城市邮局分布密度\n\n#### 线面叠置\n\n![线面叠置](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211119152726.png)\n\n> ​\t应用\n\n+ 某省区内高速公路的长度\n+ 某段公路属于哪个行政区划\n+ 城市的河网密度\n+ 某条河流流经行政区\n\n#### 面面叠置\n\n![面面叠置](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111184045.png)\n\n> 应用\n\n+ 某省区内有哪几种土地利用类型\n+ 不同级别的灾害分区的植被覆盖情况\n+ 某行政区划内的地层岩性分布情况\n\n### 基本方法\n\n#### 图层合并\n\n并集：保留两个输入层中所有多边形\n\n![图层合并](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111185938.png)\n\n#### 交集操作\n\n交集：保留两个输入层中的公共区域\n\n![交集](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190005.png)\n\n#### 图层擦除\n\n![擦除](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190036.png)\n\n#### 识别叠加\n\n> 以输入图层为界，保留边界内的所有多边形\n\n![识别叠加](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190240.png)\n\n#### 对称差值\n\n#### 修正更新\n\n> 输出层为一个经删除处理后的图层与一个新特征图层进行合并后的结果\n\n![修正更新](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190437.png)\n\n#### 裁剪\n\n> 输出层为按一个图层的边界，对另外一个图层的内容要素进行截取后的结果\n\n![擦除](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190621.png)\n\n#### 交集取反\n\n> 保留两个输入层中的公共区域的反\n\n![交集取反](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111191207.png)\n\n## 栅格数据分析\n\n### <span id=\"距离分析\">距离分析</span>\n\n1. 源栅格\n\n   > 源即距离分析中的目标或目的地\n\n2. 成本栅格\n\n   > 记录了通过每一单元的通行成本\n\n3. 成本距离\n\n   > 记录每个栅格到距离最近、成本最低的源的最少累加成本\n\n4. 方向栅格\n\n   > 从每一单元出发，沿着最低累计成本路径到达最近源的路线方向\n\n5. 分配栅格\n\n   > 记录每一单元点隶属的最近源信息，单元值就是其最近源的值\n\n6. 直线距离\n\n   > 通过直线距离函数，计算每个栅格与最近源之间的欧氏距离，并按距离远近分级\n\n7. 最短路径\n\n   > 通过最短路径函数获取从一个起点或一组起点出发，到达一个目标地或一组目标地的最短直线路径或最小成本路径\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211122123502.png)\n\n### 密度分析\n\n针对一些点要素（或线要素）的特征值（如人口数）并不是集中在点上（或线上）的特点，对要素的特征值进行空间分配，从而更加真实地反映要素的分布\n\n#### 1. 简单密度\n\n#### 2.核密度\n\n### <span id=\"统计分析\">统计分析</span>\n\n#### 1. 单元统计\n\n以**栅格单元为单位**来进行单元统计分析，单元统计输入数据集必须是来源于同一个地理区域，并且采用相同的坐标系统\n\n#### 2.领域统计\n\n邻域统计是以待计算栅格为中心，向其周围扩展**一定邻域**，在单元对应的**邻域范围指定的单元上**进行统计分析，然后将结果值输出到该单元位置\n\n> 四种领域分析窗口：矩形领域、圆形领域、环形领域、扇形领域\n\n#### 3.分区统计\n\n分区统计，即以一个数据集的**分区为基础**，对另一个数据集进行统计分析，包括计算数值范围、最大值、最小值、标准差等等。分区统计是在每一个分区的基础上进行统计，输出结果时**同一分区被赋予相同的单一输出统计值**\n\n一个分区就是在栅格数据中拥有相同值的栅格单元，而**不考虑他们是否邻近**\n\n### <span id=\"重分类\">重分类分析</span>\n\n重分类是将**属性数据的类别转换成新类**，即基于栅格数据原有数值类型，对原有数值类型按照一定的原则重新进行分类，从而得到**一组新值**并输出\n\n重分类过程\n\n+ 新值替换：用一组新值取代栅格数据原来一组数值\n+ 重新分类：将原来几个数值重新组合成一个新的数值\n+ 旧值合并：用一个新值取代栅格数据原来一段数值区间或几类数值\n+ 空值设置：将栅格数据原来某个数值统一设置为空值\n\n### <span id=\"地图代数\">栅格计算(地图代数)</span>\n\n> 两个以上层面的栅格数据系统，以**某种函数关系**作为复合分析的依据进行**逐网格运算**，从而得到新的栅格数据系统的过程\n\n1. 代数运算\n\n   > 加减乘除、取整\n\n2. 逻辑运算\n\n   > 关系、布尔\n","slug":"位置与几何关系分析","published":1,"updated":"2021-11-22T12:57:42.420Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3n002pjsvk4gvx9ueu","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"邻近分析\"><a href=\"#邻近分析\" class=\"headerlink\" title=\"邻近分析\"></a>邻近分析</h2><p>邻近度：表达空间目标<strong>距离关系</strong>的重要物流量之一，表示地理空间中目标地物<strong>距离相近</strong>的程度</p>\n<h3 id=\"缓冲区分析\"><a href=\"#缓冲区分析\" class=\"headerlink\" title=\"缓冲区分析\"></a><span id=\"缓冲区\">缓冲区分析</span></h3><ol>\n<li><h4 id=\"缓冲区、缓冲区分析\"><a href=\"#缓冲区、缓冲区分析\" class=\"headerlink\" title=\"缓冲区、缓冲区分析\"></a>缓冲区、缓冲区分析</h4><p>缓冲区：为识别<strong>地理实体或空间物体(点、线、面)</strong>对周围地物的<strong>影响度</strong>而建立的具有一定宽度的带状区域，<strong>不包含原来点、线或面要素</strong>的多边形</p>\n<ul>\n<li>点、线、面要素缓冲区</li>\n<li>均质缓冲区</li>\n<li>非均质缓冲区</li>\n</ul>\n<p>缓冲区分析：对一组或一类地物按照缓冲的<strong>距离</strong>条件，建立缓冲，从而实现空间数据在<strong>二维空间得以扩展</strong>，来<strong>确定分析对象或筛选范围的</strong>信息分析方法</p>\n</li>\n<li><h4 id=\"缓冲区类型\"><a href=\"#缓冲区类型\" class=\"headerlink\" title=\"缓冲区类型\"></a>缓冲区类型</h4><p>基于点要素的缓冲区：</p>\n<blockquote>\n<p>通常以点为圆心、以一定距离为半径的圆</p>\n</blockquote>\n<p>基于线要素的缓冲区：</p>\n<blockquote>\n<p>通常是以线为中心轴线，距中心轴线一定距离的平行条带多边形</p>\n</blockquote>\n<p>基于面要素的缓冲区：</p>\n<blockquote>\n<p>向外或内扩展一定距离以生成新的多边形</p>\n</blockquote>\n<p>缓冲区分析三要素：</p>\n<ul>\n<li>主体：表示分析的主要目标，一般分为点源、线源、和面源三类</li>\n<li>邻近对象：表示受主体影响的客体，例如行政界限变更时所影响的水土流失范围等</li>\n<li>对象的作用条件：表示主体邻近对象施加作用的影响条件或影响强度</li>\n</ul>\n</li>\n<li><h4 id=\"缓冲区实现的基本算法\"><a href=\"#缓冲区实现的基本算法\" class=\"headerlink\" title=\"缓冲区实现的基本算法\"></a>缓冲区实现的基本算法</h4></li>\n<li><h4 id=\"缓冲区分析应用\"><a href=\"#缓冲区分析应用\" class=\"headerlink\" title=\"缓冲区分析应用\"></a><span id=\"缓冲区分析应用\">缓冲区分析应用</span></h4><h5 id=\"1-案例一\"><a href=\"#1-案例一\" class=\"headerlink\" title=\"1. 案例一\"></a>1. 案例一</h5><p>实习背景</p>\n<blockquote>\n<p>如何找到环境好、购物方便、小孩上学方便的居住区地段是购房者最关心的问题，因此，为了辅助购房者的决策，需要从总体上对商品房的信息进行研究分析，<strong>找出满足购房者需要的区域</strong>，并对<strong>城市区域住房条件分定等级</strong>。</p>\n</blockquote>\n<p>所寻求的区域应满足：</p>\n<blockquote>\n<p>离主要交通要道200米之外，以减少噪音污染(ST为道路数据中的类型为交通要道要素)；<br>在商业中心服务范围之内，服务范围以商业中心700米之内；<br>距名牌高中750米之内，以便小孩上学便捷；<br>距名胜古迹500米之内，环境优雅</p>\n</blockquote>\n<p>步骤：</p>\n<blockquote>\n<ol>\n<li>交通网络图层栅格查询选择出市区的主要交通道路</li>\n<li>对选择的主干道进行缓冲区建立，指定缓冲区半径为200米</li>\n<li>建立商业中心缓冲区，缓冲半径为700米</li>\n<li>建立名胜古迹缓冲区，缓冲半径为500米</li>\n<li>建立名牌高中缓冲区，缓冲半径为750米</li>\n<li>对商业中心缓冲区、名牌高中缓冲区、名胜古迹缓冲区进行叠置分析的交集操作</li>\n<li><p>用主干道缓冲区对获得的三个区域的交集进行图层擦除，得到满足购房需求的区域</p>\n</li>\n<li><p>对前四个缓冲区添加字段，主干道缓冲区字段值赋值-1，另三个图层赋值为1</p>\n</li>\n<li>将四个图层进行合并，连接全部字段</li>\n<li>打开生成图层的属性列表，添加分类字段并计算4个字段的和进行分定等级</li>\n<li>设置分级显示图层，完成住房条件分定等级</li>\n</ol>\n</blockquote>\n<h5 id=\"2-案例二\"><a href=\"#2-案例二\" class=\"headerlink\" title=\"2. 案例二\"></a>2. 案例二</h5><p>  获准在某林区采伐，为防止水土流失，规定不得在河流周围1km内采伐林木。另外，为便于运输，决定将采伐区定在道路周围5km 之内。请找出符合上逑条件的采伐区，输出森林采伐图。</p>\n<blockquote>\n<p>(1)将该地区具有相同比例尺且进行配准的道路分布图﹑河流分布图﹑森林分布图，进行预处理和数字化;<br>(2)利用河流分布图生成1km 的等距缓冲区;</p>\n<p>(3)利用道路分布图生成5km的等距缓冲区;<br>(4)森林分布图中可采伐林地﹑道路缓冲区及河流缓冲区图进行叠置，叠置条件表达式为:采伐区=森林分布图中可伐林地∩道路周围5km缓冲区∩非河流周围1km缓冲区<br>(5)将上逑3张图进行两两叠置,所得结果即为森林采伐图</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"泰森多边形分析\"><a href=\"#泰森多边形分析\" class=\"headerlink\" title=\"泰森多边形分析\"></a><span id=\"泰森多边形\">泰森多边形分析</span></h3><ol>\n<li><p>定义</p>\n<blockquote>\n<p>由<strong>点图层</strong>生成其<strong>近邻多边形图层</strong>，来表示该标识点的影响范围,<br>确保在一个多边形内的每个采样点与该多边形内的已知点更接近<br>而与其他的已知点相距较远，是<strong>局部拟合插值法</strong>的一种。每个<br>点对应一个新生成的多边形，该输入点作为多边形的标识点，<strong>相</strong><br><strong>邻标识点到其“公共边”的距离相等</strong></p>\n</blockquote>\n</li>\n<li><p>实现过程</p>\n<blockquote>\n<p>由输入点相连生成三角网<br>对每个三角形的边作垂直平分线;删除原三角形<br>而每个输入点作为多边形的标识点,垂直平分线作为泰森多边形的边</p>\n</blockquote>\n</li>\n<li><p>应用与特点分析</p>\n<p>特点：</p>\n<ul>\n<li>多边形的多少取决于采样点的数量</li>\n<li>多边形的面积和形状取决于样本点的分布</li>\n<li>多边形的属性来源于单个采样点，与其他点无关</li>\n<li>泰森多边形内部的均质与边界的突变</li>\n</ul>\n<p>应用：</p>\n<ul>\n<li>大气质量评估与污染气体分布</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"叠置分析\"><a href=\"#叠置分析\" class=\"headerlink\" title=\"叠置分析\"></a><span id=\"叠加分析\">叠置分析</span></h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>综合不同图层、可能改变图层内空间要素的分析方法。指<strong>同一地区、同种参考系统(坐标系统，分带与基准面)下</strong>的两组或两组以上要素的数据文件进行叠置，根据两组的属性来建立具有<strong>多重属性的多边形</strong>或进行多边形范围内的属性特性的统计分析。</p>\n<h3 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h3><p><strong>寻找和确定同时具有多种地理属性的分布区域</strong></p>\n<h3 id=\"矢量数据的叠置分析及问题\"><a href=\"#矢量数据的叠置分析及问题\" class=\"headerlink\" title=\"矢量数据的叠置分析及问题\"></a>矢量数据的叠置分析及问题</h3><h4 id=\"点面叠置\"><a href=\"#点面叠置\" class=\"headerlink\" title=\"点面叠置\"></a>点面叠置</h4><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111153942.png\" alt=\"点面叠置\"></p>\n<blockquote>\n<p>应用</p>\n</blockquote>\n<ul>\n<li><p>得到某省内雨量站点的个数</p>\n</li>\n<li><p>某水文站点属于哪个行政区划</p>\n</li>\n<li><p>城市邮局分布密度</p>\n</li>\n</ul>\n<h4 id=\"线面叠置\"><a href=\"#线面叠置\" class=\"headerlink\" title=\"线面叠置\"></a>线面叠置</h4><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211119152726.png\" alt=\"线面叠置\"></p>\n<blockquote>\n<p>​    应用</p>\n</blockquote>\n<ul>\n<li>某省区内高速公路的长度</li>\n<li>某段公路属于哪个行政区划</li>\n<li>城市的河网密度</li>\n<li>某条河流流经行政区</li>\n</ul>\n<h4 id=\"面面叠置\"><a href=\"#面面叠置\" class=\"headerlink\" title=\"面面叠置\"></a>面面叠置</h4><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111184045.png\" alt=\"面面叠置\"></p>\n<blockquote>\n<p>应用</p>\n</blockquote>\n<ul>\n<li>某省区内有哪几种土地利用类型</li>\n<li>不同级别的灾害分区的植被覆盖情况</li>\n<li>某行政区划内的地层岩性分布情况</li>\n</ul>\n<h3 id=\"基本方法\"><a href=\"#基本方法\" class=\"headerlink\" title=\"基本方法\"></a>基本方法</h3><h4 id=\"图层合并\"><a href=\"#图层合并\" class=\"headerlink\" title=\"图层合并\"></a>图层合并</h4><p>并集：保留两个输入层中所有多边形</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111185938.png\" alt=\"图层合并\"></p>\n<h4 id=\"交集操作\"><a href=\"#交集操作\" class=\"headerlink\" title=\"交集操作\"></a>交集操作</h4><p>交集：保留两个输入层中的公共区域</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190005.png\" alt=\"交集\"></p>\n<h4 id=\"图层擦除\"><a href=\"#图层擦除\" class=\"headerlink\" title=\"图层擦除\"></a>图层擦除</h4><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190036.png\" alt=\"擦除\"></p>\n<h4 id=\"识别叠加\"><a href=\"#识别叠加\" class=\"headerlink\" title=\"识别叠加\"></a>识别叠加</h4><blockquote>\n<p>以输入图层为界，保留边界内的所有多边形</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190240.png\" alt=\"识别叠加\"></p>\n<h4 id=\"对称差值\"><a href=\"#对称差值\" class=\"headerlink\" title=\"对称差值\"></a>对称差值</h4><h4 id=\"修正更新\"><a href=\"#修正更新\" class=\"headerlink\" title=\"修正更新\"></a>修正更新</h4><blockquote>\n<p>输出层为一个经删除处理后的图层与一个新特征图层进行合并后的结果</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190437.png\" alt=\"修正更新\"></p>\n<h4 id=\"裁剪\"><a href=\"#裁剪\" class=\"headerlink\" title=\"裁剪\"></a>裁剪</h4><blockquote>\n<p>输出层为按一个图层的边界，对另外一个图层的内容要素进行截取后的结果</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190621.png\" alt=\"擦除\"></p>\n<h4 id=\"交集取反\"><a href=\"#交集取反\" class=\"headerlink\" title=\"交集取反\"></a>交集取反</h4><blockquote>\n<p>保留两个输入层中的公共区域的反</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111191207.png\" alt=\"交集取反\"></p>\n<h2 id=\"栅格数据分析\"><a href=\"#栅格数据分析\" class=\"headerlink\" title=\"栅格数据分析\"></a>栅格数据分析</h2><h3 id=\"距离分析\"><a href=\"#距离分析\" class=\"headerlink\" title=\"距离分析\"></a><span id=\"距离分析\">距离分析</span></h3><ol>\n<li><p>源栅格</p>\n<blockquote>\n<p>源即距离分析中的目标或目的地</p>\n</blockquote>\n</li>\n<li><p>成本栅格</p>\n<blockquote>\n<p>记录了通过每一单元的通行成本</p>\n</blockquote>\n</li>\n<li><p>成本距离</p>\n<blockquote>\n<p>记录每个栅格到距离最近、成本最低的源的最少累加成本</p>\n</blockquote>\n</li>\n<li><p>方向栅格</p>\n<blockquote>\n<p>从每一单元出发，沿着最低累计成本路径到达最近源的路线方向</p>\n</blockquote>\n</li>\n<li><p>分配栅格</p>\n<blockquote>\n<p>记录每一单元点隶属的最近源信息，单元值就是其最近源的值</p>\n</blockquote>\n</li>\n<li><p>直线距离</p>\n<blockquote>\n<p>通过直线距离函数，计算每个栅格与最近源之间的欧氏距离，并按距离远近分级</p>\n</blockquote>\n</li>\n<li><p>最短路径</p>\n<blockquote>\n<p>通过最短路径函数获取从一个起点或一组起点出发，到达一个目标地或一组目标地的最短直线路径或最小成本路径</p>\n</blockquote>\n</li>\n</ol>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211122123502.png\" alt=\"\"></p>\n<h3 id=\"密度分析\"><a href=\"#密度分析\" class=\"headerlink\" title=\"密度分析\"></a>密度分析</h3><p>针对一些点要素（或线要素）的特征值（如人口数）并不是集中在点上（或线上）的特点，对要素的特征值进行空间分配，从而更加真实地反映要素的分布</p>\n<h4 id=\"1-简单密度\"><a href=\"#1-简单密度\" class=\"headerlink\" title=\"1. 简单密度\"></a>1. 简单密度</h4><h4 id=\"2-核密度\"><a href=\"#2-核密度\" class=\"headerlink\" title=\"2.核密度\"></a>2.核密度</h4><h3 id=\"统计分析\"><a href=\"#统计分析\" class=\"headerlink\" title=\"统计分析\"></a><span id=\"统计分析\">统计分析</span></h3><h4 id=\"1-单元统计\"><a href=\"#1-单元统计\" class=\"headerlink\" title=\"1. 单元统计\"></a>1. 单元统计</h4><p>以<strong>栅格单元为单位</strong>来进行单元统计分析，单元统计输入数据集必须是来源于同一个地理区域，并且采用相同的坐标系统</p>\n<h4 id=\"2-领域统计\"><a href=\"#2-领域统计\" class=\"headerlink\" title=\"2.领域统计\"></a>2.领域统计</h4><p>邻域统计是以待计算栅格为中心，向其周围扩展<strong>一定邻域</strong>，在单元对应的<strong>邻域范围指定的单元上</strong>进行统计分析，然后将结果值输出到该单元位置</p>\n<blockquote>\n<p>四种领域分析窗口：矩形领域、圆形领域、环形领域、扇形领域</p>\n</blockquote>\n<h4 id=\"3-分区统计\"><a href=\"#3-分区统计\" class=\"headerlink\" title=\"3.分区统计\"></a>3.分区统计</h4><p>分区统计，即以一个数据集的<strong>分区为基础</strong>，对另一个数据集进行统计分析，包括计算数值范围、最大值、最小值、标准差等等。分区统计是在每一个分区的基础上进行统计，输出结果时<strong>同一分区被赋予相同的单一输出统计值</strong></p>\n<p>一个分区就是在栅格数据中拥有相同值的栅格单元，而<strong>不考虑他们是否邻近</strong></p>\n<h3 id=\"重分类分析\"><a href=\"#重分类分析\" class=\"headerlink\" title=\"重分类分析\"></a><span id=\"重分类\">重分类分析</span></h3><p>重分类是将<strong>属性数据的类别转换成新类</strong>，即基于栅格数据原有数值类型，对原有数值类型按照一定的原则重新进行分类，从而得到<strong>一组新值</strong>并输出</p>\n<p>重分类过程</p>\n<ul>\n<li>新值替换：用一组新值取代栅格数据原来一组数值</li>\n<li>重新分类：将原来几个数值重新组合成一个新的数值</li>\n<li>旧值合并：用一个新值取代栅格数据原来一段数值区间或几类数值</li>\n<li>空值设置：将栅格数据原来某个数值统一设置为空值</li>\n</ul>\n<h3 id=\"栅格计算-地图代数\"><a href=\"#栅格计算-地图代数\" class=\"headerlink\" title=\"栅格计算(地图代数)\"></a><span id=\"地图代数\">栅格计算(地图代数)</span></h3><blockquote>\n<p>两个以上层面的栅格数据系统，以<strong>某种函数关系</strong>作为复合分析的依据进行<strong>逐网格运算</strong>，从而得到新的栅格数据系统的过程</p>\n</blockquote>\n<ol>\n<li><p>代数运算</p>\n<blockquote>\n<p>加减乘除、取整</p>\n</blockquote>\n</li>\n<li><p>逻辑运算</p>\n<blockquote>\n<p>关系、布尔</p>\n</blockquote>\n</li>\n</ol>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160624.jpg","length":2833,"excerpt":"","more":"<h2 id=\"邻近分析\"><a href=\"#邻近分析\" class=\"headerlink\" title=\"邻近分析\"></a>邻近分析</h2><p>邻近度：表达空间目标<strong>距离关系</strong>的重要物流量之一，表示地理空间中目标地物<strong>距离相近</strong>的程度</p>\n<h3 id=\"缓冲区分析\"><a href=\"#缓冲区分析\" class=\"headerlink\" title=\"缓冲区分析\"></a><span id=\"缓冲区\">缓冲区分析</span></h3><ol>\n<li><h4 id=\"缓冲区、缓冲区分析\"><a href=\"#缓冲区、缓冲区分析\" class=\"headerlink\" title=\"缓冲区、缓冲区分析\"></a>缓冲区、缓冲区分析</h4><p>缓冲区：为识别<strong>地理实体或空间物体(点、线、面)</strong>对周围地物的<strong>影响度</strong>而建立的具有一定宽度的带状区域，<strong>不包含原来点、线或面要素</strong>的多边形</p>\n<ul>\n<li>点、线、面要素缓冲区</li>\n<li>均质缓冲区</li>\n<li>非均质缓冲区</li>\n</ul>\n<p>缓冲区分析：对一组或一类地物按照缓冲的<strong>距离</strong>条件，建立缓冲，从而实现空间数据在<strong>二维空间得以扩展</strong>，来<strong>确定分析对象或筛选范围的</strong>信息分析方法</p>\n</li>\n<li><h4 id=\"缓冲区类型\"><a href=\"#缓冲区类型\" class=\"headerlink\" title=\"缓冲区类型\"></a>缓冲区类型</h4><p>基于点要素的缓冲区：</p>\n<blockquote>\n<p>通常以点为圆心、以一定距离为半径的圆</p>\n</blockquote>\n<p>基于线要素的缓冲区：</p>\n<blockquote>\n<p>通常是以线为中心轴线，距中心轴线一定距离的平行条带多边形</p>\n</blockquote>\n<p>基于面要素的缓冲区：</p>\n<blockquote>\n<p>向外或内扩展一定距离以生成新的多边形</p>\n</blockquote>\n<p>缓冲区分析三要素：</p>\n<ul>\n<li>主体：表示分析的主要目标，一般分为点源、线源、和面源三类</li>\n<li>邻近对象：表示受主体影响的客体，例如行政界限变更时所影响的水土流失范围等</li>\n<li>对象的作用条件：表示主体邻近对象施加作用的影响条件或影响强度</li>\n</ul>\n</li>\n<li><h4 id=\"缓冲区实现的基本算法\"><a href=\"#缓冲区实现的基本算法\" class=\"headerlink\" title=\"缓冲区实现的基本算法\"></a>缓冲区实现的基本算法</h4></li>\n<li><h4 id=\"缓冲区分析应用\"><a href=\"#缓冲区分析应用\" class=\"headerlink\" title=\"缓冲区分析应用\"></a><span id=\"缓冲区分析应用\">缓冲区分析应用</span></h4><h5 id=\"1-案例一\"><a href=\"#1-案例一\" class=\"headerlink\" title=\"1. 案例一\"></a>1. 案例一</h5><p>实习背景</p>\n<blockquote>\n<p>如何找到环境好、购物方便、小孩上学方便的居住区地段是购房者最关心的问题，因此，为了辅助购房者的决策，需要从总体上对商品房的信息进行研究分析，<strong>找出满足购房者需要的区域</strong>，并对<strong>城市区域住房条件分定等级</strong>。</p>\n</blockquote>\n<p>所寻求的区域应满足：</p>\n<blockquote>\n<p>离主要交通要道200米之外，以减少噪音污染(ST为道路数据中的类型为交通要道要素)；<br>在商业中心服务范围之内，服务范围以商业中心700米之内；<br>距名牌高中750米之内，以便小孩上学便捷；<br>距名胜古迹500米之内，环境优雅</p>\n</blockquote>\n<p>步骤：</p>\n<blockquote>\n<ol>\n<li>交通网络图层栅格查询选择出市区的主要交通道路</li>\n<li>对选择的主干道进行缓冲区建立，指定缓冲区半径为200米</li>\n<li>建立商业中心缓冲区，缓冲半径为700米</li>\n<li>建立名胜古迹缓冲区，缓冲半径为500米</li>\n<li>建立名牌高中缓冲区，缓冲半径为750米</li>\n<li>对商业中心缓冲区、名牌高中缓冲区、名胜古迹缓冲区进行叠置分析的交集操作</li>\n<li><p>用主干道缓冲区对获得的三个区域的交集进行图层擦除，得到满足购房需求的区域</p>\n</li>\n<li><p>对前四个缓冲区添加字段，主干道缓冲区字段值赋值-1，另三个图层赋值为1</p>\n</li>\n<li>将四个图层进行合并，连接全部字段</li>\n<li>打开生成图层的属性列表，添加分类字段并计算4个字段的和进行分定等级</li>\n<li>设置分级显示图层，完成住房条件分定等级</li>\n</ol>\n</blockquote>\n<h5 id=\"2-案例二\"><a href=\"#2-案例二\" class=\"headerlink\" title=\"2. 案例二\"></a>2. 案例二</h5><p>  获准在某林区采伐，为防止水土流失，规定不得在河流周围1km内采伐林木。另外，为便于运输，决定将采伐区定在道路周围5km 之内。请找出符合上逑条件的采伐区，输出森林采伐图。</p>\n<blockquote>\n<p>(1)将该地区具有相同比例尺且进行配准的道路分布图﹑河流分布图﹑森林分布图，进行预处理和数字化;<br>(2)利用河流分布图生成1km 的等距缓冲区;</p>\n<p>(3)利用道路分布图生成5km的等距缓冲区;<br>(4)森林分布图中可采伐林地﹑道路缓冲区及河流缓冲区图进行叠置，叠置条件表达式为:采伐区=森林分布图中可伐林地∩道路周围5km缓冲区∩非河流周围1km缓冲区<br>(5)将上逑3张图进行两两叠置,所得结果即为森林采伐图</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"泰森多边形分析\"><a href=\"#泰森多边形分析\" class=\"headerlink\" title=\"泰森多边形分析\"></a><span id=\"泰森多边形\">泰森多边形分析</span></h3><ol>\n<li><p>定义</p>\n<blockquote>\n<p>由<strong>点图层</strong>生成其<strong>近邻多边形图层</strong>，来表示该标识点的影响范围,<br>确保在一个多边形内的每个采样点与该多边形内的已知点更接近<br>而与其他的已知点相距较远，是<strong>局部拟合插值法</strong>的一种。每个<br>点对应一个新生成的多边形，该输入点作为多边形的标识点，<strong>相</strong><br><strong>邻标识点到其“公共边”的距离相等</strong></p>\n</blockquote>\n</li>\n<li><p>实现过程</p>\n<blockquote>\n<p>由输入点相连生成三角网<br>对每个三角形的边作垂直平分线;删除原三角形<br>而每个输入点作为多边形的标识点,垂直平分线作为泰森多边形的边</p>\n</blockquote>\n</li>\n<li><p>应用与特点分析</p>\n<p>特点：</p>\n<ul>\n<li>多边形的多少取决于采样点的数量</li>\n<li>多边形的面积和形状取决于样本点的分布</li>\n<li>多边形的属性来源于单个采样点，与其他点无关</li>\n<li>泰森多边形内部的均质与边界的突变</li>\n</ul>\n<p>应用：</p>\n<ul>\n<li>大气质量评估与污染气体分布</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"叠置分析\"><a href=\"#叠置分析\" class=\"headerlink\" title=\"叠置分析\"></a><span id=\"叠加分析\">叠置分析</span></h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>综合不同图层、可能改变图层内空间要素的分析方法。指<strong>同一地区、同种参考系统(坐标系统，分带与基准面)下</strong>的两组或两组以上要素的数据文件进行叠置，根据两组的属性来建立具有<strong>多重属性的多边形</strong>或进行多边形范围内的属性特性的统计分析。</p>\n<h3 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h3><p><strong>寻找和确定同时具有多种地理属性的分布区域</strong></p>\n<h3 id=\"矢量数据的叠置分析及问题\"><a href=\"#矢量数据的叠置分析及问题\" class=\"headerlink\" title=\"矢量数据的叠置分析及问题\"></a>矢量数据的叠置分析及问题</h3><h4 id=\"点面叠置\"><a href=\"#点面叠置\" class=\"headerlink\" title=\"点面叠置\"></a>点面叠置</h4><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111153942.png\" alt=\"点面叠置\"></p>\n<blockquote>\n<p>应用</p>\n</blockquote>\n<ul>\n<li><p>得到某省内雨量站点的个数</p>\n</li>\n<li><p>某水文站点属于哪个行政区划</p>\n</li>\n<li><p>城市邮局分布密度</p>\n</li>\n</ul>\n<h4 id=\"线面叠置\"><a href=\"#线面叠置\" class=\"headerlink\" title=\"线面叠置\"></a>线面叠置</h4><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211119152726.png\" alt=\"线面叠置\"></p>\n<blockquote>\n<p>​    应用</p>\n</blockquote>\n<ul>\n<li>某省区内高速公路的长度</li>\n<li>某段公路属于哪个行政区划</li>\n<li>城市的河网密度</li>\n<li>某条河流流经行政区</li>\n</ul>\n<h4 id=\"面面叠置\"><a href=\"#面面叠置\" class=\"headerlink\" title=\"面面叠置\"></a>面面叠置</h4><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111184045.png\" alt=\"面面叠置\"></p>\n<blockquote>\n<p>应用</p>\n</blockquote>\n<ul>\n<li>某省区内有哪几种土地利用类型</li>\n<li>不同级别的灾害分区的植被覆盖情况</li>\n<li>某行政区划内的地层岩性分布情况</li>\n</ul>\n<h3 id=\"基本方法\"><a href=\"#基本方法\" class=\"headerlink\" title=\"基本方法\"></a>基本方法</h3><h4 id=\"图层合并\"><a href=\"#图层合并\" class=\"headerlink\" title=\"图层合并\"></a>图层合并</h4><p>并集：保留两个输入层中所有多边形</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111185938.png\" alt=\"图层合并\"></p>\n<h4 id=\"交集操作\"><a href=\"#交集操作\" class=\"headerlink\" title=\"交集操作\"></a>交集操作</h4><p>交集：保留两个输入层中的公共区域</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190005.png\" alt=\"交集\"></p>\n<h4 id=\"图层擦除\"><a href=\"#图层擦除\" class=\"headerlink\" title=\"图层擦除\"></a>图层擦除</h4><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190036.png\" alt=\"擦除\"></p>\n<h4 id=\"识别叠加\"><a href=\"#识别叠加\" class=\"headerlink\" title=\"识别叠加\"></a>识别叠加</h4><blockquote>\n<p>以输入图层为界，保留边界内的所有多边形</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190240.png\" alt=\"识别叠加\"></p>\n<h4 id=\"对称差值\"><a href=\"#对称差值\" class=\"headerlink\" title=\"对称差值\"></a>对称差值</h4><h4 id=\"修正更新\"><a href=\"#修正更新\" class=\"headerlink\" title=\"修正更新\"></a>修正更新</h4><blockquote>\n<p>输出层为一个经删除处理后的图层与一个新特征图层进行合并后的结果</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190437.png\" alt=\"修正更新\"></p>\n<h4 id=\"裁剪\"><a href=\"#裁剪\" class=\"headerlink\" title=\"裁剪\"></a>裁剪</h4><blockquote>\n<p>输出层为按一个图层的边界，对另外一个图层的内容要素进行截取后的结果</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111190621.png\" alt=\"擦除\"></p>\n<h4 id=\"交集取反\"><a href=\"#交集取反\" class=\"headerlink\" title=\"交集取反\"></a>交集取反</h4><blockquote>\n<p>保留两个输入层中的公共区域的反</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211111191207.png\" alt=\"交集取反\"></p>\n<h2 id=\"栅格数据分析\"><a href=\"#栅格数据分析\" class=\"headerlink\" title=\"栅格数据分析\"></a>栅格数据分析</h2><h3 id=\"距离分析\"><a href=\"#距离分析\" class=\"headerlink\" title=\"距离分析\"></a><span id=\"距离分析\">距离分析</span></h3><ol>\n<li><p>源栅格</p>\n<blockquote>\n<p>源即距离分析中的目标或目的地</p>\n</blockquote>\n</li>\n<li><p>成本栅格</p>\n<blockquote>\n<p>记录了通过每一单元的通行成本</p>\n</blockquote>\n</li>\n<li><p>成本距离</p>\n<blockquote>\n<p>记录每个栅格到距离最近、成本最低的源的最少累加成本</p>\n</blockquote>\n</li>\n<li><p>方向栅格</p>\n<blockquote>\n<p>从每一单元出发，沿着最低累计成本路径到达最近源的路线方向</p>\n</blockquote>\n</li>\n<li><p>分配栅格</p>\n<blockquote>\n<p>记录每一单元点隶属的最近源信息，单元值就是其最近源的值</p>\n</blockquote>\n</li>\n<li><p>直线距离</p>\n<blockquote>\n<p>通过直线距离函数，计算每个栅格与最近源之间的欧氏距离，并按距离远近分级</p>\n</blockquote>\n</li>\n<li><p>最短路径</p>\n<blockquote>\n<p>通过最短路径函数获取从一个起点或一组起点出发，到达一个目标地或一组目标地的最短直线路径或最小成本路径</p>\n</blockquote>\n</li>\n</ol>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211122123502.png\" alt=\"\"></p>\n<h3 id=\"密度分析\"><a href=\"#密度分析\" class=\"headerlink\" title=\"密度分析\"></a>密度分析</h3><p>针对一些点要素（或线要素）的特征值（如人口数）并不是集中在点上（或线上）的特点，对要素的特征值进行空间分配，从而更加真实地反映要素的分布</p>\n<h4 id=\"1-简单密度\"><a href=\"#1-简单密度\" class=\"headerlink\" title=\"1. 简单密度\"></a>1. 简单密度</h4><h4 id=\"2-核密度\"><a href=\"#2-核密度\" class=\"headerlink\" title=\"2.核密度\"></a>2.核密度</h4><h3 id=\"统计分析\"><a href=\"#统计分析\" class=\"headerlink\" title=\"统计分析\"></a><span id=\"统计分析\">统计分析</span></h3><h4 id=\"1-单元统计\"><a href=\"#1-单元统计\" class=\"headerlink\" title=\"1. 单元统计\"></a>1. 单元统计</h4><p>以<strong>栅格单元为单位</strong>来进行单元统计分析，单元统计输入数据集必须是来源于同一个地理区域，并且采用相同的坐标系统</p>\n<h4 id=\"2-领域统计\"><a href=\"#2-领域统计\" class=\"headerlink\" title=\"2.领域统计\"></a>2.领域统计</h4><p>邻域统计是以待计算栅格为中心，向其周围扩展<strong>一定邻域</strong>，在单元对应的<strong>邻域范围指定的单元上</strong>进行统计分析，然后将结果值输出到该单元位置</p>\n<blockquote>\n<p>四种领域分析窗口：矩形领域、圆形领域、环形领域、扇形领域</p>\n</blockquote>\n<h4 id=\"3-分区统计\"><a href=\"#3-分区统计\" class=\"headerlink\" title=\"3.分区统计\"></a>3.分区统计</h4><p>分区统计，即以一个数据集的<strong>分区为基础</strong>，对另一个数据集进行统计分析，包括计算数值范围、最大值、最小值、标准差等等。分区统计是在每一个分区的基础上进行统计，输出结果时<strong>同一分区被赋予相同的单一输出统计值</strong></p>\n<p>一个分区就是在栅格数据中拥有相同值的栅格单元，而<strong>不考虑他们是否邻近</strong></p>\n<h3 id=\"重分类分析\"><a href=\"#重分类分析\" class=\"headerlink\" title=\"重分类分析\"></a><span id=\"重分类\">重分类分析</span></h3><p>重分类是将<strong>属性数据的类别转换成新类</strong>，即基于栅格数据原有数值类型，对原有数值类型按照一定的原则重新进行分类，从而得到<strong>一组新值</strong>并输出</p>\n<p>重分类过程</p>\n<ul>\n<li>新值替换：用一组新值取代栅格数据原来一组数值</li>\n<li>重新分类：将原来几个数值重新组合成一个新的数值</li>\n<li>旧值合并：用一个新值取代栅格数据原来一段数值区间或几类数值</li>\n<li>空值设置：将栅格数据原来某个数值统一设置为空值</li>\n</ul>\n<h3 id=\"栅格计算-地图代数\"><a href=\"#栅格计算-地图代数\" class=\"headerlink\" title=\"栅格计算(地图代数)\"></a><span id=\"地图代数\">栅格计算(地图代数)</span></h3><blockquote>\n<p>两个以上层面的栅格数据系统，以<strong>某种函数关系</strong>作为复合分析的依据进行<strong>逐网格运算</strong>，从而得到新的栅格数据系统的过程</p>\n</blockquote>\n<ol>\n<li><p>代数运算</p>\n<blockquote>\n<p>加减乘除、取整</p>\n</blockquote>\n</li>\n<li><p>逻辑运算</p>\n<blockquote>\n<p>关系、布尔</p>\n</blockquote>\n</li>\n</ol>\n"},{"title":"像片纠正及正射影像制作","date":"2021-07-05T11:05:22.000Z","description":"像片纠正及正射影像制作","_content":"\n## 1.像片纠正的概念\n\n将竖直摄影测量的航摄像片通过投影变换，获得相当于航摄相机物镜主光轴在铅锤位置摄影的水平像片，同时改化规定的比例尺\n\n## 2.摄影测量外业工作\n\n### 1.外业工作任务\n\n+ 像片野外控制测量\n  + 像控点：直接为摄影测量加密或测图需要，在实地测定的控制点\n+ 像片调绘与补测\n  + 像片调绘：利用像片进行判读 调查和绘注等工作的总称\n  + 像片判读：根据航片上地物影像的特征，识别出于像片影像相应的地物的类别 特征和某些元素或者测算某种数据指标的过程\n\n### 2.外业工作过程\n\n+ 技术设计\n+ 准备工作及拟定作业计划\n+ 外业工作实施\n+ 外业成果检查与验收\n\n### 3.像片控制点的布设\n\n1. 控制点类型\n   + 平面控制点\n   + 高程控制点\n   + 平高控制点\n\n2. 控制点布设方案\n   + 全野外布点\n   + 非全野外布点\n\n\n\n","source":"_posts/像片纠正及正射影像制作.md","raw":"---\ntitle: 像片纠正及正射影像制作\ndate: 2021-07-05 19:05:22\ncategories: [GIS,摄影测量,像片纠正及正射影像制作]\ntags: 摄影测量\ndescription: 像片纠正及正射影像制作\n---\n\n## 1.像片纠正的概念\n\n将竖直摄影测量的航摄像片通过投影变换，获得相当于航摄相机物镜主光轴在铅锤位置摄影的水平像片，同时改化规定的比例尺\n\n## 2.摄影测量外业工作\n\n### 1.外业工作任务\n\n+ 像片野外控制测量\n  + 像控点：直接为摄影测量加密或测图需要，在实地测定的控制点\n+ 像片调绘与补测\n  + 像片调绘：利用像片进行判读 调查和绘注等工作的总称\n  + 像片判读：根据航片上地物影像的特征，识别出于像片影像相应的地物的类别 特征和某些元素或者测算某种数据指标的过程\n\n### 2.外业工作过程\n\n+ 技术设计\n+ 准备工作及拟定作业计划\n+ 外业工作实施\n+ 外业成果检查与验收\n\n### 3.像片控制点的布设\n\n1. 控制点类型\n   + 平面控制点\n   + 高程控制点\n   + 平高控制点\n\n2. 控制点布设方案\n   + 全野外布点\n   + 非全野外布点\n\n\n\n","slug":"像片纠正及正射影像制作","published":1,"updated":"2021-11-10T11:12:40.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3o002tjsvkh6weh2jz","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"1-像片纠正的概念\"><a href=\"#1-像片纠正的概念\" class=\"headerlink\" title=\"1.像片纠正的概念\"></a>1.像片纠正的概念</h2><p>将竖直摄影测量的航摄像片通过投影变换，获得相当于航摄相机物镜主光轴在铅锤位置摄影的水平像片，同时改化规定的比例尺</p>\n<h2 id=\"2-摄影测量外业工作\"><a href=\"#2-摄影测量外业工作\" class=\"headerlink\" title=\"2.摄影测量外业工作\"></a>2.摄影测量外业工作</h2><h3 id=\"1-外业工作任务\"><a href=\"#1-外业工作任务\" class=\"headerlink\" title=\"1.外业工作任务\"></a>1.外业工作任务</h3><ul>\n<li>像片野外控制测量<ul>\n<li>像控点：直接为摄影测量加密或测图需要，在实地测定的控制点</li>\n</ul>\n</li>\n<li>像片调绘与补测<ul>\n<li>像片调绘：利用像片进行判读 调查和绘注等工作的总称</li>\n<li>像片判读：根据航片上地物影像的特征，识别出于像片影像相应的地物的类别 特征和某些元素或者测算某种数据指标的过程</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-外业工作过程\"><a href=\"#2-外业工作过程\" class=\"headerlink\" title=\"2.外业工作过程\"></a>2.外业工作过程</h3><ul>\n<li>技术设计</li>\n<li>准备工作及拟定作业计划</li>\n<li>外业工作实施</li>\n<li>外业成果检查与验收</li>\n</ul>\n<h3 id=\"3-像片控制点的布设\"><a href=\"#3-像片控制点的布设\" class=\"headerlink\" title=\"3.像片控制点的布设\"></a>3.像片控制点的布设</h3><ol>\n<li><p>控制点类型</p>\n<ul>\n<li>平面控制点</li>\n<li>高程控制点</li>\n<li>平高控制点</li>\n</ul>\n</li>\n<li><p>控制点布设方案</p>\n<ul>\n<li>全野外布点</li>\n<li>非全野外布点</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160623.jpg","length":290,"excerpt":"","more":"<h2 id=\"1-像片纠正的概念\"><a href=\"#1-像片纠正的概念\" class=\"headerlink\" title=\"1.像片纠正的概念\"></a>1.像片纠正的概念</h2><p>将竖直摄影测量的航摄像片通过投影变换，获得相当于航摄相机物镜主光轴在铅锤位置摄影的水平像片，同时改化规定的比例尺</p>\n<h2 id=\"2-摄影测量外业工作\"><a href=\"#2-摄影测量外业工作\" class=\"headerlink\" title=\"2.摄影测量外业工作\"></a>2.摄影测量外业工作</h2><h3 id=\"1-外业工作任务\"><a href=\"#1-外业工作任务\" class=\"headerlink\" title=\"1.外业工作任务\"></a>1.外业工作任务</h3><ul>\n<li>像片野外控制测量<ul>\n<li>像控点：直接为摄影测量加密或测图需要，在实地测定的控制点</li>\n</ul>\n</li>\n<li>像片调绘与补测<ul>\n<li>像片调绘：利用像片进行判读 调查和绘注等工作的总称</li>\n<li>像片判读：根据航片上地物影像的特征，识别出于像片影像相应的地物的类别 特征和某些元素或者测算某种数据指标的过程</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-外业工作过程\"><a href=\"#2-外业工作过程\" class=\"headerlink\" title=\"2.外业工作过程\"></a>2.外业工作过程</h3><ul>\n<li>技术设计</li>\n<li>准备工作及拟定作业计划</li>\n<li>外业工作实施</li>\n<li>外业成果检查与验收</li>\n</ul>\n<h3 id=\"3-像片控制点的布设\"><a href=\"#3-像片控制点的布设\" class=\"headerlink\" title=\"3.像片控制点的布设\"></a>3.像片控制点的布设</h3><ol>\n<li><p>控制点类型</p>\n<ul>\n<li>平面控制点</li>\n<li>高程控制点</li>\n<li>平高控制点</li>\n</ul>\n</li>\n<li><p>控制点布设方案</p>\n<ul>\n<li>全野外布点</li>\n<li>非全野外布点</li>\n</ul>\n</li>\n</ol>\n"},{"title":"光谱分辨率","date":"2021-11-08T01:10:25.000Z","description":"光谱分辨率基本概念","_content":"\n<h1>\n\t<span id=\"光谱分辨率\">\n\t\t<center>光谱分辨率</center>\n\t</span>\n</h1>\n\n## 1. 定义\n\n光谱分辨率是指**传感器在接受目标辐射的波谱时能分辨的最小间隔**。光谱分辨率也称**波谱分辨率**。\n\n光谱分辨率由传感器的**通道数**、每个通道的中心**波长**、**带宽**三个因素共同决定。\n\n传感器通道数：一个传感器具有的波段数目，如：全色波段一般在可见光波段范围只设一个波段\n\n光谱定标：确定传感器各个通道的光谱响应函数，即确定探测器各个像元对于不同波长光的响应。\n\n## 2. 理解\n\n+ 不同波谱分辨率的传感器对同一地物探测效果有很大区别。间隔愈小，分辨率愈高\n\n  > 全色波段 ---> 多光谱波段 ---> 高光谱波段 ---> 超光谱波段\n\n+ 波段并非越多越好，要区别对待\n\n  > 波段越多，各波段数据间的相关性可能越大，增加数据的冗余度，相邻波段数据相互交叉、重复，数据量越大，给数据传输、处理带来困难 \n\n+ 传感器的波段设计必须考虑目标的波谱特征值\n\n+ 光谱分辨率与空间分辨率存在着矛盾\n\n  > 提高空间分辨率 ---> IFOV (瞬时视场角) 降低 ---> 探测元件接受的辐射能量减少 (入射能量降低)  ---> 若保证不同波段的光谱能量 (信噪比)，减少波段数目 ---> 光谱分辨率降低\n\n","source":"_posts/光谱分辨率.md","raw":"---\ntitle: 光谱分辨率\ndate: 2021-11-08 09:10:25\ntags: 遥感\ncategories: [GIS,遥感图像特征,光谱分辨率]\ndescription: 光谱分辨率基本概念\n---\n\n<h1>\n\t<span id=\"光谱分辨率\">\n\t\t<center>光谱分辨率</center>\n\t</span>\n</h1>\n\n## 1. 定义\n\n光谱分辨率是指**传感器在接受目标辐射的波谱时能分辨的最小间隔**。光谱分辨率也称**波谱分辨率**。\n\n光谱分辨率由传感器的**通道数**、每个通道的中心**波长**、**带宽**三个因素共同决定。\n\n传感器通道数：一个传感器具有的波段数目，如：全色波段一般在可见光波段范围只设一个波段\n\n光谱定标：确定传感器各个通道的光谱响应函数，即确定探测器各个像元对于不同波长光的响应。\n\n## 2. 理解\n\n+ 不同波谱分辨率的传感器对同一地物探测效果有很大区别。间隔愈小，分辨率愈高\n\n  > 全色波段 ---> 多光谱波段 ---> 高光谱波段 ---> 超光谱波段\n\n+ 波段并非越多越好，要区别对待\n\n  > 波段越多，各波段数据间的相关性可能越大，增加数据的冗余度，相邻波段数据相互交叉、重复，数据量越大，给数据传输、处理带来困难 \n\n+ 传感器的波段设计必须考虑目标的波谱特征值\n\n+ 光谱分辨率与空间分辨率存在着矛盾\n\n  > 提高空间分辨率 ---> IFOV (瞬时视场角) 降低 ---> 探测元件接受的辐射能量减少 (入射能量降低)  ---> 若保证不同波段的光谱能量 (信噪比)，减少波段数目 ---> 光谱分辨率降低\n\n","slug":"光谱分辨率","published":1,"updated":"2021-12-04T05:36:21.116Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3p002wjsvkcyaveq55","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1>\n    <span id=\"光谱分辨率\">\n        <center>光谱分辨率</center>\n    </span>\n</h1>\n\n<h2 id=\"1-定义\"><a href=\"#1-定义\" class=\"headerlink\" title=\"1. 定义\"></a>1. 定义</h2><p>光谱分辨率是指<strong>传感器在接受目标辐射的波谱时能分辨的最小间隔</strong>。光谱分辨率也称<strong>波谱分辨率</strong>。</p>\n<p>光谱分辨率由传感器的<strong>通道数</strong>、每个通道的中心<strong>波长</strong>、<strong>带宽</strong>三个因素共同决定。</p>\n<p>传感器通道数：一个传感器具有的波段数目，如：全色波段一般在可见光波段范围只设一个波段</p>\n<p>光谱定标：确定传感器各个通道的光谱响应函数，即确定探测器各个像元对于不同波长光的响应。</p>\n<h2 id=\"2-理解\"><a href=\"#2-理解\" class=\"headerlink\" title=\"2. 理解\"></a>2. 理解</h2><ul>\n<li><p>不同波谱分辨率的传感器对同一地物探测效果有很大区别。间隔愈小，分辨率愈高</p>\n<blockquote>\n<p>全色波段 —-&gt; 多光谱波段 —-&gt; 高光谱波段 —-&gt; 超光谱波段</p>\n</blockquote>\n</li>\n<li><p>波段并非越多越好，要区别对待</p>\n<blockquote>\n<p>波段越多，各波段数据间的相关性可能越大，增加数据的冗余度，相邻波段数据相互交叉、重复，数据量越大，给数据传输、处理带来困难 </p>\n</blockquote>\n</li>\n<li><p>传感器的波段设计必须考虑目标的波谱特征值</p>\n</li>\n<li><p>光谱分辨率与空间分辨率存在着矛盾</p>\n<blockquote>\n<p>提高空间分辨率 —-&gt; IFOV (瞬时视场角) 降低 —-&gt; 探测元件接受的辐射能量减少 (入射能量降低)  —-&gt; 若保证不同波段的光谱能量 (信噪比)，减少波段数目 —-&gt; 光谱分辨率降低</p>\n</blockquote>\n</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160531.jpg","length":456,"excerpt":"","more":"<h1>\n    <span id=\"光谱分辨率\">\n        <center>光谱分辨率</center>\n    </span>\n</h1>\n\n<h2 id=\"1-定义\"><a href=\"#1-定义\" class=\"headerlink\" title=\"1. 定义\"></a>1. 定义</h2><p>光谱分辨率是指<strong>传感器在接受目标辐射的波谱时能分辨的最小间隔</strong>。光谱分辨率也称<strong>波谱分辨率</strong>。</p>\n<p>光谱分辨率由传感器的<strong>通道数</strong>、每个通道的中心<strong>波长</strong>、<strong>带宽</strong>三个因素共同决定。</p>\n<p>传感器通道数：一个传感器具有的波段数目，如：全色波段一般在可见光波段范围只设一个波段</p>\n<p>光谱定标：确定传感器各个通道的光谱响应函数，即确定探测器各个像元对于不同波长光的响应。</p>\n<h2 id=\"2-理解\"><a href=\"#2-理解\" class=\"headerlink\" title=\"2. 理解\"></a>2. 理解</h2><ul>\n<li><p>不同波谱分辨率的传感器对同一地物探测效果有很大区别。间隔愈小，分辨率愈高</p>\n<blockquote>\n<p>全色波段 —-&gt; 多光谱波段 —-&gt; 高光谱波段 —-&gt; 超光谱波段</p>\n</blockquote>\n</li>\n<li><p>波段并非越多越好，要区别对待</p>\n<blockquote>\n<p>波段越多，各波段数据间的相关性可能越大，增加数据的冗余度，相邻波段数据相互交叉、重复，数据量越大，给数据传输、处理带来困难 </p>\n</blockquote>\n</li>\n<li><p>传感器的波段设计必须考虑目标的波谱特征值</p>\n</li>\n<li><p>光谱分辨率与空间分辨率存在着矛盾</p>\n<blockquote>\n<p>提高空间分辨率 —-&gt; IFOV (瞬时视场角) 降低 —-&gt; 探测元件接受的辐射能量减少 (入射能量降低)  —-&gt; 若保证不同波段的光谱能量 (信噪比)，减少波段数目 —-&gt; 光谱分辨率降低</p>\n</blockquote>\n</li>\n</ul>\n"},{"title":"前端小知识","date":"2022-01-09T12:08:36.000Z","description":null,"_content":"\n## Bootstrap\n\n### 表单\n\n#### 状态校验\n\n添加 `.has-warning`、`.has-error` 或 `.has-success` 类到这些控件的父元素即可。任何包含在此元素之内的 `.control-label`、`.form-control` 和 `.help-block` 元素都将接受这些校验状态的样式。\n\nlabel标签上的for用于与input标签绑定，label的for值与input的id值相同\n\ninput标签上的.aria-describedby与其他标签id绑定\n\n```html\n<div class=\"form-group has-success\">\n  <label class=\"control-label\" for=\"inputSuccess1\">Input with success</label>\n  <input type=\"text\" class=\"form-control\" id=\"inputSuccess1\" aria-describedby=\"helpBlock2\">\n  <span id=\"helpBlock2\" class=\"help-block\">A block of help text that breaks onto a new line and may extend beyond one line.</span>\n</div>\n```\n\n#### 添加额外图标\n\n针对校验状态为输入框添加额外的图标。只需设置相应的 `.has-feedback` 类并添加正确的图标即可\n\n**反馈图标（feedback icon）只能使用在文本输入框 `<input class=\"form-control\">` 元素上**\n\n> 图标、`label`  和输入控件组对于不带有 `label` 标签的输入框以及右侧带有附加组件的[输入框组](https://v3.bootcss.com/components/#input-groups)，需要手动为其放置反馈图标。为了让所有用户都能访问你的网站，我们强烈建议为所有输入框添加 `label` 标签。如果你不希望将 `label` 标签展示出来，可以通过添加 `.sr-only` 类将其隐藏。如果的确不能添加 `label` 标签，请调整反馈图标的 `top` 值。对于输入框组，请根据附加组件的实际情况调整 `right` 值。\n\n> 向辅助技术设备传递图标的含义为了确保辅助技术- 如屏幕阅读器 - 正确传达一个图标的含义，额外的隐藏的文本应包含在 `.sr-only` 类中，并明确关联使用了 `aria-describedby` 的表单控件。或者，以某些其他形式（例如，文本输入字段有一个特定的警告信息）传达含义，例如改变与表单控件实际相关联的 `<label>` 的文本。\n>\n> 虽然下面的例子已经提到各自表单控件本身的 `<label>` 文本的验证状态，上述技术（使用 `.sr-only` 文本 和 `aria-describedby`) ）已经包括了需要说明的目的。\n\n```html\n<div class=\"form-group has-success has-feedback\">\n  <label class=\"control-label\" for=\"inputSuccess2\">Input with success</label>\n  <input type=\"text\" class=\"form-control\" id=\"inputSuccess2\" aria-describedby=\"inputSuccess2Status\">\n  <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n  <span id=\"inputSuccess2Status\" class=\"sr-only\">(success)</span>\n</div>\n```\n\n## CSS\n\n### css属性\n\ntext-decoration\n\n```css\n// 设置文本的下划线、上划线等修饰属性\ntext-decoration: none;                     /*没有文本装饰*/\ntext-decoration: underline red;            /*红色下划线*/\ntext-decoration: underline wavy red;       /*红色波浪形下划线*/\n\n/*全局值*/\ntext-decoration: inherit;\ntext-decoration: initial;\ntext-decoration: unset;\n```\n\ntext-align\n\n```css\n// 设置文本对齐方式\ntext-align:center\n```\n\n\n\n### CSS选择器\n\n| 选择器                                                       | 例子                  | 例子描述                                             |\n| ------------------------------------------------------------ | --------------------- | ---------------------------------------------------- |\n| [.*class*](https://www.w3school.com.cn/cssref/selector_class.asp) | .intro                | 选择 class=\"intro\" 的所有元素。                      |\n| .*class1*.*class2*                                           | .name1.name2          | 选择 class 属性中同时有 name1 和 name2 的所有元素。  |\n| .*class1* .*class2*                                          | .name1 .name2         | 选择作为类名 name1 元素后代的所有类名 name2 元素。   |\n| [#*id*](https://www.w3school.com.cn/cssref/selector_id.asp)  | #firstname            | 选择 id=\"firstname\" 的元素。                         |\n| [*](https://www.w3school.com.cn/cssref/selector_all.asp)     | *                     | 选择所有元素。                                       |\n| [*element*](https://www.w3school.com.cn/cssref/selector_element.asp) | p                     | 选择所有 <p> 元素。                                  |\n| [*element*.*class*](https://www.w3school.com.cn/cssref/selector_element_class.asp) | p.intro               | 选择 class=\"intro\" 的所有 <p> 元素。                 |\n| [*element*,*element*](https://www.w3school.com.cn/cssref/selector_element_comma.asp) | div, p                | 选择所有 <div> 元素和所有 <p> 元素。                 |\n| [*element* *element*](https://www.w3school.com.cn/cssref/selector_element_element.asp) | div p                 | 选择 <div> 元素内的所有 <p> 元素。                   |\n| [*element*>*element*](https://www.w3school.com.cn/cssref/selector_element_gt.asp) | div > p               | 选择父元素是 <div> 的所有 <p> 元素。                 |\n| [*element*+*element*](https://www.w3school.com.cn/cssref/selector_element_plus.asp) | div + p               | 选择紧跟 <div> 元素的首个 <p> 元素。                 |\n| [*element1*~*element2*](https://www.w3school.com.cn/cssref/selector_gen_sibling.asp) | p ~ ul                | 选择前面有 <p> 元素的每个 <ul> 元素。                |\n| [[*attribute*\\]](https://www.w3school.com.cn/cssref/selector_attribute.asp) | [target]              | 选择带有 target 属性的所有元素。                     |\n| [[*attribute*=*value*\\]](https://www.w3school.com.cn/cssref/selector_attribute_value.asp) | [target=_blank]       | 选择带有 target=\"_blank\" 属性的所有元素。            |\n| [[*attribute*~=*value*\\]](https://www.w3school.com.cn/cssref/selector_attribute_value_contain.asp) | [title~=flower]       | 选择 title 属性包含单词 \"flower\" 的所有元素。        |\n| [[*attribute*\\|=*value*\\]](https://www.w3school.com.cn/cssref/selector_attribute_value_start.asp) | [lang\\|=en]           | 选择 lang 属性值以 \"en\" 开头的所有元素。             |\n| [[*attribute*^=*value*\\]](https://www.w3school.com.cn/cssref/selector_attr_begin.asp) | a[href^=\"https\"]      | 选择其 src 属性值以 \"https\" 开头的每个 <a> 元素。    |\n| [[*attribute*$=*value*\\]](https://www.w3school.com.cn/cssref/selector_attr_end.asp) | a[href$=\".pdf\"]       | 选择其 src 属性以 \".pdf\" 结尾的所有 <a> 元素。       |\n| [[*attribute**=*value*\\]](https://www.w3school.com.cn/cssref/selector_attr_contain.asp) | a[href*=\"w3schools\"]  | 选择其 href 属性值中包含 \"abc\" 子串的每个 <a> 元素。 |\n| [:active](https://www.w3school.com.cn/cssref/selector_active.asp) | a:active              | 选择活动链接。                                       |\n| [::after](https://www.w3school.com.cn/cssref/selector_after.asp) | p::after              | 在每个 <p> 的内容之后插入内容。                      |\n| [::before](https://www.w3school.com.cn/cssref/selector_before.asp) | p::before             | 在每个 <p> 的内容之前插入内容。                      |\n| [:checked](https://www.w3school.com.cn/cssref/selector_checked.asp) | input:checked         | 选择每个被选中的 <input> 元素。                      |\n| [:default](https://www.w3school.com.cn/cssref/selector_default.asp) | input:default         | 选择默认的 <input> 元素。                            |\n| [:disabled](https://www.w3school.com.cn/cssref/selector_disabled.asp) | input:disabled        | 选择每个被禁用的 <input> 元素。                      |\n| [:empty](https://www.w3school.com.cn/cssref/selector_empty.asp) | p:empty               | 选择没有子元素的每个 <p> 元素（包括文本节点）。      |\n| [:enabled](https://www.w3school.com.cn/cssref/selector_enabled.asp) | input:enabled         | 选择每个启用的 <input> 元素。                        |\n| [:first-child](https://www.w3school.com.cn/cssref/selector_first-child.asp) | p:first-child         | 选择属于父元素的第一个子元素的每个 <p> 元素。        |\n| [::first-letter](https://www.w3school.com.cn/cssref/selector_first-letter.asp) | p::first-letter       | 选择每个 <p> 元素的首字母。                          |\n| [::first-line](https://www.w3school.com.cn/cssref/selector_first-line.asp) | p::first-line         | 选择每个 <p> 元素的首行。                            |\n| [:first-of-type](https://www.w3school.com.cn/cssref/selector_first-of-type.asp) | p:first-of-type       | 选择属于其父元素的首个 <p> 元素的每个 <p> 元素。     |\n| [:focus](https://www.w3school.com.cn/cssref/selector_focus.asp) | input:focus           | 选择获得焦点的 input 元素。                          |\n| [:fullscreen](https://www.w3school.com.cn/cssref/selector_fullscreen.asp) | :fullscreen           | 选择处于全屏模式的元素。                             |\n| [:hover](https://www.w3school.com.cn/cssref/selector_hover.asp) | a:hover               | 选择鼠标指针位于其上的链接。                         |\n| [:in-range](https://www.w3school.com.cn/cssref/selector_in-range.asp) | input:in-range        | 选择其值在指定范围内的 input 元素。                  |\n| [:indeterminate](https://www.w3school.com.cn/cssref/selector_indeterminate.asp) | input:indeterminate   | 选择处于不确定状态的 input 元素。                    |\n| [:invalid](https://www.w3school.com.cn/cssref/selector_invalid.asp) | input:invalid         | 选择具有无效值的所有 input 元素。                    |\n| [:lang(*language*)](https://www.w3school.com.cn/cssref/selector_lang.asp) | p:lang(it)            | 选择 lang 属性等于 \"it\"（意大利）的每个 <p> 元素。   |\n| [:last-child](https://www.w3school.com.cn/cssref/selector_last-child.asp) | p:last-child          | 选择属于其父元素最后一个子元素每个 <p> 元素。        |\n| [:last-of-type](https://www.w3school.com.cn/cssref/selector_last-of-type.asp) | p:last-of-type        | 选择属于其父元素的最后 <p> 元素的每个 <p> 元素。     |\n| [:link](https://www.w3school.com.cn/cssref/selector_link.asp) | a:link                | 选择所有未访问过的链接。                             |\n| [:not(*selector*)](https://www.w3school.com.cn/cssref/selector_not.asp) | :not(p)               | 选择非 <p> 元素的每个元素。                          |\n| [:nth-child(*n*)](https://www.w3school.com.cn/cssref/selector_nth-child.asp) | p:nth-child(2)        | 选择属于其父元素的第二个子元素的每个 <p> 元素。      |\n| [:nth-last-child(*n*)](https://www.w3school.com.cn/cssref/selector_nth-last-child.asp) | p:nth-last-child(2)   | 同上，从最后一个子元素开始计数。                     |\n| [:nth-of-type(*n*)](https://www.w3school.com.cn/cssref/selector_nth-of-type.asp) | p:nth-of-type(2)      | 选择属于其父元素第二个 <p> 元素的每个 <p> 元素。     |\n| [:nth-last-of-type(*n*)](https://www.w3school.com.cn/cssref/selector_nth-last-of-type.asp) | p:nth-last-of-type(2) | 同上，但是从最后一个子元素开始计数。                 |\n| [:only-of-type](https://www.w3school.com.cn/cssref/selector_only-of-type.asp) | p:only-of-type        | 选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。     |\n| [:only-child](https://www.w3school.com.cn/cssref/selector_only-child.asp) | p:only-child          | 选择属于其父元素的唯一子元素的每个 <p> 元素。        |\n| [:optional](https://www.w3school.com.cn/cssref/selector_optional.asp) | input:optional        | 选择不带 \"required\" 属性的 input 元素。              |\n| [:out-of-range](https://www.w3school.com.cn/cssref/selector_out-of-range.asp) | input:out-of-range    | 选择值超出指定范围的 input 元素。                    |\n| [::placeholder](https://www.w3school.com.cn/cssref/selector_placeholder.asp) | input::placeholder    | 选择已规定 \"placeholder\" 属性的 input 元素。         |\n| [:read-only](https://www.w3school.com.cn/cssref/selector_read-only.asp) | input:read-only       | 选择已规定 \"readonly\" 属性的 input 元素。            |\n| [:read-write](https://www.w3school.com.cn/cssref/selector_read-write.asp) | input:read-write      | 选择未规定 \"readonly\" 属性的 input 元素。            |\n| [:required](https://www.w3school.com.cn/cssref/selector_required.asp) | input:required        | 选择已规定 \"required\" 属性的 input 元素。            |\n| [:root](https://www.w3school.com.cn/cssref/selector_root.asp) | :root                 | 选择文档的根元素。                                   |\n| [::selection](https://www.w3school.com.cn/cssref/selector_selection.asp) | ::selection           | 选择用户已选取的元素部分。                           |\n| [:target](https://www.w3school.com.cn/cssref/selector_target.asp) | #news:target          | 选择当前活动的 #news 元素。                          |\n| [:valid](https://www.w3school.com.cn/cssref/selector_valid.asp) | input:valid           | 选择带有有效值的所有 input 元素。                    |\n| [:visited](https://www.w3school.com.cn/cssref/selector_visited.asp) | a:visited             | 选择所有已访问的链接。                               |\n\n## DOM\n\n```html\n//setAttribute 设置标签属性\ndiv.setAttribute('order-state', 'canceled');\n//getAttribute 获取标签属性\ninput.getAttribute('id')\n//textContent元素内文本\n<div id=\"news\">\n  <h1>Headline!</h1>\n  <p>Martians attack people!</p>\n</div>\n\n<script>\n  // Headline! Martians attack people!\n  alert(news.textContent);\n</script>\n//classList添加单个类\n<body class=\"main page\">\n  <script>\n    // 添加一个 class\n    document.body.classList.add('article');\n\n    alert(document.body.className); // main page article\n  </script>\n</body>\n```\n\n**兄弟节点（Sibling）** 是指有同一个父节点的节点。\n\n例如，`<head>` 和 `<body>` 就是兄弟节点：\n\n```markup\n<html>\n  <head>...</head><body>...</body>\n</html>\n```\n\n+ `<body>` 可以说是 `<head>` 的“下一个”或者“右边”兄弟节点。\n+ `<head>` 可以说是 `<body>` 的“前一个”或者“左边”兄弟节点。\n\n下一个兄弟节点在 `nextSibling` 属性中，上一个是在 `previousSibling` 属性中。\n\n可以通过 `parentNode` 来访问父节点。\n\n例如：\n\n```javascript\n// <body> 的父节点是 <html>\nalert( document.body.parentNode === document.documentElement ); // true\n\n// <head> 的后一个是 <body>\nalert( document.head.nextSibling ); // HTMLBodyElement\n\n// <body> 的前一个是 <head>\nalert( document.body.previousSibling ); // HTMLHeadElement\n```\n```javascript\nlet div = document.createElement('div');   \ndiv.className = \"alert\";   \ndiv.innerHTML = \"<strong>Hi there!</strong> You've read an important message.\";   document.body.append(div);\n```\n\n+ `node.append(...nodes or strings)` —— 在 `node` **末尾** 插入节点或字符串，\n+ `node.prepend(...nodes or strings)` —— 在 `node` **开头** 插入节点或字符串，\n+ `node.before(...nodes or strings)` —— 在 `node` **前面** 插入节点或字符串，\n+ `node.after(...nodes or strings)` —— 在 `node` **后面** 插入节点或字符串，\n+ `node.replaceWith(...nodes or strings)` —— 将 `node` 替换为给定的节点或字符串\n\ndiv置于底部\n\n```html\n<div style=\"position: absolute; z-index: 55; bottom: 5px; text-align: center; overflow: hidden; width: 100%; height: auto;\">\n<input type=\"button\" value=\"后续处理\" style=\"width: 350px; height: 45px; color: black;\">\n</div>\n```\n\n## iconfont\n\n普通字体\n\n```html\n// 引入字体css、iconfont 加 字体名\n<link rel=\"stylesheet\" href=\"http://at.alicdn.com/t/font_3125574_dg7amy0ak5b.css\">\n<i class=\"iconfont icon-sifenkesiwumaomao col-xs-offset-2\" style=\"font-size: 30px;\"></i>\n```\n\n彩色字体\n\n```html\n// 引入js、添加css、\n<script src=\"https://at.alicdn.com/t/font_3125574_scj6r0fpek.js\"></script>\n<style>\n     .icon {\n       width: 1em;\n       height: 1em;\n       vertical-align: -0.15em;\n       fill: currentColor;\n       overflow: hidden;\n     }\n</style>\n<svg class=\"icon svg-icon\" aria-hidden=\"true\">\n     <use xlink:href=\"#icon-yinjianceng\"></use>\n</svg>\n```\n\n","source":"_posts/前端小知识.md","raw":"---\ntitle: 前端小知识\ndate: 2022-01-09 20:08:36\ntags: [前端]\ncategories: \ndescription:\n---\n\n## Bootstrap\n\n### 表单\n\n#### 状态校验\n\n添加 `.has-warning`、`.has-error` 或 `.has-success` 类到这些控件的父元素即可。任何包含在此元素之内的 `.control-label`、`.form-control` 和 `.help-block` 元素都将接受这些校验状态的样式。\n\nlabel标签上的for用于与input标签绑定，label的for值与input的id值相同\n\ninput标签上的.aria-describedby与其他标签id绑定\n\n```html\n<div class=\"form-group has-success\">\n  <label class=\"control-label\" for=\"inputSuccess1\">Input with success</label>\n  <input type=\"text\" class=\"form-control\" id=\"inputSuccess1\" aria-describedby=\"helpBlock2\">\n  <span id=\"helpBlock2\" class=\"help-block\">A block of help text that breaks onto a new line and may extend beyond one line.</span>\n</div>\n```\n\n#### 添加额外图标\n\n针对校验状态为输入框添加额外的图标。只需设置相应的 `.has-feedback` 类并添加正确的图标即可\n\n**反馈图标（feedback icon）只能使用在文本输入框 `<input class=\"form-control\">` 元素上**\n\n> 图标、`label`  和输入控件组对于不带有 `label` 标签的输入框以及右侧带有附加组件的[输入框组](https://v3.bootcss.com/components/#input-groups)，需要手动为其放置反馈图标。为了让所有用户都能访问你的网站，我们强烈建议为所有输入框添加 `label` 标签。如果你不希望将 `label` 标签展示出来，可以通过添加 `.sr-only` 类将其隐藏。如果的确不能添加 `label` 标签，请调整反馈图标的 `top` 值。对于输入框组，请根据附加组件的实际情况调整 `right` 值。\n\n> 向辅助技术设备传递图标的含义为了确保辅助技术- 如屏幕阅读器 - 正确传达一个图标的含义，额外的隐藏的文本应包含在 `.sr-only` 类中，并明确关联使用了 `aria-describedby` 的表单控件。或者，以某些其他形式（例如，文本输入字段有一个特定的警告信息）传达含义，例如改变与表单控件实际相关联的 `<label>` 的文本。\n>\n> 虽然下面的例子已经提到各自表单控件本身的 `<label>` 文本的验证状态，上述技术（使用 `.sr-only` 文本 和 `aria-describedby`) ）已经包括了需要说明的目的。\n\n```html\n<div class=\"form-group has-success has-feedback\">\n  <label class=\"control-label\" for=\"inputSuccess2\">Input with success</label>\n  <input type=\"text\" class=\"form-control\" id=\"inputSuccess2\" aria-describedby=\"inputSuccess2Status\">\n  <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n  <span id=\"inputSuccess2Status\" class=\"sr-only\">(success)</span>\n</div>\n```\n\n## CSS\n\n### css属性\n\ntext-decoration\n\n```css\n// 设置文本的下划线、上划线等修饰属性\ntext-decoration: none;                     /*没有文本装饰*/\ntext-decoration: underline red;            /*红色下划线*/\ntext-decoration: underline wavy red;       /*红色波浪形下划线*/\n\n/*全局值*/\ntext-decoration: inherit;\ntext-decoration: initial;\ntext-decoration: unset;\n```\n\ntext-align\n\n```css\n// 设置文本对齐方式\ntext-align:center\n```\n\n\n\n### CSS选择器\n\n| 选择器                                                       | 例子                  | 例子描述                                             |\n| ------------------------------------------------------------ | --------------------- | ---------------------------------------------------- |\n| [.*class*](https://www.w3school.com.cn/cssref/selector_class.asp) | .intro                | 选择 class=\"intro\" 的所有元素。                      |\n| .*class1*.*class2*                                           | .name1.name2          | 选择 class 属性中同时有 name1 和 name2 的所有元素。  |\n| .*class1* .*class2*                                          | .name1 .name2         | 选择作为类名 name1 元素后代的所有类名 name2 元素。   |\n| [#*id*](https://www.w3school.com.cn/cssref/selector_id.asp)  | #firstname            | 选择 id=\"firstname\" 的元素。                         |\n| [*](https://www.w3school.com.cn/cssref/selector_all.asp)     | *                     | 选择所有元素。                                       |\n| [*element*](https://www.w3school.com.cn/cssref/selector_element.asp) | p                     | 选择所有 <p> 元素。                                  |\n| [*element*.*class*](https://www.w3school.com.cn/cssref/selector_element_class.asp) | p.intro               | 选择 class=\"intro\" 的所有 <p> 元素。                 |\n| [*element*,*element*](https://www.w3school.com.cn/cssref/selector_element_comma.asp) | div, p                | 选择所有 <div> 元素和所有 <p> 元素。                 |\n| [*element* *element*](https://www.w3school.com.cn/cssref/selector_element_element.asp) | div p                 | 选择 <div> 元素内的所有 <p> 元素。                   |\n| [*element*>*element*](https://www.w3school.com.cn/cssref/selector_element_gt.asp) | div > p               | 选择父元素是 <div> 的所有 <p> 元素。                 |\n| [*element*+*element*](https://www.w3school.com.cn/cssref/selector_element_plus.asp) | div + p               | 选择紧跟 <div> 元素的首个 <p> 元素。                 |\n| [*element1*~*element2*](https://www.w3school.com.cn/cssref/selector_gen_sibling.asp) | p ~ ul                | 选择前面有 <p> 元素的每个 <ul> 元素。                |\n| [[*attribute*\\]](https://www.w3school.com.cn/cssref/selector_attribute.asp) | [target]              | 选择带有 target 属性的所有元素。                     |\n| [[*attribute*=*value*\\]](https://www.w3school.com.cn/cssref/selector_attribute_value.asp) | [target=_blank]       | 选择带有 target=\"_blank\" 属性的所有元素。            |\n| [[*attribute*~=*value*\\]](https://www.w3school.com.cn/cssref/selector_attribute_value_contain.asp) | [title~=flower]       | 选择 title 属性包含单词 \"flower\" 的所有元素。        |\n| [[*attribute*\\|=*value*\\]](https://www.w3school.com.cn/cssref/selector_attribute_value_start.asp) | [lang\\|=en]           | 选择 lang 属性值以 \"en\" 开头的所有元素。             |\n| [[*attribute*^=*value*\\]](https://www.w3school.com.cn/cssref/selector_attr_begin.asp) | a[href^=\"https\"]      | 选择其 src 属性值以 \"https\" 开头的每个 <a> 元素。    |\n| [[*attribute*$=*value*\\]](https://www.w3school.com.cn/cssref/selector_attr_end.asp) | a[href$=\".pdf\"]       | 选择其 src 属性以 \".pdf\" 结尾的所有 <a> 元素。       |\n| [[*attribute**=*value*\\]](https://www.w3school.com.cn/cssref/selector_attr_contain.asp) | a[href*=\"w3schools\"]  | 选择其 href 属性值中包含 \"abc\" 子串的每个 <a> 元素。 |\n| [:active](https://www.w3school.com.cn/cssref/selector_active.asp) | a:active              | 选择活动链接。                                       |\n| [::after](https://www.w3school.com.cn/cssref/selector_after.asp) | p::after              | 在每个 <p> 的内容之后插入内容。                      |\n| [::before](https://www.w3school.com.cn/cssref/selector_before.asp) | p::before             | 在每个 <p> 的内容之前插入内容。                      |\n| [:checked](https://www.w3school.com.cn/cssref/selector_checked.asp) | input:checked         | 选择每个被选中的 <input> 元素。                      |\n| [:default](https://www.w3school.com.cn/cssref/selector_default.asp) | input:default         | 选择默认的 <input> 元素。                            |\n| [:disabled](https://www.w3school.com.cn/cssref/selector_disabled.asp) | input:disabled        | 选择每个被禁用的 <input> 元素。                      |\n| [:empty](https://www.w3school.com.cn/cssref/selector_empty.asp) | p:empty               | 选择没有子元素的每个 <p> 元素（包括文本节点）。      |\n| [:enabled](https://www.w3school.com.cn/cssref/selector_enabled.asp) | input:enabled         | 选择每个启用的 <input> 元素。                        |\n| [:first-child](https://www.w3school.com.cn/cssref/selector_first-child.asp) | p:first-child         | 选择属于父元素的第一个子元素的每个 <p> 元素。        |\n| [::first-letter](https://www.w3school.com.cn/cssref/selector_first-letter.asp) | p::first-letter       | 选择每个 <p> 元素的首字母。                          |\n| [::first-line](https://www.w3school.com.cn/cssref/selector_first-line.asp) | p::first-line         | 选择每个 <p> 元素的首行。                            |\n| [:first-of-type](https://www.w3school.com.cn/cssref/selector_first-of-type.asp) | p:first-of-type       | 选择属于其父元素的首个 <p> 元素的每个 <p> 元素。     |\n| [:focus](https://www.w3school.com.cn/cssref/selector_focus.asp) | input:focus           | 选择获得焦点的 input 元素。                          |\n| [:fullscreen](https://www.w3school.com.cn/cssref/selector_fullscreen.asp) | :fullscreen           | 选择处于全屏模式的元素。                             |\n| [:hover](https://www.w3school.com.cn/cssref/selector_hover.asp) | a:hover               | 选择鼠标指针位于其上的链接。                         |\n| [:in-range](https://www.w3school.com.cn/cssref/selector_in-range.asp) | input:in-range        | 选择其值在指定范围内的 input 元素。                  |\n| [:indeterminate](https://www.w3school.com.cn/cssref/selector_indeterminate.asp) | input:indeterminate   | 选择处于不确定状态的 input 元素。                    |\n| [:invalid](https://www.w3school.com.cn/cssref/selector_invalid.asp) | input:invalid         | 选择具有无效值的所有 input 元素。                    |\n| [:lang(*language*)](https://www.w3school.com.cn/cssref/selector_lang.asp) | p:lang(it)            | 选择 lang 属性等于 \"it\"（意大利）的每个 <p> 元素。   |\n| [:last-child](https://www.w3school.com.cn/cssref/selector_last-child.asp) | p:last-child          | 选择属于其父元素最后一个子元素每个 <p> 元素。        |\n| [:last-of-type](https://www.w3school.com.cn/cssref/selector_last-of-type.asp) | p:last-of-type        | 选择属于其父元素的最后 <p> 元素的每个 <p> 元素。     |\n| [:link](https://www.w3school.com.cn/cssref/selector_link.asp) | a:link                | 选择所有未访问过的链接。                             |\n| [:not(*selector*)](https://www.w3school.com.cn/cssref/selector_not.asp) | :not(p)               | 选择非 <p> 元素的每个元素。                          |\n| [:nth-child(*n*)](https://www.w3school.com.cn/cssref/selector_nth-child.asp) | p:nth-child(2)        | 选择属于其父元素的第二个子元素的每个 <p> 元素。      |\n| [:nth-last-child(*n*)](https://www.w3school.com.cn/cssref/selector_nth-last-child.asp) | p:nth-last-child(2)   | 同上，从最后一个子元素开始计数。                     |\n| [:nth-of-type(*n*)](https://www.w3school.com.cn/cssref/selector_nth-of-type.asp) | p:nth-of-type(2)      | 选择属于其父元素第二个 <p> 元素的每个 <p> 元素。     |\n| [:nth-last-of-type(*n*)](https://www.w3school.com.cn/cssref/selector_nth-last-of-type.asp) | p:nth-last-of-type(2) | 同上，但是从最后一个子元素开始计数。                 |\n| [:only-of-type](https://www.w3school.com.cn/cssref/selector_only-of-type.asp) | p:only-of-type        | 选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。     |\n| [:only-child](https://www.w3school.com.cn/cssref/selector_only-child.asp) | p:only-child          | 选择属于其父元素的唯一子元素的每个 <p> 元素。        |\n| [:optional](https://www.w3school.com.cn/cssref/selector_optional.asp) | input:optional        | 选择不带 \"required\" 属性的 input 元素。              |\n| [:out-of-range](https://www.w3school.com.cn/cssref/selector_out-of-range.asp) | input:out-of-range    | 选择值超出指定范围的 input 元素。                    |\n| [::placeholder](https://www.w3school.com.cn/cssref/selector_placeholder.asp) | input::placeholder    | 选择已规定 \"placeholder\" 属性的 input 元素。         |\n| [:read-only](https://www.w3school.com.cn/cssref/selector_read-only.asp) | input:read-only       | 选择已规定 \"readonly\" 属性的 input 元素。            |\n| [:read-write](https://www.w3school.com.cn/cssref/selector_read-write.asp) | input:read-write      | 选择未规定 \"readonly\" 属性的 input 元素。            |\n| [:required](https://www.w3school.com.cn/cssref/selector_required.asp) | input:required        | 选择已规定 \"required\" 属性的 input 元素。            |\n| [:root](https://www.w3school.com.cn/cssref/selector_root.asp) | :root                 | 选择文档的根元素。                                   |\n| [::selection](https://www.w3school.com.cn/cssref/selector_selection.asp) | ::selection           | 选择用户已选取的元素部分。                           |\n| [:target](https://www.w3school.com.cn/cssref/selector_target.asp) | #news:target          | 选择当前活动的 #news 元素。                          |\n| [:valid](https://www.w3school.com.cn/cssref/selector_valid.asp) | input:valid           | 选择带有有效值的所有 input 元素。                    |\n| [:visited](https://www.w3school.com.cn/cssref/selector_visited.asp) | a:visited             | 选择所有已访问的链接。                               |\n\n## DOM\n\n```html\n//setAttribute 设置标签属性\ndiv.setAttribute('order-state', 'canceled');\n//getAttribute 获取标签属性\ninput.getAttribute('id')\n//textContent元素内文本\n<div id=\"news\">\n  <h1>Headline!</h1>\n  <p>Martians attack people!</p>\n</div>\n\n<script>\n  // Headline! Martians attack people!\n  alert(news.textContent);\n</script>\n//classList添加单个类\n<body class=\"main page\">\n  <script>\n    // 添加一个 class\n    document.body.classList.add('article');\n\n    alert(document.body.className); // main page article\n  </script>\n</body>\n```\n\n**兄弟节点（Sibling）** 是指有同一个父节点的节点。\n\n例如，`<head>` 和 `<body>` 就是兄弟节点：\n\n```markup\n<html>\n  <head>...</head><body>...</body>\n</html>\n```\n\n+ `<body>` 可以说是 `<head>` 的“下一个”或者“右边”兄弟节点。\n+ `<head>` 可以说是 `<body>` 的“前一个”或者“左边”兄弟节点。\n\n下一个兄弟节点在 `nextSibling` 属性中，上一个是在 `previousSibling` 属性中。\n\n可以通过 `parentNode` 来访问父节点。\n\n例如：\n\n```javascript\n// <body> 的父节点是 <html>\nalert( document.body.parentNode === document.documentElement ); // true\n\n// <head> 的后一个是 <body>\nalert( document.head.nextSibling ); // HTMLBodyElement\n\n// <body> 的前一个是 <head>\nalert( document.body.previousSibling ); // HTMLHeadElement\n```\n```javascript\nlet div = document.createElement('div');   \ndiv.className = \"alert\";   \ndiv.innerHTML = \"<strong>Hi there!</strong> You've read an important message.\";   document.body.append(div);\n```\n\n+ `node.append(...nodes or strings)` —— 在 `node` **末尾** 插入节点或字符串，\n+ `node.prepend(...nodes or strings)` —— 在 `node` **开头** 插入节点或字符串，\n+ `node.before(...nodes or strings)` —— 在 `node` **前面** 插入节点或字符串，\n+ `node.after(...nodes or strings)` —— 在 `node` **后面** 插入节点或字符串，\n+ `node.replaceWith(...nodes or strings)` —— 将 `node` 替换为给定的节点或字符串\n\ndiv置于底部\n\n```html\n<div style=\"position: absolute; z-index: 55; bottom: 5px; text-align: center; overflow: hidden; width: 100%; height: auto;\">\n<input type=\"button\" value=\"后续处理\" style=\"width: 350px; height: 45px; color: black;\">\n</div>\n```\n\n## iconfont\n\n普通字体\n\n```html\n// 引入字体css、iconfont 加 字体名\n<link rel=\"stylesheet\" href=\"http://at.alicdn.com/t/font_3125574_dg7amy0ak5b.css\">\n<i class=\"iconfont icon-sifenkesiwumaomao col-xs-offset-2\" style=\"font-size: 30px;\"></i>\n```\n\n彩色字体\n\n```html\n// 引入js、添加css、\n<script src=\"https://at.alicdn.com/t/font_3125574_scj6r0fpek.js\"></script>\n<style>\n     .icon {\n       width: 1em;\n       height: 1em;\n       vertical-align: -0.15em;\n       fill: currentColor;\n       overflow: hidden;\n     }\n</style>\n<svg class=\"icon svg-icon\" aria-hidden=\"true\">\n     <use xlink:href=\"#icon-yinjianceng\"></use>\n</svg>\n```\n\n","slug":"前端小知识","published":1,"updated":"2022-09-15T07:17:59.593Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3q0030jsvkdbyactkj","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"Bootstrap\"><a href=\"#Bootstrap\" class=\"headerlink\" title=\"Bootstrap\"></a>Bootstrap</h2><h3 id=\"表单\"><a href=\"#表单\" class=\"headerlink\" title=\"表单\"></a>表单</h3><h4 id=\"状态校验\"><a href=\"#状态校验\" class=\"headerlink\" title=\"状态校验\"></a>状态校验</h4><p>添加 <code>.has-warning</code>、<code>.has-error</code> 或 <code>.has-success</code> 类到这些控件的父元素即可。任何包含在此元素之内的 <code>.control-label</code>、<code>.form-control</code> 和 <code>.help-block</code> 元素都将接受这些校验状态的样式。</p>\n<p>label标签上的for用于与input标签绑定，label的for值与input的id值相同</p>\n<p>input标签上的.aria-describedby与其他标签id绑定</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-group has-success<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>control-label<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputSuccess1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Input with success<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-control<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputSuccess1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-describedby</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>helpBlock2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>helpBlock2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>help-block<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>A block of help text that breaks onto a new line and may extend beyond one line.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<h4 id=\"添加额外图标\"><a href=\"#添加额外图标\" class=\"headerlink\" title=\"添加额外图标\"></a>添加额外图标</h4><p>针对校验状态为输入框添加额外的图标。只需设置相应的 <code>.has-feedback</code> 类并添加正确的图标即可</p>\n<p><strong>反馈图标（feedback icon）只能使用在文本输入框 <code>&lt;input class=&quot;form-control&quot;&gt;</code> 元素上</strong></p>\n<blockquote>\n<p>图标、<code>label</code>  和输入控件组对于不带有 <code>label</code> 标签的输入框以及右侧带有附加组件的<a href=\"https://v3.bootcss.com/components/#input-groups\">输入框组</a>，需要手动为其放置反馈图标。为了让所有用户都能访问你的网站，我们强烈建议为所有输入框添加 <code>label</code> 标签。如果你不希望将 <code>label</code> 标签展示出来，可以通过添加 <code>.sr-only</code> 类将其隐藏。如果的确不能添加 <code>label</code> 标签，请调整反馈图标的 <code>top</code> 值。对于输入框组，请根据附加组件的实际情况调整 <code>right</code> 值。</p>\n<p>向辅助技术设备传递图标的含义为了确保辅助技术- 如屏幕阅读器 - 正确传达一个图标的含义，额外的隐藏的文本应包含在 <code>.sr-only</code> 类中，并明确关联使用了 <code>aria-describedby</code> 的表单控件。或者，以某些其他形式（例如，文本输入字段有一个特定的警告信息）传达含义，例如改变与表单控件实际相关联的 <code>&lt;label&gt;</code> 的文本。</p>\n<p>虽然下面的例子已经提到各自表单控件本身的 <code>&lt;label&gt;</code> 文本的验证状态，上述技术（使用 <code>.sr-only</code> 文本 和 <code>aria-describedby</code>) ）已经包括了需要说明的目的。</p>\n</blockquote>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-group has-success has-feedback<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>control-label<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputSuccess2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Input with success<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-control<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputSuccess2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-describedby</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputSuccess2Status<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>glyphicon glyphicon-ok form-control-feedback<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-hidden</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputSuccess2Status<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sr-only<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>(success)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><h3 id=\"css属性\"><a href=\"#css属性\" class=\"headerlink\" title=\"css属性\"></a>css属性</h3><p>text-decoration</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\">// 设置文本的下划线、上划线等修饰属性\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>                     <span class=\"token comment\">/*没有文本装饰*/</span>\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> underline red<span class=\"token punctuation\">;</span>            <span class=\"token comment\">/*红色下划线*/</span>\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> underline wavy red<span class=\"token punctuation\">;</span>       <span class=\"token comment\">/*红色波浪形下划线*/</span>\n\n<span class=\"token comment\">/*全局值*/</span>\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span>\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> unset<span class=\"token punctuation\">;</span></code></pre>\n<p>text-align</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\">// 设置文本对齐方式\n<span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span>center</code></pre>\n<h3 id=\"CSS选择器\"><a href=\"#CSS选择器\" class=\"headerlink\" title=\"CSS选择器\"></a>CSS选择器</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>例子</th>\n<th>例子描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_class.asp\">.<em>class</em></a></td>\n<td>.intro</td>\n<td>选择 class=”intro” 的所有元素。</td>\n</tr>\n<tr>\n<td>.<em>class1</em>.<em>class2</em></td>\n<td>.name1.name2</td>\n<td>选择 class 属性中同时有 name1 和 name2 的所有元素。</td>\n</tr>\n<tr>\n<td>.<em>class1</em> .<em>class2</em></td>\n<td>.name1 .name2</td>\n<td>选择作为类名 name1 元素后代的所有类名 name2 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_id.asp\">#<em>id</em></a></td>\n<td>#firstname</td>\n<td>选择 id=”firstname” 的元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_all.asp\">*</a></td>\n<td>*</td>\n<td>选择所有元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_element.asp\"><em>element</em></a></td>\n<td>p</td>\n<td>选择所有 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_element_class.asp\"><em>element</em>.<em>class</em></a></td>\n<td>p.intro</td>\n<td>选择 class=”intro” 的所有 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_element_comma.asp\"><em>element</em>,<em>element</em></a></td>\n<td>div, p</td>\n<td>选择所有 <div> 元素和所有 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_element_element.asp\"><em>element</em> <em>element</em></a></td>\n<td>div p</td>\n<td>选择 <div> 元素内的所有 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_element_gt.asp\"><em>element</em>&gt;<em>element</em></a></td>\n<td>div &gt; p</td>\n<td>选择父元素是 <div> 的所有 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_element_plus.asp\"><em>element</em>+<em>element</em></a></td>\n<td>div + p</td>\n<td>选择紧跟 <div> 元素的首个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_gen_sibling.asp\"><em>element1</em>~<em>element2</em></a></td>\n<td>p ~ ul</td>\n<td>选择前面有 <p> 元素的每个 <ul> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_attribute.asp\">[<em>attribute</em>]</a></td>\n<td>[target]</td>\n<td>选择带有 target 属性的所有元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_attribute_value.asp\">[<em>attribute</em>=<em>value</em>]</a></td>\n<td>[target=_blank]</td>\n<td>选择带有 target=”_blank” 属性的所有元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_attribute_value_contain.asp\">[<em>attribute</em>~=<em>value</em>]</a></td>\n<td>[title~=flower]</td>\n<td>选择 title 属性包含单词 “flower” 的所有元素。</td>\n</tr>\n<tr>\n<td>[[<em>attribute</em>\\</td>\n<td>=<em>value</em>]](<a href=\"https://www.w3school.com.cn/cssref/selector_attribute_value_start.asp\">https://www.w3school.com.cn/cssref/selector_attribute_value_start.asp</a>)</td>\n<td>[lang\\</td>\n<td>=en]</td>\n<td>选择 lang 属性值以 “en” 开头的所有元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_attr_begin.asp\">[<em>attribute</em>^=<em>value</em>]</a></td>\n<td>a[href^=”https”]</td>\n<td>选择其 src 属性值以 “https” 开头的每个 <a> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_attr_end.asp\">[<em>attribute</em>$=<em>value</em>]</a></td>\n<td>a[href$=”.pdf”]</td>\n<td>选择其 src 属性以 “.pdf” 结尾的所有 <a> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_attr_contain.asp\">[<em>attribute**=</em>value*]</a></td>\n<td>a[href*=”w3schools”]</td>\n<td>选择其 href 属性值中包含 “abc” 子串的每个 <a> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_active.asp\">:active</a></td>\n<td>a:active</td>\n<td>选择活动链接。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_after.asp\">::after</a></td>\n<td>p::after</td>\n<td>在每个 <p> 的内容之后插入内容。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_before.asp\">::before</a></td>\n<td>p::before</td>\n<td>在每个 <p> 的内容之前插入内容。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_checked.asp\">:checked</a></td>\n<td>input:checked</td>\n<td>选择每个被选中的 <input> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_default.asp\">:default</a></td>\n<td>input:default</td>\n<td>选择默认的 <input> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_disabled.asp\">:disabled</a></td>\n<td>input:disabled</td>\n<td>选择每个被禁用的 <input> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_empty.asp\">:empty</a></td>\n<td>p:empty</td>\n<td>选择没有子元素的每个 <p> 元素（包括文本节点）。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_enabled.asp\">:enabled</a></td>\n<td>input:enabled</td>\n<td>选择每个启用的 <input> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_first-child.asp\">:first-child</a></td>\n<td>p:first-child</td>\n<td>选择属于父元素的第一个子元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_first-letter.asp\">::first-letter</a></td>\n<td>p::first-letter</td>\n<td>选择每个 <p> 元素的首字母。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_first-line.asp\">::first-line</a></td>\n<td>p::first-line</td>\n<td>选择每个 <p> 元素的首行。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_first-of-type.asp\">:first-of-type</a></td>\n<td>p:first-of-type</td>\n<td>选择属于其父元素的首个 <p> 元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_focus.asp\">:focus</a></td>\n<td>input:focus</td>\n<td>选择获得焦点的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_fullscreen.asp\">:fullscreen</a></td>\n<td>:fullscreen</td>\n<td>选择处于全屏模式的元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_hover.asp\">:hover</a></td>\n<td>a:hover</td>\n<td>选择鼠标指针位于其上的链接。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_in-range.asp\">:in-range</a></td>\n<td>input:in-range</td>\n<td>选择其值在指定范围内的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_indeterminate.asp\">:indeterminate</a></td>\n<td>input:indeterminate</td>\n<td>选择处于不确定状态的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_invalid.asp\">:invalid</a></td>\n<td>input:invalid</td>\n<td>选择具有无效值的所有 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_lang.asp\">:lang(<em>language</em>)</a></td>\n<td>p:lang(it)</td>\n<td>选择 lang 属性等于 “it”（意大利）的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_last-child.asp\">:last-child</a></td>\n<td>p:last-child</td>\n<td>选择属于其父元素最后一个子元素每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_last-of-type.asp\">:last-of-type</a></td>\n<td>p:last-of-type</td>\n<td>选择属于其父元素的最后 <p> 元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_link.asp\">:link</a></td>\n<td>a:link</td>\n<td>选择所有未访问过的链接。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_not.asp\">:not(<em>selector</em>)</a></td>\n<td>:not(p)</td>\n<td>选择非 <p> 元素的每个元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_nth-child.asp\">:nth-child(<em>n</em>)</a></td>\n<td>p:nth-child(2)</td>\n<td>选择属于其父元素的第二个子元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_nth-last-child.asp\">:nth-last-child(<em>n</em>)</a></td>\n<td>p:nth-last-child(2)</td>\n<td>同上，从最后一个子元素开始计数。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_nth-of-type.asp\">:nth-of-type(<em>n</em>)</a></td>\n<td>p:nth-of-type(2)</td>\n<td>选择属于其父元素第二个 <p> 元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_nth-last-of-type.asp\">:nth-last-of-type(<em>n</em>)</a></td>\n<td>p:nth-last-of-type(2)</td>\n<td>同上，但是从最后一个子元素开始计数。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_only-of-type.asp\">:only-of-type</a></td>\n<td>p:only-of-type</td>\n<td>选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_only-child.asp\">:only-child</a></td>\n<td>p:only-child</td>\n<td>选择属于其父元素的唯一子元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_optional.asp\">:optional</a></td>\n<td>input:optional</td>\n<td>选择不带 “required” 属性的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_out-of-range.asp\">:out-of-range</a></td>\n<td>input:out-of-range</td>\n<td>选择值超出指定范围的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_placeholder.asp\">::placeholder</a></td>\n<td>input::placeholder</td>\n<td>选择已规定 “placeholder” 属性的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_read-only.asp\">:read-only</a></td>\n<td>input:read-only</td>\n<td>选择已规定 “readonly” 属性的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_read-write.asp\">:read-write</a></td>\n<td>input:read-write</td>\n<td>选择未规定 “readonly” 属性的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_required.asp\">:required</a></td>\n<td>input:required</td>\n<td>选择已规定 “required” 属性的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_root.asp\">:root</a></td>\n<td>:root</td>\n<td>选择文档的根元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_selection.asp\">::selection</a></td>\n<td>::selection</td>\n<td>选择用户已选取的元素部分。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_target.asp\">:target</a></td>\n<td>#news:target</td>\n<td>选择当前活动的 #news 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_valid.asp\">:valid</a></td>\n<td>input:valid</td>\n<td>选择带有有效值的所有 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_visited.asp\">:visited</a></td>\n<td>a:visited</td>\n<td>选择所有已访问的链接。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"DOM\"><a href=\"#DOM\" class=\"headerlink\" title=\"DOM\"></a>DOM</h2><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">//setAttribute 设置标签属性\ndiv.setAttribute('order-state', 'canceled');\n//getAttribute 获取标签属性\ninput.getAttribute('id')\n//textContent元素内文本\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>news<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Headline!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Martians attack people!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token comment\">// Headline! Martians attack people!</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n//classList添加单个类\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main page<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token comment\">// 添加一个 class</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'article'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// main page article</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><strong>兄弟节点（Sibling）</strong> 是指有同一个父节点的节点。</p>\n<p>例如，<code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code> 就是兄弟节点：</p>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<ul>\n<li><code>&lt;body&gt;</code> 可以说是 <code>&lt;head&gt;</code> 的“下一个”或者“右边”兄弟节点。</li>\n<li><code>&lt;head&gt;</code> 可以说是 <code>&lt;body&gt;</code> 的“前一个”或者“左边”兄弟节点。</li>\n</ul>\n<p>下一个兄弟节点在 <code>nextSibling</code> 属性中，上一个是在 <code>previousSibling</code> 属性中。</p>\n<p>可以通过 <code>parentNode</code> 来访问父节点。</p>\n<p>例如：</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// &lt;body> 的父节点是 &lt;html></span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>parentNode <span class=\"token operator\">===</span> document<span class=\"token punctuation\">.</span>documentElement <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// &lt;head> 的后一个是 &lt;body></span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span>nextSibling <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// HTMLBodyElement</span>\n\n<span class=\"token comment\">// &lt;body> 的前一个是 &lt;head></span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>previousSibling <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// HTMLHeadElement</span></code></pre>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \ndiv<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">;</span>   \ndiv<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;strong>Hi there!&lt;/strong> You've read an important message.\"</span><span class=\"token punctuation\">;</span>   document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<ul>\n<li><code>node.append(...nodes or strings)</code> —— 在 <code>node</code> <strong>末尾</strong> 插入节点或字符串，</li>\n<li><code>node.prepend(...nodes or strings)</code> —— 在 <code>node</code> <strong>开头</strong> 插入节点或字符串，</li>\n<li><code>node.before(...nodes or strings)</code> —— 在 <code>node</code> <strong>前面</strong> 插入节点或字符串，</li>\n<li><code>node.after(...nodes or strings)</code> —— 在 <code>node</code> <strong>后面</strong> 插入节点或字符串，</li>\n<li><code>node.replaceWith(...nodes or strings)</code> —— 将 <code>node</code> 替换为给定的节点或字符串</li>\n</ul>\n<p>div置于底部</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span> <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 55<span class=\"token punctuation\">;</span> <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span> <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span> <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>后续处理<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 350px<span class=\"token punctuation\">;</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 45px<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"iconfont\"><a href=\"#iconfont\" class=\"headerlink\" title=\"iconfont\"></a>iconfont</h2><p>普通字体</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">// 引入字体css、iconfont 加 字体名\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://at.alicdn.com/t/font_3125574_dg7amy0ak5b.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>iconfont icon-sifenkesiwumaomao col-xs-offset-2<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>彩色字体</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">// 引入js、添加css、\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://at.alicdn.com/t/font_3125574_scj6r0fpek.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n     <span class=\"token selector\">.icon</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n       <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n       <span class=\"token property\">vertical-align</span><span class=\"token punctuation\">:</span> -0.15em<span class=\"token punctuation\">;</span>\n       <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> currentColor<span class=\"token punctuation\">;</span>\n       <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon svg-icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-hidden</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>use</span> <span class=\"token attr-name\"><span class=\"token namespace\">xlink:</span>href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#icon-yinjianceng<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>use</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160531.jpg","length":6369,"excerpt":"","more":"<h2 id=\"Bootstrap\"><a href=\"#Bootstrap\" class=\"headerlink\" title=\"Bootstrap\"></a>Bootstrap</h2><h3 id=\"表单\"><a href=\"#表单\" class=\"headerlink\" title=\"表单\"></a>表单</h3><h4 id=\"状态校验\"><a href=\"#状态校验\" class=\"headerlink\" title=\"状态校验\"></a>状态校验</h4><p>添加 <code>.has-warning</code>、<code>.has-error</code> 或 <code>.has-success</code> 类到这些控件的父元素即可。任何包含在此元素之内的 <code>.control-label</code>、<code>.form-control</code> 和 <code>.help-block</code> 元素都将接受这些校验状态的样式。</p>\n<p>label标签上的for用于与input标签绑定，label的for值与input的id值相同</p>\n<p>input标签上的.aria-describedby与其他标签id绑定</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-group has-success<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>control-label<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputSuccess1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Input with success<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-control<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputSuccess1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-describedby</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>helpBlock2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>helpBlock2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>help-block<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>A block of help text that breaks onto a new line and may extend beyond one line.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<h4 id=\"添加额外图标\"><a href=\"#添加额外图标\" class=\"headerlink\" title=\"添加额外图标\"></a>添加额外图标</h4><p>针对校验状态为输入框添加额外的图标。只需设置相应的 <code>.has-feedback</code> 类并添加正确的图标即可</p>\n<p><strong>反馈图标（feedback icon）只能使用在文本输入框 <code>&lt;input class=&quot;form-control&quot;&gt;</code> 元素上</strong></p>\n<blockquote>\n<p>图标、<code>label</code>  和输入控件组对于不带有 <code>label</code> 标签的输入框以及右侧带有附加组件的<a href=\"https://v3.bootcss.com/components/#input-groups\">输入框组</a>，需要手动为其放置反馈图标。为了让所有用户都能访问你的网站，我们强烈建议为所有输入框添加 <code>label</code> 标签。如果你不希望将 <code>label</code> 标签展示出来，可以通过添加 <code>.sr-only</code> 类将其隐藏。如果的确不能添加 <code>label</code> 标签，请调整反馈图标的 <code>top</code> 值。对于输入框组，请根据附加组件的实际情况调整 <code>right</code> 值。</p>\n<p>向辅助技术设备传递图标的含义为了确保辅助技术- 如屏幕阅读器 - 正确传达一个图标的含义，额外的隐藏的文本应包含在 <code>.sr-only</code> 类中，并明确关联使用了 <code>aria-describedby</code> 的表单控件。或者，以某些其他形式（例如，文本输入字段有一个特定的警告信息）传达含义，例如改变与表单控件实际相关联的 <code>&lt;label&gt;</code> 的文本。</p>\n<p>虽然下面的例子已经提到各自表单控件本身的 <code>&lt;label&gt;</code> 文本的验证状态，上述技术（使用 <code>.sr-only</code> 文本 和 <code>aria-describedby</code>) ）已经包括了需要说明的目的。</p>\n</blockquote>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-group has-success has-feedback<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>control-label<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputSuccess2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Input with success<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-control<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputSuccess2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-describedby</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputSuccess2Status<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>glyphicon glyphicon-ok form-control-feedback<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-hidden</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputSuccess2Status<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sr-only<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>(success)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><h3 id=\"css属性\"><a href=\"#css属性\" class=\"headerlink\" title=\"css属性\"></a>css属性</h3><p>text-decoration</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\">// 设置文本的下划线、上划线等修饰属性\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>                     <span class=\"token comment\">/*没有文本装饰*/</span>\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> underline red<span class=\"token punctuation\">;</span>            <span class=\"token comment\">/*红色下划线*/</span>\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> underline wavy red<span class=\"token punctuation\">;</span>       <span class=\"token comment\">/*红色波浪形下划线*/</span>\n\n<span class=\"token comment\">/*全局值*/</span>\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span>\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> unset<span class=\"token punctuation\">;</span></code></pre>\n<p>text-align</p>\n<pre class=\"language-css\" data-language=\"css\"><code class=\"language-css\">// 设置文本对齐方式\n<span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span>center</code></pre>\n<h3 id=\"CSS选择器\"><a href=\"#CSS选择器\" class=\"headerlink\" title=\"CSS选择器\"></a>CSS选择器</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>例子</th>\n<th>例子描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_class.asp\">.<em>class</em></a></td>\n<td>.intro</td>\n<td>选择 class=”intro” 的所有元素。</td>\n</tr>\n<tr>\n<td>.<em>class1</em>.<em>class2</em></td>\n<td>.name1.name2</td>\n<td>选择 class 属性中同时有 name1 和 name2 的所有元素。</td>\n</tr>\n<tr>\n<td>.<em>class1</em> .<em>class2</em></td>\n<td>.name1 .name2</td>\n<td>选择作为类名 name1 元素后代的所有类名 name2 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_id.asp\">#<em>id</em></a></td>\n<td>#firstname</td>\n<td>选择 id=”firstname” 的元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_all.asp\">*</a></td>\n<td>*</td>\n<td>选择所有元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_element.asp\"><em>element</em></a></td>\n<td>p</td>\n<td>选择所有 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_element_class.asp\"><em>element</em>.<em>class</em></a></td>\n<td>p.intro</td>\n<td>选择 class=”intro” 的所有 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_element_comma.asp\"><em>element</em>,<em>element</em></a></td>\n<td>div, p</td>\n<td>选择所有 <div> 元素和所有 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_element_element.asp\"><em>element</em> <em>element</em></a></td>\n<td>div p</td>\n<td>选择 <div> 元素内的所有 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_element_gt.asp\"><em>element</em>&gt;<em>element</em></a></td>\n<td>div &gt; p</td>\n<td>选择父元素是 <div> 的所有 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_element_plus.asp\"><em>element</em>+<em>element</em></a></td>\n<td>div + p</td>\n<td>选择紧跟 <div> 元素的首个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_gen_sibling.asp\"><em>element1</em>~<em>element2</em></a></td>\n<td>p ~ ul</td>\n<td>选择前面有 <p> 元素的每个 <ul> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_attribute.asp\">[<em>attribute</em>]</a></td>\n<td>[target]</td>\n<td>选择带有 target 属性的所有元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_attribute_value.asp\">[<em>attribute</em>=<em>value</em>]</a></td>\n<td>[target=_blank]</td>\n<td>选择带有 target=”_blank” 属性的所有元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_attribute_value_contain.asp\">[<em>attribute</em>~=<em>value</em>]</a></td>\n<td>[title~=flower]</td>\n<td>选择 title 属性包含单词 “flower” 的所有元素。</td>\n</tr>\n<tr>\n<td>[[<em>attribute</em>\\</td>\n<td>=<em>value</em>]](<a href=\"https://www.w3school.com.cn/cssref/selector_attribute_value_start.asp\">https://www.w3school.com.cn/cssref/selector_attribute_value_start.asp</a>)</td>\n<td>[lang\\</td>\n<td>=en]</td>\n<td>选择 lang 属性值以 “en” 开头的所有元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_attr_begin.asp\">[<em>attribute</em>^=<em>value</em>]</a></td>\n<td>a[href^=”https”]</td>\n<td>选择其 src 属性值以 “https” 开头的每个 <a> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_attr_end.asp\">[<em>attribute</em>$=<em>value</em>]</a></td>\n<td>a[href$=”.pdf”]</td>\n<td>选择其 src 属性以 “.pdf” 结尾的所有 <a> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_attr_contain.asp\">[<em>attribute**=</em>value*]</a></td>\n<td>a[href*=”w3schools”]</td>\n<td>选择其 href 属性值中包含 “abc” 子串的每个 <a> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_active.asp\">:active</a></td>\n<td>a:active</td>\n<td>选择活动链接。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_after.asp\">::after</a></td>\n<td>p::after</td>\n<td>在每个 <p> 的内容之后插入内容。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_before.asp\">::before</a></td>\n<td>p::before</td>\n<td>在每个 <p> 的内容之前插入内容。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_checked.asp\">:checked</a></td>\n<td>input:checked</td>\n<td>选择每个被选中的 <input> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_default.asp\">:default</a></td>\n<td>input:default</td>\n<td>选择默认的 <input> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_disabled.asp\">:disabled</a></td>\n<td>input:disabled</td>\n<td>选择每个被禁用的 <input> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_empty.asp\">:empty</a></td>\n<td>p:empty</td>\n<td>选择没有子元素的每个 <p> 元素（包括文本节点）。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_enabled.asp\">:enabled</a></td>\n<td>input:enabled</td>\n<td>选择每个启用的 <input> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_first-child.asp\">:first-child</a></td>\n<td>p:first-child</td>\n<td>选择属于父元素的第一个子元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_first-letter.asp\">::first-letter</a></td>\n<td>p::first-letter</td>\n<td>选择每个 <p> 元素的首字母。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_first-line.asp\">::first-line</a></td>\n<td>p::first-line</td>\n<td>选择每个 <p> 元素的首行。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_first-of-type.asp\">:first-of-type</a></td>\n<td>p:first-of-type</td>\n<td>选择属于其父元素的首个 <p> 元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_focus.asp\">:focus</a></td>\n<td>input:focus</td>\n<td>选择获得焦点的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_fullscreen.asp\">:fullscreen</a></td>\n<td>:fullscreen</td>\n<td>选择处于全屏模式的元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_hover.asp\">:hover</a></td>\n<td>a:hover</td>\n<td>选择鼠标指针位于其上的链接。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_in-range.asp\">:in-range</a></td>\n<td>input:in-range</td>\n<td>选择其值在指定范围内的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_indeterminate.asp\">:indeterminate</a></td>\n<td>input:indeterminate</td>\n<td>选择处于不确定状态的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_invalid.asp\">:invalid</a></td>\n<td>input:invalid</td>\n<td>选择具有无效值的所有 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_lang.asp\">:lang(<em>language</em>)</a></td>\n<td>p:lang(it)</td>\n<td>选择 lang 属性等于 “it”（意大利）的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_last-child.asp\">:last-child</a></td>\n<td>p:last-child</td>\n<td>选择属于其父元素最后一个子元素每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_last-of-type.asp\">:last-of-type</a></td>\n<td>p:last-of-type</td>\n<td>选择属于其父元素的最后 <p> 元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_link.asp\">:link</a></td>\n<td>a:link</td>\n<td>选择所有未访问过的链接。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_not.asp\">:not(<em>selector</em>)</a></td>\n<td>:not(p)</td>\n<td>选择非 <p> 元素的每个元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_nth-child.asp\">:nth-child(<em>n</em>)</a></td>\n<td>p:nth-child(2)</td>\n<td>选择属于其父元素的第二个子元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_nth-last-child.asp\">:nth-last-child(<em>n</em>)</a></td>\n<td>p:nth-last-child(2)</td>\n<td>同上，从最后一个子元素开始计数。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_nth-of-type.asp\">:nth-of-type(<em>n</em>)</a></td>\n<td>p:nth-of-type(2)</td>\n<td>选择属于其父元素第二个 <p> 元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_nth-last-of-type.asp\">:nth-last-of-type(<em>n</em>)</a></td>\n<td>p:nth-last-of-type(2)</td>\n<td>同上，但是从最后一个子元素开始计数。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_only-of-type.asp\">:only-of-type</a></td>\n<td>p:only-of-type</td>\n<td>选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_only-child.asp\">:only-child</a></td>\n<td>p:only-child</td>\n<td>选择属于其父元素的唯一子元素的每个 <p> 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_optional.asp\">:optional</a></td>\n<td>input:optional</td>\n<td>选择不带 “required” 属性的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_out-of-range.asp\">:out-of-range</a></td>\n<td>input:out-of-range</td>\n<td>选择值超出指定范围的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_placeholder.asp\">::placeholder</a></td>\n<td>input::placeholder</td>\n<td>选择已规定 “placeholder” 属性的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_read-only.asp\">:read-only</a></td>\n<td>input:read-only</td>\n<td>选择已规定 “readonly” 属性的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_read-write.asp\">:read-write</a></td>\n<td>input:read-write</td>\n<td>选择未规定 “readonly” 属性的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_required.asp\">:required</a></td>\n<td>input:required</td>\n<td>选择已规定 “required” 属性的 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_root.asp\">:root</a></td>\n<td>:root</td>\n<td>选择文档的根元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_selection.asp\">::selection</a></td>\n<td>::selection</td>\n<td>选择用户已选取的元素部分。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_target.asp\">:target</a></td>\n<td>#news:target</td>\n<td>选择当前活动的 #news 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_valid.asp\">:valid</a></td>\n<td>input:valid</td>\n<td>选择带有有效值的所有 input 元素。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3school.com.cn/cssref/selector_visited.asp\">:visited</a></td>\n<td>a:visited</td>\n<td>选择所有已访问的链接。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"DOM\"><a href=\"#DOM\" class=\"headerlink\" title=\"DOM\"></a>DOM</h2><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">//setAttribute 设置标签属性\ndiv.setAttribute('order-state', 'canceled');\n//getAttribute 获取标签属性\ninput.getAttribute('id')\n//textContent元素内文本\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>news<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Headline!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Martians attack people!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token comment\">// Headline! Martians attack people!</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n//classList添加单个类\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main page<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token comment\">// 添加一个 class</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'article'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// main page article</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><strong>兄弟节点（Sibling）</strong> 是指有同一个父节点的节点。</p>\n<p>例如，<code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code> 就是兄弟节点：</p>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<ul>\n<li><code>&lt;body&gt;</code> 可以说是 <code>&lt;head&gt;</code> 的“下一个”或者“右边”兄弟节点。</li>\n<li><code>&lt;head&gt;</code> 可以说是 <code>&lt;body&gt;</code> 的“前一个”或者“左边”兄弟节点。</li>\n</ul>\n<p>下一个兄弟节点在 <code>nextSibling</code> 属性中，上一个是在 <code>previousSibling</code> 属性中。</p>\n<p>可以通过 <code>parentNode</code> 来访问父节点。</p>\n<p>例如：</p>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// &lt;body> 的父节点是 &lt;html></span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>parentNode <span class=\"token operator\">===</span> document<span class=\"token punctuation\">.</span>documentElement <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// &lt;head> 的后一个是 &lt;body></span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span>nextSibling <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// HTMLBodyElement</span>\n\n<span class=\"token comment\">// &lt;body> 的前一个是 &lt;head></span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>previousSibling <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// HTMLHeadElement</span></code></pre>\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \ndiv<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">;</span>   \ndiv<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;strong>Hi there!&lt;/strong> You've read an important message.\"</span><span class=\"token punctuation\">;</span>   document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<ul>\n<li><code>node.append(...nodes or strings)</code> —— 在 <code>node</code> <strong>末尾</strong> 插入节点或字符串，</li>\n<li><code>node.prepend(...nodes or strings)</code> —— 在 <code>node</code> <strong>开头</strong> 插入节点或字符串，</li>\n<li><code>node.before(...nodes or strings)</code> —— 在 <code>node</code> <strong>前面</strong> 插入节点或字符串，</li>\n<li><code>node.after(...nodes or strings)</code> —— 在 <code>node</code> <strong>后面</strong> 插入节点或字符串，</li>\n<li><code>node.replaceWith(...nodes or strings)</code> —— 将 <code>node</code> 替换为给定的节点或字符串</li>\n</ul>\n<p>div置于底部</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span> <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 55<span class=\"token punctuation\">;</span> <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span> <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span> <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>后续处理<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 350px<span class=\"token punctuation\">;</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 45px<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"iconfont\"><a href=\"#iconfont\" class=\"headerlink\" title=\"iconfont\"></a>iconfont</h2><p>普通字体</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">// 引入字体css、iconfont 加 字体名\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://at.alicdn.com/t/font_3125574_dg7amy0ak5b.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>iconfont icon-sifenkesiwumaomao col-xs-offset-2<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>彩色字体</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">// 引入js、添加css、\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://at.alicdn.com/t/font_3125574_scj6r0fpek.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n     <span class=\"token selector\">.icon</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n       <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n       <span class=\"token property\">vertical-align</span><span class=\"token punctuation\">:</span> -0.15em<span class=\"token punctuation\">;</span>\n       <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> currentColor<span class=\"token punctuation\">;</span>\n       <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon svg-icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-hidden</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>use</span> <span class=\"token attr-name\"><span class=\"token namespace\">xlink:</span>href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#icon-yinjianceng<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>use</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre>\n"},{"title":"单张像片解析","date":"2021-07-05T06:49:35.000Z","mathjax":true,"description":"单张像片解析","_content":"\n# 单张像片解析\n\n## 基本知识\n\n### 1.航向重叠\n\n+ 同一航线内相邻像片有一定的影像重叠\n\n### 2.旁向重叠\n\n+ 相邻航线也有一定的重叠\n\n### 3.航迹角\n\n+ 实际航线与设计航线的夹角\n\n### 4.像片倾角\n\n+ 航空摄影机主光轴与铅垂线的夹角\n+ 摄影方向线与主垂线夹角\n+ 竖直摄影像片倾角小于2-3度\n+ 倾斜摄影像片倾角大于3度\n\n### 5.航摄比例尺\n\n+ 像片上的线段l与地面上相应的水平距L之比\n\n  $\\frac{1}{m}=\\frac{l}{L}=\\frac{f}{H}$\n\n+ 在像片倾角很小 地形起伏不大时，H取平均航高，可以看成是像片的概略比例尺\n\n+ 一般摄影条件下，不存在整张像片的统一比例尺。摄影航摄像片上比例尺处处不相等\n\n### 6.航高\n\n+ 摄影航高\n\n  相当于摄区平均高程面的高度\n\n+ 相对航高\n\n  航摄仪物镜中心在摄影瞬间相当于某一基准面的高度\n\n+ 绝对航高\n\n  航摄仪物镜中心S在摄影瞬间相当于大地水准面的高度\n\n  H<sub>绝对</sub>=h<sub>平均</sub>+H~相对~\n\n### 7.摄影基线\n\n+ 航线方向相邻两摄站点的空间距离\n\n## 单张像片特殊的点线面\n\n### 1.焦距\n\n+ 物镜到焦点的距离\n\n### 2.主距\n\n+ 物镜后节点到像平面的距离\n+ 航高相当于主距很大，近似于无穷远成像，所以主距约等于物镜焦距\n\n### 3.特殊的点线面\n\n+ ![](https://raw.githubusercontent.com/three-body2/Note/main/20210703223115.png)\n\n+ 主垂面\n\n  包含摄影机轴SoO的铅垂面W，称为主垂面\n\n+ 主纵线\n\n  主垂面与像平面的交线vv称为主纵线\n\n+ 摄影方向线\n\n  主垂面与地平面的交线称为摄影方向线\n\n+ 像底点\n\n  铅垂射线SN与像平面的交点n称为像底点。\n\n+ 地底点\n\n  像底点n在地面上的透视对应点N称为地底点。\n\n+ 透视轴\n\n  将像片平面扩大与地平面相交的迹线TT称为透视轴\n\n## 常用坐标系\n\n### 像方坐标系\n\n#### 1.像平面坐标系(右手系)\n\n+ 以像主点为坐标原点，坐标轴分别与框标连线平行\n+ 表示像点在像平面内位置的平面直角坐标系\n\n#### 2.像空间坐标系(右手系)(x,y-f)\n\n+ 摄影中心为坐标原点\n+ z轴与主光轴重合\n+ x,y轴与像平面坐标系x,y轴平行\n\n+ 表示像点在像方空间位置的空间直角坐标系\n\n#### 3.像空间辅助坐标系(右手系)(X,Y,Z)\n\n+ 各像片的像空间坐标系不统一，给计算带来了困难，为此，建立一种相对同一的坐标系\n\n+ 摄影中心为坐标原点\n+ Z轴为铅锤方向，X轴为航向方向\n+ 第一张像片的像空间坐标系\n+ X轴为摄影基线方向 XZ平面为摄影基线及左片主光轴构成的面\n\n### 物方坐标系\n\n#### 1.摄影测量坐标系(右手系)\n\n+ 像空间辅助坐标系沿着Z轴反向无限延伸到地面上的点为坐标原点\n\n#### 2.地面测量坐标系(左手系)\n\n+ Z轴：沿铅垂线\n+ X轴：中央子午线\n+ Y轴：赤道\n+ 为国家统一坐标系，平面坐标为高斯-克吕格3度带或6度带投影(1980西安坐标系)，高程为1985黄海高程系\n\n#### 3.地面摄影测量坐标系(右手系)\n\n+ 原点为地面某一控制点\n+ Z轴与地面测量坐标系的Z轴平行\n+ X轴与航线一致\n+ 摄影测量坐标系采用的是右手系，地面测量坐标系采用的是左手系，这给摄影测量坐标到地面测量坐标系的转换带来了困难，为此，在摄影测量坐标系与地面测量坐标系之间建立一种过渡性的坐标系，称为地面摄影测量坐标系\n\n## 像片的内外方位元素\n\n+ 像片的方位元素\n\n  确定航空摄影中心与像片在地面设定的空间坐标系中的位置与姿态，描述位置和姿态的参数\n\n### 内方位元素\n\n内方位元素一般已知\n\n+ 恢复内方位元素可恢复摄影时的摄影光束\n+ 描述摄影中心与像片之间相关位置的参数\n+ 主距==f==像片框标坐标系的坐标x,y\n\n### 外方位元素\n\n![](https://raw.githubusercontent.com/three-body2/Note/main/20210703224157.png)\n\n+ 确定摄影时==像空间坐标系==在==地面摄影测量坐标系==中位置和方向的元素\n\n+ 确定摄影光束空间姿态\n\n+ 外方位线元素：\n\n  确定像空系的==原点S==在地摄系中的坐标\n\n+ 外方位角元素(三次旋转)：\n\n  确定像空系==三轴==在地摄系中的方向\n\n## 中心投影构像方程\n\n### 投影\n\n+ 航摄像片为中心投影\n+ 地形图为正射投影\n\n### 共线条件方程\n\n+ 在理想情况，摄影瞬间==像点== ==投影中心== ==物点==位于同一条直线上，描述这三点共线的数学表达式称之为共线条件方程\n+ $$\\frac{X}{X_A-X_S}=\\frac{Y}{Y_A-Y_S}=\\frac{Z}{Z_A-Z_S}=\\frac{1}{\\lambda}$$\n+ ![](https://raw.githubusercontent.com/three-body2/Note/main/20210703222645.png)\n+ 已知==地面点==坐标可以和==内外方位元素==可以求得==像点坐==标\n+ 已知==像点==坐标和==内外方位元素不能==求得==地面点==坐标\n+ 地面点坐标有==3个==未知数而像点坐标只有==2个==未知数\n\n### 应用\n\n+ 求解外方位元素\n+ 计算像点位置\n+ 求解地面点坐标\n+ 前方交会\n+ 后方交会\n+ 光束法\n\n## 像点位移\n\n### 定义\n\n+ 像点位移：当像片倾斜 地面起伏时，地面点在航摄像片上的构像相当于理想情况下的构像所产生的位置差异\n+ 方向偏差：从像片上某点作出的方向线与地面对应点画出的方向线的方位角不等，这种差异称为方向偏差\n\n### 起因\n\n\n\n#### 地形起伏\n\n特点：\n\n+ 像底点的像点不存在像点位移\n+ 在保持像片摄影比例尺不变时，地形起伏像点位移之值随航高增大而减小，因此采用长焦距摄影机以增大航高进行空中摄影是有利的\n+ 因地形起伏引起的像点位移常称为像片上的投影差\n\n#### 像片倾斜\n\n+ \n\n## 单张像片后方交会\n\n### 定义\n\n利用==3个==及以上的地面控制点及其在像片上的像点，确定一张像片==外方位元素==的方法\n\n### 作用\n\n求解外方位元素\n\n### 原理\n\n共线条件方程\n\n### 要求\n\n+ 至少三个不在同一直线上的地面控制点\n\n+ <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703230036.png\"/>\n\n","source":"_posts/单张像片解析.md","raw":"---\ntitle: 单张像片解析\ndate: 2021-07-05 14:49:35\nmathjax: true\ncategories: [GIS,摄影测量,单张像片解析]\ntags: 摄影测量\ndescription: 单张像片解析\n---\n\n# 单张像片解析\n\n## 基本知识\n\n### 1.航向重叠\n\n+ 同一航线内相邻像片有一定的影像重叠\n\n### 2.旁向重叠\n\n+ 相邻航线也有一定的重叠\n\n### 3.航迹角\n\n+ 实际航线与设计航线的夹角\n\n### 4.像片倾角\n\n+ 航空摄影机主光轴与铅垂线的夹角\n+ 摄影方向线与主垂线夹角\n+ 竖直摄影像片倾角小于2-3度\n+ 倾斜摄影像片倾角大于3度\n\n### 5.航摄比例尺\n\n+ 像片上的线段l与地面上相应的水平距L之比\n\n  $\\frac{1}{m}=\\frac{l}{L}=\\frac{f}{H}$\n\n+ 在像片倾角很小 地形起伏不大时，H取平均航高，可以看成是像片的概略比例尺\n\n+ 一般摄影条件下，不存在整张像片的统一比例尺。摄影航摄像片上比例尺处处不相等\n\n### 6.航高\n\n+ 摄影航高\n\n  相当于摄区平均高程面的高度\n\n+ 相对航高\n\n  航摄仪物镜中心在摄影瞬间相当于某一基准面的高度\n\n+ 绝对航高\n\n  航摄仪物镜中心S在摄影瞬间相当于大地水准面的高度\n\n  H<sub>绝对</sub>=h<sub>平均</sub>+H~相对~\n\n### 7.摄影基线\n\n+ 航线方向相邻两摄站点的空间距离\n\n## 单张像片特殊的点线面\n\n### 1.焦距\n\n+ 物镜到焦点的距离\n\n### 2.主距\n\n+ 物镜后节点到像平面的距离\n+ 航高相当于主距很大，近似于无穷远成像，所以主距约等于物镜焦距\n\n### 3.特殊的点线面\n\n+ ![](https://raw.githubusercontent.com/three-body2/Note/main/20210703223115.png)\n\n+ 主垂面\n\n  包含摄影机轴SoO的铅垂面W，称为主垂面\n\n+ 主纵线\n\n  主垂面与像平面的交线vv称为主纵线\n\n+ 摄影方向线\n\n  主垂面与地平面的交线称为摄影方向线\n\n+ 像底点\n\n  铅垂射线SN与像平面的交点n称为像底点。\n\n+ 地底点\n\n  像底点n在地面上的透视对应点N称为地底点。\n\n+ 透视轴\n\n  将像片平面扩大与地平面相交的迹线TT称为透视轴\n\n## 常用坐标系\n\n### 像方坐标系\n\n#### 1.像平面坐标系(右手系)\n\n+ 以像主点为坐标原点，坐标轴分别与框标连线平行\n+ 表示像点在像平面内位置的平面直角坐标系\n\n#### 2.像空间坐标系(右手系)(x,y-f)\n\n+ 摄影中心为坐标原点\n+ z轴与主光轴重合\n+ x,y轴与像平面坐标系x,y轴平行\n\n+ 表示像点在像方空间位置的空间直角坐标系\n\n#### 3.像空间辅助坐标系(右手系)(X,Y,Z)\n\n+ 各像片的像空间坐标系不统一，给计算带来了困难，为此，建立一种相对同一的坐标系\n\n+ 摄影中心为坐标原点\n+ Z轴为铅锤方向，X轴为航向方向\n+ 第一张像片的像空间坐标系\n+ X轴为摄影基线方向 XZ平面为摄影基线及左片主光轴构成的面\n\n### 物方坐标系\n\n#### 1.摄影测量坐标系(右手系)\n\n+ 像空间辅助坐标系沿着Z轴反向无限延伸到地面上的点为坐标原点\n\n#### 2.地面测量坐标系(左手系)\n\n+ Z轴：沿铅垂线\n+ X轴：中央子午线\n+ Y轴：赤道\n+ 为国家统一坐标系，平面坐标为高斯-克吕格3度带或6度带投影(1980西安坐标系)，高程为1985黄海高程系\n\n#### 3.地面摄影测量坐标系(右手系)\n\n+ 原点为地面某一控制点\n+ Z轴与地面测量坐标系的Z轴平行\n+ X轴与航线一致\n+ 摄影测量坐标系采用的是右手系，地面测量坐标系采用的是左手系，这给摄影测量坐标到地面测量坐标系的转换带来了困难，为此，在摄影测量坐标系与地面测量坐标系之间建立一种过渡性的坐标系，称为地面摄影测量坐标系\n\n## 像片的内外方位元素\n\n+ 像片的方位元素\n\n  确定航空摄影中心与像片在地面设定的空间坐标系中的位置与姿态，描述位置和姿态的参数\n\n### 内方位元素\n\n内方位元素一般已知\n\n+ 恢复内方位元素可恢复摄影时的摄影光束\n+ 描述摄影中心与像片之间相关位置的参数\n+ 主距==f==像片框标坐标系的坐标x,y\n\n### 外方位元素\n\n![](https://raw.githubusercontent.com/three-body2/Note/main/20210703224157.png)\n\n+ 确定摄影时==像空间坐标系==在==地面摄影测量坐标系==中位置和方向的元素\n\n+ 确定摄影光束空间姿态\n\n+ 外方位线元素：\n\n  确定像空系的==原点S==在地摄系中的坐标\n\n+ 外方位角元素(三次旋转)：\n\n  确定像空系==三轴==在地摄系中的方向\n\n## 中心投影构像方程\n\n### 投影\n\n+ 航摄像片为中心投影\n+ 地形图为正射投影\n\n### 共线条件方程\n\n+ 在理想情况，摄影瞬间==像点== ==投影中心== ==物点==位于同一条直线上，描述这三点共线的数学表达式称之为共线条件方程\n+ $$\\frac{X}{X_A-X_S}=\\frac{Y}{Y_A-Y_S}=\\frac{Z}{Z_A-Z_S}=\\frac{1}{\\lambda}$$\n+ ![](https://raw.githubusercontent.com/three-body2/Note/main/20210703222645.png)\n+ 已知==地面点==坐标可以和==内外方位元素==可以求得==像点坐==标\n+ 已知==像点==坐标和==内外方位元素不能==求得==地面点==坐标\n+ 地面点坐标有==3个==未知数而像点坐标只有==2个==未知数\n\n### 应用\n\n+ 求解外方位元素\n+ 计算像点位置\n+ 求解地面点坐标\n+ 前方交会\n+ 后方交会\n+ 光束法\n\n## 像点位移\n\n### 定义\n\n+ 像点位移：当像片倾斜 地面起伏时，地面点在航摄像片上的构像相当于理想情况下的构像所产生的位置差异\n+ 方向偏差：从像片上某点作出的方向线与地面对应点画出的方向线的方位角不等，这种差异称为方向偏差\n\n### 起因\n\n\n\n#### 地形起伏\n\n特点：\n\n+ 像底点的像点不存在像点位移\n+ 在保持像片摄影比例尺不变时，地形起伏像点位移之值随航高增大而减小，因此采用长焦距摄影机以增大航高进行空中摄影是有利的\n+ 因地形起伏引起的像点位移常称为像片上的投影差\n\n#### 像片倾斜\n\n+ \n\n## 单张像片后方交会\n\n### 定义\n\n利用==3个==及以上的地面控制点及其在像片上的像点，确定一张像片==外方位元素==的方法\n\n### 作用\n\n求解外方位元素\n\n### 原理\n\n共线条件方程\n\n### 要求\n\n+ 至少三个不在同一直线上的地面控制点\n\n+ <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703230036.png\"/>\n\n","slug":"单张像片解析","published":1,"updated":"2021-12-27T08:03:25.107Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3r0032jsvk53iydbjr","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"单张像片解析\"><a href=\"#单张像片解析\" class=\"headerlink\" title=\"单张像片解析\"></a>单张像片解析</h1><h2 id=\"基本知识\"><a href=\"#基本知识\" class=\"headerlink\" title=\"基本知识\"></a>基本知识</h2><h3 id=\"1-航向重叠\"><a href=\"#1-航向重叠\" class=\"headerlink\" title=\"1.航向重叠\"></a>1.航向重叠</h3><ul>\n<li>同一航线内相邻像片有一定的影像重叠</li>\n</ul>\n<h3 id=\"2-旁向重叠\"><a href=\"#2-旁向重叠\" class=\"headerlink\" title=\"2.旁向重叠\"></a>2.旁向重叠</h3><ul>\n<li>相邻航线也有一定的重叠</li>\n</ul>\n<h3 id=\"3-航迹角\"><a href=\"#3-航迹角\" class=\"headerlink\" title=\"3.航迹角\"></a>3.航迹角</h3><ul>\n<li>实际航线与设计航线的夹角</li>\n</ul>\n<h3 id=\"4-像片倾角\"><a href=\"#4-像片倾角\" class=\"headerlink\" title=\"4.像片倾角\"></a>4.像片倾角</h3><ul>\n<li>航空摄影机主光轴与铅垂线的夹角</li>\n<li>摄影方向线与主垂线夹角</li>\n<li>竖直摄影像片倾角小于2-3度</li>\n<li>倾斜摄影像片倾角大于3度</li>\n</ul>\n<h3 id=\"5-航摄比例尺\"><a href=\"#5-航摄比例尺\" class=\"headerlink\" title=\"5.航摄比例尺\"></a>5.航摄比例尺</h3><ul>\n<li><p>像片上的线段l与地面上相应的水平距L之比</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.798ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.935ex\" height=\"3.023ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -983.5 5717.4 1336.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mn\" transform=\"translate(353.6,394) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><rect width=\"820.8\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(1338.6,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(2394.4,0)\"><g data-mml-node=\"mi\" transform=\"translate(355.4,394) scale(0.707)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><rect width=\"681.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3593.7,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(4649.5,0)\"><g data-mml-node=\"mi\" transform=\"translate(339.5,485) scale(0.707)\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><rect width=\"827.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></p>\n</li>\n<li><p>在像片倾角很小 地形起伏不大时，H取平均航高，可以看成是像片的概略比例尺</p>\n</li>\n<li><p>一般摄影条件下，不存在整张像片的统一比例尺。摄影航摄像片上比例尺处处不相等</p>\n</li>\n</ul>\n<h3 id=\"6-航高\"><a href=\"#6-航高\" class=\"headerlink\" title=\"6.航高\"></a>6.航高</h3><ul>\n<li><p>摄影航高</p>\n<p>相当于摄区平均高程面的高度</p>\n</li>\n<li><p>相对航高</p>\n<p>航摄仪物镜中心在摄影瞬间相当于某一基准面的高度</p>\n</li>\n<li><p>绝对航高</p>\n<p>航摄仪物镜中心S在摄影瞬间相当于大地水准面的高度</p>\n<p>H<sub>绝对</sub>=h<sub>平均</sub>+H~相对~</p>\n</li>\n</ul>\n<h3 id=\"7-摄影基线\"><a href=\"#7-摄影基线\" class=\"headerlink\" title=\"7.摄影基线\"></a>7.摄影基线</h3><ul>\n<li>航线方向相邻两摄站点的空间距离</li>\n</ul>\n<h2 id=\"单张像片特殊的点线面\"><a href=\"#单张像片特殊的点线面\" class=\"headerlink\" title=\"单张像片特殊的点线面\"></a>单张像片特殊的点线面</h2><h3 id=\"1-焦距\"><a href=\"#1-焦距\" class=\"headerlink\" title=\"1.焦距\"></a>1.焦距</h3><ul>\n<li>物镜到焦点的距离</li>\n</ul>\n<h3 id=\"2-主距\"><a href=\"#2-主距\" class=\"headerlink\" title=\"2.主距\"></a>2.主距</h3><ul>\n<li>物镜后节点到像平面的距离</li>\n<li>航高相当于主距很大，近似于无穷远成像，所以主距约等于物镜焦距</li>\n</ul>\n<h3 id=\"3-特殊的点线面\"><a href=\"#3-特殊的点线面\" class=\"headerlink\" title=\"3.特殊的点线面\"></a>3.特殊的点线面</h3><ul>\n<li><p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703223115.png\" alt=\"\"></p>\n</li>\n<li><p>主垂面</p>\n<p>包含摄影机轴SoO的铅垂面W，称为主垂面</p>\n</li>\n<li><p>主纵线</p>\n<p>主垂面与像平面的交线vv称为主纵线</p>\n</li>\n<li><p>摄影方向线</p>\n<p>主垂面与地平面的交线称为摄影方向线</p>\n</li>\n<li><p>像底点</p>\n<p>铅垂射线SN与像平面的交点n称为像底点。</p>\n</li>\n<li><p>地底点</p>\n<p>像底点n在地面上的透视对应点N称为地底点。</p>\n</li>\n<li><p>透视轴</p>\n<p>将像片平面扩大与地平面相交的迹线TT称为透视轴</p>\n</li>\n</ul>\n<h2 id=\"常用坐标系\"><a href=\"#常用坐标系\" class=\"headerlink\" title=\"常用坐标系\"></a>常用坐标系</h2><h3 id=\"像方坐标系\"><a href=\"#像方坐标系\" class=\"headerlink\" title=\"像方坐标系\"></a>像方坐标系</h3><h4 id=\"1-像平面坐标系-右手系\"><a href=\"#1-像平面坐标系-右手系\" class=\"headerlink\" title=\"1.像平面坐标系(右手系)\"></a>1.像平面坐标系(右手系)</h4><ul>\n<li>以像主点为坐标原点，坐标轴分别与框标连线平行</li>\n<li>表示像点在像平面内位置的平面直角坐标系</li>\n</ul>\n<h4 id=\"2-像空间坐标系-右手系-x-y-f\"><a href=\"#2-像空间坐标系-右手系-x-y-f\" class=\"headerlink\" title=\"2.像空间坐标系(右手系)(x,y-f)\"></a>2.像空间坐标系(右手系)(x,y-f)</h4><ul>\n<li>摄影中心为坐标原点</li>\n<li>z轴与主光轴重合</li>\n<li><p>x,y轴与像平面坐标系x,y轴平行</p>\n</li>\n<li><p>表示像点在像方空间位置的空间直角坐标系</p>\n</li>\n</ul>\n<h4 id=\"3-像空间辅助坐标系-右手系-X-Y-Z\"><a href=\"#3-像空间辅助坐标系-右手系-X-Y-Z\" class=\"headerlink\" title=\"3.像空间辅助坐标系(右手系)(X,Y,Z)\"></a>3.像空间辅助坐标系(右手系)(X,Y,Z)</h4><ul>\n<li><p>各像片的像空间坐标系不统一，给计算带来了困难，为此，建立一种相对同一的坐标系</p>\n</li>\n<li><p>摄影中心为坐标原点</p>\n</li>\n<li>Z轴为铅锤方向，X轴为航向方向</li>\n<li>第一张像片的像空间坐标系</li>\n<li>X轴为摄影基线方向 XZ平面为摄影基线及左片主光轴构成的面</li>\n</ul>\n<h3 id=\"物方坐标系\"><a href=\"#物方坐标系\" class=\"headerlink\" title=\"物方坐标系\"></a>物方坐标系</h3><h4 id=\"1-摄影测量坐标系-右手系\"><a href=\"#1-摄影测量坐标系-右手系\" class=\"headerlink\" title=\"1.摄影测量坐标系(右手系)\"></a>1.摄影测量坐标系(右手系)</h4><ul>\n<li>像空间辅助坐标系沿着Z轴反向无限延伸到地面上的点为坐标原点</li>\n</ul>\n<h4 id=\"2-地面测量坐标系-左手系\"><a href=\"#2-地面测量坐标系-左手系\" class=\"headerlink\" title=\"2.地面测量坐标系(左手系)\"></a>2.地面测量坐标系(左手系)</h4><ul>\n<li>Z轴：沿铅垂线</li>\n<li>X轴：中央子午线</li>\n<li>Y轴：赤道</li>\n<li>为国家统一坐标系，平面坐标为高斯-克吕格3度带或6度带投影(1980西安坐标系)，高程为1985黄海高程系</li>\n</ul>\n<h4 id=\"3-地面摄影测量坐标系-右手系\"><a href=\"#3-地面摄影测量坐标系-右手系\" class=\"headerlink\" title=\"3.地面摄影测量坐标系(右手系)\"></a>3.地面摄影测量坐标系(右手系)</h4><ul>\n<li>原点为地面某一控制点</li>\n<li>Z轴与地面测量坐标系的Z轴平行</li>\n<li>X轴与航线一致</li>\n<li>摄影测量坐标系采用的是右手系，地面测量坐标系采用的是左手系，这给摄影测量坐标到地面测量坐标系的转换带来了困难，为此，在摄影测量坐标系与地面测量坐标系之间建立一种过渡性的坐标系，称为地面摄影测量坐标系</li>\n</ul>\n<h2 id=\"像片的内外方位元素\"><a href=\"#像片的内外方位元素\" class=\"headerlink\" title=\"像片的内外方位元素\"></a>像片的内外方位元素</h2><ul>\n<li><p>像片的方位元素</p>\n<p>确定航空摄影中心与像片在地面设定的空间坐标系中的位置与姿态，描述位置和姿态的参数</p>\n</li>\n</ul>\n<h3 id=\"内方位元素\"><a href=\"#内方位元素\" class=\"headerlink\" title=\"内方位元素\"></a>内方位元素</h3><p>内方位元素一般已知</p>\n<ul>\n<li>恢复内方位元素可恢复摄影时的摄影光束</li>\n<li>描述摄影中心与像片之间相关位置的参数</li>\n<li>主距==f==像片框标坐标系的坐标x,y</li>\n</ul>\n<h3 id=\"外方位元素\"><a href=\"#外方位元素\" class=\"headerlink\" title=\"外方位元素\"></a>外方位元素</h3><p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224157.png\" alt=\"\"></p>\n<ul>\n<li><p>确定摄影时==像空间坐标系==在==地面摄影测量坐标系==中位置和方向的元素</p>\n</li>\n<li><p>确定摄影光束空间姿态</p>\n</li>\n<li><p>外方位线元素：</p>\n<p>确定像空系的==原点S==在地摄系中的坐标</p>\n</li>\n<li><p>外方位角元素(三次旋转)：</p>\n<p>确定像空系==三轴==在地摄系中的方向</p>\n</li>\n</ul>\n<h2 id=\"中心投影构像方程\"><a href=\"#中心投影构像方程\" class=\"headerlink\" title=\"中心投影构像方程\"></a>中心投影构像方程</h2><h3 id=\"投影\"><a href=\"#投影\" class=\"headerlink\" title=\"投影\"></a>投影</h3><ul>\n<li>航摄像片为中心投影</li>\n<li>地形图为正射投影</li>\n</ul>\n<h3 id=\"共线条件方程\"><a href=\"#共线条件方程\" class=\"headerlink\" title=\"共线条件方程\"></a>共线条件方程</h3><ul>\n<li>在理想情况，摄影瞬间==像点== ==投影中心== ==物点==位于同一条直线上，描述这三点共线的数学表达式称之为共线条件方程</li>\n<li><script type=\"math/tex; mode=display\">\\frac{X}{X_A-X_S}=\\frac{Y}{Y_A-Y_S}=\\frac{Z}{Z_A-Z_S}=\\frac{1}{\\lambda}</script></li>\n<li><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703222645.png\" alt=\"\"></li>\n<li>已知==地面点==坐标可以和==内外方位元素==可以求得==像点坐==标</li>\n<li>已知==像点==坐标和==内外方位元素不能==求得==地面点==坐标</li>\n<li>地面点坐标有==3个==未知数而像点坐标只有==2个==未知数</li>\n</ul>\n<h3 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h3><ul>\n<li>求解外方位元素</li>\n<li>计算像点位置</li>\n<li>求解地面点坐标</li>\n<li>前方交会</li>\n<li>后方交会</li>\n<li>光束法</li>\n</ul>\n<h2 id=\"像点位移\"><a href=\"#像点位移\" class=\"headerlink\" title=\"像点位移\"></a>像点位移</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><ul>\n<li>像点位移：当像片倾斜 地面起伏时，地面点在航摄像片上的构像相当于理想情况下的构像所产生的位置差异</li>\n<li>方向偏差：从像片上某点作出的方向线与地面对应点画出的方向线的方位角不等，这种差异称为方向偏差</li>\n</ul>\n<h3 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h3><h4 id=\"地形起伏\"><a href=\"#地形起伏\" class=\"headerlink\" title=\"地形起伏\"></a>地形起伏</h4><p>特点：</p>\n<ul>\n<li>像底点的像点不存在像点位移</li>\n<li>在保持像片摄影比例尺不变时，地形起伏像点位移之值随航高增大而减小，因此采用长焦距摄影机以增大航高进行空中摄影是有利的</li>\n<li>因地形起伏引起的像点位移常称为像片上的投影差</li>\n</ul>\n<h4 id=\"像片倾斜\"><a href=\"#像片倾斜\" class=\"headerlink\" title=\"像片倾斜\"></a>像片倾斜</h4><ul>\n<li><h2 id=\"单张像片后方交会\"><a href=\"#单张像片后方交会\" class=\"headerlink\" title=\"单张像片后方交会\"></a>单张像片后方交会</h2></li>\n</ul>\n<h3 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>利用==3个==及以上的地面控制点及其在像片上的像点，确定一张像片==外方位元素==的方法</p>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>求解外方位元素</p>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>共线条件方程</p>\n<h3 id=\"要求\"><a href=\"#要求\" class=\"headerlink\" title=\"要求\"></a>要求</h3><ul>\n<li><p>至少三个不在同一直线上的地面控制点</p>\n</li>\n<li><p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703230036.png\"></p>\n</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160705.jpg","length":1962,"excerpt":"","more":"<h1 id=\"单张像片解析\"><a href=\"#单张像片解析\" class=\"headerlink\" title=\"单张像片解析\"></a>单张像片解析</h1><h2 id=\"基本知识\"><a href=\"#基本知识\" class=\"headerlink\" title=\"基本知识\"></a>基本知识</h2><h3 id=\"1-航向重叠\"><a href=\"#1-航向重叠\" class=\"headerlink\" title=\"1.航向重叠\"></a>1.航向重叠</h3><ul>\n<li>同一航线内相邻像片有一定的影像重叠</li>\n</ul>\n<h3 id=\"2-旁向重叠\"><a href=\"#2-旁向重叠\" class=\"headerlink\" title=\"2.旁向重叠\"></a>2.旁向重叠</h3><ul>\n<li>相邻航线也有一定的重叠</li>\n</ul>\n<h3 id=\"3-航迹角\"><a href=\"#3-航迹角\" class=\"headerlink\" title=\"3.航迹角\"></a>3.航迹角</h3><ul>\n<li>实际航线与设计航线的夹角</li>\n</ul>\n<h3 id=\"4-像片倾角\"><a href=\"#4-像片倾角\" class=\"headerlink\" title=\"4.像片倾角\"></a>4.像片倾角</h3><ul>\n<li>航空摄影机主光轴与铅垂线的夹角</li>\n<li>摄影方向线与主垂线夹角</li>\n<li>竖直摄影像片倾角小于2-3度</li>\n<li>倾斜摄影像片倾角大于3度</li>\n</ul>\n<h3 id=\"5-航摄比例尺\"><a href=\"#5-航摄比例尺\" class=\"headerlink\" title=\"5.航摄比例尺\"></a>5.航摄比例尺</h3><ul>\n<li><p>像片上的线段l与地面上相应的水平距L之比</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.798ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.935ex\" height=\"3.023ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -983.5 5717.4 1336.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mn\" transform=\"translate(353.6,394) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><rect width=\"820.8\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(1338.6,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(2394.4,0)\"><g data-mml-node=\"mi\" transform=\"translate(355.4,394) scale(0.707)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><rect width=\"681.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3593.7,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(4649.5,0)\"><g data-mml-node=\"mi\" transform=\"translate(339.5,485) scale(0.707)\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><rect width=\"827.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></p>\n</li>\n<li><p>在像片倾角很小 地形起伏不大时，H取平均航高，可以看成是像片的概略比例尺</p>\n</li>\n<li><p>一般摄影条件下，不存在整张像片的统一比例尺。摄影航摄像片上比例尺处处不相等</p>\n</li>\n</ul>\n<h3 id=\"6-航高\"><a href=\"#6-航高\" class=\"headerlink\" title=\"6.航高\"></a>6.航高</h3><ul>\n<li><p>摄影航高</p>\n<p>相当于摄区平均高程面的高度</p>\n</li>\n<li><p>相对航高</p>\n<p>航摄仪物镜中心在摄影瞬间相当于某一基准面的高度</p>\n</li>\n<li><p>绝对航高</p>\n<p>航摄仪物镜中心S在摄影瞬间相当于大地水准面的高度</p>\n<p>H<sub>绝对</sub>=h<sub>平均</sub>+H~相对~</p>\n</li>\n</ul>\n<h3 id=\"7-摄影基线\"><a href=\"#7-摄影基线\" class=\"headerlink\" title=\"7.摄影基线\"></a>7.摄影基线</h3><ul>\n<li>航线方向相邻两摄站点的空间距离</li>\n</ul>\n<h2 id=\"单张像片特殊的点线面\"><a href=\"#单张像片特殊的点线面\" class=\"headerlink\" title=\"单张像片特殊的点线面\"></a>单张像片特殊的点线面</h2><h3 id=\"1-焦距\"><a href=\"#1-焦距\" class=\"headerlink\" title=\"1.焦距\"></a>1.焦距</h3><ul>\n<li>物镜到焦点的距离</li>\n</ul>\n<h3 id=\"2-主距\"><a href=\"#2-主距\" class=\"headerlink\" title=\"2.主距\"></a>2.主距</h3><ul>\n<li>物镜后节点到像平面的距离</li>\n<li>航高相当于主距很大，近似于无穷远成像，所以主距约等于物镜焦距</li>\n</ul>\n<h3 id=\"3-特殊的点线面\"><a href=\"#3-特殊的点线面\" class=\"headerlink\" title=\"3.特殊的点线面\"></a>3.特殊的点线面</h3><ul>\n<li><p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703223115.png\" alt=\"\"></p>\n</li>\n<li><p>主垂面</p>\n<p>包含摄影机轴SoO的铅垂面W，称为主垂面</p>\n</li>\n<li><p>主纵线</p>\n<p>主垂面与像平面的交线vv称为主纵线</p>\n</li>\n<li><p>摄影方向线</p>\n<p>主垂面与地平面的交线称为摄影方向线</p>\n</li>\n<li><p>像底点</p>\n<p>铅垂射线SN与像平面的交点n称为像底点。</p>\n</li>\n<li><p>地底点</p>\n<p>像底点n在地面上的透视对应点N称为地底点。</p>\n</li>\n<li><p>透视轴</p>\n<p>将像片平面扩大与地平面相交的迹线TT称为透视轴</p>\n</li>\n</ul>\n<h2 id=\"常用坐标系\"><a href=\"#常用坐标系\" class=\"headerlink\" title=\"常用坐标系\"></a>常用坐标系</h2><h3 id=\"像方坐标系\"><a href=\"#像方坐标系\" class=\"headerlink\" title=\"像方坐标系\"></a>像方坐标系</h3><h4 id=\"1-像平面坐标系-右手系\"><a href=\"#1-像平面坐标系-右手系\" class=\"headerlink\" title=\"1.像平面坐标系(右手系)\"></a>1.像平面坐标系(右手系)</h4><ul>\n<li>以像主点为坐标原点，坐标轴分别与框标连线平行</li>\n<li>表示像点在像平面内位置的平面直角坐标系</li>\n</ul>\n<h4 id=\"2-像空间坐标系-右手系-x-y-f\"><a href=\"#2-像空间坐标系-右手系-x-y-f\" class=\"headerlink\" title=\"2.像空间坐标系(右手系)(x,y-f)\"></a>2.像空间坐标系(右手系)(x,y-f)</h4><ul>\n<li>摄影中心为坐标原点</li>\n<li>z轴与主光轴重合</li>\n<li><p>x,y轴与像平面坐标系x,y轴平行</p>\n</li>\n<li><p>表示像点在像方空间位置的空间直角坐标系</p>\n</li>\n</ul>\n<h4 id=\"3-像空间辅助坐标系-右手系-X-Y-Z\"><a href=\"#3-像空间辅助坐标系-右手系-X-Y-Z\" class=\"headerlink\" title=\"3.像空间辅助坐标系(右手系)(X,Y,Z)\"></a>3.像空间辅助坐标系(右手系)(X,Y,Z)</h4><ul>\n<li><p>各像片的像空间坐标系不统一，给计算带来了困难，为此，建立一种相对同一的坐标系</p>\n</li>\n<li><p>摄影中心为坐标原点</p>\n</li>\n<li>Z轴为铅锤方向，X轴为航向方向</li>\n<li>第一张像片的像空间坐标系</li>\n<li>X轴为摄影基线方向 XZ平面为摄影基线及左片主光轴构成的面</li>\n</ul>\n<h3 id=\"物方坐标系\"><a href=\"#物方坐标系\" class=\"headerlink\" title=\"物方坐标系\"></a>物方坐标系</h3><h4 id=\"1-摄影测量坐标系-右手系\"><a href=\"#1-摄影测量坐标系-右手系\" class=\"headerlink\" title=\"1.摄影测量坐标系(右手系)\"></a>1.摄影测量坐标系(右手系)</h4><ul>\n<li>像空间辅助坐标系沿着Z轴反向无限延伸到地面上的点为坐标原点</li>\n</ul>\n<h4 id=\"2-地面测量坐标系-左手系\"><a href=\"#2-地面测量坐标系-左手系\" class=\"headerlink\" title=\"2.地面测量坐标系(左手系)\"></a>2.地面测量坐标系(左手系)</h4><ul>\n<li>Z轴：沿铅垂线</li>\n<li>X轴：中央子午线</li>\n<li>Y轴：赤道</li>\n<li>为国家统一坐标系，平面坐标为高斯-克吕格3度带或6度带投影(1980西安坐标系)，高程为1985黄海高程系</li>\n</ul>\n<h4 id=\"3-地面摄影测量坐标系-右手系\"><a href=\"#3-地面摄影测量坐标系-右手系\" class=\"headerlink\" title=\"3.地面摄影测量坐标系(右手系)\"></a>3.地面摄影测量坐标系(右手系)</h4><ul>\n<li>原点为地面某一控制点</li>\n<li>Z轴与地面测量坐标系的Z轴平行</li>\n<li>X轴与航线一致</li>\n<li>摄影测量坐标系采用的是右手系，地面测量坐标系采用的是左手系，这给摄影测量坐标到地面测量坐标系的转换带来了困难，为此，在摄影测量坐标系与地面测量坐标系之间建立一种过渡性的坐标系，称为地面摄影测量坐标系</li>\n</ul>\n<h2 id=\"像片的内外方位元素\"><a href=\"#像片的内外方位元素\" class=\"headerlink\" title=\"像片的内外方位元素\"></a>像片的内外方位元素</h2><ul>\n<li><p>像片的方位元素</p>\n<p>确定航空摄影中心与像片在地面设定的空间坐标系中的位置与姿态，描述位置和姿态的参数</p>\n</li>\n</ul>\n<h3 id=\"内方位元素\"><a href=\"#内方位元素\" class=\"headerlink\" title=\"内方位元素\"></a>内方位元素</h3><p>内方位元素一般已知</p>\n<ul>\n<li>恢复内方位元素可恢复摄影时的摄影光束</li>\n<li>描述摄影中心与像片之间相关位置的参数</li>\n<li>主距==f==像片框标坐标系的坐标x,y</li>\n</ul>\n<h3 id=\"外方位元素\"><a href=\"#外方位元素\" class=\"headerlink\" title=\"外方位元素\"></a>外方位元素</h3><p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224157.png\" alt=\"\"></p>\n<ul>\n<li><p>确定摄影时==像空间坐标系==在==地面摄影测量坐标系==中位置和方向的元素</p>\n</li>\n<li><p>确定摄影光束空间姿态</p>\n</li>\n<li><p>外方位线元素：</p>\n<p>确定像空系的==原点S==在地摄系中的坐标</p>\n</li>\n<li><p>外方位角元素(三次旋转)：</p>\n<p>确定像空系==三轴==在地摄系中的方向</p>\n</li>\n</ul>\n<h2 id=\"中心投影构像方程\"><a href=\"#中心投影构像方程\" class=\"headerlink\" title=\"中心投影构像方程\"></a>中心投影构像方程</h2><h3 id=\"投影\"><a href=\"#投影\" class=\"headerlink\" title=\"投影\"></a>投影</h3><ul>\n<li>航摄像片为中心投影</li>\n<li>地形图为正射投影</li>\n</ul>\n<h3 id=\"共线条件方程\"><a href=\"#共线条件方程\" class=\"headerlink\" title=\"共线条件方程\"></a>共线条件方程</h3><ul>\n<li>在理想情况，摄影瞬间==像点== ==投影中心== ==物点==位于同一条直线上，描述这三点共线的数学表达式称之为共线条件方程</li>\n<li><script type=\"math/tex; mode=display\">\\frac{X}{X_A-X_S}=\\frac{Y}{Y_A-Y_S}=\\frac{Z}{Z_A-Z_S}=\\frac{1}{\\lambda}</script></li>\n<li><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703222645.png\" alt=\"\"></li>\n<li>已知==地面点==坐标可以和==内外方位元素==可以求得==像点坐==标</li>\n<li>已知==像点==坐标和==内外方位元素不能==求得==地面点==坐标</li>\n<li>地面点坐标有==3个==未知数而像点坐标只有==2个==未知数</li>\n</ul>\n<h3 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h3><ul>\n<li>求解外方位元素</li>\n<li>计算像点位置</li>\n<li>求解地面点坐标</li>\n<li>前方交会</li>\n<li>后方交会</li>\n<li>光束法</li>\n</ul>\n<h2 id=\"像点位移\"><a href=\"#像点位移\" class=\"headerlink\" title=\"像点位移\"></a>像点位移</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><ul>\n<li>像点位移：当像片倾斜 地面起伏时，地面点在航摄像片上的构像相当于理想情况下的构像所产生的位置差异</li>\n<li>方向偏差：从像片上某点作出的方向线与地面对应点画出的方向线的方位角不等，这种差异称为方向偏差</li>\n</ul>\n<h3 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h3><h4 id=\"地形起伏\"><a href=\"#地形起伏\" class=\"headerlink\" title=\"地形起伏\"></a>地形起伏</h4><p>特点：</p>\n<ul>\n<li>像底点的像点不存在像点位移</li>\n<li>在保持像片摄影比例尺不变时，地形起伏像点位移之值随航高增大而减小，因此采用长焦距摄影机以增大航高进行空中摄影是有利的</li>\n<li>因地形起伏引起的像点位移常称为像片上的投影差</li>\n</ul>\n<h4 id=\"像片倾斜\"><a href=\"#像片倾斜\" class=\"headerlink\" title=\"像片倾斜\"></a>像片倾斜</h4><ul>\n<li><h2 id=\"单张像片后方交会\"><a href=\"#单张像片后方交会\" class=\"headerlink\" title=\"单张像片后方交会\"></a>单张像片后方交会</h2></li>\n</ul>\n<h3 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>利用==3个==及以上的地面控制点及其在像片上的像点，确定一张像片==外方位元素==的方法</p>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>求解外方位元素</p>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>共线条件方程</p>\n<h3 id=\"要求\"><a href=\"#要求\" class=\"headerlink\" title=\"要求\"></a>要求</h3><ul>\n<li><p>至少三个不在同一直线上的地面控制点</p>\n</li>\n<li><p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703230036.png\"></p>\n</li>\n</ul>\n"},{"title":"双像解析","date":"2021-07-05T11:01:41.000Z","mathjax":true,"description":"双像解析","_content":"\n## 单张像片后方交会\n\n### 定义\n\n利用3个及以上的地面控制点及其在像片上的像点，确定一张像片外方位元素的方法\n\n### 作用\n\n求解外方位元素\n\n### 原理\n\n共线条件方程\n\n### 要求\n\n+ 至少三个不在同一直线上的地面控制点\n\n+ <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703220116.png\"/>\" alt=\"后方交会\" style=\"zoom:50%;\" />\n\n## 立体像对前方交会\n\n### 概念\n\n+ 由立体像对中两张像片的内外方位元素和像点坐标来确定相应地面点在物方空间坐标系中坐标的方法\n+ 只有利用立体像对上的同名像点，才能得到两条同名射线在空间相交的点，即该地面点的空间位置\n+ 已知立体像对中两张像片的内外方位元素和像点坐标\n+ 未知相应地面点的地面坐标\n\n### 原理\n\n+ 共线条件方程\n+ <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224500.png\"/>\" alt=\"共线条件方程\" style=\"zoom:50%;\" />\n\n## 后交加前交\n\n+ 空间后方交会与前方交会求解地面点坐标的计算方法:\n\n+ 实现由单片后方交会求出左右像片的外方位元素，再利用空间前方交会公式求出待定点坐标\n\n+ 后方交会的3个或3个以上地面控制点\n\n+ 主要步骤\n\n  野外像片控制测量(重叠部分至少四个已知地面控制点)\n\n  用立体坐标量测仪量测像点坐标\n\n  空间后方交会计算像片外方位元素(求6个外方位元素)\n\n  空间前方交会计算未知点地面坐标\n\n## 相对定向\n\n### 概念\n\n+ 相对定向元素(5个)：描述立体像对两张像片相对位置和姿态关系的参数\n+ 解析相对定向：利用立体像对同名光线对对相交，根据量测的像点坐标，以解析法计算方法，解求两张像片相对定向元素的过程\n\n### 原理\n\n+ 同名光线对对相交于核面内(共面条件方程)\n+ 至少需要5个相对定向元素\n+ 至少需要量测5对同名像点的像点坐标\n\n#### 1.连续法解析相对定向原理\n\n  + 相对定向完成标志为：上下视差为0\n  + 量测5对以上的同名点可以按最小二乘平差法求相对定向元素\n\n#### 2.单独法解析相对定向原理\n\n  + 相对定向完成标志为：上下视差为0\n  + 量测5对以上的同名点可以按最小二乘平差法求相对定向元素\n\n## 绝对定向\n\n### 概念\n\n+ 相对定向建立的立体模型------像空间辅助坐标系\n+ 通过像点坐标解求模型点坐标------摄影测量坐标系的坐标\n+ 通过将相对定向立体模型进行缩放平移和旋转，确定立体模型在地面坐标系中的方位和大小------摄影测量坐标系与地面摄影测量坐标系转化-----立体模型的绝对定向\n+ 绝对定向参数(7个)：描述立体像对在摄影瞬间的绝对位置和姿态的参数\n+ 实质：模型点的摄影测量坐标向地面坐标的数学变换\n\n###  原理\n\n+ 空间相似变换\n+ 包含 旋转 平移 缩放三个内容\n+ 至少需要2个平高控制点和1个高程点，且任意3个点不能位于同一条直线上\n+ 为了保证精度，通常使用4个或4个以上的平高控制点列误差方程式，求解7个绝对方位元素\n+ 3个控制点\n+ 7个未知数\n+ 7个方程\n\n### 坐标重心化\n\n+ 一种数据预处理方法\n\n+ 减少坐标在计算过程中的有效位数，提高精度\n\n+ 简化方程式的系数，使个别项的数值为零，从而加快计算速度\n\n+ 重心化坐标：将所有的摄影测量坐标的地辅系坐标分别平移到以各自重心为原点的坐标系中\n\n## 相对加绝对\n\n+ 相对定向：0个控制点，至少5对以上同名像点，求解5个相对定向元素\n+ 绝对定向：2个平高 ，1个高程，确定立体模型比例尺和在地面坐标系中所处方位\n+ 像点及控制点，必须在立体像对内\n\n## 光束法解析摄影测量\n\n### 原理\n\n+ 用已知少数控制点以及待求地面点，在像对内以共线方程式为基础，未知点和控制点同时列误差方程，联合解算，同时解求两张像片的外方位元素与待定点坐标\n+ 理论模型：共线条件方程\n\n### 平差\n\n+ 参加平差的点：平高 平面 或高程 待求点\n\n+ 平高控制点：$$dX=dY=dZ=0$$\n\n  即可在重叠范围内，也可在单像内\n\n+ 平面控制点($dX=dY=0$)或高程控制点($$dZ=0$$)\n\n  必须在重叠范围内\n\n+ 待求点\n\n  必须在重叠范围内\n\n### 条件\n\n+ 已知值：像控点大地坐标系\n\n+ 观测值：像控点像点坐标和待定点坐标\n\n+ 未知数：6个外方位元素\n\n  待定点地面摄影测量坐标 X,Y,Z\n\n+ 未知数个数：6个外方位元素 * 像片数 + 待求点 * 3\n\n+ 方程个数：(对应点的重叠度 * 对应点数 ) * 2个方程\n\n<img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224713.png\" style=\"zoom:50%;\" />\n\n<img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703225041.png\" style=\"zoom:50%;\" />\n\n## 汇总\n\n<img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224759.png\" alt=\"双像解析\" style=\"zoom:50%;\" />\n\n\n\n\n\n","source":"_posts/双像解析.md","raw":"---\ntitle: 双像解析\ndate: 2021-07-05 19:01:41\ncategories: [GIS,摄影测量,双像解析]\ntags: 摄影测量\nmathjax: true\ndescription: 双像解析\n---\n\n## 单张像片后方交会\n\n### 定义\n\n利用3个及以上的地面控制点及其在像片上的像点，确定一张像片外方位元素的方法\n\n### 作用\n\n求解外方位元素\n\n### 原理\n\n共线条件方程\n\n### 要求\n\n+ 至少三个不在同一直线上的地面控制点\n\n+ <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703220116.png\"/>\" alt=\"后方交会\" style=\"zoom:50%;\" />\n\n## 立体像对前方交会\n\n### 概念\n\n+ 由立体像对中两张像片的内外方位元素和像点坐标来确定相应地面点在物方空间坐标系中坐标的方法\n+ 只有利用立体像对上的同名像点，才能得到两条同名射线在空间相交的点，即该地面点的空间位置\n+ 已知立体像对中两张像片的内外方位元素和像点坐标\n+ 未知相应地面点的地面坐标\n\n### 原理\n\n+ 共线条件方程\n+ <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224500.png\"/>\" alt=\"共线条件方程\" style=\"zoom:50%;\" />\n\n## 后交加前交\n\n+ 空间后方交会与前方交会求解地面点坐标的计算方法:\n\n+ 实现由单片后方交会求出左右像片的外方位元素，再利用空间前方交会公式求出待定点坐标\n\n+ 后方交会的3个或3个以上地面控制点\n\n+ 主要步骤\n\n  野外像片控制测量(重叠部分至少四个已知地面控制点)\n\n  用立体坐标量测仪量测像点坐标\n\n  空间后方交会计算像片外方位元素(求6个外方位元素)\n\n  空间前方交会计算未知点地面坐标\n\n## 相对定向\n\n### 概念\n\n+ 相对定向元素(5个)：描述立体像对两张像片相对位置和姿态关系的参数\n+ 解析相对定向：利用立体像对同名光线对对相交，根据量测的像点坐标，以解析法计算方法，解求两张像片相对定向元素的过程\n\n### 原理\n\n+ 同名光线对对相交于核面内(共面条件方程)\n+ 至少需要5个相对定向元素\n+ 至少需要量测5对同名像点的像点坐标\n\n#### 1.连续法解析相对定向原理\n\n  + 相对定向完成标志为：上下视差为0\n  + 量测5对以上的同名点可以按最小二乘平差法求相对定向元素\n\n#### 2.单独法解析相对定向原理\n\n  + 相对定向完成标志为：上下视差为0\n  + 量测5对以上的同名点可以按最小二乘平差法求相对定向元素\n\n## 绝对定向\n\n### 概念\n\n+ 相对定向建立的立体模型------像空间辅助坐标系\n+ 通过像点坐标解求模型点坐标------摄影测量坐标系的坐标\n+ 通过将相对定向立体模型进行缩放平移和旋转，确定立体模型在地面坐标系中的方位和大小------摄影测量坐标系与地面摄影测量坐标系转化-----立体模型的绝对定向\n+ 绝对定向参数(7个)：描述立体像对在摄影瞬间的绝对位置和姿态的参数\n+ 实质：模型点的摄影测量坐标向地面坐标的数学变换\n\n###  原理\n\n+ 空间相似变换\n+ 包含 旋转 平移 缩放三个内容\n+ 至少需要2个平高控制点和1个高程点，且任意3个点不能位于同一条直线上\n+ 为了保证精度，通常使用4个或4个以上的平高控制点列误差方程式，求解7个绝对方位元素\n+ 3个控制点\n+ 7个未知数\n+ 7个方程\n\n### 坐标重心化\n\n+ 一种数据预处理方法\n\n+ 减少坐标在计算过程中的有效位数，提高精度\n\n+ 简化方程式的系数，使个别项的数值为零，从而加快计算速度\n\n+ 重心化坐标：将所有的摄影测量坐标的地辅系坐标分别平移到以各自重心为原点的坐标系中\n\n## 相对加绝对\n\n+ 相对定向：0个控制点，至少5对以上同名像点，求解5个相对定向元素\n+ 绝对定向：2个平高 ，1个高程，确定立体模型比例尺和在地面坐标系中所处方位\n+ 像点及控制点，必须在立体像对内\n\n## 光束法解析摄影测量\n\n### 原理\n\n+ 用已知少数控制点以及待求地面点，在像对内以共线方程式为基础，未知点和控制点同时列误差方程，联合解算，同时解求两张像片的外方位元素与待定点坐标\n+ 理论模型：共线条件方程\n\n### 平差\n\n+ 参加平差的点：平高 平面 或高程 待求点\n\n+ 平高控制点：$$dX=dY=dZ=0$$\n\n  即可在重叠范围内，也可在单像内\n\n+ 平面控制点($dX=dY=0$)或高程控制点($$dZ=0$$)\n\n  必须在重叠范围内\n\n+ 待求点\n\n  必须在重叠范围内\n\n### 条件\n\n+ 已知值：像控点大地坐标系\n\n+ 观测值：像控点像点坐标和待定点坐标\n\n+ 未知数：6个外方位元素\n\n  待定点地面摄影测量坐标 X,Y,Z\n\n+ 未知数个数：6个外方位元素 * 像片数 + 待求点 * 3\n\n+ 方程个数：(对应点的重叠度 * 对应点数 ) * 2个方程\n\n<img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224713.png\" style=\"zoom:50%;\" />\n\n<img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703225041.png\" style=\"zoom:50%;\" />\n\n## 汇总\n\n<img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224759.png\" alt=\"双像解析\" style=\"zoom:50%;\" />\n\n\n\n\n\n","slug":"双像解析","published":1,"updated":"2021-12-27T08:06:49.946Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3s0036jsvk7fjqg3nl","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"单张像片后方交会\"><a href=\"#单张像片后方交会\" class=\"headerlink\" title=\"单张像片后方交会\"></a>单张像片后方交会</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>利用3个及以上的地面控制点及其在像片上的像点，确定一张像片外方位元素的方法</p>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>求解外方位元素</p>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>共线条件方程</p>\n<h3 id=\"要求\"><a href=\"#要求\" class=\"headerlink\" title=\"要求\"></a>要求</h3><ul>\n<li><p>至少三个不在同一直线上的地面控制点</p>\n</li>\n<li><p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703220116.png\">“ alt=”后方交会” style=”zoom:50%;” /&gt;</p>\n</li>\n</ul>\n<h2 id=\"立体像对前方交会\"><a href=\"#立体像对前方交会\" class=\"headerlink\" title=\"立体像对前方交会\"></a>立体像对前方交会</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li>由立体像对中两张像片的内外方位元素和像点坐标来确定相应地面点在物方空间坐标系中坐标的方法</li>\n<li>只有利用立体像对上的同名像点，才能得到两条同名射线在空间相交的点，即该地面点的空间位置</li>\n<li>已知立体像对中两张像片的内外方位元素和像点坐标</li>\n<li>未知相应地面点的地面坐标</li>\n</ul>\n<h3 id=\"原理-1\"><a href=\"#原理-1\" class=\"headerlink\" title=\"原理\"></a>原理</h3><ul>\n<li>共线条件方程</li>\n<li><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224500.png\">“ alt=”共线条件方程” style=”zoom:50%;” /&gt;</li>\n</ul>\n<h2 id=\"后交加前交\"><a href=\"#后交加前交\" class=\"headerlink\" title=\"后交加前交\"></a>后交加前交</h2><ul>\n<li><p>空间后方交会与前方交会求解地面点坐标的计算方法:</p>\n</li>\n<li><p>实现由单片后方交会求出左右像片的外方位元素，再利用空间前方交会公式求出待定点坐标</p>\n</li>\n<li><p>后方交会的3个或3个以上地面控制点</p>\n</li>\n<li><p>主要步骤</p>\n<p>野外像片控制测量(重叠部分至少四个已知地面控制点)</p>\n<p>用立体坐标量测仪量测像点坐标</p>\n<p>空间后方交会计算像片外方位元素(求6个外方位元素)</p>\n<p>空间前方交会计算未知点地面坐标</p>\n</li>\n</ul>\n<h2 id=\"相对定向\"><a href=\"#相对定向\" class=\"headerlink\" title=\"相对定向\"></a>相对定向</h2><h3 id=\"概念-1\"><a href=\"#概念-1\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li>相对定向元素(5个)：描述立体像对两张像片相对位置和姿态关系的参数</li>\n<li>解析相对定向：利用立体像对同名光线对对相交，根据量测的像点坐标，以解析法计算方法，解求两张像片相对定向元素的过程</li>\n</ul>\n<h3 id=\"原理-2\"><a href=\"#原理-2\" class=\"headerlink\" title=\"原理\"></a>原理</h3><ul>\n<li>同名光线对对相交于核面内(共面条件方程)</li>\n<li>至少需要5个相对定向元素</li>\n<li>至少需要量测5对同名像点的像点坐标</li>\n</ul>\n<h4 id=\"1-连续法解析相对定向原理\"><a href=\"#1-连续法解析相对定向原理\" class=\"headerlink\" title=\"1.连续法解析相对定向原理\"></a>1.连续法解析相对定向原理</h4><ul>\n<li>相对定向完成标志为：上下视差为0</li>\n<li>量测5对以上的同名点可以按最小二乘平差法求相对定向元素</li>\n</ul>\n<h4 id=\"2-单独法解析相对定向原理\"><a href=\"#2-单独法解析相对定向原理\" class=\"headerlink\" title=\"2.单独法解析相对定向原理\"></a>2.单独法解析相对定向原理</h4><ul>\n<li>相对定向完成标志为：上下视差为0</li>\n<li>量测5对以上的同名点可以按最小二乘平差法求相对定向元素</li>\n</ul>\n<h2 id=\"绝对定向\"><a href=\"#绝对定向\" class=\"headerlink\" title=\"绝对定向\"></a>绝对定向</h2><h3 id=\"概念-2\"><a href=\"#概念-2\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li>相对定向建立的立体模型———像空间辅助坐标系</li>\n<li>通过像点坐标解求模型点坐标———摄影测量坐标系的坐标</li>\n<li>通过将相对定向立体模型进行缩放平移和旋转，确定立体模型在地面坐标系中的方位和大小———摄影测量坐标系与地面摄影测量坐标系转化——-立体模型的绝对定向</li>\n<li>绝对定向参数(7个)：描述立体像对在摄影瞬间的绝对位置和姿态的参数</li>\n<li>实质：模型点的摄影测量坐标向地面坐标的数学变换</li>\n</ul>\n<h3 id=\"原理-3\"><a href=\"#原理-3\" class=\"headerlink\" title=\"原理\"></a>原理</h3><ul>\n<li>空间相似变换</li>\n<li>包含 旋转 平移 缩放三个内容</li>\n<li>至少需要2个平高控制点和1个高程点，且任意3个点不能位于同一条直线上</li>\n<li>为了保证精度，通常使用4个或4个以上的平高控制点列误差方程式，求解7个绝对方位元素</li>\n<li>3个控制点</li>\n<li>7个未知数</li>\n<li>7个方程</li>\n</ul>\n<h3 id=\"坐标重心化\"><a href=\"#坐标重心化\" class=\"headerlink\" title=\"坐标重心化\"></a>坐标重心化</h3><ul>\n<li><p>一种数据预处理方法</p>\n</li>\n<li><p>减少坐标在计算过程中的有效位数，提高精度</p>\n</li>\n<li><p>简化方程式的系数，使个别项的数值为零，从而加快计算速度</p>\n</li>\n<li><p>重心化坐标：将所有的摄影测量坐标的地辅系坐标分别平移到以各自重心为原点的坐标系中</p>\n</li>\n</ul>\n<h2 id=\"相对加绝对\"><a href=\"#相对加绝对\" class=\"headerlink\" title=\"相对加绝对\"></a>相对加绝对</h2><ul>\n<li>相对定向：0个控制点，至少5对以上同名像点，求解5个相对定向元素</li>\n<li>绝对定向：2个平高 ，1个高程，确定立体模型比例尺和在地面坐标系中所处方位</li>\n<li>像点及控制点，必须在立体像对内</li>\n</ul>\n<h2 id=\"光束法解析摄影测量\"><a href=\"#光束法解析摄影测量\" class=\"headerlink\" title=\"光束法解析摄影测量\"></a>光束法解析摄影测量</h2><h3 id=\"原理-4\"><a href=\"#原理-4\" class=\"headerlink\" title=\"原理\"></a>原理</h3><ul>\n<li>用已知少数控制点以及待求地面点，在像对内以共线方程式为基础，未知点和控制点同时列误差方程，联合解算，同时解求两张像片的外方位元素与待定点坐标</li>\n<li>理论模型：共线条件方程</li>\n</ul>\n<h3 id=\"平差\"><a href=\"#平差\" class=\"headerlink\" title=\"平差\"></a>平差</h3><ul>\n<li><p>参加平差的点：平高 平面 或高程 待求点</p>\n</li>\n<li><p>平高控制点：<script type=\"math/tex\">dX=dY=dZ=0</script></p>\n<p>即可在重叠范围内，也可在单像内</p>\n</li>\n<li><p>平面控制点(<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.172ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 5822.1 776\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1649.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2705.6,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3225.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4266.3,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5322.1,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container>)或高程控制点(<script type=\"math/tex\">dZ=0</script>)</p>\n<p>必须在重叠范围内</p>\n</li>\n<li><p>待求点</p>\n<p>必须在重叠范围内</p>\n</li>\n</ul>\n<h3 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h3><ul>\n<li><p>已知值：像控点大地坐标系</p>\n</li>\n<li><p>观测值：像控点像点坐标和待定点坐标</p>\n</li>\n<li><p>未知数：6个外方位元素</p>\n<p>待定点地面摄影测量坐标 X,Y,Z</p>\n</li>\n<li><p>未知数个数：6个外方位元素 <em> 像片数 + 待求点 </em> 3</p>\n</li>\n<li><p>方程个数：(对应点的重叠度 <em> 对应点数 ) </em> 2个方程</p>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224713.png\" style=\"zoom:50%;\"></p>\n<p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703225041.png\" style=\"zoom:50%;\"></p>\n<h2 id=\"汇总\"><a href=\"#汇总\" class=\"headerlink\" title=\"汇总\"></a>汇总</h2><p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224759.png\" alt=\"双像解析\" style=\"zoom:50%;\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160701.webp","length":1492,"excerpt":"","more":"<h2 id=\"单张像片后方交会\"><a href=\"#单张像片后方交会\" class=\"headerlink\" title=\"单张像片后方交会\"></a>单张像片后方交会</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>利用3个及以上的地面控制点及其在像片上的像点，确定一张像片外方位元素的方法</p>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>求解外方位元素</p>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>共线条件方程</p>\n<h3 id=\"要求\"><a href=\"#要求\" class=\"headerlink\" title=\"要求\"></a>要求</h3><ul>\n<li><p>至少三个不在同一直线上的地面控制点</p>\n</li>\n<li><p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703220116.png\">“ alt=”后方交会” style=”zoom:50%;” /&gt;</p>\n</li>\n</ul>\n<h2 id=\"立体像对前方交会\"><a href=\"#立体像对前方交会\" class=\"headerlink\" title=\"立体像对前方交会\"></a>立体像对前方交会</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li>由立体像对中两张像片的内外方位元素和像点坐标来确定相应地面点在物方空间坐标系中坐标的方法</li>\n<li>只有利用立体像对上的同名像点，才能得到两条同名射线在空间相交的点，即该地面点的空间位置</li>\n<li>已知立体像对中两张像片的内外方位元素和像点坐标</li>\n<li>未知相应地面点的地面坐标</li>\n</ul>\n<h3 id=\"原理-1\"><a href=\"#原理-1\" class=\"headerlink\" title=\"原理\"></a>原理</h3><ul>\n<li>共线条件方程</li>\n<li><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224500.png\">“ alt=”共线条件方程” style=”zoom:50%;” /&gt;</li>\n</ul>\n<h2 id=\"后交加前交\"><a href=\"#后交加前交\" class=\"headerlink\" title=\"后交加前交\"></a>后交加前交</h2><ul>\n<li><p>空间后方交会与前方交会求解地面点坐标的计算方法:</p>\n</li>\n<li><p>实现由单片后方交会求出左右像片的外方位元素，再利用空间前方交会公式求出待定点坐标</p>\n</li>\n<li><p>后方交会的3个或3个以上地面控制点</p>\n</li>\n<li><p>主要步骤</p>\n<p>野外像片控制测量(重叠部分至少四个已知地面控制点)</p>\n<p>用立体坐标量测仪量测像点坐标</p>\n<p>空间后方交会计算像片外方位元素(求6个外方位元素)</p>\n<p>空间前方交会计算未知点地面坐标</p>\n</li>\n</ul>\n<h2 id=\"相对定向\"><a href=\"#相对定向\" class=\"headerlink\" title=\"相对定向\"></a>相对定向</h2><h3 id=\"概念-1\"><a href=\"#概念-1\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li>相对定向元素(5个)：描述立体像对两张像片相对位置和姿态关系的参数</li>\n<li>解析相对定向：利用立体像对同名光线对对相交，根据量测的像点坐标，以解析法计算方法，解求两张像片相对定向元素的过程</li>\n</ul>\n<h3 id=\"原理-2\"><a href=\"#原理-2\" class=\"headerlink\" title=\"原理\"></a>原理</h3><ul>\n<li>同名光线对对相交于核面内(共面条件方程)</li>\n<li>至少需要5个相对定向元素</li>\n<li>至少需要量测5对同名像点的像点坐标</li>\n</ul>\n<h4 id=\"1-连续法解析相对定向原理\"><a href=\"#1-连续法解析相对定向原理\" class=\"headerlink\" title=\"1.连续法解析相对定向原理\"></a>1.连续法解析相对定向原理</h4><ul>\n<li>相对定向完成标志为：上下视差为0</li>\n<li>量测5对以上的同名点可以按最小二乘平差法求相对定向元素</li>\n</ul>\n<h4 id=\"2-单独法解析相对定向原理\"><a href=\"#2-单独法解析相对定向原理\" class=\"headerlink\" title=\"2.单独法解析相对定向原理\"></a>2.单独法解析相对定向原理</h4><ul>\n<li>相对定向完成标志为：上下视差为0</li>\n<li>量测5对以上的同名点可以按最小二乘平差法求相对定向元素</li>\n</ul>\n<h2 id=\"绝对定向\"><a href=\"#绝对定向\" class=\"headerlink\" title=\"绝对定向\"></a>绝对定向</h2><h3 id=\"概念-2\"><a href=\"#概念-2\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li>相对定向建立的立体模型———像空间辅助坐标系</li>\n<li>通过像点坐标解求模型点坐标———摄影测量坐标系的坐标</li>\n<li>通过将相对定向立体模型进行缩放平移和旋转，确定立体模型在地面坐标系中的方位和大小———摄影测量坐标系与地面摄影测量坐标系转化——-立体模型的绝对定向</li>\n<li>绝对定向参数(7个)：描述立体像对在摄影瞬间的绝对位置和姿态的参数</li>\n<li>实质：模型点的摄影测量坐标向地面坐标的数学变换</li>\n</ul>\n<h3 id=\"原理-3\"><a href=\"#原理-3\" class=\"headerlink\" title=\"原理\"></a>原理</h3><ul>\n<li>空间相似变换</li>\n<li>包含 旋转 平移 缩放三个内容</li>\n<li>至少需要2个平高控制点和1个高程点，且任意3个点不能位于同一条直线上</li>\n<li>为了保证精度，通常使用4个或4个以上的平高控制点列误差方程式，求解7个绝对方位元素</li>\n<li>3个控制点</li>\n<li>7个未知数</li>\n<li>7个方程</li>\n</ul>\n<h3 id=\"坐标重心化\"><a href=\"#坐标重心化\" class=\"headerlink\" title=\"坐标重心化\"></a>坐标重心化</h3><ul>\n<li><p>一种数据预处理方法</p>\n</li>\n<li><p>减少坐标在计算过程中的有效位数，提高精度</p>\n</li>\n<li><p>简化方程式的系数，使个别项的数值为零，从而加快计算速度</p>\n</li>\n<li><p>重心化坐标：将所有的摄影测量坐标的地辅系坐标分别平移到以各自重心为原点的坐标系中</p>\n</li>\n</ul>\n<h2 id=\"相对加绝对\"><a href=\"#相对加绝对\" class=\"headerlink\" title=\"相对加绝对\"></a>相对加绝对</h2><ul>\n<li>相对定向：0个控制点，至少5对以上同名像点，求解5个相对定向元素</li>\n<li>绝对定向：2个平高 ，1个高程，确定立体模型比例尺和在地面坐标系中所处方位</li>\n<li>像点及控制点，必须在立体像对内</li>\n</ul>\n<h2 id=\"光束法解析摄影测量\"><a href=\"#光束法解析摄影测量\" class=\"headerlink\" title=\"光束法解析摄影测量\"></a>光束法解析摄影测量</h2><h3 id=\"原理-4\"><a href=\"#原理-4\" class=\"headerlink\" title=\"原理\"></a>原理</h3><ul>\n<li>用已知少数控制点以及待求地面点，在像对内以共线方程式为基础，未知点和控制点同时列误差方程，联合解算，同时解求两张像片的外方位元素与待定点坐标</li>\n<li>理论模型：共线条件方程</li>\n</ul>\n<h3 id=\"平差\"><a href=\"#平差\" class=\"headerlink\" title=\"平差\"></a>平差</h3><ul>\n<li><p>参加平差的点：平高 平面 或高程 待求点</p>\n</li>\n<li><p>平高控制点：<script type=\"math/tex\">dX=dY=dZ=0</script></p>\n<p>即可在重叠范围内，也可在单像内</p>\n</li>\n<li><p>平面控制点(<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.172ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 5822.1 776\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1649.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2705.6,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3225.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4266.3,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5322.1,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container>)或高程控制点(<script type=\"math/tex\">dZ=0</script>)</p>\n<p>必须在重叠范围内</p>\n</li>\n<li><p>待求点</p>\n<p>必须在重叠范围内</p>\n</li>\n</ul>\n<h3 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h3><ul>\n<li><p>已知值：像控点大地坐标系</p>\n</li>\n<li><p>观测值：像控点像点坐标和待定点坐标</p>\n</li>\n<li><p>未知数：6个外方位元素</p>\n<p>待定点地面摄影测量坐标 X,Y,Z</p>\n</li>\n<li><p>未知数个数：6个外方位元素 <em> 像片数 + 待求点 </em> 3</p>\n</li>\n<li><p>方程个数：(对应点的重叠度 <em> 对应点数 ) </em> 2个方程</p>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224713.png\" style=\"zoom:50%;\"></p>\n<p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703225041.png\" style=\"zoom:50%;\"></p>\n<h2 id=\"汇总\"><a href=\"#汇总\" class=\"headerlink\" title=\"汇总\"></a>汇总</h2><p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210703224759.png\" alt=\"双像解析\" style=\"zoom:50%;\"></p>\n"},{"title":"命题开发组规则","date":"2021-07-16T00:45:21.000Z","description":"2021 SuperMap杯全国高校GIS大赛赛制","_content":"\n**2021 SuperMap杯全国高校GIS大赛赛制**\n\n**命题开发组**\n\n作品要求根据给定的题目，使用SuperMap系列软件制作数据、开发并实现题目命题要求的GIS应用功能，综合考察参赛选手的GIS基础知识储备、软件操作能力和开发编程能力。\n\n本赛组将提供一个实际应用题目，并提供配套的原始数据。参赛作品必须使用提供的数据，自选系统开发方向，完成作品。\n\n**一、** **基本要求**\n\n1. 作品必须经过完整性和有效性验证，通过代码查重，方可进入评审阶段。\n\n2. 作品必须为原创，且符合开源规则。版权归属原作者，大赛组委会有权公示和宣传。\n\n3. 如有参考或引用，请注明。如侵犯第三方权益，由作品提交团队承担相应责任，大赛组委会有权因此取消该作品获得的奖项，要求归还证书和奖金，并向所属学校通报。\n\n**二、** ***软件要求***\n\n作品必须基于SuperMap系列软件完成，请使用以下任意一款或多款软件，版本使用10i(2020) SP1（即v10.1.1版本）或以上版本：\n\n| SuperMap iDesktopX                             | SuperMap iMobile            |\n| ---------------------------------------------- | --------------------------- |\n| SuperMap iServer                               | SuperMap iClient JavaScript |\n| SuperMap iObjects .NET/ SuperMap iObjects Java |                             |\n\n技术支持电话：400-8900-866。\n\n**三、** **命题要求**\n\n背景：近年来，气候变暖的速度持续攀升，造成了如海平面上升、冰川融化、极端天气频繁出现等方面的影响。极端天气肆虐,我国也未能幸免， 比如部分城市平均气温上升、干旱和洪灾发生频繁，造成了生命财产损失。因此，设计一个展示、分析我国气候变化情况的信息系统，在当下应对气候变暖就显得尤为重要。同学们，请根据所学知识，使用提供的数据，自选系统开发方向，设计并制作一个全国气候分布情况展示系统。\n\n1. 从下列三个系统开发方向中任选一个即可：\n\n基于B/S（浏览器/服务器）结构的全国气候分布情况展示系统；\n\n基于M/S（移动端/服务器）结构的全国气候分布情况展示系统；\n\n基于C/S（客户端/服务器）结构的全国气候分布情况展示系统；\n\n2. 数据制作要求：\n\n1) 基于提供的原始数据（“Data”文件夹）制作所需数据，\n\n① “全国省会城市气象数据表.xlsx”文件提供气候数据；\n\n② “ChinaClimate.udbx”文件提供地图数据，其数据集情况如下：\n\n| 数据集名称        | 数据集类型                     | 数据分类                       | 详细说明       |\n| ----------------- | ------------------------------ | ------------------------------ | -------------- |\n| NationAssistA_P   | 点数据集                       | 辅助点要素                     | 国家注记辅助点 |\n| NationAssistB_P   | 国家注记辅助点                 |                                |                |\n| RiverAssist_P     | 河流注记辅助点                 |                                |                |\n| Capital_P         | 行政点                         | 首都                           |                |\n| ProvinceCapital_P | 省会                           |                                |                |\n| CityA_P           | 市级行政区（市）               |                                |                |\n| CityB_P           | 市级行政区（自治州、盟等）     |                                |                |\n| County_P          | 区县级行政区                   |                                |                |\n| Town_P            | 乡镇级行政区                   |                                |                |\n| Airport_P         | 其它点要素                     | 机场                           |                |\n| Sea_P             | 海洋                           |                                |                |\n| Island_P          | 岛屿                           |                                |                |\n| BorderA_L         | 线数据集                       | 行政线                         | 国界线         |\n| BorderB_L         | 国界线（含跳绘）               |                                |                |\n| BorderC_L         | 国界线（含跳绘）               |                                |                |\n| Coastline_L       | 海岸线                         |                                |                |\n| Province_L        | 省界                           |                                |                |\n| StateRoad_L       | 交通线                         | 国道（包括高速公路）           |                |\n| ProvinceRoad_L    | 省道                           |                                |                |\n| OtherRoad_L       | 快速路和主干道                 |                                |                |\n| CountyRoad_L      | 县级道路                       |                                |                |\n| Railway_L         | 铁路（包括单线铁路与双线铁路） |                                |                |\n| MainRiver_L       | 水系                           | 主要河流                       |                |\n| GangAo_L          | 其它线要素                     | 香港、澳门的指示线             |                |\n| Country_R         | 面数据集                       | 行政面                         | 世界各国       |\n| Province_R        | 省面                           |                                |                |\n| MainRiver_R       | 水系                           | 主要河流                       |                |\n| River_R           | 河流                           |                                |                |\n| Lake_R            | 主要湖泊                       |                                |                |\n| XingKaiHu_R       | 兴凯湖                         |                                |                |\n| WorldElements_R   | 辅助要素                       | 世界背景                       |                |\n| IslandElements_R  | 岛屿辅助要素                   |                                |                |\n| Island_R          | 其它面要素                     | 岛屿                           |                |\n| OceanName         | 文本数据集                     | 地图注记                       | 大洋注记       |\n| ContinentName     | 大洲注记                       |                                |                |\n| SeaName           | 中国周围海域注记               |                                |                |\n| ProvinceNameA     | 省名                           |                                |                |\n| ProvinceNameB     | 省名                           |                                |                |\n| XingKaiHuA        | 兴凯湖注记                     |                                |                |\n| XingKaiHuB        | 兴凯湖注记                     |                                |                |\n| XingKaiHuC        | 兴凯湖注记                     |                                |                |\n| ChinaRegion       | 面数据集                       | 雨量等值线、气温等值线裁剪范围 | 中国范围       |\n\n \n\n2) 数据制作要求：\n\n① 使用给定数据中除“ChinaRegion”数据集以外的数据制作一幅中国地图作为底图，保存地图，命名为“China”，具体制作方法参考“SuperMap iDesktop 联机帮助->产品入门->示例地图说明->电子地图->中国电子地图”；\n\n② 将“全国省会城市气象数据表.xlsx”文件导入数据源中；\n\n③ 保存工作空间，命名为“ChinaClimate”。\n\n3. GIS服务要求：\n\n1) 若选择开发B/S结构的系统，请将上述成果数据和工作空间发布为GIS服务；\n\n2) M/S、C/S结构的系统对是否发布为GIS服务不做要求。\n\n4. 系统开发功能：\n\n1) 基础浏览功能：加载China地图作为底图，实现地图浏览的基本功能，包括放大、缩小、平移和全图显示；\n\n2) 查询功能：选择日期，在地图上点选某一省会城市，查询该城市当天的气温、相对湿度、AQI、PM2.5浓度、天气状况、本地日降水量，并在该城市的位置上弹窗展示查询结果；\n\n3) 分析功能：\n\n① 全国日降雨量等值线图：选中某一日期，根据查询得到的当天所有省会城市雨量信息生成全国日降雨量等值线图，并将结果展示到地图中,等值线值请按照如下表格中雨量值进行追踪；\n\n| 名称     | 日累计雨量（mm） |\n| -------- | ---------------- |\n| 小雨     | 0<x<10           |\n| 中雨     | 10<=x<25         |\n| 大雨     | 25<=x<50         |\n| 暴雨     | 50<=x<100        |\n| 大暴雨   | 100<=x<250       |\n| 特大暴雨 | x>=250           |\n\n② 全国日平均气温热力图：选中某一日期，获取所有省会城市当天的平均气温并生成全国日平均气温热力图，将结果添加到地图中显示；\n\n③ 全国日平均气温等值线图：选中某一日期，根据各个省会城市当日气温数据生成全国日平均气温等值线图，并将结果展示到地图中。\n\n4) 扩展功能：围绕系统主题，自行设计并实现的GIS功能\n\n**四、** **评分细则**\n\n| **项目***                                                    | **要求**                                                     | ***\\*分值\\**** |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | -------------- |\n| 地图配置（15）                                               | 地图色彩柔和，美观，符合行业使用习惯                         | 10             |\n| 地图风格与底图一致、命名规范                                 | 5                                                            |                |\n| GIS基础功能（10）                                            | 加载“China”地图                                              | 5              |\n| 地图的放大、缩小、平移和全图显示                             | 5                                                            |                |\n| 查询功能（15）                                               | 正确查询得到选定城市的气温、相对湿度、AQI、PM2.5浓度、天气状况、本地日降水量 | 10             |\n| 点选其它城市，弹窗实现同步更新                               | 5                                                            |                |\n| 分析功能（40）                                               | 生成全国日降雨量等值线图                                     | 10             |\n| 全国日平均气温热力图                                         | 8                                                            |                |\n| 全国日平均气温等值线图                                       | 10                                                           |                |\n| 各种分析结果图配色合理、有图例说明                           | 4                                                            |                |\n| 可对多种分析结果图进行图层的显示隐藏管理                     | 4                                                            |                |\n| 同一种分析功能可进行多次分析操作，地图展示对应更新           | 4                                                            |                |\n| 提交资料完善（20）                                           | 源码：代码逻辑清晰、命名规范、关键步骤有文字注释             | 5              |\n| 数据：命名规范、有切图的提供切图源文件                       | 5                                                            |                |\n| 系统使用说明：文档详细描述安装步骤和操作过程，并配置每一步骤的截图 | 5                                                            |                |\n| 录像时长10分钟以内，应突出展示作品的亮点，同时可配以字幕、语音讲解或PPT展示说明 | 5                                                            |                |\n| 加分项（10）                                                 | 自行扩展实现的功能能够围绕系统主题，为系统主题提供辅助决策支持；根据功能的实用性、客户体验等方面酌情给分 | 10             |\n\n \n\n**五、** **提交要求**\n\n1. 请严格按照文件夹的层级和名称、文件的名称和内容的要求提交。\n\n2. 根文件夹的命名规则为“PD+组长手机”，如“PD13012345678”。\n\n3. 提交内容：\n\n| **子文件夹**  | **文件**                                                     | **说明**                                                     |\n| ------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| 1系统源程序   | 自行命名                                                     | 项目工程文件，移动系统还需提供有效的apk安装包，C/S系统，直接提供可运行的exe文件 |\n| 2成果数据     | 规定命名                                                     | 包括“ChinaClimate.udbx”、“ChinaClimate.smwu”或缓存文件夹     |\n| 3系统使用说明 | DOC格式，说明软件安装或部署步骤与注意事项，说明每一项功能的使用方法 |                                                              |\n| 4演示录像     | 时间在10分钟以内，展示系统操作步骤和功能实现结果，可配上字幕或语音解说 |                                                              |\n\n4. 所有DOC格式的文件使用统一封面，参考如下：\n\n \n\n \n\n**SuperMap杯第**十九届全国高校GIS大赛\n\n \n\n**命题开发组**\n\n \n\n**系统使用说明（按需）**\n\n \n\n \n\n \n\n作品名称：\n\n学  校：\n\n指导教师：\n\n团队成员：\n\n组长电话：\n\n \n\n \n\n","source":"_posts/命题开发组规则.md","raw":"---\ntitle: 命题开发组规则\ntags: Supermap\ncategories: Supermap\ndate: 2021-07-16 08:45:21\ndescription: 2021 SuperMap杯全国高校GIS大赛赛制\n---\n\n**2021 SuperMap杯全国高校GIS大赛赛制**\n\n**命题开发组**\n\n作品要求根据给定的题目，使用SuperMap系列软件制作数据、开发并实现题目命题要求的GIS应用功能，综合考察参赛选手的GIS基础知识储备、软件操作能力和开发编程能力。\n\n本赛组将提供一个实际应用题目，并提供配套的原始数据。参赛作品必须使用提供的数据，自选系统开发方向，完成作品。\n\n**一、** **基本要求**\n\n1. 作品必须经过完整性和有效性验证，通过代码查重，方可进入评审阶段。\n\n2. 作品必须为原创，且符合开源规则。版权归属原作者，大赛组委会有权公示和宣传。\n\n3. 如有参考或引用，请注明。如侵犯第三方权益，由作品提交团队承担相应责任，大赛组委会有权因此取消该作品获得的奖项，要求归还证书和奖金，并向所属学校通报。\n\n**二、** ***软件要求***\n\n作品必须基于SuperMap系列软件完成，请使用以下任意一款或多款软件，版本使用10i(2020) SP1（即v10.1.1版本）或以上版本：\n\n| SuperMap iDesktopX                             | SuperMap iMobile            |\n| ---------------------------------------------- | --------------------------- |\n| SuperMap iServer                               | SuperMap iClient JavaScript |\n| SuperMap iObjects .NET/ SuperMap iObjects Java |                             |\n\n技术支持电话：400-8900-866。\n\n**三、** **命题要求**\n\n背景：近年来，气候变暖的速度持续攀升，造成了如海平面上升、冰川融化、极端天气频繁出现等方面的影响。极端天气肆虐,我国也未能幸免， 比如部分城市平均气温上升、干旱和洪灾发生频繁，造成了生命财产损失。因此，设计一个展示、分析我国气候变化情况的信息系统，在当下应对气候变暖就显得尤为重要。同学们，请根据所学知识，使用提供的数据，自选系统开发方向，设计并制作一个全国气候分布情况展示系统。\n\n1. 从下列三个系统开发方向中任选一个即可：\n\n基于B/S（浏览器/服务器）结构的全国气候分布情况展示系统；\n\n基于M/S（移动端/服务器）结构的全国气候分布情况展示系统；\n\n基于C/S（客户端/服务器）结构的全国气候分布情况展示系统；\n\n2. 数据制作要求：\n\n1) 基于提供的原始数据（“Data”文件夹）制作所需数据，\n\n① “全国省会城市气象数据表.xlsx”文件提供气候数据；\n\n② “ChinaClimate.udbx”文件提供地图数据，其数据集情况如下：\n\n| 数据集名称        | 数据集类型                     | 数据分类                       | 详细说明       |\n| ----------------- | ------------------------------ | ------------------------------ | -------------- |\n| NationAssistA_P   | 点数据集                       | 辅助点要素                     | 国家注记辅助点 |\n| NationAssistB_P   | 国家注记辅助点                 |                                |                |\n| RiverAssist_P     | 河流注记辅助点                 |                                |                |\n| Capital_P         | 行政点                         | 首都                           |                |\n| ProvinceCapital_P | 省会                           |                                |                |\n| CityA_P           | 市级行政区（市）               |                                |                |\n| CityB_P           | 市级行政区（自治州、盟等）     |                                |                |\n| County_P          | 区县级行政区                   |                                |                |\n| Town_P            | 乡镇级行政区                   |                                |                |\n| Airport_P         | 其它点要素                     | 机场                           |                |\n| Sea_P             | 海洋                           |                                |                |\n| Island_P          | 岛屿                           |                                |                |\n| BorderA_L         | 线数据集                       | 行政线                         | 国界线         |\n| BorderB_L         | 国界线（含跳绘）               |                                |                |\n| BorderC_L         | 国界线（含跳绘）               |                                |                |\n| Coastline_L       | 海岸线                         |                                |                |\n| Province_L        | 省界                           |                                |                |\n| StateRoad_L       | 交通线                         | 国道（包括高速公路）           |                |\n| ProvinceRoad_L    | 省道                           |                                |                |\n| OtherRoad_L       | 快速路和主干道                 |                                |                |\n| CountyRoad_L      | 县级道路                       |                                |                |\n| Railway_L         | 铁路（包括单线铁路与双线铁路） |                                |                |\n| MainRiver_L       | 水系                           | 主要河流                       |                |\n| GangAo_L          | 其它线要素                     | 香港、澳门的指示线             |                |\n| Country_R         | 面数据集                       | 行政面                         | 世界各国       |\n| Province_R        | 省面                           |                                |                |\n| MainRiver_R       | 水系                           | 主要河流                       |                |\n| River_R           | 河流                           |                                |                |\n| Lake_R            | 主要湖泊                       |                                |                |\n| XingKaiHu_R       | 兴凯湖                         |                                |                |\n| WorldElements_R   | 辅助要素                       | 世界背景                       |                |\n| IslandElements_R  | 岛屿辅助要素                   |                                |                |\n| Island_R          | 其它面要素                     | 岛屿                           |                |\n| OceanName         | 文本数据集                     | 地图注记                       | 大洋注记       |\n| ContinentName     | 大洲注记                       |                                |                |\n| SeaName           | 中国周围海域注记               |                                |                |\n| ProvinceNameA     | 省名                           |                                |                |\n| ProvinceNameB     | 省名                           |                                |                |\n| XingKaiHuA        | 兴凯湖注记                     |                                |                |\n| XingKaiHuB        | 兴凯湖注记                     |                                |                |\n| XingKaiHuC        | 兴凯湖注记                     |                                |                |\n| ChinaRegion       | 面数据集                       | 雨量等值线、气温等值线裁剪范围 | 中国范围       |\n\n \n\n2) 数据制作要求：\n\n① 使用给定数据中除“ChinaRegion”数据集以外的数据制作一幅中国地图作为底图，保存地图，命名为“China”，具体制作方法参考“SuperMap iDesktop 联机帮助->产品入门->示例地图说明->电子地图->中国电子地图”；\n\n② 将“全国省会城市气象数据表.xlsx”文件导入数据源中；\n\n③ 保存工作空间，命名为“ChinaClimate”。\n\n3. GIS服务要求：\n\n1) 若选择开发B/S结构的系统，请将上述成果数据和工作空间发布为GIS服务；\n\n2) M/S、C/S结构的系统对是否发布为GIS服务不做要求。\n\n4. 系统开发功能：\n\n1) 基础浏览功能：加载China地图作为底图，实现地图浏览的基本功能，包括放大、缩小、平移和全图显示；\n\n2) 查询功能：选择日期，在地图上点选某一省会城市，查询该城市当天的气温、相对湿度、AQI、PM2.5浓度、天气状况、本地日降水量，并在该城市的位置上弹窗展示查询结果；\n\n3) 分析功能：\n\n① 全国日降雨量等值线图：选中某一日期，根据查询得到的当天所有省会城市雨量信息生成全国日降雨量等值线图，并将结果展示到地图中,等值线值请按照如下表格中雨量值进行追踪；\n\n| 名称     | 日累计雨量（mm） |\n| -------- | ---------------- |\n| 小雨     | 0<x<10           |\n| 中雨     | 10<=x<25         |\n| 大雨     | 25<=x<50         |\n| 暴雨     | 50<=x<100        |\n| 大暴雨   | 100<=x<250       |\n| 特大暴雨 | x>=250           |\n\n② 全国日平均气温热力图：选中某一日期，获取所有省会城市当天的平均气温并生成全国日平均气温热力图，将结果添加到地图中显示；\n\n③ 全国日平均气温等值线图：选中某一日期，根据各个省会城市当日气温数据生成全国日平均气温等值线图，并将结果展示到地图中。\n\n4) 扩展功能：围绕系统主题，自行设计并实现的GIS功能\n\n**四、** **评分细则**\n\n| **项目***                                                    | **要求**                                                     | ***\\*分值\\**** |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | -------------- |\n| 地图配置（15）                                               | 地图色彩柔和，美观，符合行业使用习惯                         | 10             |\n| 地图风格与底图一致、命名规范                                 | 5                                                            |                |\n| GIS基础功能（10）                                            | 加载“China”地图                                              | 5              |\n| 地图的放大、缩小、平移和全图显示                             | 5                                                            |                |\n| 查询功能（15）                                               | 正确查询得到选定城市的气温、相对湿度、AQI、PM2.5浓度、天气状况、本地日降水量 | 10             |\n| 点选其它城市，弹窗实现同步更新                               | 5                                                            |                |\n| 分析功能（40）                                               | 生成全国日降雨量等值线图                                     | 10             |\n| 全国日平均气温热力图                                         | 8                                                            |                |\n| 全国日平均气温等值线图                                       | 10                                                           |                |\n| 各种分析结果图配色合理、有图例说明                           | 4                                                            |                |\n| 可对多种分析结果图进行图层的显示隐藏管理                     | 4                                                            |                |\n| 同一种分析功能可进行多次分析操作，地图展示对应更新           | 4                                                            |                |\n| 提交资料完善（20）                                           | 源码：代码逻辑清晰、命名规范、关键步骤有文字注释             | 5              |\n| 数据：命名规范、有切图的提供切图源文件                       | 5                                                            |                |\n| 系统使用说明：文档详细描述安装步骤和操作过程，并配置每一步骤的截图 | 5                                                            |                |\n| 录像时长10分钟以内，应突出展示作品的亮点，同时可配以字幕、语音讲解或PPT展示说明 | 5                                                            |                |\n| 加分项（10）                                                 | 自行扩展实现的功能能够围绕系统主题，为系统主题提供辅助决策支持；根据功能的实用性、客户体验等方面酌情给分 | 10             |\n\n \n\n**五、** **提交要求**\n\n1. 请严格按照文件夹的层级和名称、文件的名称和内容的要求提交。\n\n2. 根文件夹的命名规则为“PD+组长手机”，如“PD13012345678”。\n\n3. 提交内容：\n\n| **子文件夹**  | **文件**                                                     | **说明**                                                     |\n| ------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| 1系统源程序   | 自行命名                                                     | 项目工程文件，移动系统还需提供有效的apk安装包，C/S系统，直接提供可运行的exe文件 |\n| 2成果数据     | 规定命名                                                     | 包括“ChinaClimate.udbx”、“ChinaClimate.smwu”或缓存文件夹     |\n| 3系统使用说明 | DOC格式，说明软件安装或部署步骤与注意事项，说明每一项功能的使用方法 |                                                              |\n| 4演示录像     | 时间在10分钟以内，展示系统操作步骤和功能实现结果，可配上字幕或语音解说 |                                                              |\n\n4. 所有DOC格式的文件使用统一封面，参考如下：\n\n \n\n \n\n**SuperMap杯第**十九届全国高校GIS大赛\n\n \n\n**命题开发组**\n\n \n\n**系统使用说明（按需）**\n\n \n\n \n\n \n\n作品名称：\n\n学  校：\n\n指导教师：\n\n团队成员：\n\n组长电话：\n\n \n\n \n\n","slug":"命题开发组规则","published":1,"updated":"2021-07-16T00:47:50.486Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3u0039jsvkdw9m31df","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>2021 SuperMap杯全国高校GIS大赛赛制</strong></p>\n<p><strong>命题开发组</strong></p>\n<p>作品要求根据给定的题目，使用SuperMap系列软件制作数据、开发并实现题目命题要求的GIS应用功能，综合考察参赛选手的GIS基础知识储备、软件操作能力和开发编程能力。</p>\n<p>本赛组将提供一个实际应用题目，并提供配套的原始数据。参赛作品必须使用提供的数据，自选系统开发方向，完成作品。</p>\n<p><strong>一、</strong> <strong>基本要求</strong></p>\n<ol>\n<li><p>作品必须经过完整性和有效性验证，通过代码查重，方可进入评审阶段。</p>\n</li>\n<li><p>作品必须为原创，且符合开源规则。版权归属原作者，大赛组委会有权公示和宣传。</p>\n</li>\n<li><p>如有参考或引用，请注明。如侵犯第三方权益，由作品提交团队承担相应责任，大赛组委会有权因此取消该作品获得的奖项，要求归还证书和奖金，并向所属学校通报。</p>\n</li>\n</ol>\n<p><strong>二、</strong> <strong><em>软件要求</em></strong></p>\n<p>作品必须基于SuperMap系列软件完成，请使用以下任意一款或多款软件，版本使用10i(2020) SP1（即v10.1.1版本）或以上版本：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>SuperMap iDesktopX</th>\n<th>SuperMap iMobile</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SuperMap iServer</td>\n<td>SuperMap iClient JavaScript</td>\n</tr>\n<tr>\n<td>SuperMap iObjects .NET/ SuperMap iObjects Java</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>技术支持电话：400-8900-866。</p>\n<p><strong>三、</strong> <strong>命题要求</strong></p>\n<p>背景：近年来，气候变暖的速度持续攀升，造成了如海平面上升、冰川融化、极端天气频繁出现等方面的影响。极端天气肆虐,我国也未能幸免， 比如部分城市平均气温上升、干旱和洪灾发生频繁，造成了生命财产损失。因此，设计一个展示、分析我国气候变化情况的信息系统，在当下应对气候变暖就显得尤为重要。同学们，请根据所学知识，使用提供的数据，自选系统开发方向，设计并制作一个全国气候分布情况展示系统。</p>\n<ol>\n<li>从下列三个系统开发方向中任选一个即可：</li>\n</ol>\n<p>基于B/S（浏览器/服务器）结构的全国气候分布情况展示系统；</p>\n<p>基于M/S（移动端/服务器）结构的全国气候分布情况展示系统；</p>\n<p>基于C/S（客户端/服务器）结构的全国气候分布情况展示系统；</p>\n<ol>\n<li>数据制作要求：</li>\n</ol>\n<p>1) 基于提供的原始数据（“Data”文件夹）制作所需数据，</p>\n<p>① “全国省会城市气象数据表.xlsx”文件提供气候数据；</p>\n<p>② “ChinaClimate.udbx”文件提供地图数据，其数据集情况如下：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>数据集名称</th>\n<th>数据集类型</th>\n<th>数据分类</th>\n<th>详细说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NationAssistA_P</td>\n<td>点数据集</td>\n<td>辅助点要素</td>\n<td>国家注记辅助点</td>\n</tr>\n<tr>\n<td>NationAssistB_P</td>\n<td>国家注记辅助点</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>RiverAssist_P</td>\n<td>河流注记辅助点</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Capital_P</td>\n<td>行政点</td>\n<td>首都</td>\n<td></td>\n</tr>\n<tr>\n<td>ProvinceCapital_P</td>\n<td>省会</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>CityA_P</td>\n<td>市级行政区（市）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>CityB_P</td>\n<td>市级行政区（自治州、盟等）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>County_P</td>\n<td>区县级行政区</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Town_P</td>\n<td>乡镇级行政区</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Airport_P</td>\n<td>其它点要素</td>\n<td>机场</td>\n<td></td>\n</tr>\n<tr>\n<td>Sea_P</td>\n<td>海洋</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Island_P</td>\n<td>岛屿</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>BorderA_L</td>\n<td>线数据集</td>\n<td>行政线</td>\n<td>国界线</td>\n</tr>\n<tr>\n<td>BorderB_L</td>\n<td>国界线（含跳绘）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>BorderC_L</td>\n<td>国界线（含跳绘）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Coastline_L</td>\n<td>海岸线</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Province_L</td>\n<td>省界</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>StateRoad_L</td>\n<td>交通线</td>\n<td>国道（包括高速公路）</td>\n<td></td>\n</tr>\n<tr>\n<td>ProvinceRoad_L</td>\n<td>省道</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>OtherRoad_L</td>\n<td>快速路和主干道</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>CountyRoad_L</td>\n<td>县级道路</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Railway_L</td>\n<td>铁路（包括单线铁路与双线铁路）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>MainRiver_L</td>\n<td>水系</td>\n<td>主要河流</td>\n<td></td>\n</tr>\n<tr>\n<td>GangAo_L</td>\n<td>其它线要素</td>\n<td>香港、澳门的指示线</td>\n<td></td>\n</tr>\n<tr>\n<td>Country_R</td>\n<td>面数据集</td>\n<td>行政面</td>\n<td>世界各国</td>\n</tr>\n<tr>\n<td>Province_R</td>\n<td>省面</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>MainRiver_R</td>\n<td>水系</td>\n<td>主要河流</td>\n<td></td>\n</tr>\n<tr>\n<td>River_R</td>\n<td>河流</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Lake_R</td>\n<td>主要湖泊</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>XingKaiHu_R</td>\n<td>兴凯湖</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>WorldElements_R</td>\n<td>辅助要素</td>\n<td>世界背景</td>\n<td></td>\n</tr>\n<tr>\n<td>IslandElements_R</td>\n<td>岛屿辅助要素</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Island_R</td>\n<td>其它面要素</td>\n<td>岛屿</td>\n<td></td>\n</tr>\n<tr>\n<td>OceanName</td>\n<td>文本数据集</td>\n<td>地图注记</td>\n<td>大洋注记</td>\n</tr>\n<tr>\n<td>ContinentName</td>\n<td>大洲注记</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SeaName</td>\n<td>中国周围海域注记</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ProvinceNameA</td>\n<td>省名</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ProvinceNameB</td>\n<td>省名</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>XingKaiHuA</td>\n<td>兴凯湖注记</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>XingKaiHuB</td>\n<td>兴凯湖注记</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>XingKaiHuC</td>\n<td>兴凯湖注记</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ChinaRegion</td>\n<td>面数据集</td>\n<td>雨量等值线、气温等值线裁剪范围</td>\n<td>中国范围</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>2) 数据制作要求：</p>\n<p>① 使用给定数据中除“ChinaRegion”数据集以外的数据制作一幅中国地图作为底图，保存地图，命名为“China”，具体制作方法参考“SuperMap iDesktop 联机帮助-&gt;产品入门-&gt;示例地图说明-&gt;电子地图-&gt;中国电子地图”；</p>\n<p>② 将“全国省会城市气象数据表.xlsx”文件导入数据源中；</p>\n<p>③ 保存工作空间，命名为“ChinaClimate”。</p>\n<ol>\n<li>GIS服务要求：</li>\n</ol>\n<p>1) 若选择开发B/S结构的系统，请将上述成果数据和工作空间发布为GIS服务；</p>\n<p>2) M/S、C/S结构的系统对是否发布为GIS服务不做要求。</p>\n<ol>\n<li>系统开发功能：</li>\n</ol>\n<p>1) 基础浏览功能：加载China地图作为底图，实现地图浏览的基本功能，包括放大、缩小、平移和全图显示；</p>\n<p>2) 查询功能：选择日期，在地图上点选某一省会城市，查询该城市当天的气温、相对湿度、AQI、PM2.5浓度、天气状况、本地日降水量，并在该城市的位置上弹窗展示查询结果；</p>\n<p>3) 分析功能：</p>\n<p>① 全国日降雨量等值线图：选中某一日期，根据查询得到的当天所有省会城市雨量信息生成全国日降雨量等值线图，并将结果展示到地图中,等值线值请按照如下表格中雨量值进行追踪；</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>日累计雨量（mm）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>小雨</td>\n<td>0&lt;x&lt;10</td>\n</tr>\n<tr>\n<td>中雨</td>\n<td>10&lt;=x&lt;25</td>\n</tr>\n<tr>\n<td>大雨</td>\n<td>25&lt;=x&lt;50</td>\n</tr>\n<tr>\n<td>暴雨</td>\n<td>50&lt;=x&lt;100</td>\n</tr>\n<tr>\n<td>大暴雨</td>\n<td>100&lt;=x&lt;250</td>\n</tr>\n<tr>\n<td>特大暴雨</td>\n<td>x&gt;=250</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>② 全国日平均气温热力图：选中某一日期，获取所有省会城市当天的平均气温并生成全国日平均气温热力图，将结果添加到地图中显示；</p>\n<p>③ 全国日平均气温等值线图：选中某一日期，根据各个省会城市当日气温数据生成全国日平均气温等值线图，并将结果展示到地图中。</p>\n<p>4) 扩展功能：围绕系统主题，自行设计并实现的GIS功能</p>\n<p><strong>四、</strong> <strong>评分细则</strong></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>项目*</strong></th>\n<th><strong>要求</strong></th>\n<th><strong><em>\\</em>分值**</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>地图配置（15）</td>\n<td>地图色彩柔和，美观，符合行业使用习惯</td>\n<td>10</td>\n</tr>\n<tr>\n<td>地图风格与底图一致、命名规范</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>GIS基础功能（10）</td>\n<td>加载“China”地图</td>\n<td>5</td>\n</tr>\n<tr>\n<td>地图的放大、缩小、平移和全图显示</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>查询功能（15）</td>\n<td>正确查询得到选定城市的气温、相对湿度、AQI、PM2.5浓度、天气状况、本地日降水量</td>\n<td>10</td>\n</tr>\n<tr>\n<td>点选其它城市，弹窗实现同步更新</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>分析功能（40）</td>\n<td>生成全国日降雨量等值线图</td>\n<td>10</td>\n</tr>\n<tr>\n<td>全国日平均气温热力图</td>\n<td>8</td>\n<td></td>\n</tr>\n<tr>\n<td>全国日平均气温等值线图</td>\n<td>10</td>\n<td></td>\n</tr>\n<tr>\n<td>各种分析结果图配色合理、有图例说明</td>\n<td>4</td>\n<td></td>\n</tr>\n<tr>\n<td>可对多种分析结果图进行图层的显示隐藏管理</td>\n<td>4</td>\n<td></td>\n</tr>\n<tr>\n<td>同一种分析功能可进行多次分析操作，地图展示对应更新</td>\n<td>4</td>\n<td></td>\n</tr>\n<tr>\n<td>提交资料完善（20）</td>\n<td>源码：代码逻辑清晰、命名规范、关键步骤有文字注释</td>\n<td>5</td>\n</tr>\n<tr>\n<td>数据：命名规范、有切图的提供切图源文件</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>系统使用说明：文档详细描述安装步骤和操作过程，并配置每一步骤的截图</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>录像时长10分钟以内，应突出展示作品的亮点，同时可配以字幕、语音讲解或PPT展示说明</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>加分项（10）</td>\n<td>自行扩展实现的功能能够围绕系统主题，为系统主题提供辅助决策支持；根据功能的实用性、客户体验等方面酌情给分</td>\n<td>10</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><strong>五、</strong> <strong>提交要求</strong></p>\n<ol>\n<li><p>请严格按照文件夹的层级和名称、文件的名称和内容的要求提交。</p>\n</li>\n<li><p>根文件夹的命名规则为“PD+组长手机”，如“PD13012345678”。</p>\n</li>\n<li><p>提交内容：</p>\n</li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>子文件夹</strong></th>\n<th><strong>文件</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1系统源程序</td>\n<td>自行命名</td>\n<td>项目工程文件，移动系统还需提供有效的apk安装包，C/S系统，直接提供可运行的exe文件</td>\n</tr>\n<tr>\n<td>2成果数据</td>\n<td>规定命名</td>\n<td>包括“ChinaClimate.udbx”、“ChinaClimate.smwu”或缓存文件夹</td>\n</tr>\n<tr>\n<td>3系统使用说明</td>\n<td>DOC格式，说明软件安装或部署步骤与注意事项，说明每一项功能的使用方法</td>\n<td></td>\n</tr>\n<tr>\n<td>4演示录像</td>\n<td>时间在10分钟以内，展示系统操作步骤和功能实现结果，可配上字幕或语音解说</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ol>\n<li>所有DOC格式的文件使用统一封面，参考如下：</li>\n</ol>\n<p><strong>SuperMap杯第</strong>十九届全国高校GIS大赛</p>\n<p><strong>命题开发组</strong></p>\n<p><strong>系统使用说明（按需）</strong></p>\n<p>作品名称：</p>\n<p>学  校：</p>\n<p>指导教师：</p>\n<p>团队成员：</p>\n<p>组长电话：</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160704.jpeg","length":3253,"excerpt":"","more":"<p><strong>2021 SuperMap杯全国高校GIS大赛赛制</strong></p>\n<p><strong>命题开发组</strong></p>\n<p>作品要求根据给定的题目，使用SuperMap系列软件制作数据、开发并实现题目命题要求的GIS应用功能，综合考察参赛选手的GIS基础知识储备、软件操作能力和开发编程能力。</p>\n<p>本赛组将提供一个实际应用题目，并提供配套的原始数据。参赛作品必须使用提供的数据，自选系统开发方向，完成作品。</p>\n<p><strong>一、</strong> <strong>基本要求</strong></p>\n<ol>\n<li><p>作品必须经过完整性和有效性验证，通过代码查重，方可进入评审阶段。</p>\n</li>\n<li><p>作品必须为原创，且符合开源规则。版权归属原作者，大赛组委会有权公示和宣传。</p>\n</li>\n<li><p>如有参考或引用，请注明。如侵犯第三方权益，由作品提交团队承担相应责任，大赛组委会有权因此取消该作品获得的奖项，要求归还证书和奖金，并向所属学校通报。</p>\n</li>\n</ol>\n<p><strong>二、</strong> <strong><em>软件要求</em></strong></p>\n<p>作品必须基于SuperMap系列软件完成，请使用以下任意一款或多款软件，版本使用10i(2020) SP1（即v10.1.1版本）或以上版本：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>SuperMap iDesktopX</th>\n<th>SuperMap iMobile</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SuperMap iServer</td>\n<td>SuperMap iClient JavaScript</td>\n</tr>\n<tr>\n<td>SuperMap iObjects .NET/ SuperMap iObjects Java</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>技术支持电话：400-8900-866。</p>\n<p><strong>三、</strong> <strong>命题要求</strong></p>\n<p>背景：近年来，气候变暖的速度持续攀升，造成了如海平面上升、冰川融化、极端天气频繁出现等方面的影响。极端天气肆虐,我国也未能幸免， 比如部分城市平均气温上升、干旱和洪灾发生频繁，造成了生命财产损失。因此，设计一个展示、分析我国气候变化情况的信息系统，在当下应对气候变暖就显得尤为重要。同学们，请根据所学知识，使用提供的数据，自选系统开发方向，设计并制作一个全国气候分布情况展示系统。</p>\n<ol>\n<li>从下列三个系统开发方向中任选一个即可：</li>\n</ol>\n<p>基于B/S（浏览器/服务器）结构的全国气候分布情况展示系统；</p>\n<p>基于M/S（移动端/服务器）结构的全国气候分布情况展示系统；</p>\n<p>基于C/S（客户端/服务器）结构的全国气候分布情况展示系统；</p>\n<ol>\n<li>数据制作要求：</li>\n</ol>\n<p>1) 基于提供的原始数据（“Data”文件夹）制作所需数据，</p>\n<p>① “全国省会城市气象数据表.xlsx”文件提供气候数据；</p>\n<p>② “ChinaClimate.udbx”文件提供地图数据，其数据集情况如下：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>数据集名称</th>\n<th>数据集类型</th>\n<th>数据分类</th>\n<th>详细说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NationAssistA_P</td>\n<td>点数据集</td>\n<td>辅助点要素</td>\n<td>国家注记辅助点</td>\n</tr>\n<tr>\n<td>NationAssistB_P</td>\n<td>国家注记辅助点</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>RiverAssist_P</td>\n<td>河流注记辅助点</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Capital_P</td>\n<td>行政点</td>\n<td>首都</td>\n<td></td>\n</tr>\n<tr>\n<td>ProvinceCapital_P</td>\n<td>省会</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>CityA_P</td>\n<td>市级行政区（市）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>CityB_P</td>\n<td>市级行政区（自治州、盟等）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>County_P</td>\n<td>区县级行政区</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Town_P</td>\n<td>乡镇级行政区</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Airport_P</td>\n<td>其它点要素</td>\n<td>机场</td>\n<td></td>\n</tr>\n<tr>\n<td>Sea_P</td>\n<td>海洋</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Island_P</td>\n<td>岛屿</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>BorderA_L</td>\n<td>线数据集</td>\n<td>行政线</td>\n<td>国界线</td>\n</tr>\n<tr>\n<td>BorderB_L</td>\n<td>国界线（含跳绘）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>BorderC_L</td>\n<td>国界线（含跳绘）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Coastline_L</td>\n<td>海岸线</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Province_L</td>\n<td>省界</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>StateRoad_L</td>\n<td>交通线</td>\n<td>国道（包括高速公路）</td>\n<td></td>\n</tr>\n<tr>\n<td>ProvinceRoad_L</td>\n<td>省道</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>OtherRoad_L</td>\n<td>快速路和主干道</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>CountyRoad_L</td>\n<td>县级道路</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Railway_L</td>\n<td>铁路（包括单线铁路与双线铁路）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>MainRiver_L</td>\n<td>水系</td>\n<td>主要河流</td>\n<td></td>\n</tr>\n<tr>\n<td>GangAo_L</td>\n<td>其它线要素</td>\n<td>香港、澳门的指示线</td>\n<td></td>\n</tr>\n<tr>\n<td>Country_R</td>\n<td>面数据集</td>\n<td>行政面</td>\n<td>世界各国</td>\n</tr>\n<tr>\n<td>Province_R</td>\n<td>省面</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>MainRiver_R</td>\n<td>水系</td>\n<td>主要河流</td>\n<td></td>\n</tr>\n<tr>\n<td>River_R</td>\n<td>河流</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Lake_R</td>\n<td>主要湖泊</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>XingKaiHu_R</td>\n<td>兴凯湖</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>WorldElements_R</td>\n<td>辅助要素</td>\n<td>世界背景</td>\n<td></td>\n</tr>\n<tr>\n<td>IslandElements_R</td>\n<td>岛屿辅助要素</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Island_R</td>\n<td>其它面要素</td>\n<td>岛屿</td>\n<td></td>\n</tr>\n<tr>\n<td>OceanName</td>\n<td>文本数据集</td>\n<td>地图注记</td>\n<td>大洋注记</td>\n</tr>\n<tr>\n<td>ContinentName</td>\n<td>大洲注记</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SeaName</td>\n<td>中国周围海域注记</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ProvinceNameA</td>\n<td>省名</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ProvinceNameB</td>\n<td>省名</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>XingKaiHuA</td>\n<td>兴凯湖注记</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>XingKaiHuB</td>\n<td>兴凯湖注记</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>XingKaiHuC</td>\n<td>兴凯湖注记</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ChinaRegion</td>\n<td>面数据集</td>\n<td>雨量等值线、气温等值线裁剪范围</td>\n<td>中国范围</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>2) 数据制作要求：</p>\n<p>① 使用给定数据中除“ChinaRegion”数据集以外的数据制作一幅中国地图作为底图，保存地图，命名为“China”，具体制作方法参考“SuperMap iDesktop 联机帮助-&gt;产品入门-&gt;示例地图说明-&gt;电子地图-&gt;中国电子地图”；</p>\n<p>② 将“全国省会城市气象数据表.xlsx”文件导入数据源中；</p>\n<p>③ 保存工作空间，命名为“ChinaClimate”。</p>\n<ol>\n<li>GIS服务要求：</li>\n</ol>\n<p>1) 若选择开发B/S结构的系统，请将上述成果数据和工作空间发布为GIS服务；</p>\n<p>2) M/S、C/S结构的系统对是否发布为GIS服务不做要求。</p>\n<ol>\n<li>系统开发功能：</li>\n</ol>\n<p>1) 基础浏览功能：加载China地图作为底图，实现地图浏览的基本功能，包括放大、缩小、平移和全图显示；</p>\n<p>2) 查询功能：选择日期，在地图上点选某一省会城市，查询该城市当天的气温、相对湿度、AQI、PM2.5浓度、天气状况、本地日降水量，并在该城市的位置上弹窗展示查询结果；</p>\n<p>3) 分析功能：</p>\n<p>① 全国日降雨量等值线图：选中某一日期，根据查询得到的当天所有省会城市雨量信息生成全国日降雨量等值线图，并将结果展示到地图中,等值线值请按照如下表格中雨量值进行追踪；</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>日累计雨量（mm）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>小雨</td>\n<td>0&lt;x&lt;10</td>\n</tr>\n<tr>\n<td>中雨</td>\n<td>10&lt;=x&lt;25</td>\n</tr>\n<tr>\n<td>大雨</td>\n<td>25&lt;=x&lt;50</td>\n</tr>\n<tr>\n<td>暴雨</td>\n<td>50&lt;=x&lt;100</td>\n</tr>\n<tr>\n<td>大暴雨</td>\n<td>100&lt;=x&lt;250</td>\n</tr>\n<tr>\n<td>特大暴雨</td>\n<td>x&gt;=250</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>② 全国日平均气温热力图：选中某一日期，获取所有省会城市当天的平均气温并生成全国日平均气温热力图，将结果添加到地图中显示；</p>\n<p>③ 全国日平均气温等值线图：选中某一日期，根据各个省会城市当日气温数据生成全国日平均气温等值线图，并将结果展示到地图中。</p>\n<p>4) 扩展功能：围绕系统主题，自行设计并实现的GIS功能</p>\n<p><strong>四、</strong> <strong>评分细则</strong></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>项目*</strong></th>\n<th><strong>要求</strong></th>\n<th><strong><em>\\</em>分值**</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>地图配置（15）</td>\n<td>地图色彩柔和，美观，符合行业使用习惯</td>\n<td>10</td>\n</tr>\n<tr>\n<td>地图风格与底图一致、命名规范</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>GIS基础功能（10）</td>\n<td>加载“China”地图</td>\n<td>5</td>\n</tr>\n<tr>\n<td>地图的放大、缩小、平移和全图显示</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>查询功能（15）</td>\n<td>正确查询得到选定城市的气温、相对湿度、AQI、PM2.5浓度、天气状况、本地日降水量</td>\n<td>10</td>\n</tr>\n<tr>\n<td>点选其它城市，弹窗实现同步更新</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>分析功能（40）</td>\n<td>生成全国日降雨量等值线图</td>\n<td>10</td>\n</tr>\n<tr>\n<td>全国日平均气温热力图</td>\n<td>8</td>\n<td></td>\n</tr>\n<tr>\n<td>全国日平均气温等值线图</td>\n<td>10</td>\n<td></td>\n</tr>\n<tr>\n<td>各种分析结果图配色合理、有图例说明</td>\n<td>4</td>\n<td></td>\n</tr>\n<tr>\n<td>可对多种分析结果图进行图层的显示隐藏管理</td>\n<td>4</td>\n<td></td>\n</tr>\n<tr>\n<td>同一种分析功能可进行多次分析操作，地图展示对应更新</td>\n<td>4</td>\n<td></td>\n</tr>\n<tr>\n<td>提交资料完善（20）</td>\n<td>源码：代码逻辑清晰、命名规范、关键步骤有文字注释</td>\n<td>5</td>\n</tr>\n<tr>\n<td>数据：命名规范、有切图的提供切图源文件</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>系统使用说明：文档详细描述安装步骤和操作过程，并配置每一步骤的截图</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>录像时长10分钟以内，应突出展示作品的亮点，同时可配以字幕、语音讲解或PPT展示说明</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>加分项（10）</td>\n<td>自行扩展实现的功能能够围绕系统主题，为系统主题提供辅助决策支持；根据功能的实用性、客户体验等方面酌情给分</td>\n<td>10</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><strong>五、</strong> <strong>提交要求</strong></p>\n<ol>\n<li><p>请严格按照文件夹的层级和名称、文件的名称和内容的要求提交。</p>\n</li>\n<li><p>根文件夹的命名规则为“PD+组长手机”，如“PD13012345678”。</p>\n</li>\n<li><p>提交内容：</p>\n</li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>子文件夹</strong></th>\n<th><strong>文件</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1系统源程序</td>\n<td>自行命名</td>\n<td>项目工程文件，移动系统还需提供有效的apk安装包，C/S系统，直接提供可运行的exe文件</td>\n</tr>\n<tr>\n<td>2成果数据</td>\n<td>规定命名</td>\n<td>包括“ChinaClimate.udbx”、“ChinaClimate.smwu”或缓存文件夹</td>\n</tr>\n<tr>\n<td>3系统使用说明</td>\n<td>DOC格式，说明软件安装或部署步骤与注意事项，说明每一项功能的使用方法</td>\n<td></td>\n</tr>\n<tr>\n<td>4演示录像</td>\n<td>时间在10分钟以内，展示系统操作步骤和功能实现结果，可配上字幕或语音解说</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ol>\n<li>所有DOC格式的文件使用统一封面，参考如下：</li>\n</ol>\n<p><strong>SuperMap杯第</strong>十九届全国高校GIS大赛</p>\n<p><strong>命题开发组</strong></p>\n<p><strong>系统使用说明（按需）</strong></p>\n<p>作品名称：</p>\n<p>学  校：</p>\n<p>指导教师：</p>\n<p>团队成员：</p>\n<p>组长电话：</p>\n"},{"title":"地理信息科学","date":"2021-07-05T11:11:46.000Z","description":"地理信息科学","_content":"\n# 基本概念\n\n## 信息系统基本功能\n\n+ 数据采集\n+ 数据管理\n+ 数据分析\n+ 信息表达\n\n## GIS构成\n\n+ 软件\n\n+ 人员\n\n+ 数据\n\n+ 硬件\n\n## 数据基本特征\n\n+ 空间特征\n+ 属性特征\n+ 时间特征\n\n## GIS的硬件系统\n\n1. 计算机主机\n2. 存储设备\n   + 光盘刻录机\n   + 磁带机\n   + 活动硬盘\n   + 磁盘阵列\n\n3. 输入设备 \n   + 数字化仪\n   + 图像扫描仪\n   + 手写笔 光笔\n   + 键盘 鼠标\n   + 通讯端口\n\n4. 输出设备\n   + 笔式绘图仪\n   + 喷墨绘图仪（打印机）\n   + 激光打印机\n   + 显示器\n\n# 空间数学基础\n\n# 空间数据模型与数据结构\n\n## 1.地理空间与建模\n\n<img src=\"https://i.loli.net/2021/07/03/EB8J1gLDoa5GXmz.png\" alt=\"量表\" style=\"zoom: 33%;\" />\n\n### 概念模型\n\n#### 1.对象模型(特征模型)\n\n+ 描述不连续的地理现象\n\n+ 适合于对具有明确边界的地理现象进行抽象建模\n\n  如建筑物 道路 公共设施 湖泊 河流 岛屿 森林等自然要素\n\n+ \n\n#### 2.场模型(域模型)\n\n+ 把地理空间中的现象作为连续的变量或体来看待\n\n##### 场模型的表示\n\n+ 规则分布的点\n+ 不规则分布的点\n+ 规则矩形区\n+ 不规则多边形区\n+ 不规则三角形区\n+ 等值线\n\n#### 3.网络模型\n\n+ 同对象模型描述不连续的地理现象\n+ 不同在于要考虑通过路径相互连接多个地理现象之间的连通情况\n+ 适合描述 公路 铁路 管道 物流量 等地理网络\n+ 网络模型可以看成对象模型的特例，由点 线之间的拓扑空间关系构成\n\n### 概念模型选择\n\n+ 场模型通常用于有连续空间变化趋势的现象\n\n  如：海拔 温度 土壤变化\n\n+ 对象模型一般用于有明确边界和独立地理现象的建模\n\n  如：道路 地块等\n\n## 2.空间数据模型\n\n#### 1.矢量数据模型\n\n+ 矢量数据就是代表地图图形的各离散点平面坐标的有序集合\n+ 适用于对象模型\n+ 可以明确描述图形要素建的拓扑关系\n+ 由 点 线 面 三要素由对应一系列坐标表示\n\n#### 2.栅格数据模型\n\n+ 适用于场模型\n+ 栅格可以用数据矩阵表示，地理空间坐标隐含在矩阵中\n  + 点由一个栅格单元或像元构成\n  + 线由一串彼此相邻的像元构成\n  + 面则由一系列相邻像元构成\n\n+ 栅格空间分辨率指一个像元在地面所代表的实际面积大小\n\n#### 3.镶嵌数据模型\n\n+ 采用规则或不规则的小面快集合来逼近自然界不规则的地理单元\n+ 适用于场模型\n+ 根据面块形状分为规则镶嵌数据模型和不规则镶嵌数据模型\n\n##### 1.规则镶嵌数据模型\n\n+ 用规则小面快集合逼近\n+ 可转化为栅格数据模型\n\n##### 2.不规则栅格数据模型\n\n+ 指用来镶嵌的小面快具有不规则的形状或边界\n+ 例：Voronoi图 TIN(不规则三角网)\n\n#### 4.面向对象数据模型\n\n+ 应用面向对象方法描述空间实体及其相互关系\n+ 适用于对象模型\n+ 技术核心是对象和类\n\n## 矢量数据模型\n\n### 实体数据结构\n\n+ 实体式：构成多边形边界的各个线段，以多边形为单位进行组织\n+ 优点：编码容易，数字化操作简单，数据编排直观\n+ 缺点：相邻多边形公共边界数字化两遍，造成数据冗余，边界易出现间隙和重叠\n+ 缺少邻域多边形信息和图形的拓扑关系\n+ 岛只作为一个单个图形，没有建立与外界多边形的联系\n  <img src=\"https://i.loli.net/2021/07/03/cyoiveJnNhQ8g6O.png\" alt=\"实体式数据结构\" style=\"zoom:50%;\" />\n\n### 拓扑数据结构\n\n+ 优点：1.保障数据质量 拓扑编辑功能进行自动差错\n  + 2.增强 GIS 分析 \t网络(街道 设施)\n\n#### 索引式\n\n+ 采用树状索引减少数据冗余并间接增加邻域信息\n+ 优点：消除边界冗余和不一致问题，简化边界线或合并多边形可不必改造索引表\n+ 缺点：邻域运算，消除无用边，处理岛状信息以及检查拓扑关系很困难\n  + 人工方式建立编码表，工作量大易出错\n    <img src=\"https://i.loli.net/2021/07/03/DyTVd6m7rx4gGOz.png\" alt=\"索引式\" style=\"zoom:50%;\" /><img src=\"https://i.loli.net/2021/07/03/67wbHIXKPR3y4J8.png\" style=\"zoom:50%;\" />\n\n#### 双重独立式\n\n+ 对图上网状或面状要素的任何一条线段，用顺序的两点定义以及相邻多边形来予以定义\n  <img src=\"https://i.loli.net/2021/07/03/YqpFBVLriu7jl2G.png\" style=\"zoom:50%;\" />\n\n#### 链状双重独立式\n\n+ 多边形文件\n+ 弧段文件\n+ 弧段点文件\n+ 点坐标文件\n\n <img src=\"https://i.loli.net/2021/07/03/Up3RDXQo4m7lEBI.png\"/>\n\n### 栅格数据结构\n\n#### 完全栅格数据结构\n\n+ 直接栅格编码：将栅格看做一个数据矩阵，逐行逐个记录代码数据\n+ 优点：简单 直观 无压缩\n+ 缺点：存在大量冗余，精度提高有限制\n\n#### 压缩栅格数据结构\n\n+ 游程长度编码：将每行中具有相同属性值的连续像元映射为一个游程，每个游程的数据结构为(A,P)，A表示属性值，P代表该游程最右端的列号或个数\n+ 属性变化越少，压缩比例越大，适合于类型区域面积较大的栅格\n+ 优点：栅格加密时，数据量不会明显增加，压缩效率高，最大限度保留原始栅格结构\n  + ==编码解码运算简单==，且易于检索 叠加 合并等操作，得到广泛应用\n+ 缺点：不适合于类型==连续变化==或类型==区域分散==的数据\n+ <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704075729.png\"/>\n+ 四叉树编码\n+ 优点：容易而有效地计算多边形的数量特征\n  + 阵列各部分的分辨率是可变的，边界复杂部分四叉树较高分级多，分辨率也高，而不需表示许多细节的部分则分级少，分辨率低，因而即可精确表示图形结构又可减少存储量\n  + 栅格到四叉树及四叉树到简单栅格结构的转换比其他压缩方法容易\n  + 多边形中嵌套异类小多边形的表示较方便\n+ 缺点：矢/删正反变换还不理想\n  + 建立四叉树耗费机时很多\n  + 四叉树虽可修改，但很费事\n  + 四叉树未能直接表示物体间的拓扑关系\n  + 与非树表示法比较，四叉树表示法的缺点在于转换的不稳定或叫滑动变异\n  + 一个物体的图像在构成四叉树时会被分割到若干个象限中，使他失去了内在的相关性\n+ 链式数据编码\n  <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704075904.png\" style=\"zoom:50%;\" />\n+ 优点：链式编码对多边形的表示具有很强的数据压缩能力\n  + 且具有一定的运算功能，如面积和周长计算等，探测边界急弯和凹凸部分等都比较容易，比较适于存储图形数据\n+ 缺点：对边界做合并和插入等修改编辑比较困难\n  + 类似矢量结构，不具有区域的性质，对叠置运算如组合 相交等则很难实施\n  + 而且由于链码以每个区域为单位存储边界，相邻区域的边界则被重复存储而产生冗余\n+ 分块压缩编码\n\n### 镶嵌数据结构\n\n+ 以三角形作为基本的空间对象进行数据组织\n+ 很好地描述三角形及其邻接关系，非常适合于需要面相邻关系操作和分析\n\n\n\n#### 比较\n\n<img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704083204.png\"/>\n\n<img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704083316.png\"/>\n\n","source":"_posts/地理信息科学.md","raw":"---\ntitle: 地理信息科学\ndate: 2021-07-05 19:11:46\ncategories: [GIS,地理信息科学] \ntags: 地理信息科学\ndescription: 地理信息科学\n---\n\n# 基本概念\n\n## 信息系统基本功能\n\n+ 数据采集\n+ 数据管理\n+ 数据分析\n+ 信息表达\n\n## GIS构成\n\n+ 软件\n\n+ 人员\n\n+ 数据\n\n+ 硬件\n\n## 数据基本特征\n\n+ 空间特征\n+ 属性特征\n+ 时间特征\n\n## GIS的硬件系统\n\n1. 计算机主机\n2. 存储设备\n   + 光盘刻录机\n   + 磁带机\n   + 活动硬盘\n   + 磁盘阵列\n\n3. 输入设备 \n   + 数字化仪\n   + 图像扫描仪\n   + 手写笔 光笔\n   + 键盘 鼠标\n   + 通讯端口\n\n4. 输出设备\n   + 笔式绘图仪\n   + 喷墨绘图仪（打印机）\n   + 激光打印机\n   + 显示器\n\n# 空间数学基础\n\n# 空间数据模型与数据结构\n\n## 1.地理空间与建模\n\n<img src=\"https://i.loli.net/2021/07/03/EB8J1gLDoa5GXmz.png\" alt=\"量表\" style=\"zoom: 33%;\" />\n\n### 概念模型\n\n#### 1.对象模型(特征模型)\n\n+ 描述不连续的地理现象\n\n+ 适合于对具有明确边界的地理现象进行抽象建模\n\n  如建筑物 道路 公共设施 湖泊 河流 岛屿 森林等自然要素\n\n+ \n\n#### 2.场模型(域模型)\n\n+ 把地理空间中的现象作为连续的变量或体来看待\n\n##### 场模型的表示\n\n+ 规则分布的点\n+ 不规则分布的点\n+ 规则矩形区\n+ 不规则多边形区\n+ 不规则三角形区\n+ 等值线\n\n#### 3.网络模型\n\n+ 同对象模型描述不连续的地理现象\n+ 不同在于要考虑通过路径相互连接多个地理现象之间的连通情况\n+ 适合描述 公路 铁路 管道 物流量 等地理网络\n+ 网络模型可以看成对象模型的特例，由点 线之间的拓扑空间关系构成\n\n### 概念模型选择\n\n+ 场模型通常用于有连续空间变化趋势的现象\n\n  如：海拔 温度 土壤变化\n\n+ 对象模型一般用于有明确边界和独立地理现象的建模\n\n  如：道路 地块等\n\n## 2.空间数据模型\n\n#### 1.矢量数据模型\n\n+ 矢量数据就是代表地图图形的各离散点平面坐标的有序集合\n+ 适用于对象模型\n+ 可以明确描述图形要素建的拓扑关系\n+ 由 点 线 面 三要素由对应一系列坐标表示\n\n#### 2.栅格数据模型\n\n+ 适用于场模型\n+ 栅格可以用数据矩阵表示，地理空间坐标隐含在矩阵中\n  + 点由一个栅格单元或像元构成\n  + 线由一串彼此相邻的像元构成\n  + 面则由一系列相邻像元构成\n\n+ 栅格空间分辨率指一个像元在地面所代表的实际面积大小\n\n#### 3.镶嵌数据模型\n\n+ 采用规则或不规则的小面快集合来逼近自然界不规则的地理单元\n+ 适用于场模型\n+ 根据面块形状分为规则镶嵌数据模型和不规则镶嵌数据模型\n\n##### 1.规则镶嵌数据模型\n\n+ 用规则小面快集合逼近\n+ 可转化为栅格数据模型\n\n##### 2.不规则栅格数据模型\n\n+ 指用来镶嵌的小面快具有不规则的形状或边界\n+ 例：Voronoi图 TIN(不规则三角网)\n\n#### 4.面向对象数据模型\n\n+ 应用面向对象方法描述空间实体及其相互关系\n+ 适用于对象模型\n+ 技术核心是对象和类\n\n## 矢量数据模型\n\n### 实体数据结构\n\n+ 实体式：构成多边形边界的各个线段，以多边形为单位进行组织\n+ 优点：编码容易，数字化操作简单，数据编排直观\n+ 缺点：相邻多边形公共边界数字化两遍，造成数据冗余，边界易出现间隙和重叠\n+ 缺少邻域多边形信息和图形的拓扑关系\n+ 岛只作为一个单个图形，没有建立与外界多边形的联系\n  <img src=\"https://i.loli.net/2021/07/03/cyoiveJnNhQ8g6O.png\" alt=\"实体式数据结构\" style=\"zoom:50%;\" />\n\n### 拓扑数据结构\n\n+ 优点：1.保障数据质量 拓扑编辑功能进行自动差错\n  + 2.增强 GIS 分析 \t网络(街道 设施)\n\n#### 索引式\n\n+ 采用树状索引减少数据冗余并间接增加邻域信息\n+ 优点：消除边界冗余和不一致问题，简化边界线或合并多边形可不必改造索引表\n+ 缺点：邻域运算，消除无用边，处理岛状信息以及检查拓扑关系很困难\n  + 人工方式建立编码表，工作量大易出错\n    <img src=\"https://i.loli.net/2021/07/03/DyTVd6m7rx4gGOz.png\" alt=\"索引式\" style=\"zoom:50%;\" /><img src=\"https://i.loli.net/2021/07/03/67wbHIXKPR3y4J8.png\" style=\"zoom:50%;\" />\n\n#### 双重独立式\n\n+ 对图上网状或面状要素的任何一条线段，用顺序的两点定义以及相邻多边形来予以定义\n  <img src=\"https://i.loli.net/2021/07/03/YqpFBVLriu7jl2G.png\" style=\"zoom:50%;\" />\n\n#### 链状双重独立式\n\n+ 多边形文件\n+ 弧段文件\n+ 弧段点文件\n+ 点坐标文件\n\n <img src=\"https://i.loli.net/2021/07/03/Up3RDXQo4m7lEBI.png\"/>\n\n### 栅格数据结构\n\n#### 完全栅格数据结构\n\n+ 直接栅格编码：将栅格看做一个数据矩阵，逐行逐个记录代码数据\n+ 优点：简单 直观 无压缩\n+ 缺点：存在大量冗余，精度提高有限制\n\n#### 压缩栅格数据结构\n\n+ 游程长度编码：将每行中具有相同属性值的连续像元映射为一个游程，每个游程的数据结构为(A,P)，A表示属性值，P代表该游程最右端的列号或个数\n+ 属性变化越少，压缩比例越大，适合于类型区域面积较大的栅格\n+ 优点：栅格加密时，数据量不会明显增加，压缩效率高，最大限度保留原始栅格结构\n  + ==编码解码运算简单==，且易于检索 叠加 合并等操作，得到广泛应用\n+ 缺点：不适合于类型==连续变化==或类型==区域分散==的数据\n+ <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704075729.png\"/>\n+ 四叉树编码\n+ 优点：容易而有效地计算多边形的数量特征\n  + 阵列各部分的分辨率是可变的，边界复杂部分四叉树较高分级多，分辨率也高，而不需表示许多细节的部分则分级少，分辨率低，因而即可精确表示图形结构又可减少存储量\n  + 栅格到四叉树及四叉树到简单栅格结构的转换比其他压缩方法容易\n  + 多边形中嵌套异类小多边形的表示较方便\n+ 缺点：矢/删正反变换还不理想\n  + 建立四叉树耗费机时很多\n  + 四叉树虽可修改，但很费事\n  + 四叉树未能直接表示物体间的拓扑关系\n  + 与非树表示法比较，四叉树表示法的缺点在于转换的不稳定或叫滑动变异\n  + 一个物体的图像在构成四叉树时会被分割到若干个象限中，使他失去了内在的相关性\n+ 链式数据编码\n  <img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704075904.png\" style=\"zoom:50%;\" />\n+ 优点：链式编码对多边形的表示具有很强的数据压缩能力\n  + 且具有一定的运算功能，如面积和周长计算等，探测边界急弯和凹凸部分等都比较容易，比较适于存储图形数据\n+ 缺点：对边界做合并和插入等修改编辑比较困难\n  + 类似矢量结构，不具有区域的性质，对叠置运算如组合 相交等则很难实施\n  + 而且由于链码以每个区域为单位存储边界，相邻区域的边界则被重复存储而产生冗余\n+ 分块压缩编码\n\n### 镶嵌数据结构\n\n+ 以三角形作为基本的空间对象进行数据组织\n+ 很好地描述三角形及其邻接关系，非常适合于需要面相邻关系操作和分析\n\n\n\n#### 比较\n\n<img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704083204.png\"/>\n\n<img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704083316.png\"/>\n\n","slug":"地理信息科学","published":1,"updated":"2021-11-10T11:16:14.588Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3u003cjsvkhkis237e","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h1><h2 id=\"信息系统基本功能\"><a href=\"#信息系统基本功能\" class=\"headerlink\" title=\"信息系统基本功能\"></a>信息系统基本功能</h2><ul>\n<li>数据采集</li>\n<li>数据管理</li>\n<li>数据分析</li>\n<li>信息表达</li>\n</ul>\n<h2 id=\"GIS构成\"><a href=\"#GIS构成\" class=\"headerlink\" title=\"GIS构成\"></a>GIS构成</h2><ul>\n<li><p>软件</p>\n</li>\n<li><p>人员</p>\n</li>\n<li><p>数据</p>\n</li>\n<li><p>硬件</p>\n</li>\n</ul>\n<h2 id=\"数据基本特征\"><a href=\"#数据基本特征\" class=\"headerlink\" title=\"数据基本特征\"></a>数据基本特征</h2><ul>\n<li>空间特征</li>\n<li>属性特征</li>\n<li>时间特征</li>\n</ul>\n<h2 id=\"GIS的硬件系统\"><a href=\"#GIS的硬件系统\" class=\"headerlink\" title=\"GIS的硬件系统\"></a>GIS的硬件系统</h2><ol>\n<li>计算机主机</li>\n<li><p>存储设备</p>\n<ul>\n<li>光盘刻录机</li>\n<li>磁带机</li>\n<li>活动硬盘</li>\n<li>磁盘阵列</li>\n</ul>\n</li>\n<li><p>输入设备 </p>\n<ul>\n<li>数字化仪</li>\n<li>图像扫描仪</li>\n<li>手写笔 光笔</li>\n<li>键盘 鼠标</li>\n<li>通讯端口</li>\n</ul>\n</li>\n<li><p>输出设备</p>\n<ul>\n<li>笔式绘图仪</li>\n<li>喷墨绘图仪（打印机）</li>\n<li>激光打印机</li>\n<li>显示器</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"空间数学基础\"><a href=\"#空间数学基础\" class=\"headerlink\" title=\"空间数学基础\"></a>空间数学基础</h1><h1 id=\"空间数据模型与数据结构\"><a href=\"#空间数据模型与数据结构\" class=\"headerlink\" title=\"空间数据模型与数据结构\"></a>空间数据模型与数据结构</h1><h2 id=\"1-地理空间与建模\"><a href=\"#1-地理空间与建模\" class=\"headerlink\" title=\"1.地理空间与建模\"></a>1.地理空间与建模</h2><p><img src=\"https://i.loli.net/2021/07/03/EB8J1gLDoa5GXmz.png\" alt=\"量表\" style=\"zoom: 33%;\" /></p>\n<h3 id=\"概念模型\"><a href=\"#概念模型\" class=\"headerlink\" title=\"概念模型\"></a>概念模型</h3><h4 id=\"1-对象模型-特征模型\"><a href=\"#1-对象模型-特征模型\" class=\"headerlink\" title=\"1.对象模型(特征模型)\"></a>1.对象模型(特征模型)</h4><ul>\n<li><p>描述不连续的地理现象</p>\n</li>\n<li><p>适合于对具有明确边界的地理现象进行抽象建模</p>\n<p>如建筑物 道路 公共设施 湖泊 河流 岛屿 森林等自然要素</p>\n</li>\n<li></li>\n</ul>\n<h4 id=\"2-场模型-域模型\"><a href=\"#2-场模型-域模型\" class=\"headerlink\" title=\"2.场模型(域模型)\"></a>2.场模型(域模型)</h4><ul>\n<li>把地理空间中的现象作为连续的变量或体来看待</li>\n</ul>\n<h5 id=\"场模型的表示\"><a href=\"#场模型的表示\" class=\"headerlink\" title=\"场模型的表示\"></a>场模型的表示</h5><ul>\n<li>规则分布的点</li>\n<li>不规则分布的点</li>\n<li>规则矩形区</li>\n<li>不规则多边形区</li>\n<li>不规则三角形区</li>\n<li>等值线</li>\n</ul>\n<h4 id=\"3-网络模型\"><a href=\"#3-网络模型\" class=\"headerlink\" title=\"3.网络模型\"></a>3.网络模型</h4><ul>\n<li>同对象模型描述不连续的地理现象</li>\n<li>不同在于要考虑通过路径相互连接多个地理现象之间的连通情况</li>\n<li>适合描述 公路 铁路 管道 物流量 等地理网络</li>\n<li>网络模型可以看成对象模型的特例，由点 线之间的拓扑空间关系构成</li>\n</ul>\n<h3 id=\"概念模型选择\"><a href=\"#概念模型选择\" class=\"headerlink\" title=\"概念模型选择\"></a>概念模型选择</h3><ul>\n<li><p>场模型通常用于有连续空间变化趋势的现象</p>\n<p>如：海拔 温度 土壤变化</p>\n</li>\n<li><p>对象模型一般用于有明确边界和独立地理现象的建模</p>\n<p>如：道路 地块等</p>\n</li>\n</ul>\n<h2 id=\"2-空间数据模型\"><a href=\"#2-空间数据模型\" class=\"headerlink\" title=\"2.空间数据模型\"></a>2.空间数据模型</h2><h4 id=\"1-矢量数据模型\"><a href=\"#1-矢量数据模型\" class=\"headerlink\" title=\"1.矢量数据模型\"></a>1.矢量数据模型</h4><ul>\n<li>矢量数据就是代表地图图形的各离散点平面坐标的有序集合</li>\n<li>适用于对象模型</li>\n<li>可以明确描述图形要素建的拓扑关系</li>\n<li>由 点 线 面 三要素由对应一系列坐标表示</li>\n</ul>\n<h4 id=\"2-栅格数据模型\"><a href=\"#2-栅格数据模型\" class=\"headerlink\" title=\"2.栅格数据模型\"></a>2.栅格数据模型</h4><ul>\n<li>适用于场模型</li>\n<li><p>栅格可以用数据矩阵表示，地理空间坐标隐含在矩阵中</p>\n<ul>\n<li>点由一个栅格单元或像元构成</li>\n<li>线由一串彼此相邻的像元构成</li>\n<li>面则由一系列相邻像元构成</li>\n</ul>\n</li>\n<li><p>栅格空间分辨率指一个像元在地面所代表的实际面积大小</p>\n</li>\n</ul>\n<h4 id=\"3-镶嵌数据模型\"><a href=\"#3-镶嵌数据模型\" class=\"headerlink\" title=\"3.镶嵌数据模型\"></a>3.镶嵌数据模型</h4><ul>\n<li>采用规则或不规则的小面快集合来逼近自然界不规则的地理单元</li>\n<li>适用于场模型</li>\n<li>根据面块形状分为规则镶嵌数据模型和不规则镶嵌数据模型</li>\n</ul>\n<h5 id=\"1-规则镶嵌数据模型\"><a href=\"#1-规则镶嵌数据模型\" class=\"headerlink\" title=\"1.规则镶嵌数据模型\"></a>1.规则镶嵌数据模型</h5><ul>\n<li>用规则小面快集合逼近</li>\n<li>可转化为栅格数据模型</li>\n</ul>\n<h5 id=\"2-不规则栅格数据模型\"><a href=\"#2-不规则栅格数据模型\" class=\"headerlink\" title=\"2.不规则栅格数据模型\"></a>2.不规则栅格数据模型</h5><ul>\n<li>指用来镶嵌的小面快具有不规则的形状或边界</li>\n<li>例：Voronoi图 TIN(不规则三角网)</li>\n</ul>\n<h4 id=\"4-面向对象数据模型\"><a href=\"#4-面向对象数据模型\" class=\"headerlink\" title=\"4.面向对象数据模型\"></a>4.面向对象数据模型</h4><ul>\n<li>应用面向对象方法描述空间实体及其相互关系</li>\n<li>适用于对象模型</li>\n<li>技术核心是对象和类</li>\n</ul>\n<h2 id=\"矢量数据模型\"><a href=\"#矢量数据模型\" class=\"headerlink\" title=\"矢量数据模型\"></a>矢量数据模型</h2><h3 id=\"实体数据结构\"><a href=\"#实体数据结构\" class=\"headerlink\" title=\"实体数据结构\"></a>实体数据结构</h3><ul>\n<li>实体式：构成多边形边界的各个线段，以多边形为单位进行组织</li>\n<li>优点：编码容易，数字化操作简单，数据编排直观</li>\n<li>缺点：相邻多边形公共边界数字化两遍，造成数据冗余，边界易出现间隙和重叠</li>\n<li>缺少邻域多边形信息和图形的拓扑关系</li>\n<li>岛只作为一个单个图形，没有建立与外界多边形的联系<br><img src=\"https://i.loli.net/2021/07/03/cyoiveJnNhQ8g6O.png\" alt=\"实体式数据结构\" style=\"zoom:50%;\" /></li>\n</ul>\n<h3 id=\"拓扑数据结构\"><a href=\"#拓扑数据结构\" class=\"headerlink\" title=\"拓扑数据结构\"></a>拓扑数据结构</h3><ul>\n<li>优点：1.保障数据质量 拓扑编辑功能进行自动差错<ul>\n<li>2.增强 GIS 分析     网络(街道 设施)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"索引式\"><a href=\"#索引式\" class=\"headerlink\" title=\"索引式\"></a>索引式</h4><ul>\n<li>采用树状索引减少数据冗余并间接增加邻域信息</li>\n<li>优点：消除边界冗余和不一致问题，简化边界线或合并多边形可不必改造索引表</li>\n<li>缺点：邻域运算，消除无用边，处理岛状信息以及检查拓扑关系很困难<ul>\n<li>人工方式建立编码表，工作量大易出错<br><img src=\"https://i.loli.net/2021/07/03/DyTVd6m7rx4gGOz.png\" alt=\"索引式\" style=\"zoom:50%;\" /><img src=\"https://i.loli.net/2021/07/03/67wbHIXKPR3y4J8.png\" style=\"zoom:50%;\" /></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"双重独立式\"><a href=\"#双重独立式\" class=\"headerlink\" title=\"双重独立式\"></a>双重独立式</h4><ul>\n<li>对图上网状或面状要素的任何一条线段，用顺序的两点定义以及相邻多边形来予以定义<br><img src=\"https://i.loli.net/2021/07/03/YqpFBVLriu7jl2G.png\" style=\"zoom:50%;\" /></li>\n</ul>\n<h4 id=\"链状双重独立式\"><a href=\"#链状双重独立式\" class=\"headerlink\" title=\"链状双重独立式\"></a>链状双重独立式</h4><ul>\n<li>多边形文件</li>\n<li>弧段文件</li>\n<li>弧段点文件</li>\n<li><p>点坐标文件</p>\n<p><img src=\"https://i.loli.net/2021/07/03/Up3RDXQo4m7lEBI.png\"/></p>\n</li>\n</ul>\n<h3 id=\"栅格数据结构\"><a href=\"#栅格数据结构\" class=\"headerlink\" title=\"栅格数据结构\"></a>栅格数据结构</h3><h4 id=\"完全栅格数据结构\"><a href=\"#完全栅格数据结构\" class=\"headerlink\" title=\"完全栅格数据结构\"></a>完全栅格数据结构</h4><ul>\n<li>直接栅格编码：将栅格看做一个数据矩阵，逐行逐个记录代码数据</li>\n<li>优点：简单 直观 无压缩</li>\n<li>缺点：存在大量冗余，精度提高有限制</li>\n</ul>\n<h4 id=\"压缩栅格数据结构\"><a href=\"#压缩栅格数据结构\" class=\"headerlink\" title=\"压缩栅格数据结构\"></a>压缩栅格数据结构</h4><ul>\n<li>游程长度编码：将每行中具有相同属性值的连续像元映射为一个游程，每个游程的数据结构为(A,P)，A表示属性值，P代表该游程最右端的列号或个数</li>\n<li>属性变化越少，压缩比例越大，适合于类型区域面积较大的栅格</li>\n<li>优点：栅格加密时，数据量不会明显增加，压缩效率高，最大限度保留原始栅格结构<ul>\n<li>==编码解码运算简单==，且易于检索 叠加 合并等操作，得到广泛应用</li>\n</ul>\n</li>\n<li>缺点：不适合于类型==连续变化==或类型==区域分散==的数据</li>\n<li><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704075729.png\"/></li>\n<li>四叉树编码</li>\n<li>优点：容易而有效地计算多边形的数量特征<ul>\n<li>阵列各部分的分辨率是可变的，边界复杂部分四叉树较高分级多，分辨率也高，而不需表示许多细节的部分则分级少，分辨率低，因而即可精确表示图形结构又可减少存储量</li>\n<li>栅格到四叉树及四叉树到简单栅格结构的转换比其他压缩方法容易</li>\n<li>多边形中嵌套异类小多边形的表示较方便</li>\n</ul>\n</li>\n<li>缺点：矢/删正反变换还不理想<ul>\n<li>建立四叉树耗费机时很多</li>\n<li>四叉树虽可修改，但很费事</li>\n<li>四叉树未能直接表示物体间的拓扑关系</li>\n<li>与非树表示法比较，四叉树表示法的缺点在于转换的不稳定或叫滑动变异</li>\n<li>一个物体的图像在构成四叉树时会被分割到若干个象限中，使他失去了内在的相关性</li>\n</ul>\n</li>\n<li>链式数据编码<br><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704075904.png\" style=\"zoom:50%;\" /></li>\n<li>优点：链式编码对多边形的表示具有很强的数据压缩能力<ul>\n<li>且具有一定的运算功能，如面积和周长计算等，探测边界急弯和凹凸部分等都比较容易，比较适于存储图形数据</li>\n</ul>\n</li>\n<li>缺点：对边界做合并和插入等修改编辑比较困难<ul>\n<li>类似矢量结构，不具有区域的性质，对叠置运算如组合 相交等则很难实施</li>\n<li>而且由于链码以每个区域为单位存储边界，相邻区域的边界则被重复存储而产生冗余</li>\n</ul>\n</li>\n<li>分块压缩编码</li>\n</ul>\n<h3 id=\"镶嵌数据结构\"><a href=\"#镶嵌数据结构\" class=\"headerlink\" title=\"镶嵌数据结构\"></a>镶嵌数据结构</h3><ul>\n<li>以三角形作为基本的空间对象进行数据组织</li>\n<li>很好地描述三角形及其邻接关系，非常适合于需要面相邻关系操作和分析</li>\n</ul>\n<h4 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h4><p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704083204.png\"/></p>\n<p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704083316.png\"/></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160701.webp","length":1994,"excerpt":"","more":"<h1 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h1><h2 id=\"信息系统基本功能\"><a href=\"#信息系统基本功能\" class=\"headerlink\" title=\"信息系统基本功能\"></a>信息系统基本功能</h2><ul>\n<li>数据采集</li>\n<li>数据管理</li>\n<li>数据分析</li>\n<li>信息表达</li>\n</ul>\n<h2 id=\"GIS构成\"><a href=\"#GIS构成\" class=\"headerlink\" title=\"GIS构成\"></a>GIS构成</h2><ul>\n<li><p>软件</p>\n</li>\n<li><p>人员</p>\n</li>\n<li><p>数据</p>\n</li>\n<li><p>硬件</p>\n</li>\n</ul>\n<h2 id=\"数据基本特征\"><a href=\"#数据基本特征\" class=\"headerlink\" title=\"数据基本特征\"></a>数据基本特征</h2><ul>\n<li>空间特征</li>\n<li>属性特征</li>\n<li>时间特征</li>\n</ul>\n<h2 id=\"GIS的硬件系统\"><a href=\"#GIS的硬件系统\" class=\"headerlink\" title=\"GIS的硬件系统\"></a>GIS的硬件系统</h2><ol>\n<li>计算机主机</li>\n<li><p>存储设备</p>\n<ul>\n<li>光盘刻录机</li>\n<li>磁带机</li>\n<li>活动硬盘</li>\n<li>磁盘阵列</li>\n</ul>\n</li>\n<li><p>输入设备 </p>\n<ul>\n<li>数字化仪</li>\n<li>图像扫描仪</li>\n<li>手写笔 光笔</li>\n<li>键盘 鼠标</li>\n<li>通讯端口</li>\n</ul>\n</li>\n<li><p>输出设备</p>\n<ul>\n<li>笔式绘图仪</li>\n<li>喷墨绘图仪（打印机）</li>\n<li>激光打印机</li>\n<li>显示器</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"空间数学基础\"><a href=\"#空间数学基础\" class=\"headerlink\" title=\"空间数学基础\"></a>空间数学基础</h1><h1 id=\"空间数据模型与数据结构\"><a href=\"#空间数据模型与数据结构\" class=\"headerlink\" title=\"空间数据模型与数据结构\"></a>空间数据模型与数据结构</h1><h2 id=\"1-地理空间与建模\"><a href=\"#1-地理空间与建模\" class=\"headerlink\" title=\"1.地理空间与建模\"></a>1.地理空间与建模</h2><p><img src=\"https://i.loli.net/2021/07/03/EB8J1gLDoa5GXmz.png\" alt=\"量表\" style=\"zoom: 33%;\" /></p>\n<h3 id=\"概念模型\"><a href=\"#概念模型\" class=\"headerlink\" title=\"概念模型\"></a>概念模型</h3><h4 id=\"1-对象模型-特征模型\"><a href=\"#1-对象模型-特征模型\" class=\"headerlink\" title=\"1.对象模型(特征模型)\"></a>1.对象模型(特征模型)</h4><ul>\n<li><p>描述不连续的地理现象</p>\n</li>\n<li><p>适合于对具有明确边界的地理现象进行抽象建模</p>\n<p>如建筑物 道路 公共设施 湖泊 河流 岛屿 森林等自然要素</p>\n</li>\n<li></li>\n</ul>\n<h4 id=\"2-场模型-域模型\"><a href=\"#2-场模型-域模型\" class=\"headerlink\" title=\"2.场模型(域模型)\"></a>2.场模型(域模型)</h4><ul>\n<li>把地理空间中的现象作为连续的变量或体来看待</li>\n</ul>\n<h5 id=\"场模型的表示\"><a href=\"#场模型的表示\" class=\"headerlink\" title=\"场模型的表示\"></a>场模型的表示</h5><ul>\n<li>规则分布的点</li>\n<li>不规则分布的点</li>\n<li>规则矩形区</li>\n<li>不规则多边形区</li>\n<li>不规则三角形区</li>\n<li>等值线</li>\n</ul>\n<h4 id=\"3-网络模型\"><a href=\"#3-网络模型\" class=\"headerlink\" title=\"3.网络模型\"></a>3.网络模型</h4><ul>\n<li>同对象模型描述不连续的地理现象</li>\n<li>不同在于要考虑通过路径相互连接多个地理现象之间的连通情况</li>\n<li>适合描述 公路 铁路 管道 物流量 等地理网络</li>\n<li>网络模型可以看成对象模型的特例，由点 线之间的拓扑空间关系构成</li>\n</ul>\n<h3 id=\"概念模型选择\"><a href=\"#概念模型选择\" class=\"headerlink\" title=\"概念模型选择\"></a>概念模型选择</h3><ul>\n<li><p>场模型通常用于有连续空间变化趋势的现象</p>\n<p>如：海拔 温度 土壤变化</p>\n</li>\n<li><p>对象模型一般用于有明确边界和独立地理现象的建模</p>\n<p>如：道路 地块等</p>\n</li>\n</ul>\n<h2 id=\"2-空间数据模型\"><a href=\"#2-空间数据模型\" class=\"headerlink\" title=\"2.空间数据模型\"></a>2.空间数据模型</h2><h4 id=\"1-矢量数据模型\"><a href=\"#1-矢量数据模型\" class=\"headerlink\" title=\"1.矢量数据模型\"></a>1.矢量数据模型</h4><ul>\n<li>矢量数据就是代表地图图形的各离散点平面坐标的有序集合</li>\n<li>适用于对象模型</li>\n<li>可以明确描述图形要素建的拓扑关系</li>\n<li>由 点 线 面 三要素由对应一系列坐标表示</li>\n</ul>\n<h4 id=\"2-栅格数据模型\"><a href=\"#2-栅格数据模型\" class=\"headerlink\" title=\"2.栅格数据模型\"></a>2.栅格数据模型</h4><ul>\n<li>适用于场模型</li>\n<li><p>栅格可以用数据矩阵表示，地理空间坐标隐含在矩阵中</p>\n<ul>\n<li>点由一个栅格单元或像元构成</li>\n<li>线由一串彼此相邻的像元构成</li>\n<li>面则由一系列相邻像元构成</li>\n</ul>\n</li>\n<li><p>栅格空间分辨率指一个像元在地面所代表的实际面积大小</p>\n</li>\n</ul>\n<h4 id=\"3-镶嵌数据模型\"><a href=\"#3-镶嵌数据模型\" class=\"headerlink\" title=\"3.镶嵌数据模型\"></a>3.镶嵌数据模型</h4><ul>\n<li>采用规则或不规则的小面快集合来逼近自然界不规则的地理单元</li>\n<li>适用于场模型</li>\n<li>根据面块形状分为规则镶嵌数据模型和不规则镶嵌数据模型</li>\n</ul>\n<h5 id=\"1-规则镶嵌数据模型\"><a href=\"#1-规则镶嵌数据模型\" class=\"headerlink\" title=\"1.规则镶嵌数据模型\"></a>1.规则镶嵌数据模型</h5><ul>\n<li>用规则小面快集合逼近</li>\n<li>可转化为栅格数据模型</li>\n</ul>\n<h5 id=\"2-不规则栅格数据模型\"><a href=\"#2-不规则栅格数据模型\" class=\"headerlink\" title=\"2.不规则栅格数据模型\"></a>2.不规则栅格数据模型</h5><ul>\n<li>指用来镶嵌的小面快具有不规则的形状或边界</li>\n<li>例：Voronoi图 TIN(不规则三角网)</li>\n</ul>\n<h4 id=\"4-面向对象数据模型\"><a href=\"#4-面向对象数据模型\" class=\"headerlink\" title=\"4.面向对象数据模型\"></a>4.面向对象数据模型</h4><ul>\n<li>应用面向对象方法描述空间实体及其相互关系</li>\n<li>适用于对象模型</li>\n<li>技术核心是对象和类</li>\n</ul>\n<h2 id=\"矢量数据模型\"><a href=\"#矢量数据模型\" class=\"headerlink\" title=\"矢量数据模型\"></a>矢量数据模型</h2><h3 id=\"实体数据结构\"><a href=\"#实体数据结构\" class=\"headerlink\" title=\"实体数据结构\"></a>实体数据结构</h3><ul>\n<li>实体式：构成多边形边界的各个线段，以多边形为单位进行组织</li>\n<li>优点：编码容易，数字化操作简单，数据编排直观</li>\n<li>缺点：相邻多边形公共边界数字化两遍，造成数据冗余，边界易出现间隙和重叠</li>\n<li>缺少邻域多边形信息和图形的拓扑关系</li>\n<li>岛只作为一个单个图形，没有建立与外界多边形的联系<br><img src=\"https://i.loli.net/2021/07/03/cyoiveJnNhQ8g6O.png\" alt=\"实体式数据结构\" style=\"zoom:50%;\" /></li>\n</ul>\n<h3 id=\"拓扑数据结构\"><a href=\"#拓扑数据结构\" class=\"headerlink\" title=\"拓扑数据结构\"></a>拓扑数据结构</h3><ul>\n<li>优点：1.保障数据质量 拓扑编辑功能进行自动差错<ul>\n<li>2.增强 GIS 分析     网络(街道 设施)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"索引式\"><a href=\"#索引式\" class=\"headerlink\" title=\"索引式\"></a>索引式</h4><ul>\n<li>采用树状索引减少数据冗余并间接增加邻域信息</li>\n<li>优点：消除边界冗余和不一致问题，简化边界线或合并多边形可不必改造索引表</li>\n<li>缺点：邻域运算，消除无用边，处理岛状信息以及检查拓扑关系很困难<ul>\n<li>人工方式建立编码表，工作量大易出错<br><img src=\"https://i.loli.net/2021/07/03/DyTVd6m7rx4gGOz.png\" alt=\"索引式\" style=\"zoom:50%;\" /><img src=\"https://i.loli.net/2021/07/03/67wbHIXKPR3y4J8.png\" style=\"zoom:50%;\" /></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"双重独立式\"><a href=\"#双重独立式\" class=\"headerlink\" title=\"双重独立式\"></a>双重独立式</h4><ul>\n<li>对图上网状或面状要素的任何一条线段，用顺序的两点定义以及相邻多边形来予以定义<br><img src=\"https://i.loli.net/2021/07/03/YqpFBVLriu7jl2G.png\" style=\"zoom:50%;\" /></li>\n</ul>\n<h4 id=\"链状双重独立式\"><a href=\"#链状双重独立式\" class=\"headerlink\" title=\"链状双重独立式\"></a>链状双重独立式</h4><ul>\n<li>多边形文件</li>\n<li>弧段文件</li>\n<li>弧段点文件</li>\n<li><p>点坐标文件</p>\n<p><img src=\"https://i.loli.net/2021/07/03/Up3RDXQo4m7lEBI.png\"/></p>\n</li>\n</ul>\n<h3 id=\"栅格数据结构\"><a href=\"#栅格数据结构\" class=\"headerlink\" title=\"栅格数据结构\"></a>栅格数据结构</h3><h4 id=\"完全栅格数据结构\"><a href=\"#完全栅格数据结构\" class=\"headerlink\" title=\"完全栅格数据结构\"></a>完全栅格数据结构</h4><ul>\n<li>直接栅格编码：将栅格看做一个数据矩阵，逐行逐个记录代码数据</li>\n<li>优点：简单 直观 无压缩</li>\n<li>缺点：存在大量冗余，精度提高有限制</li>\n</ul>\n<h4 id=\"压缩栅格数据结构\"><a href=\"#压缩栅格数据结构\" class=\"headerlink\" title=\"压缩栅格数据结构\"></a>压缩栅格数据结构</h4><ul>\n<li>游程长度编码：将每行中具有相同属性值的连续像元映射为一个游程，每个游程的数据结构为(A,P)，A表示属性值，P代表该游程最右端的列号或个数</li>\n<li>属性变化越少，压缩比例越大，适合于类型区域面积较大的栅格</li>\n<li>优点：栅格加密时，数据量不会明显增加，压缩效率高，最大限度保留原始栅格结构<ul>\n<li>==编码解码运算简单==，且易于检索 叠加 合并等操作，得到广泛应用</li>\n</ul>\n</li>\n<li>缺点：不适合于类型==连续变化==或类型==区域分散==的数据</li>\n<li><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704075729.png\"/></li>\n<li>四叉树编码</li>\n<li>优点：容易而有效地计算多边形的数量特征<ul>\n<li>阵列各部分的分辨率是可变的，边界复杂部分四叉树较高分级多，分辨率也高，而不需表示许多细节的部分则分级少，分辨率低，因而即可精确表示图形结构又可减少存储量</li>\n<li>栅格到四叉树及四叉树到简单栅格结构的转换比其他压缩方法容易</li>\n<li>多边形中嵌套异类小多边形的表示较方便</li>\n</ul>\n</li>\n<li>缺点：矢/删正反变换还不理想<ul>\n<li>建立四叉树耗费机时很多</li>\n<li>四叉树虽可修改，但很费事</li>\n<li>四叉树未能直接表示物体间的拓扑关系</li>\n<li>与非树表示法比较，四叉树表示法的缺点在于转换的不稳定或叫滑动变异</li>\n<li>一个物体的图像在构成四叉树时会被分割到若干个象限中，使他失去了内在的相关性</li>\n</ul>\n</li>\n<li>链式数据编码<br><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704075904.png\" style=\"zoom:50%;\" /></li>\n<li>优点：链式编码对多边形的表示具有很强的数据压缩能力<ul>\n<li>且具有一定的运算功能，如面积和周长计算等，探测边界急弯和凹凸部分等都比较容易，比较适于存储图形数据</li>\n</ul>\n</li>\n<li>缺点：对边界做合并和插入等修改编辑比较困难<ul>\n<li>类似矢量结构，不具有区域的性质，对叠置运算如组合 相交等则很难实施</li>\n<li>而且由于链码以每个区域为单位存储边界，相邻区域的边界则被重复存储而产生冗余</li>\n</ul>\n</li>\n<li>分块压缩编码</li>\n</ul>\n<h3 id=\"镶嵌数据结构\"><a href=\"#镶嵌数据结构\" class=\"headerlink\" title=\"镶嵌数据结构\"></a>镶嵌数据结构</h3><ul>\n<li>以三角形作为基本的空间对象进行数据组织</li>\n<li>很好地描述三角形及其邻接关系，非常适合于需要面相邻关系操作和分析</li>\n</ul>\n<h4 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h4><p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704083204.png\"/></p>\n<p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/20210704083316.png\"/></p>\n"},{"title":"前端知识点","mathjax":true,"date":"2022-06-03T13:51:40.000Z","top":-3,"description":"前端知识点","_content":"\n[TOC]\n\n## JS\n\n### typeof\n\n`typeof`操作符返回一个字符串，表示未经计算的操作数的类型\n\n| 类型                                                         | 结果                                                         |\n| :----------------------------------------------------------- | :----------------------------------------------------------- |\n| [Undefined](https://developer.mozilla.org/zh-CN/docs/Glossary/undefined) | `\"undefined\"`                                                |\n| [Null](https://developer.mozilla.org/zh-CN/docs/Glossary/Null) | `\"object\"` (见[下文](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof#typeof_null)) |\n| [Boolean](https://developer.mozilla.org/zh-CN/docs/Glossary/Boolean) | `\"boolean\"`                                                  |\n| [Number](https://developer.mozilla.org/zh-CN/docs/Glossary/Number) | `\"number\"`                                                   |\n| [BigInt](https://developer.mozilla.org/zh-CN/docs/Glossary/BigInt)(ECMAScript 2020 新增) | `\"bigint\"`                                                   |\n| [String](https://developer.mozilla.org/zh-CN/docs/Glossary/String) | `\"string\"`                                                   |\n| [Symbol](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol) (ECMAScript 2015 新增) | `\"symbol\"`                                                   |\n| 宿主对象（由 JS 环境提供）                                   | *取决于具体实现*                                             |\n| [Function](https://developer.mozilla.org/zh-CN/docs/Glossary/Function) 对象 (按照 ECMA-262 规范实现 [[Call]]) | `\"function\"`                                                 |\n| 其他任何对象                                                 | `\"object\"`                                                   |\n\n特别地：\n\n```js\ntypeof null; // \"object\"\ntypeof NaN; // \"number\"\n```\n\nNaN 是一个特殊值，它和自身不相等，是唯一一个非自反（自反，reflexive，即 x === x 不成立）的值。而 NaN !== NaN 为 true\n\n### instanceof\n\n`instanceof`可以正确判断对象的类型，**其内部运行机制是判断在其原型链中能否找到该类型的原型**\n\n```js\nconsole.log(2 instanceof Number);                    // false\nconsole.log(true instanceof Boolean);                // false \nconsole.log('str' instanceof String);                // false \n \nconsole.log([] instanceof Array);                    // true\nconsole.log(function(){} instanceof Function);       // true\nconsole.log({} instanceof Object);                   // true\n```\n\n`instanceof`**只能正确判断引用数据类型**，而不能判断基本数据类型。`instanceof` 运算符可以用来测试一个对象在其原型链中是否存在一个构造函数的 `prototype` 属性\n\n### 构造器与new操作符\n\n#### 构造函数\n\n构造函数在本质上是常规函数，不过有两个约定：\n\n+ 命名以大写字母开头\n+ 只能由`new`操作符执行\n\n```js\nfunction User(name) {\n  this.name = name;\n  this.isAdmin = false;\n}\n\nlet user = new User(\"Jack\");\n\nalert(user.name); // Jack\nalert(user.isAdmin); // false\n```\n\n当一个函数被使用`new`操作符执行时，它按照以下步骤：\n\n+ 创建一个新的空对象并分配给`this`\n+ 函数执行时，通常会修改`this`，为其添加新的属性\n+ 隐式`return`返回`this`的值\n\n换句话说，`new User(...)` 做的就是类似的事情：\n\n```js\nfunction User(name) {\n  // this = {};（隐式创建）\n\n  // 添加属性到 this\n  this.name = name;\n  this.isAdmin = false;\n\n  // return this;（隐式返回）\n}\n```\n\n所以 `new User(\"Jack\")` 的结果是相同的对象：\n\n```js\nlet user = {\n  name: \"Jack\",\n  isAdmin: false\n};\n```\n\n#### 构造器的return\n\n通常，构造器没有 `return` 语句。它们的任务是将所有必要的东西写入 `this`，并自动转换为结果。\n\n但是，如果这有一个 `return` 语句，那么规则就简单了：\n\n+ 如果 `return` 返回的是一个对象，则返回这个对象，而不是 `this`。\n+ 如果 `return` 返回的是一个原始类型，则忽略。\n\n换句话说，带有对象的 `return` 返回该对象，在所有其他情况下返回 `this`\n\n### class语法\n\n基础语法\n\n```js\nclass User {\n\n  constructor(name) {\n    this.name = name;\n  }\n\n  sayHi() {\n    alert(this.name);\n  }\n\n}\n\n// 用法：\nlet user = new User(\"John\");\nuser.sayHi();\n```\n\n`class`的本质仍然是函数，`class User{...}`构造实际上做了如下的事\n\n+ 创建一个名为`User`的函数，该函数成为类声明的结果。该函数的代码来自于 `constructor` 方法（如果我们不编写这种方法，那么它就被假定为空）\n+ 存储类中的方法，例如 `User.prototype` 中的 `sayHi`\n\n![class](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220824100400.png)\n\n```js\nalert(User === User.prototype.constructor); // true\n// 在原型中实际上有两个方法\nalert(Object.getOwnPropertyNames(User.prototype)); // constructor, sayHi\n```\n\n`class`声明的函数与下面代码效果相同\n\n```js\n// 1. 创建构造器函数\nfunction User(name) {\n  this.name = name;\n}\n// 函数的原型（prototype）默认具有 \"constructor\" 属性，\n// 所以，我们不需要创建它\n\n// 2. 将方法添加到原型\nUser.prototype.sayHi = function() {\n  alert(this.name);\n};\n\n// 用法：\nlet user = new User(\"John\");\nuser.sayHi();\n```\n\n### 原型与原型链\n\n所有的实例对象都有一个`__proto__`属性，属性值是一个对象，指向对象的原型\n\n所有函数都一个`prototype`属性，属性值为一个对象,指向函数的原型对象\n\n所有实例对象的`__proto__`属性都指向其构造函数的`prototype`\n\n![原型图](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828170829.png)\n\n重要公式：\n\n```js\nObject.__proto__ === Function.prototype;\nFunction.prototype.__proto__ === Object.prototype;\nObject.prototype.__proto__ === null;\n```\n\n\n\n```js\nfunction Proto() {\n  function Basic() {\n    this.type = \"basic\";\n    this.desription = \"基类\";\n  }\n   // 修改 Basic 的原型\n  Basic.prototype.getName = function () {\n    return this.desription;\n  };\n  function Father() {\n    this.type = \"father\";\n    this.desription = \"父类\";\n  }\n  function Son() {\n    this.type = \"son\";\n    this.desription = \"子类\";\n  }\n\n  Father.prototype = new Basic();\n  Son.prototype = new Father();\n\n  let son = new Son();\n   // instanceof 本质是从原型链上找\n  console.log(`%c ${son instanceof Basic}`, \"background: #222; color: #bada55\");\n  console.log(\"----son.constructor----\", son.constructor);\n  // 实例对象的原型,即Father\n  console.info(\"----son.__proto__----\", son.__proto__);\n  // 方法的原型,即Father\n  console.log(\"----Son.prototype----\", Son.prototype);\n  console.log(son.__proto__===Son.prototype) // true\n  console.log(\"----son----\", son);\n  console.log(\"----son.getName()----\", son.getName());\n}\nProto()\n```\n\n![原型与原型链](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220814211054.png)\n\n### 深拷贝和浅拷贝\n\n浅拷贝：拷贝时只拷贝最外面一层数据的值，遇到深层次对象则拷贝其地址，改变源对象中的引用对象同时会改变目标对象的值，同样改变目标对象中的引用对象也会改变源对象的值\n\nobject.assigin() 为浅拷贝，只会把`可枚举`和自有（`Object.hasOwnProperty()`）属性从一个或多个源对象拷贝至目标对象\n\n```js\nObject.assign(target, ...sources)\n```\n\n```js\nfunction shallowCopy() {\n  let obj1 = { a: 0, b: { c: 0 } };\n  let obj2 = Object.assign({}, obj1);\n  obj1.b.c = 2;\n  // 浅拷贝：object.assigin()在拷贝时只拷贝其值，源对象为对象的引用时，拷贝其引用\n  // 引用值发生改变目标对象值也会改变\n  console.log(obj2); // { a: 0 , b: { c: 2}}\n  obj2.b.c = 3;\n  console.log(obj1); // { a: 0 , b: { c: 3}}\n\n  let a = 2;\n  let b = \"id\";\n  let c = true;\n  let copy = Object.assign({}, a, b, c); // 基本类型会被包装成对象\n  console.log(copy); // { '0': 'i', '1': 'd' }\n}\n\n// shallowCopy();\n```\n\n实现浅拷贝\n\n```js\nfunction shallowCopy(obj) {\n  if (!obj || typeof obj !== 'object') return\n  let newObj = obj instanceof Array ? [] : {}\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      newObj[key] = obj[key]\n    }\n  }\n  return newObj\n}\n```\n\n\n\n深拷贝: 深拷贝会把对象里**所有的数据**重新复制到新的内存空间，是最彻底的拷贝\n\n```js\n// 深拷贝\nfunction deepCopy() {\n  let obj1 = { a: 0, b: { c: 0 } };\n  let obj2 = JSON.parse(JSON.stringify(obj1));\n  obj1.a = 4;\n  obj1.b.c = 4;\n  console.log(JSON.stringify(obj2)); // { \"a\": 0, \"b\": { \"c\": 0}}\n}\n```\n\n实现深拷贝\n\n```js\nfunction deepCopy(obj) {\n  if (!obj || typeof obj !== 'object') return\n  let newObj = obj instanceof Array ? [] : {}\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      newObj[key] = typeof obj[key] === 'object' ? deepCopy(obj[key]) : obj[key]\n    }\n  }\n  return newobj\n}\n```\n\n\n\n### 对象遍历\n\nforin: 会遍历对象原型链上的属性 可以遍历数组但数组遍历建议用for of\n\nhasOwnProperty: 判断对象自身是否包含某个属性，不包含原型链上的属性，有则返回true，无则返回false\n\nObject.entries() 返回对象中可枚举属性的 键值对数组,与for in 不同的是不会遍历原型链上的属性\n\nObject.keys() 对应的返回的是 对象的键的数组，但只会获取第一层的key\n\nObject.values() 对应的返回的是 对象的值的数组，遇到引用对象则拷贝整个对象的值\n\n```js\n// 对象遍历\nfunction ObjectLoop() {\n  let triangle = { a: 1, b: 2, c: 3 };\n  let obj1 = { a: 1, b: { c: 2, d: { e: 3 } } };\n  function ColoredTriangle() {\n    this.color = \"red\";\n  }\n  ColoredTriangle.prototype = triangle;\n  let obj = new ColoredTriangle();\n\n  // for in 会遍历对象原型链上的属性 可以遍历数组但数组遍历建议用for of\n  function forinLoop(obj) {\n    console.log(\"------------forinLoop------------\");\n    for (var prop in obj) {\n      console.log(`obj.${prop} = ${obj[prop]}`); // obj.color = red obj.a = 1 obj.b = 2 obj.c = 3\n    }\n\n    // hasOwnProperty 用法  对象自身是否包含某个属性，不包含原型链上的属性\n    console.log(\"------------hasOwnProperty------------\");\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        console.log(`obj.${prop} = ${obj[prop]}`); // obj.color = red\n      }\n    }\n  }\n\n  /* Object.entries() 返回对象中可枚举属性的 键值对数组,与for in 不同的是不会遍历原型链上的属性\n   * Object.keys() 对应的返回的是 对象的键的数组 获取第一层的key\n   * Object.values() 对应的返回的是 对象的值的数组\n   */\n  function entriesLoop(obj) {\n    for (const [key, value] of Object.entries(obj)) {\n      console.log(\"------------entriesLoop------------\");\n      console.log(`${key}: ${value}`);\n    }\n  }\n\n  forinLoop(obj);\n  entriesLoop(obj);\n\n  console.log(Object.keys(obj1)); // [ 'a', 'b' ]\n  console.log(Object.values(obj1)); // [ 1, { c: 2, d: { e: 3 } } ]\n}\n```\n\n### Object.defineProperty和Proxy\n\n#### <span id=\"defineProperty\">Object.defineProperty</span>\n\n[MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty)\n\nObject.defineProperty() 方法会直接在一个对象上定义一个新属性，或修改对象的属性，并返回修改后的对象\n\n```js\nObject.defineProperty(obj, prop, descriptor)\n```\n\n`obj` 要修改属性的对象\n\n`prop` 要定义或修改的属性的名称\n\n`descripto` 属性描述符\n\n常见属性描述符: `value`、`configurable`、`get`、`set`、`enumerable`\n\n缺陷：\n\n+ 无法监控新增的属性，由于该方法监听的是对象的属性，所以在原始对象上新增属性就无法劫持到\n+ 对于数组的监听，在对数组进行`sort`、`shift`、`reverse`等改变数组索引操作时会触发多次`get`和`set`方法\n\n+ 只能劫持对象的属性，从而需要对每个对象，每个属性进行遍历，如果，属性值是对象，还需要深度遍历\n\n```js\nlet arrShallow = [1, 2, 3, 4, 5, 6];\nlet arrDeep = [[1, 2, 3], 4, [5, 6]];\n\n// Object.defineProperty  数组 劫持的是对象的属性，如果劫持的对象的属性的属性值为对象，则需深度遍历\nfunction ArrayHijack() {\n  function arrayProperty(arr) {\n    for (let key in arr) {\n      let value = arr[key];\n      Object.defineProperty(arr, key, {\n        get() {\n          console.log(`get: arr[${key}]`);\n          return value;\n        },\n        set(newValue) {\n          console.log(`set: arr[${key}] to ${newValue}`);\n          return (value = newValue);\n        },\n      });\n    }\n  }\n  arrayProperty(arrShallow);\n\n  arrShallow[0] = 999; // 打印：set: arr[0] to 999\n  arrShallow[3]; // 打印：get: arr[3]\n  arrShallow[8] = 8;\n  // arr.shift(); // 会导致5次前移，所以产生5次get和5次set\n  console.log(arrShallow[0]);\n\n  arrayProperty(arrDeep);\n  arrDeep[0][1] = 6;\n  // 无法深度监听到数组的变化\n  console.log(\"arrDeep[0]:\" + arrDeep[0]); // get: arr[0] arrDeep[0]:1,6,3\n}\n\n// ArrayHijack();\n\n// Object.defineProperty 监听的是对象的单个属性\nfunction ObjectHijack() {\n  let obj = {};\n\n  Object.defineProperty(obj, \"name\", {\n    get() {\n      return value;\n    },\n    set(newValue) {\n      return (value = newValue);\n    },\n  });\n\n  console.log((obj.name = 6)); // 6\n  console.log(obj.name); // 6\n}\n```\n\n#### <span id=\"proxy\">Proxy</span>\n\n[MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy#handler_%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95)\n\nProxy() 用于创建一个对象的代理，从而实现基本操作的拦截和自定义（如属性查找、赋值、枚举、函数调用等）\n\n```js\nconst p = new Proxy(target, handler)\n```\n\n`target`: 要进行代理的目标对象(可以是任何类型的对象，包括原生数组，函数，甚至另一个代理)\n\n`handler`： 代理行为\n\n常见handler：`apply`、`get`、`set`、`has`\n\nhandler.get(target,property,receiver)\n\ntarget: 目标对象\n\nproperty: 被获取的属性名\n\n优势：proxy 是对整个对象进行劫持，并返回一个新对象\n\n劣势：版本兼容性\n\n```js\n// 浅劫持\nfunction shallowProxy() {\n  let obj = {\n    count: 5,\n    user: { name: \"JavaScript\", age: 22 },\n  };\n\n  let proxyObj = new Proxy(obj, {\n    get(target, key) {\n      console.log(`get：${key}`);\n      return target[key];\n    },\n    set(target, key, value) {\n      console.log(`set：${key} to ${value}`);\n      return (target[key] = value);\n    },\n  });\n\n  proxyObj.user.name = \"Golang\";\n  /**浅劫持对象，如果读取到的属性为对象,需要深度劫持获取值\n   * get: user\n   * 相当于 proxyObj.user\n   */\n}\n\n// 深度劫持\nfunction deepProxyObject() {\n  let obj = {\n    count: 5,\n    user: { name: \"JavaScript\", age: 22 },\n  };\n  function deepProxy(obj) {\n    return new Proxy(obj, {\n      get(target, key) {\n        console.log(`get：${key}`);\n        console.log(target[key]);\n        if (typeof target[key] === \"object\" && target[key] !== null) {\n          return deepProxy(target[key]); // 递归劫持\n        }\n        return target[key];\n      },\n      set(target, key, value) {\n        console.log(target);\n        console.log(`set：${key} to ${value}`);\n        return (target[key] = value);\n      },\n    });\n  }\n\n  let proxyObj = deepProxy(obj);\n  proxyObj.user.name = \"Golang\";\n\n  proxyObj.fine = \"i am fine\";\n}\n```\n\n### call、apply、bind的区别\n\ncall()和apply()作用相同，传递参数不同\n\n作用：\n\n+ 改变this的指向\n+ 实现继承\n\n```js\nFunction.prototype.apply(thisArg, argsArray) // 参数数组\nFunction.prototype.call(thisArg, arg1, arg2, ...) // 参数列表\nFunction.prototype.bind(thisArg, arg1, arg2, ...) // 参数列表\n```\n\n`thisArg`: 函数运行时的this值，可选\n\n`arg1`: 传递的参数\n\n```js\nfunction callApply() {\n  function animal(name, type) {\n    this.name = name;\n    this.type = type;\n  }\n\n  function dog(name, type) {\n    animal(name, type);\n    this.year = 10;\n  }\n\n  console.log(new dog(\"哈士奇\", \"狗\").name); // undefined\n\n  function cat(name, type) {\n    animal.call(this, name, type); // 继承\n    console.log(\"---cat---\", this.name, this.year);\n  }\n\n  function bird(name, type) {\n    animal.apply(this, [name, type]);\n    this.year = 20;\n  }\n\n  function display() {\n    console.log(this.name, this.type);\n  }\n\n  console.log(new cat(\"加菲貓\", \"貓\").name); // 加菲貓\n  console.log(new bird(\"蜂鸟\", \"鸟\").name); // 蜂鸟\n  display.call({ name: \"加菲貓\", type: \"貓\" }); // 加菲貓 猫\n}\n```\n\n[MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind)\n\nbind() 创建一个**新的函数**，在 `bind()` 被调用时，这个新函数的 `this` 被指定为 `bind()` 的第一个参数，而其余参数将作为新函数的参数，供调用时使用\n\n+ bind方法能改变this的指向\n+ call()和apply()是立即调用函数\n+ bind()是创建一个新的函数\n\n丢失`this`\n\n```js\nlet user = {\n    firstName: \"John\",\n    sayHi() {\n      console.log(`Hello, ${this.firstName}!`);\n    },\n  };\nuser.sayHi(); // this 为user\nsetTimeout(user.sayHi, 200); // Hello, undefined! settimeout的this为window\n```\n\n这里丢失了user的上下文,实际上settimeout可以被重写为\n\n```js\nlet f = user.sayHi\nsetTimeout(f,200)\n// 浏览器中的setTimeout方法，会为函数调用设定this为window\n```\n\n解决方案1：包装器\n\n```js\n// 匿名函数\nsetTimeout(function() {\n    user.sayHi(); // Hello, John!\n},1000)\n// 或者箭头函数\nsetTimeout(() => user.sayHi(), 1000); // Hello, John!\n```\n\n但是当后面的代码在settimeout调用方法之前，改变user的属性方法，就获取到的是更改后的值\n\n```js\nsetTimeout(() => user.sayHi(), 1000); // Hello, bob!\nuser.firstName = \"bob\"\n```\n\n解决方案2: bind\n\n```js\n// this绑定为 user 也就是say 的this绑定为了 user，是对当前 user的绑定，后续代码对 user的更改不会影响 输出结果\nlet say = user.sayHi.bind(user);\nsay() // Hello, John! \nsetTimeout(say,1000) // Hello, John!\nuser.firstName = \"bob\"\n```\n\n\n\n```js\n  let username = {\n    firstName: \"bob\",\n  };\n\n  let user = {\n    firstName: \"John\",\n    sayHi() {\n      console.log(`Hello, ${this.firstName}!`);\n    },\n  };\n\n  function sayHi(phrase) {\n    console.log(`${phrase}, ${this.firstName}!`);\n  }\n\n  let say = sayHi.bind(username); // Hi, bob!\n  say(\"Hi\");\n  sayHi.call(username, \"call\"); // 会立即执行sayHi函数\n  sayHi.apply(username, [\"apply\"]); // 会立即执行sayHi函数\n```\n\n### this指向问题\n\n[this指向问题](https://juejin.cn/post/6844903746984476686)\n\n[this指向](https://juejin.cn/post/6844904167316652045#heading-4)\n\n1. 严格模式与非严格模式\n\nthis在严格模式下与非严格模式下有细微的差别\n\n```js\n// 非严格模式下\nlet a = 1\nfunction f1(){\n\tconsole.log(this);\n}\nf1() // a\n// 严格模式下\nfunction f2(){\n    \"use strict\";\n\tconsole.log(this);\n}\nf2() // undefined\n```\n\n2. 普通函数下的this指向问题\n\nthis指向取决于最终函数的调用者，即取决于当前执行上下文\n\n`上下文`：上下文类似于英语句子中的主语\n\n```js\nconst test = {\n  prop: 42,\n  func: function() {\n    return this.prop;\n  },\n};\n\nconsole.log(test.func()); // 42 // this为 test\nconst a = test.func(); \nconsole.log(a()); // 此时的this为 window 等同于 window.a()\n```\n\n3. this用于闭包\n\n```js\nvar name = \"pop\"\nfunction say() {\n  var name = \"bob\"\n  // 无法访问到外部函数的this变量\n  return function () {\n    console.log(this.name)\n  };\n}\nlet a = say()\na() // pop\n```\n\n4. 箭头函数中的this指向问题\n\n<a href=\"#arrow\">关于箭头函数</a>\n\n箭头函数中没有`this`绑定，必须通过查找作用域链来决定其值。 如果箭头函数被非箭头函数包含，则`this`绑定的是最近一层非箭头函数的`this`，否则`this`的值则被设置为全局对象\n\n```js\nvar name = 'window'\nvar student = {\n  name: '若川',\n  doSth: function () {\n    // var self = this;\n    var arrowDoSth = () => {\n      // console.log(self.name);\n      console.log(this.name)\n    }\n    arrowDoSth()\n  },\n  arrowDoSth2: () => {\n    console.log(this.name)\n  },\n}\nstudent.doSth() // '若川'\nstudent.arrowDoSth2() // 'window'\n```\n\n`call`、`apply`、`bind`无法直接改变箭头函数的`this`(它自身没有`this`),但可以通过改变箭头函数生成的普通函数的`this`,来改变`this`的指向\n\n```js\nvar name = 'window'\nvar student = {\n  name: '若川',\n  doSth: function () {\n    console.log(this.name)\n    return () => {\n      console.log('arrow this', this.name)\n    }\n  },\n}\nlet person = {\n  name: 'person',\n}\n\nstudent.doSth().call(person) // 若川 arrow this 若川\nlet a = student.doSth.call(person) // person\na() // arrow this person\n```\n\n5. 隐式函数绑定下丢失`this`上下文的问题\n\n```js\nfunction foo() {\n    console.log(this.a);\n};\nvar obj = {\n    a: 1,\n    foo: foo\n};\nvar bar = obj.foo; //传递了函数，隐式绑定丢失了\n\nvar a = 'hello';\n\nbar(); // 'hello' 丢失了上下文\n```\n\n综合考察\n\n```js\nvar name = 'window'\n\nvar person1 = {\n  name: 'person1',\n  show1: function () {\n    console.log(this.name)\n  },\n  show2: () => console.log(this.name),\n  show3: function () {\n    return function () {\n      console.log(this.name)\n    }\n  },\n  show4: function () {\n    return () => console.log(this.name)\n  }\n}\nvar person2 = { name: 'person2' }\n\nperson1.show1()\nperson1.show1.call(person2)\n\nperson1.show2()\nperson1.show2.call(person2)\n\nperson1.show3()()\nperson1.show3().call(person2)\nperson1.show3.call(person2)()\n\nperson1.show4()()\nperson1.show4().call(person2)\nperson1.show4.call(person2)()\n```\n\n正确答案：\n\n```js\nperson1.show1() // person1\nperson1.show1.call(person2) // person2\n\nperson1.show2() // window\nperson1.show2.call(person2) // window\n\nperson1.show3()() // window\nperson1.show3().call(person2) // person2\nperson1.show3.call(person2)() // window\n\nperson1.show4()() // person1\nperson1.show4().call(person2) // person1\nperson1.show4.call(person2)() // person2\n```\n\n其中`person1.show3()`获取到的是一个函数，需要赋值给一个变量才会执行，加上`()`相当于立即执行函数，执行环境为`window`,所以打印window\n\n相当于执行了以下操作\n\n```js\nvar fun = person1.show()\nfun()\n```\n\n`person1.show3().call(person2)` 与 `person1.show3.call(person2)()` 也好理解了。前者是通过person2调用了最终的打印方法。后者是先通过person2调用了person1的高阶函数，然后再在全局环境中执行了该打印方法\n\n### 手写instanceof\n\n<a href=\"#instanceof\">instanceof</a>\n\n```js\nfunction _instanceof(left, right) {\n  let _proto_ = left.__proto__;\n  let prototype = right.prototype;\n  while (true) {\n    if (_proto_ === null) return false;\n    if (_proto_ === prototype) return true;\n    _proto_ = _proto_.__proto__;\n  }\n}\n```\n\n### 手写继承\n\n**`Object.create()`** 方法用于创建一个新对象，使用现有的对象来作为新创建对象的原型（prototype）[MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create)\n\n```js\nfunction inherit() {\n  function Parent(name, age) {\n    this.name = name;\n    this.age = age;\n    this.eat = function () {\n      console.log(`${this.name} eat something`);\n    };\n  }\n  Parent.prototype.say = function () {\n    console.log(`${this.name} say my name is ${this.name} age ${this.age}`);\n  };\n  function Child(name, age, sex) {\n    Parent.call(this, name, age);\n    this.sex = sex;\n  }\n  // Child.prototype = new Parent(); // 与Object.create()效果相同\n  Child.prototype = Object.create(Parent.prototype);\n  // 更改需要利用constructor 指向 如果利用对象的形式修改了原型对象,需要利用constructor 指回原来的构造函数,即修复 constructor\n  Child.prototype.constructor = Child;\n\n  let stu = new Child(\"Bob\", \"male\", 18);\n  stu.say();\n  stu.eat();\n  console.log(stu.constructor.name); // Child\n  // 如果没把Child.prototype.constructor重新指回Child,这里的值会是Parent\n}\n\ninherit();\n```\n\n### 手写call\n\n\n\n```js\nlet name = 'toy'\nfunction person() {\n  console.log(this.name)\n  console.log(...arguments)\n}\n\nlet human = { name: 'bob' }\n\nFunction.prototype.customCall = function (ctx) {\n  // 判断 call 方法调用者是否为函数\n  if (typeof this !== 'function') {\n    console.error('type error')\n  }\n  // 这里的this指向为person，实际执行为person\n  console.log(this)\n  // 如果传入对象上下文不存在，则设置为 window\n  ctx = ctx || window\n  let args = [...arguments].slice(1)\n  console.log(args)\n  // 为 human 添加一个 person 方法\n  ctx.fn = this\n  // 执行该方法 并传入参数 返回运行结果\n  let result = ctx.fn(...args)\n  // 删除\n  delete ctx.fn\n  return result\n}\n\nperson.customCall()\nperson.customCall(human, 'male', 18)\n```\n\n### 手写apply\n\n```js\nFunction.prototype.customApply = function (ctx) {\n  // 判断 call 方法调用者是否为函数\n  if (typeof this !== 'function') {\n    console.error('type error')\n  }\n  // 这里的this指向为person，实际执行为person\n  console.log(this)\n  // 如果传入对象上下文不存在，则设置为 window\n  ctx = ctx || window\n  let args = arguments[1]\n  console.log(args)\n  // 为 human 添加一个 person 方法\n  ctx.fn = this\n  // 执行该方法 并传入参数 返回运行结果\n  let result = null\n  if (args) {\n    result = ctx.fn(...args)\n  } else {\n    result = ctx.fn()\n  }\n  // 删除\n  delete ctx.fn\n  return result\n}\n\nperson.customApply(human, ['male', 18])\n```\n\n### 手写bind\n\n```js\n#\n```\n\n\n\n### <span id=\"arrow\">箭头函数</span>\n\n+ 没有`this`\n+ 没有`arguments`\n+ 不能使用`new`进行调用\n\n```js\n// 箭头函数的this指向与常规变量的查找方式相同,即一层层往上找\nlet group = {\n  title: \"Our Group\",\n  students: [\"John\", \"Pete\", \"Alice\"],\n  showList() {\n    this.students.forEach(\n      student => alert(this.title + ': ' + student)\n    );\n  }\n};\n\ngroup.showList();\n```\n\n### ES6\n\n<a href=\"#var\">块级作用域</a>\n\n<a href=\"#destruct\">解构赋值</a>\n\n<a href=\"#promise\">异步</a>\n\n<a href=\"#arrow\">箭头函数</a>\n\n<a href=\"moudle\">模块化</a>\n\n### <span id=\"destruct\">解构赋值</span>\n\n```js\nfunction destructArgs() {\n  // 数组解构\n  console.log(\"------数组解构------\");\n  [arr1, arr2, ...arrRest] = arrShallow;\n  console.log(arr1, arr2, ...arrRest);\n  [arr1, arr2] = [arr2, arr1];\n  console.log(\"------数组交换------\");\n  console.log(arr1, arr2);\n  // 对象解构\n  console.log(\"------对象解构------\");\n  let options = {\n    size: {\n      width: 100,\n      height: 200,\n    },\n    items: [\"Cake\", \"Donut\"],\n    extra: true,\n    name: {\n      bob: true,\n      pop: false,\n    },\n  };\n  let {\n    items: item,\n    size: { width },\n    ...restObject\n  } = options;\n  console.log(item, width, restObject);\n}\n```\n\n### rest参数\n\n扩展运算符被用在函数形参上时，**它还可以把一个分离的参数序列整合成一个数组**。这一点**经常用于获取函数的多余参数，或者像上面这样处理函数参数个数不确定的情况**\n\n```js\nfunction mutiple(...args) {\n  console.log(args)\n}\nmutiple(1, 2, 3, 4) // [1, 2, 3, 4]\n```\n\n### <span id=\"promise\">async、await和promise</span>\n\n宏任务：setTimeout、setInterval\n\n微任务：Promise.then()\n\n任务执行顺序：同步任务--> 微任务--> 宏任务\n\n微任务会依次全部执行再执行下一个宏任务\n\n```js\nasync function sync() {\n  let Promise1 = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      console.log(\"Promise1\");\n      resolve(\"resolve\");\n      console.log(\"object\");\n    }, 3000);\n    console.log(\"111\");\n    resolve(\"Promise1End\");\n    reject(\"2\");\n    console.log(\"can?\");\n  })\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  // console.log(Primise1);\n  console.log(\"同步1\");\n  console.log(\"同步2\");\n  let Promise2 = await new Promise((resolve, reject) => {\n    setTimeout(() => {\n      console.log(\"Promise2\");\n      resolve(\"end\");\n    }, 3000);\n  });\n  console.log(Promise2);\n  console.log(\"同步3\");\n  // Promise.all([Promise1, Promise2]);\n}\n```\n\n### <span id=\"var\">var、let和const</span>\n\nlet和const的特点:\n\n+ 不允许重复声明\n\n+ 不存在变量提升\n\n+  暂时性死区\n\n+  块级作用域\n\nvar:\n\n  存在变量提升、可重复声明、无块级作用域\n\n暂时性死区：\n\n  使用let、const声明的变量，必须先声明变量在使用\n\n```js\n\n```\n\n### 判断数组\n\n#### Object.prototype.toString.call\n\n[MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString)\n\n`toString()`方法返回一个表示改对象的字符串\n\n> 每个对象都有一个 `toString()` 方法，当该对象被表示为一个文本值时，或者一个对象以预期的字符串方式引用时自动调用。默认情况下，`toString()` 方法被每个 `Object` 对象继承。如果此方法在自定义对象中未被覆盖，`toString()` 返回 \"[object *type*]\"，其中 `type` 是对象的类型\n\n```js\nconsole.log(Object.prototype.toString(Object)); // [object Object]\nconsole.log(Object.prototype.toString(function () {})); // [object Object]\nObject.prototype.toString.call('An') // \"[object String]\"\nObject.prototype.toString.call(1) // \"[object Number]\"\nObject.prototype.toString.call(Symbol(1)) // \"[object Symbol]\"\nObject.prototype.toString.call(null) // \"[object Null]\"\nObject.prototype.toString.call(undefined) // \"[object Undefined]\"\nObject.prototype.toString.call(function(){}) // \"[object Function]\"\nObject.prototype.toString.call({name: 'An'}) // \"[object Object]\"\n```\n\n重写`toString`方法\n\n```js\nfunction Dog(name, breed, sex, color) {\n  this.name = name;\n  this.breed = breed;\n  this.sex = sex;\n  this.color = color;\n}\n\nDog.prototype.toString = function dogString() {\n  return `Dog ${this.name} is a ${this.sex} ${this.color} ${this.breed}`;\n};\n\nlet dog = new Dog(\"catty\", \"Lab\", \"male\", \"black\");\nconsole.log(dog.toString()); // Dog catty is a male black Lab\n```\n\n#### <span id=\"instanceof\"> instanceof</span>\n\n`instanceof` 的内部机制是通过判断对象的原型链中是不是能找到类型的 `prototype`\n\n使用 `instanceof`判断一个对象是否为数组，`instanceof` 会判断这个对象的原型链上是否会找到对应的 `Array` 的原型，找到返回 `true`，否则返回 `false`\n\n但 `instanceof` 只能用来判断对象类型，原始类型不可以。并且所有对象类型 instanceof Object 都是 true\n\n```js\n[]  instanceof Array; // true\n[]  instanceof Object; // true\n```\n\n#### Array.isArray\n\n[MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray)\n\n```js\nArray.isArray([]) // true\nArray.isArray({}) // false\n```\n\n### EventLoop\n\n在`JavaScript`中，任务被分为两种，一种宏任务（`MacroTask`）也叫`Task`，一种叫微任务（`MicroTask`）\n\n宏任务\n\n[微任务、宏任务与Eventloop](https://juejin.cn/post/6844903657264136200)  [EventLoop](https://juejin.cn/post/6844903764202094606)\n\n| #                     | 浏览器 | Node |\n| --------------------- | ------ | ---- |\n| I/O                   | ✅      | ✅    |\n| setTimeout            | ✅      | ✅    |\n| setInterval           | ✅      | ✅    |\n| setImmediate          | ❌      | ✅    |\n| requestAnimationFrame | ✅      | ❌    |\n\n微任务\n\n| #                          | 浏览器 | NOde |\n| -------------------------- | ------ | ---- |\n| process.nextTick           | ❌      | ✅    |\n| MutationObserver           | ✅      | ❌    |\n| Promise.then catch finally | ✅      | ✅    |\n\n### 跨域\n\n#### 跨域的定义\n\n当协议、域名、端口中任意一个不相同时，就会造成跨域。跨域是浏览器**同源策略**导致的。\n\n同源：协议、域名、端口三者都相同\n\n同源策略限制内容有：\n\n+ Cookie、LocalStorage、IndexedDB 等存储性内容\n+ DOM 节点\n+ AJAX 请求发送后，结果被浏览器拦截了\n\n但有三个标签运行跨域加载资源\n\n+ `<img src=XXX>`\n+ `<link href=XXX>`\n+ `<script src=XXX>`\n\n#### 跨域解决方案\n\n[跨域的解决方案](https://juejin.cn/post/6844903767226351623)\n\n1. JSONP\n\n原理：利用`<script>`标签没有跨域限制的漏洞，实现跨域\n\n缺点：只支持get请求，不安全可能会遭受XSS攻击\n\n实现：\n\n```js\nfunction jsonp({ url, params, callback }) {\n  return new Promise((resolve, reject) => {\n    let script = document.createElement('script')\n    window[callback] = function(data) {\n      resolve(data)\n      document.body.removeChild(script)\n    }\n    params = { ...params, callback } // wd=b&callback=show\n    let arrs = []\n    for (let key in params) {\n      arrs.push(`${key}=${params[key]}`)\n    }\n    script.src = `${url}?${arrs.join('&')}`\n    document.body.appendChild(script)\n  })\n}\njsonp({\n  url: 'http://localhost:3000/say',\n  params: { wd: 'Iloveyou' },\n  callback: 'show'\n}).then(data => {\n  console.log(data)\n})\n```\n\n上面这段代码相当于向`http://localhost:3000/say?wd=Iloveyou&callback=show`这个地址请求数据\n\n2. CORS\n\n**CORS 需要浏览器和后端同时支持。IE 8 和 9 需要通过 XDomainRequest 来实现**\n\n浏览器会自动进行 CORS 通信，实现 CORS 通信的关键是后端。只要后端实现了 CORS，就实现了跨域\n\n服务端设置 **Access-Control-Allow-Origin** 就可以开启 CORS。 该属性表示哪些域名可以访问资源，如果设置通配符则表示所有网站都可以访问资源\n\n3. postMessage\n\npostMessage是HTML5 XMLHttpRequest Level 2中的API，且是为数不多可以跨域操作的window属性之一，它可用于解决以下方面的问题：\n\n+ 页面和其打开的新窗口的数据传递\n+ 多窗口之间消息传递\n+ 页面与嵌套的iframe消息传递\n+ 上面三个场景的跨域数据传递\n\n`http://localhost:3000/a.html`页面向`http://localhost:4000/b.html`发送信息\n\n```html\n// a.html\n  <iframe src=\"http://localhost:4000/b.html\" frameborder=\"0\" id=\"frame\" onload=\"load()\"></iframe> //等它加载完触发一个事件\n  //内嵌在http://localhost:3000/a.html\n    <script>\n      function load() {\n        let frame = document.getElementById('frame')\n        frame.contentWindow.postMessage('我爱你', 'http://localhost:4000') //发送数据\n        window.onmessage = function(e) { //接受返回数据\n          console.log(e.data) //我不爱你\n        }\n      }\n    </script>\n```\n\n```js\n// b.html\n  window.onmessage = function(e) {\n    console.log(e.data) //我爱你\n    e.source.postMessage('我不爱你', e.origin)\n }\n```\n\n4. Nginx反向代理\n\n实现原理类似于Node中间件代理，需要你搭建一个中转nginx服务器，用于转发请求。\n\n使用nginx反向代理实现跨域，是最简单的跨域方式。只需要修改nginx的配置即可解决跨域问题，支持所有浏览器，支持session，不需要修改任何代码，并且不会影响服务器性能。\n\n实现思路：通过nginx配置一个代理服务器（域名与domain1相同，端口不同）做跳板机，反向代理访问domain2接口，并且可以顺便修改cookie中domain信息，方便当前域cookie写入，实现跨域登录\n\n5. NodeJs中间件代理\n\n实现原理：**同源策略是浏览器需要遵循的标准，而如果是服务器向服务器请求就无需遵循同源策略。** 代理服务器，需要做以下几个步骤：\n\n+ 接受客户端请求 \n+ 将请求转发给服务器\n+ 拿到服务器响应数据\n+ 将响应转发给客户端\n\n![中间件代理](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20221022213713.webp)\n\n6. websocket\n\nWebsocket是HTML5的一个持久化的协议，它实现了浏览器与服务器的全双工通信，同时也是跨域的一种解决方案。WebSocket和HTTP都是应用层协议，都基于 TCP 协议。但是 **WebSocket 是一种双向通信协议，在建立连接之后，WebSocket 的 server 与 client 都能主动向对方发送或接收数据**。同时，WebSocket 在建立连接时需要借助 HTTP 协议，连接建立好了之后 client 与 server 之间的双向通信就与 HTTP 无关了\n\n本地文件socket.html向`localhost:3000`发生数据和接受数据\n\n```html\n// socket.html\n<script>\n    let socket = new WebSocket('ws://localhost:3000');\n    socket.onopen = function () {\n      socket.send('我爱你');//向服务器发送数据\n    }\n    socket.onmessage = function (e) {\n      console.log(e.data);//接收服务器返回的数据\n    }\n</script>\n```\n\n```js\n// server.js\nlet express = require('express');\nlet app = express();\nlet WebSocket = require('ws');//记得安装ws\nlet wss = new WebSocket.Server({port:3000});\nwss.on('connection',function(ws) {\n  ws.on('message', function (data) {\n    console.log(data);\n    ws.send('我不爱你')\n  });\n})\n```\n\n7. window.name + iframe\n8. location.hash + iframe\n9. document.domain + iframe\n\n### XLSX\n\n安装\n\n```bash\nnpm install xlsx\n```\n\n导入\n\n```js\nimport * as XLSX from 'xlsx'\nimport XLSX from 'xlsx'\n```\n\n新建工作簿\n\n```js\n const wb = XLSX.utils.book_new();\n```\n\n数据格式转换\n\n```js\n// json类型数据转换成sheet\nlet sheet1 = XLSX.utils.json_to_sheet(rows)\n// json数据格式\nconst rows = [\n    { '列1': 1, '列2': 2, '列3': 3 },\n    { '列1': 4, '列2': 5, '列3': 6 }\n]\n\n// 二维数组\nlet sheet2 = XLSX.utils.aoa_to_sheet(ws_data)\n// 数组格式\nconst ws_data = [\n    [\"姓名\",\"性别\",\"年龄\"],\n    [\"蔡徐坤\",\"男\",\"60\"],\n    [\"李明\",\"男\",\"30\"]\n]\n```\n\n添加工作表数据\n\n```js\n// 参数：工作簿、sheet数据、工作表(sheet)名字\n    XLSX.utils.book_append_sheet(wb,sheet1,['Sheet1'])\n```\n\n文件存储\n\n```js\nXLSX.writeFile(wb, fileName);\n```\n\n## 性能优化\n\n### 节流与防抖\n\n#### 防抖\n\n事件频繁触发情况下，`delay`时间内被触发则会重新计时\n\n```js\n// 防抖 设置方法执行间隔为 delay ms ，delay 时间内事件被触发则重新计时\nfunction debunce(fn, delay) {\n  delay = delay || 500;\n  let timer = null; // 被闭包函数使用\n  // 剩余参数数组\n  return function () {\n    let ctx = this;\n    let args = [...arguments];\n    clearTimeout(timer); // 如果 delay 秒内函数被执行则，会清除前面的settimeout\n    timer = setTimeout(function () {\n      console.log(args);\n      fn.apply(ctx, args);\n    }, delay);\n  };\n}\n```\n\n> 函数防抖就像回城，被打断就会重新计时\n\n应用场景：\n\n+ 按钮点击\n+ 输入框\n\n#### 节流\n\n规定事件在`delay`时间内只会执行一次\n\n```js\n// 节流 设置方法执行间隔为 delay ms， delay 时间内时间被触发则只执行一次事件\nfunction throttle(fn, delay = 500) {\n  let timer = null;\n  return function () {\n    // 有 settimeout 则退出，不执行\n    let ctx = this;\n    let args = [...arguments];\n    if (!timer) {\n      timer = setTimeout(() => {\n        console.log(args);\n        fn.apply(ctx, args);\n        timer = null;\n      }, delay);\n    }\n  };\n}\n```\n\n> 函数节流就像游戏中的攻击速度，规定一定时间内只能攻击多少次\n\n应用场景：\n\n+ DOM元素拖拽\n+ 游戏中的刷新率\n+ canvas画笔功能\n\n### 加快首屏加载速度\n\n[Vue加快首屏加载速度](https://juejin.cn/post/6844904185264095246)\n\n1. 压缩\n\n+ gzip压缩\n\n+ 图片压缩\n\n2. 路由懒加载\n3. 优化分包策略\n\n3. CDN引入\n4. 优化分包\n\n4. SSR服务器渲染\n\n5. 增加宽带\n\n### 回流与重绘\n\n#### 浏览器的渲染流程\n\n[回流与重绘](https://www.cnblogs.com/xiahj/p/11777786.html)\n\n渲染引擎：主要有Gecko和Webkit，其中Firefox 使用的是 Gecko，而 Safari 和 Chrome 浏览器使用的都是 WebKit\n\n渲染流程：\n\n![WebKit 渲染引擎的主流程](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220825175831.png)\n\n1. 解析HTML Source，生成DOM树\n2. 解析CSS，生成CSSOM树\n3. 将DOM树和CSSOM树结合，去除不可见元素，生成渲染树(Render Tree)\n4. Layout(布局):根据生成的渲染树，进行布局(Layout)，得到节点的几何信息（位置，大小）\n5. Painting(重绘):根据渲染树以及回流得到的几何信息，将 Render Tree 的每个像素渲染到屏幕上\n\n#### 回流(reflow)\n\n> 渲染对象在创建完成并添加到渲染树时，是将DOM节点和它对应的样式结合起来，并不包含位置和大小信息。\n>\n> 我们还需要通过 `Layout` 布局阶段，来计算它们在设备视口(viewport)内的确切**位置和大小**，计算这些值的过程称为`回流`、`布局`或`重排`(reflow)\n\nHTML 采用基于流的布局模型，从根渲染对象（即`<html>`）开始，递归遍历部分或所有的框架层次结构，为每一个需要计算的渲染对象计算几何信息，大多数情况下只要一次遍历就能**计算**出几何信息。但是也有例外，比如`<table>`的计算就需要不止一次的遍历\n\n##### 触发回流条件\n\nDOM元素的**大小**和**位置**发生变化的时候，会触发回流\n\n改变这些属性会触发回流：\n\n+ 盒模型相关的属性: `width`，`height`，`margin`，`display`，`border`等\n+ 定位属性及浮动相关的属性: `top`,`position`,`float`等\n+ 改变节点内部文字结构也会触发回流:`text-align`, `overflow`, `font-size`, `line-height`, `vertival-align`等\n\n以及进行以下流程或操作：\n\n+ 页面一开始渲染的时候\n+ 添加或删除可见的DOM元素，进行DOM操作等\n+ 内容发生变化，比如文本变化或图片被另一个不同尺寸的图片所替代\n+ 浏览器的窗口尺寸变化（因为回流是根据视口的大小来计算元素的位置和大小的）\n+ css伪类激活\n+ 进行**获取布局**信息的操作，比如`offsetWidth`、`offsetHeight`、`clientWidth`、`clientHeight`、`width`、`height`、`scrollTop`、`scrollHeight`,`getComputedStyle`, `getBoundingClientRect`等\n\n#### 重绘(repaint)\n\n>  **绘制 paint**：当各种盒子的位置、大小以及其他属性，例如颜色、字体大小等都确定下来后，浏览器便把这些元素都按照各自的特性绘制一遍，于是页面的内容出现了，这个过程也称之为 Repaint（重绘制）\n>\n> 说白了，页面要呈现的内容，统统画在屏幕上，这就叫 Repaint\n\n##### 触发绘制条件\n\n+ DOM改动\n+ CSS改动\n\n其实，就是判断当视觉上是否发生变化（无论这个变化是通过DOM改动还是CSS改动）。只要页面显示的内容不一样了，肯定要 Repaint\n\n> **回流一定会触发重绘，而重绘不一定会回流**\n\n#### 渲染性能优化\n\n> 注意：回流可以避免，但重绘无法避免，否则就成静态页面了\n\n##### 避免回流\n\n1. 减少对dom的操作\n2. 使元素脱离文档流\n3. 避免或减少访问某些属性\n4. css属性尽量使用简写\n5. `transfrom`代替`left`、`top`,`opacity`代替`visibility`，使用`tansfrom`或`opacity`不会触发绘制\n6. 避免使用`table`布局\n\n##### 减少重绘\n\n+ 如果需要创建多个DOM节点，可以使用**DocumentFragment**创建完，然后一次性地加入document。（加一个节点，就repaint一次，不太好）\n+ 将元素的display设置为”none”，完成修改后再把display修改为原来的值\n\n```js\n// 例1-使用 createDocumentFragment 方法创建虚拟的 dom 对象，将新 dom 需要修改的对象进行复制，然后对创建的 dom 进行相应的修改，最终在把 dom 与旧 dom 进行替换\n  \t// 这样的能将对 dom 的多次修改合并为一次，大大减少了回流和重绘的次数\n    let box = document.querySelector('#box')\n    let test = document.createDocumentFragment()\n    for (let i = 0; i < 5; i++) {\n        let li = document.createElement(\"li\")\n        li.appendChild(document.createTextNode(i))\n        test.appendChild(li)\n    }\n    box.appendChild(test)\n  \n  \n  \t// 例2-把需要修改的 dom 隐藏，修改完成后再将 dom 重新显示\n  \t// 使用 display: none 后渲染树中将不再渲染当前 dom，所以多次操作也不会多次触发回流和重绘\n  \tlet box = document.querySelector('#box')\n    box.style.display = 'none';\n  \tfor (let i = 0; i < 5; i++) {\n        let li = document.createElement(\"li\")\n        li.appendChild(document.createTextNode(i))\n        box.appendChild(li)\n    }\n```\n\n## 浏览器原理\n\n### 浏览器安全\n\n#### XSS攻击\n\n[XSS](https://juejin.cn/post/6844903685122703367)\n\n概念：Cross-Site Scripting（跨站脚本攻击）简称 XSS，是一种代码注入攻击。攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全\n\nXSS的本质是：恶意代码未经过滤，与网站正常的代码混在一起；浏览器无法分辨哪些脚本是可信的，导致恶意脚本被执行\n\nXSS攻击方式：用户的输入内容，URL上的参数\n\n#### XSS分类\n\nXSS攻击可分为<a href=\"#存储型\">存储型</a>、<a href=\"#反射型\">反射型</a>和<a href=\"#dom\">DOM型</a>三种\n\n##### <span id=\"存储型\">存储型XSS</span>\n\n攻击步骤：\n\n1. 攻击者将恶意代码注入到目标网站的数据库中\n2. 用户打开目标网站时，网站服务器将恶意代码从数据库取出，拼接在HTML中返回给浏览器\n3. 用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。\n4. 恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作\n\n这种攻击常见于带有用户保存数据的网站功能，如论坛发帖、商品评论、用户私信等\n\n##### <span id=\"反射型\">反射型XSS</span>\n\n攻击步骤：\n\n1. 攻击者构造出特殊的 URL，其中包含恶意代码。\n2. 用户打开带有恶意代码的 URL 时，网站服务端将恶意代码从 URL 中取出，拼接在 HTML 中返回给浏览器。\n3. 用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。\n4. 恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作\n\n反射型 XSS 漏洞常见于通过 URL 传递参数的功能，如网站搜索、跳转等。\n\n由于需要用户主动打开恶意的 URL 才能生效，攻击者往往会结合多种手段诱导用户点击\n\n##### <span id=\"dom\">DOM型XSS</span>\n\n攻击步骤：\n\n1. 攻击者构造出特殊的 URL，其中包含恶意代码。\n2. 用户打开带有恶意代码的 URL。\n3. 用户浏览器接收到响应后解析执行，前端 JavaScript 取出 URL 中的恶意代码并执行。\n4. 恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作\n\nDOM 型 XSS 跟前两种 XSS 的区别：DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞\n\n#### XSS攻击预防\n\nXSS攻击有两大要素：\n\n1. 攻击者提交恶意代码\n2. 浏览器执行恶意代码\n\n预防措施：\n\n1. 输入过滤\n\n2. 纯前端渲染\n\n3. 转义HTML\n\n4. 预防DOM型XSS攻击\n\n   尽量避免使用`.innerHTML`、`.outerHTML`，而应尽量使用`.textContent`、`.setAttribute`等\n\n#### CSRF攻击\n\n> CSRF指的是**跨站请求伪造攻击**，攻击者诱导用户进入一个第三方网站，然后该网站向被攻击网站发送跨站请求。如果用户在被攻击网站中保存了登录状态，那么攻击者就可以利用这个登录状态，绕过后台的用户验证，冒充用户向服务器执行一些操作\n\nCSRF 攻击的**本质是利用 cookie 会在同源请求中携带发送给服务器的特点，以此来实现用户的冒充**\n\n### 浏览器缓存\n\n#### 概念\n\n[浏览器缓存](https://juejin.cn/post/6844903672556552205#heading-5)\n\n> 浏览器缓存：是指浏览器对用户请求过的静态资源(html、css、js)，存储到电脑本地磁盘中，当浏览器再次访问时，就可以直接从本地加载了，不需要再去服务端请求\n\n缓存的优点：\n\n+ 减少了服务器的负担、提升网站性能\n+ 加快客户端网页加载速度\n+ 减少了冗余的数据传输，减少网费\n\n缺点：\n\n+ 容易导致客户端代码更新不及时\n\n浏览器缓存分为协商缓存与强缓存\n\n#### 协商缓存与强缓存\n\n##### 强缓存\n\n使用强缓存策略时，如果缓存资源有效，则直接使用缓存资源，不再向服务器发送请求\n\n强缓存策略可以通过两种方式来设置，分别是响应头中的`Expires`属性和`Cache-Control`属性\n\n`Expires`中的时间是一个绝对时间，它是服务器的时间，因此当客户端的时间和服务器的时间不一致，或者用户对客户端时间进行修改，这样可能会影响缓存命中的结果\n\n`Cache-Control`的几个取值含义：\n\n+ **private：** 仅浏览器可以缓存\n+ **public：** 浏览器和代理服务器都可以缓存（对于private和public，前端可以认为一样，不用深究）\n+ **max-age=xxx** 过期时间（重要）\n+ **no-cache**  不进行强缓存（重要）\n+ **no-store**   不强缓存，也不协商缓存，基本不用，缓存越多才越好呢\n\n##### 协商缓存\n\n协商缓存条件：\n\n+ `Cache-Control`的值为`no-cache`\n+ 或者`max-age`过期了\n\n使用协商缓存策略时，会先向服务器发送一个请求，如果资源没有发生修改，则返回一个 304 状态，让浏览器使用本地的缓存副本。如果资源发生了修改，则返回修改后的资源\n\n协商缓存也可以通过两种方式来设置，分别是 http 头信息中的**Etag** 和**Last-Modified**属性\n\n`Etag`是服务器根据当前请求的资源生成的一个唯一标识，**这个唯一标识是一个字符串，只要资源有变化这个串就不同**，跟最后修改时间没有关系\n\nEtag的必要性：\n\n使用Last-Modified已经足以让浏览器知道本地的缓存副本是否足够新，但是仍然有以下几个问题难以解决：\n\n+ 一些文件也许会周期性的更改，但是他的内容并不改变(仅仅改变的修改时间)，这个时候我们并不希望客户端认为这个文件被修改了，而重新GET\n+ 某些文件修改非常频繁，比如在秒以下的时间内进行修改，(比方说1s内修改了N次)，If-Modified-Since能检查到的粒度是s级的，这种修改无法判断(或者说UNIX记录MTIME只能精确到秒)\n+ 某些服务器不能精确的得到文件的最后修改时间\n\n**Etag的优先级比Last-Modified的优先级高**\n\nF5 会 跳过强缓存规则，直接走协商缓存；；；Ctrl+F5 ，跳过所有缓存规则，和第一次请求一样，重新获取资源\n\n![缓存判断流程](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220826162750.webp)\n\n### 浏览器解析URL\n\n用户输入URL，到浏览器呈现给用户页面，经历了哪些过程\n\n1. 用户输入url\n2. 对url地址进行DNs域名解析\n3. 进行TCP连接\n4. 进行HTTP报文的请求与响应\n5. 浏览器解析文档资源并渲染页面\n\n\n\n## Vue\n\n### 生命周期\n\n[生命周期](https://juejin.cn/post/7032881219524100132)\n\n![生命周期.webp](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20221016095155.webp)\n\n### vue2到vue3的变化\n\n+ 组合式api\n  + 响应式api：`ref()`、`reactive()`\n  + 生命周期钩子：`onM0unted()`、`onUnmounted`\n  + 解决了混入的缺陷\n  + 减少了包的体积\n+ 响应式原理 proxy\n+ emit事件 需要先定义事件名\n+ vue3可以有多个顶层标签\n+ style里可以用(`v-bind`)关键字\n+ :deep(.foo){}\n\n和Mixin相比，mixins有三个主要短板\n\n[官方文档](https://cn.vuejs.org/guide/reusability/composables.html#comparisons-with-other-techniques)\n\n1. 不清楚的数据来源\n2. 命名空间冲突\n3. 隐式的跨mixin交流\n\n### MVVM、MVC、MVP的区别\n\n#### MVVM\n\n`MVVM`即`Model`、`View`、`ViewModel`\n\n+ MOdel代表数据模型，数据和业务逻辑都在Model层中定义\n+ View代表UI视图，负责数据的展示\n+ ViewModel负责监听Model中数据的改变并且控制视图的更新，处理用户交互操作\n\n#### MVC\n\n#### MVP\n\n### 响应式原理\n\n`Vue2`监听采用的是<a href=\"#defineProperty\">Object.defineProperty()</a>,`Vue3`则是<a href=\"#prroxy\">Proxy</a>\n\n采用数据劫持结合发布者订阅者模式的方式，通过Object.defineProperty()来劫持各个属性的getter、setter，在数据变动时执行`dep.notify()`方法，发布消息给订阅者(`Watcher`)，进行视图更新\n\n#### Vue类\n\n创建一个Vue类\n\n```js\nclass Vue{\n    constructor(options){\n       this.$el=options.el;\n       this._data=options.data;\n       this.$data=this._data;\n       //对data进行响应式处理\n       new Observe(this._data);\n   }\n}\n//创建Vue对象\nnew Vue({\n    el:'#app',\n    data:{\n      message:'hello world'\n    }\n})\n```\n\n\n\n#### Observe类\n\n`Observe`进行数据监听\n\n```js\nclass Observe{\n    constructor(data){\n       //如果传入的数据是object\n       if(typeof data=='object'){\n           this.walk(data);\n       }\n    }\n    //这个方法遍历对象中的属性，并依次对其进行响应式处理\n    walk(obj){\n        //获取所有属性\n        const keys=Object.keys(obj);\n        for (let i = 0; i < keys.length; i++) {\n            //对所有属性进行监听（数据劫持）\n            this.defineReactive(obj, keys[i])\n        }\n    }\n    defineReactive(obj,key){\n        if(typeof obj[key]=='object'){\n            //如果属性是对象，那么那么递归调用walk方法\n            this.walk(obj[key]);\n        }\n        const dep=new Dep();//Dep类用于收集依赖\n        const val=obj[key];\n        Object.defineProperty(obj, key, {\n            enumerable: true,\n            configurable: true,\n            //get代理将Dep.target即Watcher对象添加到依赖集合中\n            get() {\n              //这里在创建Watcher对象时会给Dep.target赋值\n              if (Dep.target) {\n                dep.addSubs(Dep.target);\n              }\n              return val;\n            },\n            set(newVal) {\n                val=newVal;\n                //依赖的变更响应\n                dep.notify(newVal)\n            } \n          })\n    }\n}\n```\n\n#### Dep类\n\n`Dep`收集依赖,当`Observer`中的`data`触发`getter`时，`Dep`就会收集依赖的`Watcher`，当`data`变动时，就会通过`Dep`给`Watcher`发通知更新\n\n```js\nclass Dep{\n   static target=null\n   constructor(){\n       this.subs=[];\n   }\n   addSubs(watcher){\n       this.subs.push(watcher)\n   }\n   notify(newVal){\n       for(let i=0;i<this.subs.length;i++){\n           this.subs[i].update(newVal);\n       }\n   }\n}\n```\n\n#### Watcher类\n\n`Watcher`类用于观察数据的变更，它会调用data中对应属性的`get`方法触发`Dep`依赖收集，并在数据变更后执行相应视图更新\n\n```js\nlet uid=0\nclass Watcher{\n    //vm即一个Vue对象，key要观察的属性，cb是观测到数据变化后需要做的操作，通常是指DOM变更\n    constructor(vm,key,cb){\n       this.vm=vm;\n       this.uid=uid++;\n       this.cb=cb;\n       //调用get触发依赖收集之前，把自身赋值给Dep.taget静态变量\n       Dep.target=this;\n       //触发对象上代理的get方法，执行get添加依赖\n       this.value=vm.$data[key];\n       //用完即清空\n       Dep.target=null;\n    }\n    //在调用set触发Dep的notify时要执行的update函数，用于响应数据变化执行run函数即dom变更\n    update(newValue){\n        //值发生变化才变更\n        if(this.value!==newValue){\n            this.value=newValue;\n            this.run();\n        }\n    }\n    //执行DOM更新等操作\n    run(){\n        this.cb(this.value);\n    }\n}\n```\n\n通过以上代码即可实现一个简易版的Vue\n\n```js\nlet data={\n    message:'hello',\n    num:0\n}\nlet app=new Vue({\n    data:data\n});\n//模拟数据监听\nnew Watcher(app,'message',function(value){\n    //模拟dom变更\n    console.log('message 引起的dom变更--->',value);\n})\nnew Watcher(app,'num',function(value){\n    //模拟dom变更\n    console.log('num 引起的dom变更--->',value);\n})\ndata.message='world';\ndata.num=100;\n```\n\n#### 总结\n\n其实在 **Vue** 中初始化渲染时，视图上绑定的数据就会实例化一个 **Watcher**，依赖收集就是是通过属性的 **getter** 函数完成的，文章一开始讲到的 **Observer** 、**Watcher** 、**Dep** 都与依赖收集相关。其中 **Observer** 与 **Dep**是一对一的关系， **Dep** 与 **Watcher** 是多对多的关系，**Dep** 则是 **Observer** 和 **Watcher** 之间的纽带。依赖收集完成后，当属性变化会执行被 **Observer** 对象的 **dep.notify()** 方法，这个方法会遍历订阅者（Watcher）列表向其发送消息， **Watcher** 会执行 **run** 方法去更新视图\n\n![reactive](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220823105557.webp)\n\n### 虚拟DOM\n\n> 虚拟DOM是对真实DOM的一种抽象,本身就是一个js对象\n\n优点：将真实节点抽象成VNode，有效减少直接操作dom次数，提高程序性能\n\n\n\n","source":"_posts/实习.md","raw":"---\ntitle: 前端知识点\nmathjax: true\ndate: 2022-06-03 21:51:40\ntop: -3\ntags: [前端]\ncategories:\ndescription: 前端知识点\n---\n\n[TOC]\n\n## JS\n\n### typeof\n\n`typeof`操作符返回一个字符串，表示未经计算的操作数的类型\n\n| 类型                                                         | 结果                                                         |\n| :----------------------------------------------------------- | :----------------------------------------------------------- |\n| [Undefined](https://developer.mozilla.org/zh-CN/docs/Glossary/undefined) | `\"undefined\"`                                                |\n| [Null](https://developer.mozilla.org/zh-CN/docs/Glossary/Null) | `\"object\"` (见[下文](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof#typeof_null)) |\n| [Boolean](https://developer.mozilla.org/zh-CN/docs/Glossary/Boolean) | `\"boolean\"`                                                  |\n| [Number](https://developer.mozilla.org/zh-CN/docs/Glossary/Number) | `\"number\"`                                                   |\n| [BigInt](https://developer.mozilla.org/zh-CN/docs/Glossary/BigInt)(ECMAScript 2020 新增) | `\"bigint\"`                                                   |\n| [String](https://developer.mozilla.org/zh-CN/docs/Glossary/String) | `\"string\"`                                                   |\n| [Symbol](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol) (ECMAScript 2015 新增) | `\"symbol\"`                                                   |\n| 宿主对象（由 JS 环境提供）                                   | *取决于具体实现*                                             |\n| [Function](https://developer.mozilla.org/zh-CN/docs/Glossary/Function) 对象 (按照 ECMA-262 规范实现 [[Call]]) | `\"function\"`                                                 |\n| 其他任何对象                                                 | `\"object\"`                                                   |\n\n特别地：\n\n```js\ntypeof null; // \"object\"\ntypeof NaN; // \"number\"\n```\n\nNaN 是一个特殊值，它和自身不相等，是唯一一个非自反（自反，reflexive，即 x === x 不成立）的值。而 NaN !== NaN 为 true\n\n### instanceof\n\n`instanceof`可以正确判断对象的类型，**其内部运行机制是判断在其原型链中能否找到该类型的原型**\n\n```js\nconsole.log(2 instanceof Number);                    // false\nconsole.log(true instanceof Boolean);                // false \nconsole.log('str' instanceof String);                // false \n \nconsole.log([] instanceof Array);                    // true\nconsole.log(function(){} instanceof Function);       // true\nconsole.log({} instanceof Object);                   // true\n```\n\n`instanceof`**只能正确判断引用数据类型**，而不能判断基本数据类型。`instanceof` 运算符可以用来测试一个对象在其原型链中是否存在一个构造函数的 `prototype` 属性\n\n### 构造器与new操作符\n\n#### 构造函数\n\n构造函数在本质上是常规函数，不过有两个约定：\n\n+ 命名以大写字母开头\n+ 只能由`new`操作符执行\n\n```js\nfunction User(name) {\n  this.name = name;\n  this.isAdmin = false;\n}\n\nlet user = new User(\"Jack\");\n\nalert(user.name); // Jack\nalert(user.isAdmin); // false\n```\n\n当一个函数被使用`new`操作符执行时，它按照以下步骤：\n\n+ 创建一个新的空对象并分配给`this`\n+ 函数执行时，通常会修改`this`，为其添加新的属性\n+ 隐式`return`返回`this`的值\n\n换句话说，`new User(...)` 做的就是类似的事情：\n\n```js\nfunction User(name) {\n  // this = {};（隐式创建）\n\n  // 添加属性到 this\n  this.name = name;\n  this.isAdmin = false;\n\n  // return this;（隐式返回）\n}\n```\n\n所以 `new User(\"Jack\")` 的结果是相同的对象：\n\n```js\nlet user = {\n  name: \"Jack\",\n  isAdmin: false\n};\n```\n\n#### 构造器的return\n\n通常，构造器没有 `return` 语句。它们的任务是将所有必要的东西写入 `this`，并自动转换为结果。\n\n但是，如果这有一个 `return` 语句，那么规则就简单了：\n\n+ 如果 `return` 返回的是一个对象，则返回这个对象，而不是 `this`。\n+ 如果 `return` 返回的是一个原始类型，则忽略。\n\n换句话说，带有对象的 `return` 返回该对象，在所有其他情况下返回 `this`\n\n### class语法\n\n基础语法\n\n```js\nclass User {\n\n  constructor(name) {\n    this.name = name;\n  }\n\n  sayHi() {\n    alert(this.name);\n  }\n\n}\n\n// 用法：\nlet user = new User(\"John\");\nuser.sayHi();\n```\n\n`class`的本质仍然是函数，`class User{...}`构造实际上做了如下的事\n\n+ 创建一个名为`User`的函数，该函数成为类声明的结果。该函数的代码来自于 `constructor` 方法（如果我们不编写这种方法，那么它就被假定为空）\n+ 存储类中的方法，例如 `User.prototype` 中的 `sayHi`\n\n![class](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220824100400.png)\n\n```js\nalert(User === User.prototype.constructor); // true\n// 在原型中实际上有两个方法\nalert(Object.getOwnPropertyNames(User.prototype)); // constructor, sayHi\n```\n\n`class`声明的函数与下面代码效果相同\n\n```js\n// 1. 创建构造器函数\nfunction User(name) {\n  this.name = name;\n}\n// 函数的原型（prototype）默认具有 \"constructor\" 属性，\n// 所以，我们不需要创建它\n\n// 2. 将方法添加到原型\nUser.prototype.sayHi = function() {\n  alert(this.name);\n};\n\n// 用法：\nlet user = new User(\"John\");\nuser.sayHi();\n```\n\n### 原型与原型链\n\n所有的实例对象都有一个`__proto__`属性，属性值是一个对象，指向对象的原型\n\n所有函数都一个`prototype`属性，属性值为一个对象,指向函数的原型对象\n\n所有实例对象的`__proto__`属性都指向其构造函数的`prototype`\n\n![原型图](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828170829.png)\n\n重要公式：\n\n```js\nObject.__proto__ === Function.prototype;\nFunction.prototype.__proto__ === Object.prototype;\nObject.prototype.__proto__ === null;\n```\n\n\n\n```js\nfunction Proto() {\n  function Basic() {\n    this.type = \"basic\";\n    this.desription = \"基类\";\n  }\n   // 修改 Basic 的原型\n  Basic.prototype.getName = function () {\n    return this.desription;\n  };\n  function Father() {\n    this.type = \"father\";\n    this.desription = \"父类\";\n  }\n  function Son() {\n    this.type = \"son\";\n    this.desription = \"子类\";\n  }\n\n  Father.prototype = new Basic();\n  Son.prototype = new Father();\n\n  let son = new Son();\n   // instanceof 本质是从原型链上找\n  console.log(`%c ${son instanceof Basic}`, \"background: #222; color: #bada55\");\n  console.log(\"----son.constructor----\", son.constructor);\n  // 实例对象的原型,即Father\n  console.info(\"----son.__proto__----\", son.__proto__);\n  // 方法的原型,即Father\n  console.log(\"----Son.prototype----\", Son.prototype);\n  console.log(son.__proto__===Son.prototype) // true\n  console.log(\"----son----\", son);\n  console.log(\"----son.getName()----\", son.getName());\n}\nProto()\n```\n\n![原型与原型链](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220814211054.png)\n\n### 深拷贝和浅拷贝\n\n浅拷贝：拷贝时只拷贝最外面一层数据的值，遇到深层次对象则拷贝其地址，改变源对象中的引用对象同时会改变目标对象的值，同样改变目标对象中的引用对象也会改变源对象的值\n\nobject.assigin() 为浅拷贝，只会把`可枚举`和自有（`Object.hasOwnProperty()`）属性从一个或多个源对象拷贝至目标对象\n\n```js\nObject.assign(target, ...sources)\n```\n\n```js\nfunction shallowCopy() {\n  let obj1 = { a: 0, b: { c: 0 } };\n  let obj2 = Object.assign({}, obj1);\n  obj1.b.c = 2;\n  // 浅拷贝：object.assigin()在拷贝时只拷贝其值，源对象为对象的引用时，拷贝其引用\n  // 引用值发生改变目标对象值也会改变\n  console.log(obj2); // { a: 0 , b: { c: 2}}\n  obj2.b.c = 3;\n  console.log(obj1); // { a: 0 , b: { c: 3}}\n\n  let a = 2;\n  let b = \"id\";\n  let c = true;\n  let copy = Object.assign({}, a, b, c); // 基本类型会被包装成对象\n  console.log(copy); // { '0': 'i', '1': 'd' }\n}\n\n// shallowCopy();\n```\n\n实现浅拷贝\n\n```js\nfunction shallowCopy(obj) {\n  if (!obj || typeof obj !== 'object') return\n  let newObj = obj instanceof Array ? [] : {}\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      newObj[key] = obj[key]\n    }\n  }\n  return newObj\n}\n```\n\n\n\n深拷贝: 深拷贝会把对象里**所有的数据**重新复制到新的内存空间，是最彻底的拷贝\n\n```js\n// 深拷贝\nfunction deepCopy() {\n  let obj1 = { a: 0, b: { c: 0 } };\n  let obj2 = JSON.parse(JSON.stringify(obj1));\n  obj1.a = 4;\n  obj1.b.c = 4;\n  console.log(JSON.stringify(obj2)); // { \"a\": 0, \"b\": { \"c\": 0}}\n}\n```\n\n实现深拷贝\n\n```js\nfunction deepCopy(obj) {\n  if (!obj || typeof obj !== 'object') return\n  let newObj = obj instanceof Array ? [] : {}\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      newObj[key] = typeof obj[key] === 'object' ? deepCopy(obj[key]) : obj[key]\n    }\n  }\n  return newobj\n}\n```\n\n\n\n### 对象遍历\n\nforin: 会遍历对象原型链上的属性 可以遍历数组但数组遍历建议用for of\n\nhasOwnProperty: 判断对象自身是否包含某个属性，不包含原型链上的属性，有则返回true，无则返回false\n\nObject.entries() 返回对象中可枚举属性的 键值对数组,与for in 不同的是不会遍历原型链上的属性\n\nObject.keys() 对应的返回的是 对象的键的数组，但只会获取第一层的key\n\nObject.values() 对应的返回的是 对象的值的数组，遇到引用对象则拷贝整个对象的值\n\n```js\n// 对象遍历\nfunction ObjectLoop() {\n  let triangle = { a: 1, b: 2, c: 3 };\n  let obj1 = { a: 1, b: { c: 2, d: { e: 3 } } };\n  function ColoredTriangle() {\n    this.color = \"red\";\n  }\n  ColoredTriangle.prototype = triangle;\n  let obj = new ColoredTriangle();\n\n  // for in 会遍历对象原型链上的属性 可以遍历数组但数组遍历建议用for of\n  function forinLoop(obj) {\n    console.log(\"------------forinLoop------------\");\n    for (var prop in obj) {\n      console.log(`obj.${prop} = ${obj[prop]}`); // obj.color = red obj.a = 1 obj.b = 2 obj.c = 3\n    }\n\n    // hasOwnProperty 用法  对象自身是否包含某个属性，不包含原型链上的属性\n    console.log(\"------------hasOwnProperty------------\");\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        console.log(`obj.${prop} = ${obj[prop]}`); // obj.color = red\n      }\n    }\n  }\n\n  /* Object.entries() 返回对象中可枚举属性的 键值对数组,与for in 不同的是不会遍历原型链上的属性\n   * Object.keys() 对应的返回的是 对象的键的数组 获取第一层的key\n   * Object.values() 对应的返回的是 对象的值的数组\n   */\n  function entriesLoop(obj) {\n    for (const [key, value] of Object.entries(obj)) {\n      console.log(\"------------entriesLoop------------\");\n      console.log(`${key}: ${value}`);\n    }\n  }\n\n  forinLoop(obj);\n  entriesLoop(obj);\n\n  console.log(Object.keys(obj1)); // [ 'a', 'b' ]\n  console.log(Object.values(obj1)); // [ 1, { c: 2, d: { e: 3 } } ]\n}\n```\n\n### Object.defineProperty和Proxy\n\n#### <span id=\"defineProperty\">Object.defineProperty</span>\n\n[MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty)\n\nObject.defineProperty() 方法会直接在一个对象上定义一个新属性，或修改对象的属性，并返回修改后的对象\n\n```js\nObject.defineProperty(obj, prop, descriptor)\n```\n\n`obj` 要修改属性的对象\n\n`prop` 要定义或修改的属性的名称\n\n`descripto` 属性描述符\n\n常见属性描述符: `value`、`configurable`、`get`、`set`、`enumerable`\n\n缺陷：\n\n+ 无法监控新增的属性，由于该方法监听的是对象的属性，所以在原始对象上新增属性就无法劫持到\n+ 对于数组的监听，在对数组进行`sort`、`shift`、`reverse`等改变数组索引操作时会触发多次`get`和`set`方法\n\n+ 只能劫持对象的属性，从而需要对每个对象，每个属性进行遍历，如果，属性值是对象，还需要深度遍历\n\n```js\nlet arrShallow = [1, 2, 3, 4, 5, 6];\nlet arrDeep = [[1, 2, 3], 4, [5, 6]];\n\n// Object.defineProperty  数组 劫持的是对象的属性，如果劫持的对象的属性的属性值为对象，则需深度遍历\nfunction ArrayHijack() {\n  function arrayProperty(arr) {\n    for (let key in arr) {\n      let value = arr[key];\n      Object.defineProperty(arr, key, {\n        get() {\n          console.log(`get: arr[${key}]`);\n          return value;\n        },\n        set(newValue) {\n          console.log(`set: arr[${key}] to ${newValue}`);\n          return (value = newValue);\n        },\n      });\n    }\n  }\n  arrayProperty(arrShallow);\n\n  arrShallow[0] = 999; // 打印：set: arr[0] to 999\n  arrShallow[3]; // 打印：get: arr[3]\n  arrShallow[8] = 8;\n  // arr.shift(); // 会导致5次前移，所以产生5次get和5次set\n  console.log(arrShallow[0]);\n\n  arrayProperty(arrDeep);\n  arrDeep[0][1] = 6;\n  // 无法深度监听到数组的变化\n  console.log(\"arrDeep[0]:\" + arrDeep[0]); // get: arr[0] arrDeep[0]:1,6,3\n}\n\n// ArrayHijack();\n\n// Object.defineProperty 监听的是对象的单个属性\nfunction ObjectHijack() {\n  let obj = {};\n\n  Object.defineProperty(obj, \"name\", {\n    get() {\n      return value;\n    },\n    set(newValue) {\n      return (value = newValue);\n    },\n  });\n\n  console.log((obj.name = 6)); // 6\n  console.log(obj.name); // 6\n}\n```\n\n#### <span id=\"proxy\">Proxy</span>\n\n[MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy#handler_%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95)\n\nProxy() 用于创建一个对象的代理，从而实现基本操作的拦截和自定义（如属性查找、赋值、枚举、函数调用等）\n\n```js\nconst p = new Proxy(target, handler)\n```\n\n`target`: 要进行代理的目标对象(可以是任何类型的对象，包括原生数组，函数，甚至另一个代理)\n\n`handler`： 代理行为\n\n常见handler：`apply`、`get`、`set`、`has`\n\nhandler.get(target,property,receiver)\n\ntarget: 目标对象\n\nproperty: 被获取的属性名\n\n优势：proxy 是对整个对象进行劫持，并返回一个新对象\n\n劣势：版本兼容性\n\n```js\n// 浅劫持\nfunction shallowProxy() {\n  let obj = {\n    count: 5,\n    user: { name: \"JavaScript\", age: 22 },\n  };\n\n  let proxyObj = new Proxy(obj, {\n    get(target, key) {\n      console.log(`get：${key}`);\n      return target[key];\n    },\n    set(target, key, value) {\n      console.log(`set：${key} to ${value}`);\n      return (target[key] = value);\n    },\n  });\n\n  proxyObj.user.name = \"Golang\";\n  /**浅劫持对象，如果读取到的属性为对象,需要深度劫持获取值\n   * get: user\n   * 相当于 proxyObj.user\n   */\n}\n\n// 深度劫持\nfunction deepProxyObject() {\n  let obj = {\n    count: 5,\n    user: { name: \"JavaScript\", age: 22 },\n  };\n  function deepProxy(obj) {\n    return new Proxy(obj, {\n      get(target, key) {\n        console.log(`get：${key}`);\n        console.log(target[key]);\n        if (typeof target[key] === \"object\" && target[key] !== null) {\n          return deepProxy(target[key]); // 递归劫持\n        }\n        return target[key];\n      },\n      set(target, key, value) {\n        console.log(target);\n        console.log(`set：${key} to ${value}`);\n        return (target[key] = value);\n      },\n    });\n  }\n\n  let proxyObj = deepProxy(obj);\n  proxyObj.user.name = \"Golang\";\n\n  proxyObj.fine = \"i am fine\";\n}\n```\n\n### call、apply、bind的区别\n\ncall()和apply()作用相同，传递参数不同\n\n作用：\n\n+ 改变this的指向\n+ 实现继承\n\n```js\nFunction.prototype.apply(thisArg, argsArray) // 参数数组\nFunction.prototype.call(thisArg, arg1, arg2, ...) // 参数列表\nFunction.prototype.bind(thisArg, arg1, arg2, ...) // 参数列表\n```\n\n`thisArg`: 函数运行时的this值，可选\n\n`arg1`: 传递的参数\n\n```js\nfunction callApply() {\n  function animal(name, type) {\n    this.name = name;\n    this.type = type;\n  }\n\n  function dog(name, type) {\n    animal(name, type);\n    this.year = 10;\n  }\n\n  console.log(new dog(\"哈士奇\", \"狗\").name); // undefined\n\n  function cat(name, type) {\n    animal.call(this, name, type); // 继承\n    console.log(\"---cat---\", this.name, this.year);\n  }\n\n  function bird(name, type) {\n    animal.apply(this, [name, type]);\n    this.year = 20;\n  }\n\n  function display() {\n    console.log(this.name, this.type);\n  }\n\n  console.log(new cat(\"加菲貓\", \"貓\").name); // 加菲貓\n  console.log(new bird(\"蜂鸟\", \"鸟\").name); // 蜂鸟\n  display.call({ name: \"加菲貓\", type: \"貓\" }); // 加菲貓 猫\n}\n```\n\n[MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind)\n\nbind() 创建一个**新的函数**，在 `bind()` 被调用时，这个新函数的 `this` 被指定为 `bind()` 的第一个参数，而其余参数将作为新函数的参数，供调用时使用\n\n+ bind方法能改变this的指向\n+ call()和apply()是立即调用函数\n+ bind()是创建一个新的函数\n\n丢失`this`\n\n```js\nlet user = {\n    firstName: \"John\",\n    sayHi() {\n      console.log(`Hello, ${this.firstName}!`);\n    },\n  };\nuser.sayHi(); // this 为user\nsetTimeout(user.sayHi, 200); // Hello, undefined! settimeout的this为window\n```\n\n这里丢失了user的上下文,实际上settimeout可以被重写为\n\n```js\nlet f = user.sayHi\nsetTimeout(f,200)\n// 浏览器中的setTimeout方法，会为函数调用设定this为window\n```\n\n解决方案1：包装器\n\n```js\n// 匿名函数\nsetTimeout(function() {\n    user.sayHi(); // Hello, John!\n},1000)\n// 或者箭头函数\nsetTimeout(() => user.sayHi(), 1000); // Hello, John!\n```\n\n但是当后面的代码在settimeout调用方法之前，改变user的属性方法，就获取到的是更改后的值\n\n```js\nsetTimeout(() => user.sayHi(), 1000); // Hello, bob!\nuser.firstName = \"bob\"\n```\n\n解决方案2: bind\n\n```js\n// this绑定为 user 也就是say 的this绑定为了 user，是对当前 user的绑定，后续代码对 user的更改不会影响 输出结果\nlet say = user.sayHi.bind(user);\nsay() // Hello, John! \nsetTimeout(say,1000) // Hello, John!\nuser.firstName = \"bob\"\n```\n\n\n\n```js\n  let username = {\n    firstName: \"bob\",\n  };\n\n  let user = {\n    firstName: \"John\",\n    sayHi() {\n      console.log(`Hello, ${this.firstName}!`);\n    },\n  };\n\n  function sayHi(phrase) {\n    console.log(`${phrase}, ${this.firstName}!`);\n  }\n\n  let say = sayHi.bind(username); // Hi, bob!\n  say(\"Hi\");\n  sayHi.call(username, \"call\"); // 会立即执行sayHi函数\n  sayHi.apply(username, [\"apply\"]); // 会立即执行sayHi函数\n```\n\n### this指向问题\n\n[this指向问题](https://juejin.cn/post/6844903746984476686)\n\n[this指向](https://juejin.cn/post/6844904167316652045#heading-4)\n\n1. 严格模式与非严格模式\n\nthis在严格模式下与非严格模式下有细微的差别\n\n```js\n// 非严格模式下\nlet a = 1\nfunction f1(){\n\tconsole.log(this);\n}\nf1() // a\n// 严格模式下\nfunction f2(){\n    \"use strict\";\n\tconsole.log(this);\n}\nf2() // undefined\n```\n\n2. 普通函数下的this指向问题\n\nthis指向取决于最终函数的调用者，即取决于当前执行上下文\n\n`上下文`：上下文类似于英语句子中的主语\n\n```js\nconst test = {\n  prop: 42,\n  func: function() {\n    return this.prop;\n  },\n};\n\nconsole.log(test.func()); // 42 // this为 test\nconst a = test.func(); \nconsole.log(a()); // 此时的this为 window 等同于 window.a()\n```\n\n3. this用于闭包\n\n```js\nvar name = \"pop\"\nfunction say() {\n  var name = \"bob\"\n  // 无法访问到外部函数的this变量\n  return function () {\n    console.log(this.name)\n  };\n}\nlet a = say()\na() // pop\n```\n\n4. 箭头函数中的this指向问题\n\n<a href=\"#arrow\">关于箭头函数</a>\n\n箭头函数中没有`this`绑定，必须通过查找作用域链来决定其值。 如果箭头函数被非箭头函数包含，则`this`绑定的是最近一层非箭头函数的`this`，否则`this`的值则被设置为全局对象\n\n```js\nvar name = 'window'\nvar student = {\n  name: '若川',\n  doSth: function () {\n    // var self = this;\n    var arrowDoSth = () => {\n      // console.log(self.name);\n      console.log(this.name)\n    }\n    arrowDoSth()\n  },\n  arrowDoSth2: () => {\n    console.log(this.name)\n  },\n}\nstudent.doSth() // '若川'\nstudent.arrowDoSth2() // 'window'\n```\n\n`call`、`apply`、`bind`无法直接改变箭头函数的`this`(它自身没有`this`),但可以通过改变箭头函数生成的普通函数的`this`,来改变`this`的指向\n\n```js\nvar name = 'window'\nvar student = {\n  name: '若川',\n  doSth: function () {\n    console.log(this.name)\n    return () => {\n      console.log('arrow this', this.name)\n    }\n  },\n}\nlet person = {\n  name: 'person',\n}\n\nstudent.doSth().call(person) // 若川 arrow this 若川\nlet a = student.doSth.call(person) // person\na() // arrow this person\n```\n\n5. 隐式函数绑定下丢失`this`上下文的问题\n\n```js\nfunction foo() {\n    console.log(this.a);\n};\nvar obj = {\n    a: 1,\n    foo: foo\n};\nvar bar = obj.foo; //传递了函数，隐式绑定丢失了\n\nvar a = 'hello';\n\nbar(); // 'hello' 丢失了上下文\n```\n\n综合考察\n\n```js\nvar name = 'window'\n\nvar person1 = {\n  name: 'person1',\n  show1: function () {\n    console.log(this.name)\n  },\n  show2: () => console.log(this.name),\n  show3: function () {\n    return function () {\n      console.log(this.name)\n    }\n  },\n  show4: function () {\n    return () => console.log(this.name)\n  }\n}\nvar person2 = { name: 'person2' }\n\nperson1.show1()\nperson1.show1.call(person2)\n\nperson1.show2()\nperson1.show2.call(person2)\n\nperson1.show3()()\nperson1.show3().call(person2)\nperson1.show3.call(person2)()\n\nperson1.show4()()\nperson1.show4().call(person2)\nperson1.show4.call(person2)()\n```\n\n正确答案：\n\n```js\nperson1.show1() // person1\nperson1.show1.call(person2) // person2\n\nperson1.show2() // window\nperson1.show2.call(person2) // window\n\nperson1.show3()() // window\nperson1.show3().call(person2) // person2\nperson1.show3.call(person2)() // window\n\nperson1.show4()() // person1\nperson1.show4().call(person2) // person1\nperson1.show4.call(person2)() // person2\n```\n\n其中`person1.show3()`获取到的是一个函数，需要赋值给一个变量才会执行，加上`()`相当于立即执行函数，执行环境为`window`,所以打印window\n\n相当于执行了以下操作\n\n```js\nvar fun = person1.show()\nfun()\n```\n\n`person1.show3().call(person2)` 与 `person1.show3.call(person2)()` 也好理解了。前者是通过person2调用了最终的打印方法。后者是先通过person2调用了person1的高阶函数，然后再在全局环境中执行了该打印方法\n\n### 手写instanceof\n\n<a href=\"#instanceof\">instanceof</a>\n\n```js\nfunction _instanceof(left, right) {\n  let _proto_ = left.__proto__;\n  let prototype = right.prototype;\n  while (true) {\n    if (_proto_ === null) return false;\n    if (_proto_ === prototype) return true;\n    _proto_ = _proto_.__proto__;\n  }\n}\n```\n\n### 手写继承\n\n**`Object.create()`** 方法用于创建一个新对象，使用现有的对象来作为新创建对象的原型（prototype）[MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create)\n\n```js\nfunction inherit() {\n  function Parent(name, age) {\n    this.name = name;\n    this.age = age;\n    this.eat = function () {\n      console.log(`${this.name} eat something`);\n    };\n  }\n  Parent.prototype.say = function () {\n    console.log(`${this.name} say my name is ${this.name} age ${this.age}`);\n  };\n  function Child(name, age, sex) {\n    Parent.call(this, name, age);\n    this.sex = sex;\n  }\n  // Child.prototype = new Parent(); // 与Object.create()效果相同\n  Child.prototype = Object.create(Parent.prototype);\n  // 更改需要利用constructor 指向 如果利用对象的形式修改了原型对象,需要利用constructor 指回原来的构造函数,即修复 constructor\n  Child.prototype.constructor = Child;\n\n  let stu = new Child(\"Bob\", \"male\", 18);\n  stu.say();\n  stu.eat();\n  console.log(stu.constructor.name); // Child\n  // 如果没把Child.prototype.constructor重新指回Child,这里的值会是Parent\n}\n\ninherit();\n```\n\n### 手写call\n\n\n\n```js\nlet name = 'toy'\nfunction person() {\n  console.log(this.name)\n  console.log(...arguments)\n}\n\nlet human = { name: 'bob' }\n\nFunction.prototype.customCall = function (ctx) {\n  // 判断 call 方法调用者是否为函数\n  if (typeof this !== 'function') {\n    console.error('type error')\n  }\n  // 这里的this指向为person，实际执行为person\n  console.log(this)\n  // 如果传入对象上下文不存在，则设置为 window\n  ctx = ctx || window\n  let args = [...arguments].slice(1)\n  console.log(args)\n  // 为 human 添加一个 person 方法\n  ctx.fn = this\n  // 执行该方法 并传入参数 返回运行结果\n  let result = ctx.fn(...args)\n  // 删除\n  delete ctx.fn\n  return result\n}\n\nperson.customCall()\nperson.customCall(human, 'male', 18)\n```\n\n### 手写apply\n\n```js\nFunction.prototype.customApply = function (ctx) {\n  // 判断 call 方法调用者是否为函数\n  if (typeof this !== 'function') {\n    console.error('type error')\n  }\n  // 这里的this指向为person，实际执行为person\n  console.log(this)\n  // 如果传入对象上下文不存在，则设置为 window\n  ctx = ctx || window\n  let args = arguments[1]\n  console.log(args)\n  // 为 human 添加一个 person 方法\n  ctx.fn = this\n  // 执行该方法 并传入参数 返回运行结果\n  let result = null\n  if (args) {\n    result = ctx.fn(...args)\n  } else {\n    result = ctx.fn()\n  }\n  // 删除\n  delete ctx.fn\n  return result\n}\n\nperson.customApply(human, ['male', 18])\n```\n\n### 手写bind\n\n```js\n#\n```\n\n\n\n### <span id=\"arrow\">箭头函数</span>\n\n+ 没有`this`\n+ 没有`arguments`\n+ 不能使用`new`进行调用\n\n```js\n// 箭头函数的this指向与常规变量的查找方式相同,即一层层往上找\nlet group = {\n  title: \"Our Group\",\n  students: [\"John\", \"Pete\", \"Alice\"],\n  showList() {\n    this.students.forEach(\n      student => alert(this.title + ': ' + student)\n    );\n  }\n};\n\ngroup.showList();\n```\n\n### ES6\n\n<a href=\"#var\">块级作用域</a>\n\n<a href=\"#destruct\">解构赋值</a>\n\n<a href=\"#promise\">异步</a>\n\n<a href=\"#arrow\">箭头函数</a>\n\n<a href=\"moudle\">模块化</a>\n\n### <span id=\"destruct\">解构赋值</span>\n\n```js\nfunction destructArgs() {\n  // 数组解构\n  console.log(\"------数组解构------\");\n  [arr1, arr2, ...arrRest] = arrShallow;\n  console.log(arr1, arr2, ...arrRest);\n  [arr1, arr2] = [arr2, arr1];\n  console.log(\"------数组交换------\");\n  console.log(arr1, arr2);\n  // 对象解构\n  console.log(\"------对象解构------\");\n  let options = {\n    size: {\n      width: 100,\n      height: 200,\n    },\n    items: [\"Cake\", \"Donut\"],\n    extra: true,\n    name: {\n      bob: true,\n      pop: false,\n    },\n  };\n  let {\n    items: item,\n    size: { width },\n    ...restObject\n  } = options;\n  console.log(item, width, restObject);\n}\n```\n\n### rest参数\n\n扩展运算符被用在函数形参上时，**它还可以把一个分离的参数序列整合成一个数组**。这一点**经常用于获取函数的多余参数，或者像上面这样处理函数参数个数不确定的情况**\n\n```js\nfunction mutiple(...args) {\n  console.log(args)\n}\nmutiple(1, 2, 3, 4) // [1, 2, 3, 4]\n```\n\n### <span id=\"promise\">async、await和promise</span>\n\n宏任务：setTimeout、setInterval\n\n微任务：Promise.then()\n\n任务执行顺序：同步任务--> 微任务--> 宏任务\n\n微任务会依次全部执行再执行下一个宏任务\n\n```js\nasync function sync() {\n  let Promise1 = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      console.log(\"Promise1\");\n      resolve(\"resolve\");\n      console.log(\"object\");\n    }, 3000);\n    console.log(\"111\");\n    resolve(\"Promise1End\");\n    reject(\"2\");\n    console.log(\"can?\");\n  })\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  // console.log(Primise1);\n  console.log(\"同步1\");\n  console.log(\"同步2\");\n  let Promise2 = await new Promise((resolve, reject) => {\n    setTimeout(() => {\n      console.log(\"Promise2\");\n      resolve(\"end\");\n    }, 3000);\n  });\n  console.log(Promise2);\n  console.log(\"同步3\");\n  // Promise.all([Promise1, Promise2]);\n}\n```\n\n### <span id=\"var\">var、let和const</span>\n\nlet和const的特点:\n\n+ 不允许重复声明\n\n+ 不存在变量提升\n\n+  暂时性死区\n\n+  块级作用域\n\nvar:\n\n  存在变量提升、可重复声明、无块级作用域\n\n暂时性死区：\n\n  使用let、const声明的变量，必须先声明变量在使用\n\n```js\n\n```\n\n### 判断数组\n\n#### Object.prototype.toString.call\n\n[MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString)\n\n`toString()`方法返回一个表示改对象的字符串\n\n> 每个对象都有一个 `toString()` 方法，当该对象被表示为一个文本值时，或者一个对象以预期的字符串方式引用时自动调用。默认情况下，`toString()` 方法被每个 `Object` 对象继承。如果此方法在自定义对象中未被覆盖，`toString()` 返回 \"[object *type*]\"，其中 `type` 是对象的类型\n\n```js\nconsole.log(Object.prototype.toString(Object)); // [object Object]\nconsole.log(Object.prototype.toString(function () {})); // [object Object]\nObject.prototype.toString.call('An') // \"[object String]\"\nObject.prototype.toString.call(1) // \"[object Number]\"\nObject.prototype.toString.call(Symbol(1)) // \"[object Symbol]\"\nObject.prototype.toString.call(null) // \"[object Null]\"\nObject.prototype.toString.call(undefined) // \"[object Undefined]\"\nObject.prototype.toString.call(function(){}) // \"[object Function]\"\nObject.prototype.toString.call({name: 'An'}) // \"[object Object]\"\n```\n\n重写`toString`方法\n\n```js\nfunction Dog(name, breed, sex, color) {\n  this.name = name;\n  this.breed = breed;\n  this.sex = sex;\n  this.color = color;\n}\n\nDog.prototype.toString = function dogString() {\n  return `Dog ${this.name} is a ${this.sex} ${this.color} ${this.breed}`;\n};\n\nlet dog = new Dog(\"catty\", \"Lab\", \"male\", \"black\");\nconsole.log(dog.toString()); // Dog catty is a male black Lab\n```\n\n#### <span id=\"instanceof\"> instanceof</span>\n\n`instanceof` 的内部机制是通过判断对象的原型链中是不是能找到类型的 `prototype`\n\n使用 `instanceof`判断一个对象是否为数组，`instanceof` 会判断这个对象的原型链上是否会找到对应的 `Array` 的原型，找到返回 `true`，否则返回 `false`\n\n但 `instanceof` 只能用来判断对象类型，原始类型不可以。并且所有对象类型 instanceof Object 都是 true\n\n```js\n[]  instanceof Array; // true\n[]  instanceof Object; // true\n```\n\n#### Array.isArray\n\n[MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray)\n\n```js\nArray.isArray([]) // true\nArray.isArray({}) // false\n```\n\n### EventLoop\n\n在`JavaScript`中，任务被分为两种，一种宏任务（`MacroTask`）也叫`Task`，一种叫微任务（`MicroTask`）\n\n宏任务\n\n[微任务、宏任务与Eventloop](https://juejin.cn/post/6844903657264136200)  [EventLoop](https://juejin.cn/post/6844903764202094606)\n\n| #                     | 浏览器 | Node |\n| --------------------- | ------ | ---- |\n| I/O                   | ✅      | ✅    |\n| setTimeout            | ✅      | ✅    |\n| setInterval           | ✅      | ✅    |\n| setImmediate          | ❌      | ✅    |\n| requestAnimationFrame | ✅      | ❌    |\n\n微任务\n\n| #                          | 浏览器 | NOde |\n| -------------------------- | ------ | ---- |\n| process.nextTick           | ❌      | ✅    |\n| MutationObserver           | ✅      | ❌    |\n| Promise.then catch finally | ✅      | ✅    |\n\n### 跨域\n\n#### 跨域的定义\n\n当协议、域名、端口中任意一个不相同时，就会造成跨域。跨域是浏览器**同源策略**导致的。\n\n同源：协议、域名、端口三者都相同\n\n同源策略限制内容有：\n\n+ Cookie、LocalStorage、IndexedDB 等存储性内容\n+ DOM 节点\n+ AJAX 请求发送后，结果被浏览器拦截了\n\n但有三个标签运行跨域加载资源\n\n+ `<img src=XXX>`\n+ `<link href=XXX>`\n+ `<script src=XXX>`\n\n#### 跨域解决方案\n\n[跨域的解决方案](https://juejin.cn/post/6844903767226351623)\n\n1. JSONP\n\n原理：利用`<script>`标签没有跨域限制的漏洞，实现跨域\n\n缺点：只支持get请求，不安全可能会遭受XSS攻击\n\n实现：\n\n```js\nfunction jsonp({ url, params, callback }) {\n  return new Promise((resolve, reject) => {\n    let script = document.createElement('script')\n    window[callback] = function(data) {\n      resolve(data)\n      document.body.removeChild(script)\n    }\n    params = { ...params, callback } // wd=b&callback=show\n    let arrs = []\n    for (let key in params) {\n      arrs.push(`${key}=${params[key]}`)\n    }\n    script.src = `${url}?${arrs.join('&')}`\n    document.body.appendChild(script)\n  })\n}\njsonp({\n  url: 'http://localhost:3000/say',\n  params: { wd: 'Iloveyou' },\n  callback: 'show'\n}).then(data => {\n  console.log(data)\n})\n```\n\n上面这段代码相当于向`http://localhost:3000/say?wd=Iloveyou&callback=show`这个地址请求数据\n\n2. CORS\n\n**CORS 需要浏览器和后端同时支持。IE 8 和 9 需要通过 XDomainRequest 来实现**\n\n浏览器会自动进行 CORS 通信，实现 CORS 通信的关键是后端。只要后端实现了 CORS，就实现了跨域\n\n服务端设置 **Access-Control-Allow-Origin** 就可以开启 CORS。 该属性表示哪些域名可以访问资源，如果设置通配符则表示所有网站都可以访问资源\n\n3. postMessage\n\npostMessage是HTML5 XMLHttpRequest Level 2中的API，且是为数不多可以跨域操作的window属性之一，它可用于解决以下方面的问题：\n\n+ 页面和其打开的新窗口的数据传递\n+ 多窗口之间消息传递\n+ 页面与嵌套的iframe消息传递\n+ 上面三个场景的跨域数据传递\n\n`http://localhost:3000/a.html`页面向`http://localhost:4000/b.html`发送信息\n\n```html\n// a.html\n  <iframe src=\"http://localhost:4000/b.html\" frameborder=\"0\" id=\"frame\" onload=\"load()\"></iframe> //等它加载完触发一个事件\n  //内嵌在http://localhost:3000/a.html\n    <script>\n      function load() {\n        let frame = document.getElementById('frame')\n        frame.contentWindow.postMessage('我爱你', 'http://localhost:4000') //发送数据\n        window.onmessage = function(e) { //接受返回数据\n          console.log(e.data) //我不爱你\n        }\n      }\n    </script>\n```\n\n```js\n// b.html\n  window.onmessage = function(e) {\n    console.log(e.data) //我爱你\n    e.source.postMessage('我不爱你', e.origin)\n }\n```\n\n4. Nginx反向代理\n\n实现原理类似于Node中间件代理，需要你搭建一个中转nginx服务器，用于转发请求。\n\n使用nginx反向代理实现跨域，是最简单的跨域方式。只需要修改nginx的配置即可解决跨域问题，支持所有浏览器，支持session，不需要修改任何代码，并且不会影响服务器性能。\n\n实现思路：通过nginx配置一个代理服务器（域名与domain1相同，端口不同）做跳板机，反向代理访问domain2接口，并且可以顺便修改cookie中domain信息，方便当前域cookie写入，实现跨域登录\n\n5. NodeJs中间件代理\n\n实现原理：**同源策略是浏览器需要遵循的标准，而如果是服务器向服务器请求就无需遵循同源策略。** 代理服务器，需要做以下几个步骤：\n\n+ 接受客户端请求 \n+ 将请求转发给服务器\n+ 拿到服务器响应数据\n+ 将响应转发给客户端\n\n![中间件代理](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20221022213713.webp)\n\n6. websocket\n\nWebsocket是HTML5的一个持久化的协议，它实现了浏览器与服务器的全双工通信，同时也是跨域的一种解决方案。WebSocket和HTTP都是应用层协议，都基于 TCP 协议。但是 **WebSocket 是一种双向通信协议，在建立连接之后，WebSocket 的 server 与 client 都能主动向对方发送或接收数据**。同时，WebSocket 在建立连接时需要借助 HTTP 协议，连接建立好了之后 client 与 server 之间的双向通信就与 HTTP 无关了\n\n本地文件socket.html向`localhost:3000`发生数据和接受数据\n\n```html\n// socket.html\n<script>\n    let socket = new WebSocket('ws://localhost:3000');\n    socket.onopen = function () {\n      socket.send('我爱你');//向服务器发送数据\n    }\n    socket.onmessage = function (e) {\n      console.log(e.data);//接收服务器返回的数据\n    }\n</script>\n```\n\n```js\n// server.js\nlet express = require('express');\nlet app = express();\nlet WebSocket = require('ws');//记得安装ws\nlet wss = new WebSocket.Server({port:3000});\nwss.on('connection',function(ws) {\n  ws.on('message', function (data) {\n    console.log(data);\n    ws.send('我不爱你')\n  });\n})\n```\n\n7. window.name + iframe\n8. location.hash + iframe\n9. document.domain + iframe\n\n### XLSX\n\n安装\n\n```bash\nnpm install xlsx\n```\n\n导入\n\n```js\nimport * as XLSX from 'xlsx'\nimport XLSX from 'xlsx'\n```\n\n新建工作簿\n\n```js\n const wb = XLSX.utils.book_new();\n```\n\n数据格式转换\n\n```js\n// json类型数据转换成sheet\nlet sheet1 = XLSX.utils.json_to_sheet(rows)\n// json数据格式\nconst rows = [\n    { '列1': 1, '列2': 2, '列3': 3 },\n    { '列1': 4, '列2': 5, '列3': 6 }\n]\n\n// 二维数组\nlet sheet2 = XLSX.utils.aoa_to_sheet(ws_data)\n// 数组格式\nconst ws_data = [\n    [\"姓名\",\"性别\",\"年龄\"],\n    [\"蔡徐坤\",\"男\",\"60\"],\n    [\"李明\",\"男\",\"30\"]\n]\n```\n\n添加工作表数据\n\n```js\n// 参数：工作簿、sheet数据、工作表(sheet)名字\n    XLSX.utils.book_append_sheet(wb,sheet1,['Sheet1'])\n```\n\n文件存储\n\n```js\nXLSX.writeFile(wb, fileName);\n```\n\n## 性能优化\n\n### 节流与防抖\n\n#### 防抖\n\n事件频繁触发情况下，`delay`时间内被触发则会重新计时\n\n```js\n// 防抖 设置方法执行间隔为 delay ms ，delay 时间内事件被触发则重新计时\nfunction debunce(fn, delay) {\n  delay = delay || 500;\n  let timer = null; // 被闭包函数使用\n  // 剩余参数数组\n  return function () {\n    let ctx = this;\n    let args = [...arguments];\n    clearTimeout(timer); // 如果 delay 秒内函数被执行则，会清除前面的settimeout\n    timer = setTimeout(function () {\n      console.log(args);\n      fn.apply(ctx, args);\n    }, delay);\n  };\n}\n```\n\n> 函数防抖就像回城，被打断就会重新计时\n\n应用场景：\n\n+ 按钮点击\n+ 输入框\n\n#### 节流\n\n规定事件在`delay`时间内只会执行一次\n\n```js\n// 节流 设置方法执行间隔为 delay ms， delay 时间内时间被触发则只执行一次事件\nfunction throttle(fn, delay = 500) {\n  let timer = null;\n  return function () {\n    // 有 settimeout 则退出，不执行\n    let ctx = this;\n    let args = [...arguments];\n    if (!timer) {\n      timer = setTimeout(() => {\n        console.log(args);\n        fn.apply(ctx, args);\n        timer = null;\n      }, delay);\n    }\n  };\n}\n```\n\n> 函数节流就像游戏中的攻击速度，规定一定时间内只能攻击多少次\n\n应用场景：\n\n+ DOM元素拖拽\n+ 游戏中的刷新率\n+ canvas画笔功能\n\n### 加快首屏加载速度\n\n[Vue加快首屏加载速度](https://juejin.cn/post/6844904185264095246)\n\n1. 压缩\n\n+ gzip压缩\n\n+ 图片压缩\n\n2. 路由懒加载\n3. 优化分包策略\n\n3. CDN引入\n4. 优化分包\n\n4. SSR服务器渲染\n\n5. 增加宽带\n\n### 回流与重绘\n\n#### 浏览器的渲染流程\n\n[回流与重绘](https://www.cnblogs.com/xiahj/p/11777786.html)\n\n渲染引擎：主要有Gecko和Webkit，其中Firefox 使用的是 Gecko，而 Safari 和 Chrome 浏览器使用的都是 WebKit\n\n渲染流程：\n\n![WebKit 渲染引擎的主流程](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220825175831.png)\n\n1. 解析HTML Source，生成DOM树\n2. 解析CSS，生成CSSOM树\n3. 将DOM树和CSSOM树结合，去除不可见元素，生成渲染树(Render Tree)\n4. Layout(布局):根据生成的渲染树，进行布局(Layout)，得到节点的几何信息（位置，大小）\n5. Painting(重绘):根据渲染树以及回流得到的几何信息，将 Render Tree 的每个像素渲染到屏幕上\n\n#### 回流(reflow)\n\n> 渲染对象在创建完成并添加到渲染树时，是将DOM节点和它对应的样式结合起来，并不包含位置和大小信息。\n>\n> 我们还需要通过 `Layout` 布局阶段，来计算它们在设备视口(viewport)内的确切**位置和大小**，计算这些值的过程称为`回流`、`布局`或`重排`(reflow)\n\nHTML 采用基于流的布局模型，从根渲染对象（即`<html>`）开始，递归遍历部分或所有的框架层次结构，为每一个需要计算的渲染对象计算几何信息，大多数情况下只要一次遍历就能**计算**出几何信息。但是也有例外，比如`<table>`的计算就需要不止一次的遍历\n\n##### 触发回流条件\n\nDOM元素的**大小**和**位置**发生变化的时候，会触发回流\n\n改变这些属性会触发回流：\n\n+ 盒模型相关的属性: `width`，`height`，`margin`，`display`，`border`等\n+ 定位属性及浮动相关的属性: `top`,`position`,`float`等\n+ 改变节点内部文字结构也会触发回流:`text-align`, `overflow`, `font-size`, `line-height`, `vertival-align`等\n\n以及进行以下流程或操作：\n\n+ 页面一开始渲染的时候\n+ 添加或删除可见的DOM元素，进行DOM操作等\n+ 内容发生变化，比如文本变化或图片被另一个不同尺寸的图片所替代\n+ 浏览器的窗口尺寸变化（因为回流是根据视口的大小来计算元素的位置和大小的）\n+ css伪类激活\n+ 进行**获取布局**信息的操作，比如`offsetWidth`、`offsetHeight`、`clientWidth`、`clientHeight`、`width`、`height`、`scrollTop`、`scrollHeight`,`getComputedStyle`, `getBoundingClientRect`等\n\n#### 重绘(repaint)\n\n>  **绘制 paint**：当各种盒子的位置、大小以及其他属性，例如颜色、字体大小等都确定下来后，浏览器便把这些元素都按照各自的特性绘制一遍，于是页面的内容出现了，这个过程也称之为 Repaint（重绘制）\n>\n> 说白了，页面要呈现的内容，统统画在屏幕上，这就叫 Repaint\n\n##### 触发绘制条件\n\n+ DOM改动\n+ CSS改动\n\n其实，就是判断当视觉上是否发生变化（无论这个变化是通过DOM改动还是CSS改动）。只要页面显示的内容不一样了，肯定要 Repaint\n\n> **回流一定会触发重绘，而重绘不一定会回流**\n\n#### 渲染性能优化\n\n> 注意：回流可以避免，但重绘无法避免，否则就成静态页面了\n\n##### 避免回流\n\n1. 减少对dom的操作\n2. 使元素脱离文档流\n3. 避免或减少访问某些属性\n4. css属性尽量使用简写\n5. `transfrom`代替`left`、`top`,`opacity`代替`visibility`，使用`tansfrom`或`opacity`不会触发绘制\n6. 避免使用`table`布局\n\n##### 减少重绘\n\n+ 如果需要创建多个DOM节点，可以使用**DocumentFragment**创建完，然后一次性地加入document。（加一个节点，就repaint一次，不太好）\n+ 将元素的display设置为”none”，完成修改后再把display修改为原来的值\n\n```js\n// 例1-使用 createDocumentFragment 方法创建虚拟的 dom 对象，将新 dom 需要修改的对象进行复制，然后对创建的 dom 进行相应的修改，最终在把 dom 与旧 dom 进行替换\n  \t// 这样的能将对 dom 的多次修改合并为一次，大大减少了回流和重绘的次数\n    let box = document.querySelector('#box')\n    let test = document.createDocumentFragment()\n    for (let i = 0; i < 5; i++) {\n        let li = document.createElement(\"li\")\n        li.appendChild(document.createTextNode(i))\n        test.appendChild(li)\n    }\n    box.appendChild(test)\n  \n  \n  \t// 例2-把需要修改的 dom 隐藏，修改完成后再将 dom 重新显示\n  \t// 使用 display: none 后渲染树中将不再渲染当前 dom，所以多次操作也不会多次触发回流和重绘\n  \tlet box = document.querySelector('#box')\n    box.style.display = 'none';\n  \tfor (let i = 0; i < 5; i++) {\n        let li = document.createElement(\"li\")\n        li.appendChild(document.createTextNode(i))\n        box.appendChild(li)\n    }\n```\n\n## 浏览器原理\n\n### 浏览器安全\n\n#### XSS攻击\n\n[XSS](https://juejin.cn/post/6844903685122703367)\n\n概念：Cross-Site Scripting（跨站脚本攻击）简称 XSS，是一种代码注入攻击。攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全\n\nXSS的本质是：恶意代码未经过滤，与网站正常的代码混在一起；浏览器无法分辨哪些脚本是可信的，导致恶意脚本被执行\n\nXSS攻击方式：用户的输入内容，URL上的参数\n\n#### XSS分类\n\nXSS攻击可分为<a href=\"#存储型\">存储型</a>、<a href=\"#反射型\">反射型</a>和<a href=\"#dom\">DOM型</a>三种\n\n##### <span id=\"存储型\">存储型XSS</span>\n\n攻击步骤：\n\n1. 攻击者将恶意代码注入到目标网站的数据库中\n2. 用户打开目标网站时，网站服务器将恶意代码从数据库取出，拼接在HTML中返回给浏览器\n3. 用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。\n4. 恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作\n\n这种攻击常见于带有用户保存数据的网站功能，如论坛发帖、商品评论、用户私信等\n\n##### <span id=\"反射型\">反射型XSS</span>\n\n攻击步骤：\n\n1. 攻击者构造出特殊的 URL，其中包含恶意代码。\n2. 用户打开带有恶意代码的 URL 时，网站服务端将恶意代码从 URL 中取出，拼接在 HTML 中返回给浏览器。\n3. 用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。\n4. 恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作\n\n反射型 XSS 漏洞常见于通过 URL 传递参数的功能，如网站搜索、跳转等。\n\n由于需要用户主动打开恶意的 URL 才能生效，攻击者往往会结合多种手段诱导用户点击\n\n##### <span id=\"dom\">DOM型XSS</span>\n\n攻击步骤：\n\n1. 攻击者构造出特殊的 URL，其中包含恶意代码。\n2. 用户打开带有恶意代码的 URL。\n3. 用户浏览器接收到响应后解析执行，前端 JavaScript 取出 URL 中的恶意代码并执行。\n4. 恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作\n\nDOM 型 XSS 跟前两种 XSS 的区别：DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞\n\n#### XSS攻击预防\n\nXSS攻击有两大要素：\n\n1. 攻击者提交恶意代码\n2. 浏览器执行恶意代码\n\n预防措施：\n\n1. 输入过滤\n\n2. 纯前端渲染\n\n3. 转义HTML\n\n4. 预防DOM型XSS攻击\n\n   尽量避免使用`.innerHTML`、`.outerHTML`，而应尽量使用`.textContent`、`.setAttribute`等\n\n#### CSRF攻击\n\n> CSRF指的是**跨站请求伪造攻击**，攻击者诱导用户进入一个第三方网站，然后该网站向被攻击网站发送跨站请求。如果用户在被攻击网站中保存了登录状态，那么攻击者就可以利用这个登录状态，绕过后台的用户验证，冒充用户向服务器执行一些操作\n\nCSRF 攻击的**本质是利用 cookie 会在同源请求中携带发送给服务器的特点，以此来实现用户的冒充**\n\n### 浏览器缓存\n\n#### 概念\n\n[浏览器缓存](https://juejin.cn/post/6844903672556552205#heading-5)\n\n> 浏览器缓存：是指浏览器对用户请求过的静态资源(html、css、js)，存储到电脑本地磁盘中，当浏览器再次访问时，就可以直接从本地加载了，不需要再去服务端请求\n\n缓存的优点：\n\n+ 减少了服务器的负担、提升网站性能\n+ 加快客户端网页加载速度\n+ 减少了冗余的数据传输，减少网费\n\n缺点：\n\n+ 容易导致客户端代码更新不及时\n\n浏览器缓存分为协商缓存与强缓存\n\n#### 协商缓存与强缓存\n\n##### 强缓存\n\n使用强缓存策略时，如果缓存资源有效，则直接使用缓存资源，不再向服务器发送请求\n\n强缓存策略可以通过两种方式来设置，分别是响应头中的`Expires`属性和`Cache-Control`属性\n\n`Expires`中的时间是一个绝对时间，它是服务器的时间，因此当客户端的时间和服务器的时间不一致，或者用户对客户端时间进行修改，这样可能会影响缓存命中的结果\n\n`Cache-Control`的几个取值含义：\n\n+ **private：** 仅浏览器可以缓存\n+ **public：** 浏览器和代理服务器都可以缓存（对于private和public，前端可以认为一样，不用深究）\n+ **max-age=xxx** 过期时间（重要）\n+ **no-cache**  不进行强缓存（重要）\n+ **no-store**   不强缓存，也不协商缓存，基本不用，缓存越多才越好呢\n\n##### 协商缓存\n\n协商缓存条件：\n\n+ `Cache-Control`的值为`no-cache`\n+ 或者`max-age`过期了\n\n使用协商缓存策略时，会先向服务器发送一个请求，如果资源没有发生修改，则返回一个 304 状态，让浏览器使用本地的缓存副本。如果资源发生了修改，则返回修改后的资源\n\n协商缓存也可以通过两种方式来设置，分别是 http 头信息中的**Etag** 和**Last-Modified**属性\n\n`Etag`是服务器根据当前请求的资源生成的一个唯一标识，**这个唯一标识是一个字符串，只要资源有变化这个串就不同**，跟最后修改时间没有关系\n\nEtag的必要性：\n\n使用Last-Modified已经足以让浏览器知道本地的缓存副本是否足够新，但是仍然有以下几个问题难以解决：\n\n+ 一些文件也许会周期性的更改，但是他的内容并不改变(仅仅改变的修改时间)，这个时候我们并不希望客户端认为这个文件被修改了，而重新GET\n+ 某些文件修改非常频繁，比如在秒以下的时间内进行修改，(比方说1s内修改了N次)，If-Modified-Since能检查到的粒度是s级的，这种修改无法判断(或者说UNIX记录MTIME只能精确到秒)\n+ 某些服务器不能精确的得到文件的最后修改时间\n\n**Etag的优先级比Last-Modified的优先级高**\n\nF5 会 跳过强缓存规则，直接走协商缓存；；；Ctrl+F5 ，跳过所有缓存规则，和第一次请求一样，重新获取资源\n\n![缓存判断流程](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220826162750.webp)\n\n### 浏览器解析URL\n\n用户输入URL，到浏览器呈现给用户页面，经历了哪些过程\n\n1. 用户输入url\n2. 对url地址进行DNs域名解析\n3. 进行TCP连接\n4. 进行HTTP报文的请求与响应\n5. 浏览器解析文档资源并渲染页面\n\n\n\n## Vue\n\n### 生命周期\n\n[生命周期](https://juejin.cn/post/7032881219524100132)\n\n![生命周期.webp](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20221016095155.webp)\n\n### vue2到vue3的变化\n\n+ 组合式api\n  + 响应式api：`ref()`、`reactive()`\n  + 生命周期钩子：`onM0unted()`、`onUnmounted`\n  + 解决了混入的缺陷\n  + 减少了包的体积\n+ 响应式原理 proxy\n+ emit事件 需要先定义事件名\n+ vue3可以有多个顶层标签\n+ style里可以用(`v-bind`)关键字\n+ :deep(.foo){}\n\n和Mixin相比，mixins有三个主要短板\n\n[官方文档](https://cn.vuejs.org/guide/reusability/composables.html#comparisons-with-other-techniques)\n\n1. 不清楚的数据来源\n2. 命名空间冲突\n3. 隐式的跨mixin交流\n\n### MVVM、MVC、MVP的区别\n\n#### MVVM\n\n`MVVM`即`Model`、`View`、`ViewModel`\n\n+ MOdel代表数据模型，数据和业务逻辑都在Model层中定义\n+ View代表UI视图，负责数据的展示\n+ ViewModel负责监听Model中数据的改变并且控制视图的更新，处理用户交互操作\n\n#### MVC\n\n#### MVP\n\n### 响应式原理\n\n`Vue2`监听采用的是<a href=\"#defineProperty\">Object.defineProperty()</a>,`Vue3`则是<a href=\"#prroxy\">Proxy</a>\n\n采用数据劫持结合发布者订阅者模式的方式，通过Object.defineProperty()来劫持各个属性的getter、setter，在数据变动时执行`dep.notify()`方法，发布消息给订阅者(`Watcher`)，进行视图更新\n\n#### Vue类\n\n创建一个Vue类\n\n```js\nclass Vue{\n    constructor(options){\n       this.$el=options.el;\n       this._data=options.data;\n       this.$data=this._data;\n       //对data进行响应式处理\n       new Observe(this._data);\n   }\n}\n//创建Vue对象\nnew Vue({\n    el:'#app',\n    data:{\n      message:'hello world'\n    }\n})\n```\n\n\n\n#### Observe类\n\n`Observe`进行数据监听\n\n```js\nclass Observe{\n    constructor(data){\n       //如果传入的数据是object\n       if(typeof data=='object'){\n           this.walk(data);\n       }\n    }\n    //这个方法遍历对象中的属性，并依次对其进行响应式处理\n    walk(obj){\n        //获取所有属性\n        const keys=Object.keys(obj);\n        for (let i = 0; i < keys.length; i++) {\n            //对所有属性进行监听（数据劫持）\n            this.defineReactive(obj, keys[i])\n        }\n    }\n    defineReactive(obj,key){\n        if(typeof obj[key]=='object'){\n            //如果属性是对象，那么那么递归调用walk方法\n            this.walk(obj[key]);\n        }\n        const dep=new Dep();//Dep类用于收集依赖\n        const val=obj[key];\n        Object.defineProperty(obj, key, {\n            enumerable: true,\n            configurable: true,\n            //get代理将Dep.target即Watcher对象添加到依赖集合中\n            get() {\n              //这里在创建Watcher对象时会给Dep.target赋值\n              if (Dep.target) {\n                dep.addSubs(Dep.target);\n              }\n              return val;\n            },\n            set(newVal) {\n                val=newVal;\n                //依赖的变更响应\n                dep.notify(newVal)\n            } \n          })\n    }\n}\n```\n\n#### Dep类\n\n`Dep`收集依赖,当`Observer`中的`data`触发`getter`时，`Dep`就会收集依赖的`Watcher`，当`data`变动时，就会通过`Dep`给`Watcher`发通知更新\n\n```js\nclass Dep{\n   static target=null\n   constructor(){\n       this.subs=[];\n   }\n   addSubs(watcher){\n       this.subs.push(watcher)\n   }\n   notify(newVal){\n       for(let i=0;i<this.subs.length;i++){\n           this.subs[i].update(newVal);\n       }\n   }\n}\n```\n\n#### Watcher类\n\n`Watcher`类用于观察数据的变更，它会调用data中对应属性的`get`方法触发`Dep`依赖收集，并在数据变更后执行相应视图更新\n\n```js\nlet uid=0\nclass Watcher{\n    //vm即一个Vue对象，key要观察的属性，cb是观测到数据变化后需要做的操作，通常是指DOM变更\n    constructor(vm,key,cb){\n       this.vm=vm;\n       this.uid=uid++;\n       this.cb=cb;\n       //调用get触发依赖收集之前，把自身赋值给Dep.taget静态变量\n       Dep.target=this;\n       //触发对象上代理的get方法，执行get添加依赖\n       this.value=vm.$data[key];\n       //用完即清空\n       Dep.target=null;\n    }\n    //在调用set触发Dep的notify时要执行的update函数，用于响应数据变化执行run函数即dom变更\n    update(newValue){\n        //值发生变化才变更\n        if(this.value!==newValue){\n            this.value=newValue;\n            this.run();\n        }\n    }\n    //执行DOM更新等操作\n    run(){\n        this.cb(this.value);\n    }\n}\n```\n\n通过以上代码即可实现一个简易版的Vue\n\n```js\nlet data={\n    message:'hello',\n    num:0\n}\nlet app=new Vue({\n    data:data\n});\n//模拟数据监听\nnew Watcher(app,'message',function(value){\n    //模拟dom变更\n    console.log('message 引起的dom变更--->',value);\n})\nnew Watcher(app,'num',function(value){\n    //模拟dom变更\n    console.log('num 引起的dom变更--->',value);\n})\ndata.message='world';\ndata.num=100;\n```\n\n#### 总结\n\n其实在 **Vue** 中初始化渲染时，视图上绑定的数据就会实例化一个 **Watcher**，依赖收集就是是通过属性的 **getter** 函数完成的，文章一开始讲到的 **Observer** 、**Watcher** 、**Dep** 都与依赖收集相关。其中 **Observer** 与 **Dep**是一对一的关系， **Dep** 与 **Watcher** 是多对多的关系，**Dep** 则是 **Observer** 和 **Watcher** 之间的纽带。依赖收集完成后，当属性变化会执行被 **Observer** 对象的 **dep.notify()** 方法，这个方法会遍历订阅者（Watcher）列表向其发送消息， **Watcher** 会执行 **run** 方法去更新视图\n\n![reactive](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220823105557.webp)\n\n### 虚拟DOM\n\n> 虚拟DOM是对真实DOM的一种抽象,本身就是一个js对象\n\n优点：将真实节点抽象成VNode，有效减少直接操作dom次数，提高程序性能\n\n\n\n","slug":"实习","published":1,"updated":"2022-10-22T14:13:02.932Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3v003gjsvk92ma69kp","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>[TOC]</p>\n<h2 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h2><h3 id=\"typeof\"><a href=\"#typeof\" class=\"headerlink\" title=\"typeof\"></a>typeof</h3><p><code>typeof</code>操作符返回一个字符串，表示未经计算的操作数的类型</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/undefined\">Undefined</a></td>\n<td style=\"text-align:left\"><code>\"undefined\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Null\">Null</a></td>\n<td style=\"text-align:left\"><code>\"object\"</code> (见<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof#typeof_null\">下文</a>)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Boolean\">Boolean</a></td>\n<td style=\"text-align:left\"><code>\"boolean\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Number\">Number</a></td>\n<td style=\"text-align:left\"><code>\"number\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/BigInt\">BigInt</a>(ECMAScript 2020 新增)</td>\n<td style=\"text-align:left\"><code>\"bigint\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/String\">String</a></td>\n<td style=\"text-align:left\"><code>\"string\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a> (ECMAScript 2015 新增)</td>\n<td style=\"text-align:left\"><code>\"symbol\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">宿主对象（由 JS 环境提供）</td>\n<td style=\"text-align:left\"><em>取决于具体实现</em></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Function\">Function</a> 对象 (按照 ECMA-262 规范实现 [[Call]])</td>\n<td style=\"text-align:left\"><code>\"function\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">其他任何对象</td>\n<td style=\"text-align:left\"><code>\"object\"</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>特别地：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"object\"</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"number\"</span></code></pre>\n<p>NaN 是一个特殊值，它和自身不相等，是唯一一个非自反（自反，reflexive，即 x === x 不成立）的值。而 NaN !== NaN 为 true</p>\n<h3 id=\"instanceof\"><a href=\"#instanceof\" class=\"headerlink\" title=\"instanceof\"></a>instanceof</h3><p><code>instanceof</code>可以正确判断对象的类型，<strong>其内部运行机制是判断在其原型链中能否找到该类型的原型</strong></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// false </span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'str'</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// false </span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// true</span></code></pre>\n<p><code>instanceof</code><strong>只能正确判断引用数据类型</strong>，而不能判断基本数据类型。<code>instanceof</code> 运算符可以用来测试一个对象在其原型链中是否存在一个构造函数的 <code>prototype</code> 属性</p>\n<h3 id=\"构造器与new操作符\"><a href=\"#构造器与new操作符\" class=\"headerlink\" title=\"构造器与new操作符\"></a>构造器与new操作符</h3><h4 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h4><p>构造函数在本质上是常规函数，不过有两个约定：</p>\n<ul>\n<li>命名以大写字母开头</li>\n<li>只能由<code>new</code>操作符执行</li>\n</ul>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isAdmin <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jack\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Jack</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre>\n<p>当一个函数被使用<code>new</code>操作符执行时，它按照以下步骤：</p>\n<ul>\n<li>创建一个新的空对象并分配给<code>this</code></li>\n<li>函数执行时，通常会修改<code>this</code>，为其添加新的属性</li>\n<li>隐式<code>return</code>返回<code>this</code>的值</li>\n</ul>\n<p>换句话说，<code>new User(...)</code> 做的就是类似的事情：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// this = {};（隐式创建）</span>\n\n  <span class=\"token comment\">// 添加属性到 this</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isAdmin <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// return this;（隐式返回）</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>所以 <code>new User(\"Jack\")</code> 的结果是相同的对象：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Jack\"</span><span class=\"token punctuation\">,</span>\n  isAdmin<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<h4 id=\"构造器的return\"><a href=\"#构造器的return\" class=\"headerlink\" title=\"构造器的return\"></a>构造器的return</h4><p>通常，构造器没有 <code>return</code> 语句。它们的任务是将所有必要的东西写入 <code>this</code>，并自动转换为结果。</p>\n<p>但是，如果这有一个 <code>return</code> 语句，那么规则就简单了：</p>\n<ul>\n<li>如果 <code>return</code> 返回的是一个对象，则返回这个对象，而不是 <code>this</code>。</li>\n<li>如果 <code>return</code> 返回的是一个原始类型，则忽略。</li>\n</ul>\n<p>换句话说，带有对象的 <code>return</code> 返回该对象，在所有其他情况下返回 <code>this</code></p>\n<h3 id=\"class语法\"><a href=\"#class语法\" class=\"headerlink\" title=\"class语法\"></a>class语法</h3><p>基础语法</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 用法：</span>\n<span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><code>class</code>的本质仍然是函数，<code>class User{...}</code>构造实际上做了如下的事</p>\n<ul>\n<li>创建一个名为<code>User</code>的函数，该函数成为类声明的结果。该函数的代码来自于 <code>constructor</code> 方法（如果我们不编写这种方法，那么它就被假定为空）</li>\n<li>存储类中的方法，例如 <code>User.prototype</code> 中的 <code>sayHi</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220824100400.png\" alt=\"class\"></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>User <span class=\"token operator\">===</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token comment\">// 在原型中实际上有两个方法</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyNames</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// constructor, sayHi</span></code></pre>\n<p><code>class</code>声明的函数与下面代码效果相同</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 1. 创建构造器函数</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 函数的原型（prototype）默认具有 \"constructor\" 属性，</span>\n<span class=\"token comment\">// 所以，我们不需要创建它</span>\n\n<span class=\"token comment\">// 2. 将方法添加到原型</span>\n<span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sayHi</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 用法：</span>\n<span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"原型与原型链\"><a href=\"#原型与原型链\" class=\"headerlink\" title=\"原型与原型链\"></a>原型与原型链</h3><p>所有的实例对象都有一个<code>__proto__</code>属性，属性值是一个对象，指向对象的原型</p>\n<p>所有函数都一个<code>prototype</code>属性，属性值为一个对象,指向函数的原型对象</p>\n<p>所有实例对象的<code>__proto__</code>属性都指向其构造函数的<code>prototype</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828170829.png\" alt=\"原型图\"></p>\n<p>重要公式：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">Object<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></code></pre>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Proto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">Basic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"basic\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>desription <span class=\"token operator\">=</span> <span class=\"token string\">\"基类\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n   <span class=\"token comment\">// 修改 Basic 的原型</span>\n  <span class=\"token class-name\">Basic</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>desription<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">Father</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"father\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>desription <span class=\"token operator\">=</span> <span class=\"token string\">\"父类\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">Son</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"son\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>desription <span class=\"token operator\">=</span> <span class=\"token string\">\"子类\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token class-name\">Father</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Basic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Son</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Father</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> son <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Son</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">// instanceof 本质是从原型链上找</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">%c </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>son <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Basic</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"background: #222; color: #bada55\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----son.constructor----\"</span><span class=\"token punctuation\">,</span> son<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 实例对象的原型,即Father</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----son.__proto__----\"</span><span class=\"token punctuation\">,</span> son<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 方法的原型,即Father</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----Son.prototype----\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Son</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>son<span class=\"token punctuation\">.</span>__proto__<span class=\"token operator\">===</span><span class=\"token class-name\">Son</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----son----\"</span><span class=\"token punctuation\">,</span> son<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----son.getName()----\"</span><span class=\"token punctuation\">,</span> son<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">Proto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220814211054.png\" alt=\"原型与原型链\"></p>\n<h3 id=\"深拷贝和浅拷贝\"><a href=\"#深拷贝和浅拷贝\" class=\"headerlink\" title=\"深拷贝和浅拷贝\"></a>深拷贝和浅拷贝</h3><p>浅拷贝：拷贝时只拷贝最外面一层数据的值，遇到深层次对象则拷贝其地址，改变源对象中的引用对象同时会改变目标对象的值，同样改变目标对象中的引用对象也会改变源对象的值</p>\n<p>object.assigin() 为浅拷贝，只会把<code>可枚举</code>和自有（<code>Object.hasOwnProperty()</code>）属性从一个或多个源对象拷贝至目标对象</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>sources<span class=\"token punctuation\">)</span></code></pre>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">shallowCopy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> c<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  obj1<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 浅拷贝：object.assigin()在拷贝时只拷贝其值，源对象为对象的引用时，拷贝其引用</span>\n  <span class=\"token comment\">// 引用值发生改变目标对象值也会改变</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { a: 0 , b: { c: 2}}</span>\n  obj2<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { a: 0 , b: { c: 3}}</span>\n\n  <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> copy <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 基本类型会被包装成对象</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { '0': 'i', '1': 'd' }</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// shallowCopy();</span></code></pre>\n<p>实现浅拷贝</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">shallowCopy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>obj <span class=\"token operator\">||</span> <span class=\"token keyword\">typeof</span> obj <span class=\"token operator\">!==</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">let</span> newObj <span class=\"token operator\">=</span> obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      newObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> newObj\n<span class=\"token punctuation\">}</span></code></pre>\n<p>深拷贝: 深拷贝会把对象里<strong>所有的数据</strong>重新复制到新的内存空间，是最彻底的拷贝</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 深拷贝</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> c<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  obj1<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  obj1<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { \"a\": 0, \"b\": { \"c\": 0}}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>实现深拷贝</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>obj <span class=\"token operator\">||</span> <span class=\"token keyword\">typeof</span> obj <span class=\"token operator\">!==</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">let</span> newObj <span class=\"token operator\">=</span> obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      newObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">?</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> newobj\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"对象遍历\"><a href=\"#对象遍历\" class=\"headerlink\" title=\"对象遍历\"></a>对象遍历</h3><p>forin: 会遍历对象原型链上的属性 可以遍历数组但数组遍历建议用for of</p>\n<p>hasOwnProperty: 判断对象自身是否包含某个属性，不包含原型链上的属性，有则返回true，无则返回false</p>\n<p>Object.entries() 返回对象中可枚举属性的 键值对数组,与for in 不同的是不会遍历原型链上的属性</p>\n<p>Object.keys() 对应的返回的是 对象的键的数组，但只会获取第一层的key</p>\n<p>Object.values() 对应的返回的是 对象的值的数组，遇到引用对象则拷贝整个对象的值</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 对象遍历</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ObjectLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> triangle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> c<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> d<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> e<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">ColoredTriangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token class-name\">ColoredTriangle</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> triangle<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ColoredTriangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// for in 会遍历对象原型链上的属性 可以遍历数组但数组遍历建议用for of</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">forinLoop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------forinLoop------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> prop <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">obj.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prop<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// obj.color = red obj.a = 1 obj.b = 2 obj.c = 3</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// hasOwnProperty 用法  对象自身是否包含某个属性，不包含原型链上的属性</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------hasOwnProperty------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> prop <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">obj.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prop<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// obj.color = red</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/* Object.entries() 返回对象中可枚举属性的 键值对数组,与for in 不同的是不会遍历原型链上的属性\n   * Object.keys() 对应的返回的是 对象的键的数组 获取第一层的key\n   * Object.values() 对应的返回的是 对象的值的数组\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">entriesLoop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------entriesLoop------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">forinLoop</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">entriesLoop</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'a', 'b' ]</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 1, { c: 2, d: { e: 3 } } ]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"Object-defineProperty和Proxy\"><a href=\"#Object-defineProperty和Proxy\" class=\"headerlink\" title=\"Object.defineProperty和Proxy\"></a>Object.defineProperty和Proxy</h3><h4 id=\"Object-defineProperty\"><a href=\"#Object-defineProperty\" class=\"headerlink\" title=\"Object.defineProperty\"></a><span id=\"defineProperty\">Object.defineProperty</span></h4><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\">MDN</a></p>\n<p>Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或修改对象的属性，并返回修改后的对象</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> descriptor<span class=\"token punctuation\">)</span></code></pre>\n<p><code>obj</code> 要修改属性的对象</p>\n<p><code>prop</code> 要定义或修改的属性的名称</p>\n<p><code>descripto</code> 属性描述符</p>\n<p>常见属性描述符: <code>value</code>、<code>configurable</code>、<code>get</code>、<code>set</code>、<code>enumerable</code></p>\n<p>缺陷：</p>\n<ul>\n<li>无法监控新增的属性，由于该方法监听的是对象的属性，所以在原始对象上新增属性就无法劫持到</li>\n<li><p>对于数组的监听，在对数组进行<code>sort</code>、<code>shift</code>、<code>reverse</code>等改变数组索引操作时会触发多次<code>get</code>和<code>set</code>方法</p>\n</li>\n<li><p>只能劫持对象的属性，从而需要对每个对象，每个属性进行遍历，如果，属性值是对象，还需要深度遍历</p>\n</li>\n</ul>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arrShallow <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> arrDeep <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Object.defineProperty  数组 劫持的是对象的属性，如果劫持的对象的属性的属性值为对象，则需深度遍历</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ArrayHijack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">arrayProperty</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">get: arr[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">set: arr[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">] to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>newValue<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">arrayProperty</span><span class=\"token punctuation\">(</span>arrShallow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  arrShallow<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">999</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打印：set: arr[0] to 999</span>\n  arrShallow<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打印：get: arr[3]</span>\n  arrShallow<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// arr.shift(); // 会导致5次前移，所以产生5次get和5次set</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arrShallow<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">arrayProperty</span><span class=\"token punctuation\">(</span>arrDeep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  arrDeep<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 无法深度监听到数组的变化</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arrDeep[0]:\"</span> <span class=\"token operator\">+</span> arrDeep<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// get: arr[0] arrDeep[0]:1,6,3</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ArrayHijack();</span>\n\n<span class=\"token comment\">// Object.defineProperty 监听的是对象的单个属性</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ObjectHijack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 6</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 6</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"Proxy\"><a href=\"#Proxy\" class=\"headerlink\" title=\"Proxy\"></a><span id=\"proxy\">Proxy</span></h4><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy#handler_%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95\">MDN</a></p>\n<p>Proxy() 用于创建一个对象的代理，从而实现基本操作的拦截和自定义（如属性查找、赋值、枚举、函数调用等）</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span></code></pre>\n<p><code>target</code>: 要进行代理的目标对象(可以是任何类型的对象，包括原生数组，函数，甚至另一个代理)</p>\n<p><code>handler</code>： 代理行为</p>\n<p>常见handler：<code>apply</code>、<code>get</code>、<code>set</code>、<code>has</code></p>\n<p>handler.get(target,property,receiver)</p>\n<p>target: 目标对象</p>\n<p>property: 被获取的属性名</p>\n<p>优势：proxy 是对整个对象进行劫持，并返回一个新对象</p>\n<p>劣势：版本兼容性</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 浅劫持</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">shallowProxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    count<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"JavaScript\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">22</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> proxyObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">get：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">set：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  proxyObj<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Golang\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**浅劫持对象，如果读取到的属性为对象,需要深度劫持获取值\n   * get: user\n   * 相当于 proxyObj.user\n   */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 深度劫持</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">deepProxyObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    count<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"JavaScript\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">22</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">deepProxy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">get：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">&amp;&amp;</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">deepProxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 递归劫持</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">set：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">let</span> proxyObj <span class=\"token operator\">=</span> <span class=\"token function\">deepProxy</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  proxyObj<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Golang\"</span><span class=\"token punctuation\">;</span>\n\n  proxyObj<span class=\"token punctuation\">.</span>fine <span class=\"token operator\">=</span> <span class=\"token string\">\"i am fine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"call、apply、bind的区别\"><a href=\"#call、apply、bind的区别\" class=\"headerlink\" title=\"call、apply、bind的区别\"></a>call、apply、bind的区别</h3><p>call()和apply()作用相同，传递参数不同</p>\n<p>作用：</p>\n<ul>\n<li>改变this的指向</li>\n<li>实现继承</li>\n</ul>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span><span class=\"token function\">prototype</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">,</span> argsArray<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 参数数组</span>\n<span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span><span class=\"token function\">prototype</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">,</span> arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 参数列表</span>\n<span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span><span class=\"token function\">prototype</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">,</span> arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 参数列表</span></code></pre>\n<p><code>thisArg</code>: 函数运行时的this值，可选</p>\n<p><code>arg1</code>: 传递的参数</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">callApply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">animal</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">dog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">animal</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">dog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"哈士奇\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"狗\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">cat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">animal</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 继承</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"---cat---\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">bird</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">animal</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">cat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"加菲貓\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"貓\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 加菲貓</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">bird</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"蜂鸟\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"鸟\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 蜂鸟</span>\n  <span class=\"token function\">display</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"加菲貓\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"貓\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 加菲貓 猫</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\">MDN</a></p>\n<p>bind() 创建一个<strong>新的函数</strong>，在 <code>bind()</code> 被调用时，这个新函数的 <code>this</code> 被指定为 <code>bind()</code> 的第一个参数，而其余参数将作为新函数的参数，供调用时使用</p>\n<ul>\n<li>bind方法能改变this的指向</li>\n<li>call()和apply()是立即调用函数</li>\n<li>bind()是创建一个新的函数</li>\n</ul>\n<p>丢失<code>this</code></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    firstName<span class=\"token operator\">:</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this 为user</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>sayHi<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello, undefined! settimeout的this为window</span></code></pre>\n<p>这里丢失了user的上下文,实际上settimeout可以被重写为</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> f <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>sayHi\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 浏览器中的setTimeout方法，会为函数调用设定this为window</span></code></pre>\n<p>解决方案1：包装器</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 匿名函数</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    user<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello, John!</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 或者箭头函数</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello, John!</span></code></pre>\n<p>但是当后面的代码在settimeout调用方法之前，改变user的属性方法，就获取到的是更改后的值</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello, bob!</span>\nuser<span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">=</span> <span class=\"token string\">\"bob\"</span></code></pre>\n<p>解决方案2: bind</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// this绑定为 user 也就是say 的this绑定为了 user，是对当前 user的绑定，后续代码对 user的更改不会影响 输出结果</span>\n<span class=\"token keyword\">let</span> say <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Hello, John! </span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>say<span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Hello, John!</span>\nuser<span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">=</span> <span class=\"token string\">\"bob\"</span></code></pre>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> username <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token operator\">:</span> <span class=\"token string\">\"bob\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token operator\">:</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">phrase</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>phrase<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> say <span class=\"token operator\">=</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hi, bob!</span>\n<span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> <span class=\"token string\">\"call\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 会立即执行sayHi函数</span>\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"apply\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 会立即执行sayHi函数</span></code></pre>\n<h3 id=\"this指向问题\"><a href=\"#this指向问题\" class=\"headerlink\" title=\"this指向问题\"></a>this指向问题</h3><p><a href=\"https://juejin.cn/post/6844903746984476686\">this指向问题</a></p>\n<p><a href=\"https://juejin.cn/post/6844904167316652045#heading-4\">this指向</a></p>\n<ol>\n<li>严格模式与非严格模式</li>\n</ol>\n<p>this在严格模式下与非严格模式下有细微的差别</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 非严格模式下</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// a</span>\n<span class=\"token comment\">// 严格模式下</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span></code></pre>\n<ol>\n<li>普通函数下的this指向问题</li>\n</ol>\n<p>this指向取决于最终函数的调用者，即取决于当前执行上下文</p>\n<p><code>上下文</code>：上下文类似于英语句子中的主语</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> test <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  prop<span class=\"token operator\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">func</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>prop<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42 // this为 test</span>\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> test<span class=\"token punctuation\">.</span><span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 此时的this为 window 等同于 window.a()</span></code></pre>\n<ol>\n<li>this用于闭包</li>\n</ol>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"pop\"</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"bob\"</span>\n  <span class=\"token comment\">// 无法访问到外部函数的this变量</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// pop</span></code></pre>\n<ol>\n<li>箭头函数中的this指向问题</li>\n</ol>\n<p><a href=\"#arrow\">关于箭头函数</a></p>\n<p>箭头函数中没有<code>this</code>绑定，必须通过查找作用域链来决定其值。 如果箭头函数被非箭头函数包含，则<code>this</code>绑定的是最近一层非箭头函数的<code>this</code>，否则<code>this</code>的值则被设置为全局对象</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'window'</span>\n<span class=\"token keyword\">var</span> student <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'若川'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">doSth</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// var self = this;</span>\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">arrowDoSth</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// console.log(self.name);</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">arrowDoSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">arrowDoSth2</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nstudent<span class=\"token punctuation\">.</span><span class=\"token function\">doSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// '若川'</span>\nstudent<span class=\"token punctuation\">.</span><span class=\"token function\">arrowDoSth2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'window'</span></code></pre>\n<p><code>call</code>、<code>apply</code>、<code>bind</code>无法直接改变箭头函数的<code>this</code>(它自身没有<code>this</code>),但可以通过改变箭头函数生成的普通函数的<code>this</code>,来改变<code>this</code>的指向</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'window'</span>\n<span class=\"token keyword\">var</span> student <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'若川'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">doSth</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'arrow this'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'person'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nstudent<span class=\"token punctuation\">.</span><span class=\"token function\">doSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 若川 arrow this 若川</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> student<span class=\"token punctuation\">.</span><span class=\"token function\">doSth</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span> <span class=\"token comment\">// person</span>\n<span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// arrow this person</span></code></pre>\n<ol>\n<li>隐式函数绑定下丢失<code>this</code>上下文的问题</li>\n</ol>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    foo<span class=\"token operator\">:</span> foo\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bar <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">;</span> <span class=\"token comment\">//传递了函数，隐式绑定丢失了</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'hello' 丢失了上下文</span></code></pre>\n<p>综合考察</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'window'</span>\n\n<span class=\"token keyword\">var</span> person1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'person1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">show1</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">show2</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">show3</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">show4</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> person2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'person2'</span> <span class=\"token punctuation\">}</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show1</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show2</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show3</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show4</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<p>正确答案：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">person1<span class=\"token punctuation\">.</span><span class=\"token function\">show1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// person1</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show1</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// person2</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show2</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// person2</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show3</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// person1</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// person1</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show4</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// person2</span></code></pre>\n<p>其中<code>person1.show3()</code>获取到的是一个函数，需要赋值给一个变量才会执行，加上<code>()</code>相当于立即执行函数，执行环境为<code>window</code>,所以打印window</p>\n<p>相当于执行了以下操作</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> fun <span class=\"token operator\">=</span> person1<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<p><code>person1.show3().call(person2)</code> 与 <code>person1.show3.call(person2)()</code> 也好理解了。前者是通过person2调用了最终的打印方法。后者是先通过person2调用了person1的高阶函数，然后再在全局环境中执行了该打印方法</p>\n<h3 id=\"手写instanceof\"><a href=\"#手写instanceof\" class=\"headerlink\" title=\"手写instanceof\"></a>手写instanceof</h3><p><a href=\"#instanceof\">instanceof</a></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">_instanceof</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">left<span class=\"token punctuation\">,</span> right</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> _proto_ <span class=\"token operator\">=</span> left<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> prototype <span class=\"token operator\">=</span> right<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_proto_ <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_proto_ <span class=\"token operator\">===</span> prototype<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    _proto_ <span class=\"token operator\">=</span> _proto_<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"手写继承\"><a href=\"#手写继承\" class=\"headerlink\" title=\"手写继承\"></a>手写继承</h3><p><strong><code>Object.create()</code></strong> 方法用于创建一个新对象，使用现有的对象来作为新创建对象的原型（prototype）<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create\">MDN</a></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">inherit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">eat</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> eat something</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token class-name\">Parent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">say</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> say my name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> age </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">Child</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> sex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Parent</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> sex<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Child.prototype = new Parent(); // 与Object.create()效果相同</span>\n  <span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Parent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 更改需要利用constructor 指向 如果利用对象的形式修改了原型对象,需要利用constructor 指回原来的构造函数,即修复 constructor</span>\n  <span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">=</span> Child<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> stu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"male\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  stu<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  stu<span class=\"token punctuation\">.</span><span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Child</span>\n  <span class=\"token comment\">// 如果没把Child.prototype.constructor重新指回Child,这里的值会是Parent</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">inherit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"手写call\"><a href=\"#手写call\" class=\"headerlink\" title=\"手写call\"></a>手写call</h3><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'toy'</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> human <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'bob'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">customCall</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 判断 call 方法调用者是否为函数</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">this</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type error'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 这里的this指向为person，实际执行为person</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 如果传入对象上下文不存在，则设置为 window</span>\n  ctx <span class=\"token operator\">=</span> ctx <span class=\"token operator\">||</span> window\n  <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 为 human 添加一个 person 方法</span>\n  ctx<span class=\"token punctuation\">.</span>fn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n  <span class=\"token comment\">// 执行该方法 并传入参数 返回运行结果</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 删除</span>\n  <span class=\"token keyword\">delete</span> ctx<span class=\"token punctuation\">.</span>fn\n  <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span>\n\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">customCall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">customCall</span><span class=\"token punctuation\">(</span>human<span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"手写apply\"><a href=\"#手写apply\" class=\"headerlink\" title=\"手写apply\"></a>手写apply</h3><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">customApply</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 判断 call 方法调用者是否为函数</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">this</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type error'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 这里的this指向为person，实际执行为person</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 如果传入对象上下文不存在，则设置为 window</span>\n  ctx <span class=\"token operator\">=</span> ctx <span class=\"token operator\">||</span> window\n  <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 为 human 添加一个 person 方法</span>\n  ctx<span class=\"token punctuation\">.</span>fn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n  <span class=\"token comment\">// 执行该方法 并传入参数 返回运行结果</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 删除</span>\n  <span class=\"token keyword\">delete</span> ctx<span class=\"token punctuation\">.</span>fn\n  <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span>\n\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">customApply</span><span class=\"token punctuation\">(</span>human<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"手写bind\"><a href=\"#手写bind\" class=\"headerlink\" title=\"手写bind\"></a>手写bind</h3><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">#</code></pre>\n<h3 id=\"箭头函数\"><a href=\"#箭头函数\" class=\"headerlink\" title=\"箭头函数\"></a><span id=\"arrow\">箭头函数</span></h3><ul>\n<li>没有<code>this</code></li>\n<li>没有<code>arguments</code></li>\n<li>不能使用<code>new</code>进行调用</li>\n</ul>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 箭头函数的this指向与常规变量的查找方式相同,即一层层往上找</span>\n<span class=\"token keyword\">let</span> group <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">\"Our Group\"</span><span class=\"token punctuation\">,</span>\n  students<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pete\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">showList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>\n      <span class=\"token parameter\">student</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title <span class=\"token operator\">+</span> <span class=\"token string\">': '</span> <span class=\"token operator\">+</span> student<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ngroup<span class=\"token punctuation\">.</span><span class=\"token function\">showList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"ES6\"><a href=\"#ES6\" class=\"headerlink\" title=\"ES6\"></a>ES6</h3><p><a href=\"#var\">块级作用域</a></p>\n<p><a href=\"#destruct\">解构赋值</a></p>\n<p><a href=\"#promise\">异步</a></p>\n<p><a href=\"#arrow\">箭头函数</a></p>\n<p><a href=\"moudle\">模块化</a></p>\n<h3 id=\"解构赋值\"><a href=\"#解构赋值\" class=\"headerlink\" title=\"解构赋值\"></a><span id=\"destruct\">解构赋值</span></h3><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">destructArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 数组解构</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------数组解构------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">[</span>arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arrRest<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arrShallow<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arrRest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">[</span>arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>arr2<span class=\"token punctuation\">,</span> arr1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------数组交换------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 对象解构</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------对象解构------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    size<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      width<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      height<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    items<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Cake\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Donut\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    extra<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      bob<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      pop<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span>\n    items<span class=\"token operator\">:</span> item<span class=\"token punctuation\">,</span>\n    size<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> width <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>restObject\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> restObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"rest参数\"><a href=\"#rest参数\" class=\"headerlink\" title=\"rest参数\"></a>rest参数</h3><p>扩展运算符被用在函数形参上时，<strong>它还可以把一个分离的参数序列整合成一个数组</strong>。这一点<strong>经常用于获取函数的多余参数，或者像上面这样处理函数参数个数不确定的情况</strong></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">mutiple</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">mutiple</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// [1, 2, 3, 4]</span></code></pre>\n<h3 id=\"async、await和promise\"><a href=\"#async、await和promise\" class=\"headerlink\" title=\"async、await和promise\"></a><span id=\"promise\">async、await和promise</span></h3><p>宏任务：setTimeout、setInterval</p>\n<p>微任务：Promise.then()</p>\n<p>任务执行顺序：同步任务—&gt; 微任务—&gt; 宏任务</p>\n<p>微任务会依次全部执行再执行下一个宏任务</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> Promise1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Promise1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resolve\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"111\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Promise1End\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"can?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// console.log(Primise1);</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"同步1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"同步2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> Promise2 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Promise2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Promise2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"同步3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Promise.all([Promise1, Promise2]);</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"var、let和const\"><a href=\"#var、let和const\" class=\"headerlink\" title=\"var、let和const\"></a><span id=\"var\">var、let和const</span></h3><p>let和const的特点:</p>\n<ul>\n<li><p>不允许重复声明</p>\n</li>\n<li><p>不存在变量提升</p>\n</li>\n<li><p>暂时性死区</p>\n</li>\n<li><p>块级作用域</p>\n</li>\n</ul>\n<p>var:</p>\n<p>  存在变量提升、可重复声明、无块级作用域</p>\n<p>暂时性死区：</p>\n<p>  使用let、const声明的变量，必须先声明变量在使用</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"></code></pre>\n<h3 id=\"判断数组\"><a href=\"#判断数组\" class=\"headerlink\" title=\"判断数组\"></a>判断数组</h3><h4 id=\"Object-prototype-toString-call\"><a href=\"#Object-prototype-toString-call\" class=\"headerlink\" title=\"Object.prototype.toString.call\"></a>Object.prototype.toString.call</h4><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\">MDN</a></p>\n<p><code>toString()</code>方法返回一个表示改对象的字符串</p>\n<blockquote>\n<p>每个对象都有一个 <code>toString()</code> 方法，当该对象被表示为一个文本值时，或者一个对象以预期的字符串方式引用时自动调用。默认情况下，<code>toString()</code> 方法被每个 <code>Object</code> 对象继承。如果此方法在自定义对象中未被覆盖，<code>toString()</code> 返回 “[object <em>type</em>]”，其中 <code>type</code> 是对象的类型</p>\n</blockquote>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [object Object]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [object Object]</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object String]\"</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object Number]\"</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object Symbol]\"</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object Null]\"</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object Undefined]\"</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object Function]\"</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'An'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object Object]\"</span></code></pre>\n<p>重写<code>toString</code>方法</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> breed<span class=\"token punctuation\">,</span> sex<span class=\"token punctuation\">,</span> color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>breed <span class=\"token operator\">=</span> breed<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> sex<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Dog</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">toString</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">dogString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Dog </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is a </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>breed<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> dog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"catty\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lab\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"male\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dog<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Dog catty is a male black Lab</span></code></pre>\n<h4 id=\"instanceof-1\"><a href=\"#instanceof-1\" class=\"headerlink\" title=\" instanceof\"></a><span id=\"instanceof\"> instanceof</span></h4><p><code>instanceof</code> 的内部机制是通过判断对象的原型链中是不是能找到类型的 <code>prototype</code></p>\n<p>使用 <code>instanceof</code>判断一个对象是否为数组，<code>instanceof</code> 会判断这个对象的原型链上是否会找到对应的 <code>Array</code> 的原型，找到返回 <code>true</code>，否则返回 <code>false</code></p>\n<p>但 <code>instanceof</code> 只能用来判断对象类型，原始类型不可以。并且所有对象类型 instanceof Object 都是 true</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre>\n<h4 id=\"Array-isArray\"><a href=\"#Array-isArray\" class=\"headerlink\" title=\"Array.isArray\"></a>Array.isArray</h4><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\">MDN</a></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span></code></pre>\n<h3 id=\"EventLoop\"><a href=\"#EventLoop\" class=\"headerlink\" title=\"EventLoop\"></a>EventLoop</h3><p>在<code>JavaScript</code>中，任务被分为两种，一种宏任务（<code>MacroTask</code>）也叫<code>Task</code>，一种叫微任务（<code>MicroTask</code>）</p>\n<p>宏任务</p>\n<p><a href=\"https://juejin.cn/post/6844903657264136200\">微任务、宏任务与Eventloop</a>  <a href=\"https://juejin.cn/post/6844903764202094606\">EventLoop</a></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>浏览器</th>\n<th>Node</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>I/O</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>setTimeout</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>setInterval</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>setImmediate</td>\n<td>❌</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>requestAnimationFrame</td>\n<td>✅</td>\n<td>❌</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>微任务</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>浏览器</th>\n<th>NOde</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>process.nextTick</td>\n<td>❌</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>MutationObserver</td>\n<td>✅</td>\n<td>❌</td>\n</tr>\n<tr>\n<td>Promise.then catch finally</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"跨域\"><a href=\"#跨域\" class=\"headerlink\" title=\"跨域\"></a>跨域</h3><h4 id=\"跨域的定义\"><a href=\"#跨域的定义\" class=\"headerlink\" title=\"跨域的定义\"></a>跨域的定义</h4><p>当协议、域名、端口中任意一个不相同时，就会造成跨域。跨域是浏览器<strong>同源策略</strong>导致的。</p>\n<p>同源：协议、域名、端口三者都相同</p>\n<p>同源策略限制内容有：</p>\n<ul>\n<li>Cookie、LocalStorage、IndexedDB 等存储性内容</li>\n<li>DOM 节点</li>\n<li>AJAX 请求发送后，结果被浏览器拦截了</li>\n</ul>\n<p>但有三个标签运行跨域加载资源</p>\n<ul>\n<li><code>&lt;img src=XXX&gt;</code></li>\n<li><code>&lt;link href=XXX&gt;</code></li>\n<li><code>&lt;script src=XXX&gt;</code></li>\n</ul>\n<h4 id=\"跨域解决方案\"><a href=\"#跨域解决方案\" class=\"headerlink\" title=\"跨域解决方案\"></a>跨域解决方案</h4><p><a href=\"https://juejin.cn/post/6844903767226351623\">跨域的解决方案</a></p>\n<ol>\n<li>JSONP</li>\n</ol>\n<p>原理：利用<code>&lt;script&gt;</code>标签没有跨域限制的漏洞，实现跨域</p>\n<p>缺点：只支持get请求，不安全可能会遭受XSS攻击</p>\n<p>实现：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">jsonp</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> url<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">,</span> callback <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span>\n    window<span class=\"token punctuation\">[</span>callback<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n      document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>params<span class=\"token punctuation\">,</span> callback <span class=\"token punctuation\">}</span> <span class=\"token comment\">// wd=b&amp;callback=show</span>\n    <span class=\"token keyword\">let</span> arrs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      arrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>params<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    script<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>arrs<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&amp;'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">jsonp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  url<span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:3000/say'</span><span class=\"token punctuation\">,</span>\n  params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> wd<span class=\"token operator\">:</span> <span class=\"token string\">'Iloveyou'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  callback<span class=\"token operator\">:</span> <span class=\"token string\">'show'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>上面这段代码相当于向<code>http://localhost:3000/say?wd=Iloveyou&amp;callback=show</code>这个地址请求数据</p>\n<ol>\n<li>CORS</li>\n</ol>\n<p><strong>CORS 需要浏览器和后端同时支持。IE 8 和 9 需要通过 XDomainRequest 来实现</strong></p>\n<p>浏览器会自动进行 CORS 通信，实现 CORS 通信的关键是后端。只要后端实现了 CORS，就实现了跨域</p>\n<p>服务端设置 <strong>Access-Control-Allow-Origin</strong> 就可以开启 CORS。 该属性表示哪些域名可以访问资源，如果设置通配符则表示所有网站都可以访问资源</p>\n<ol>\n<li>postMessage</li>\n</ol>\n<p>postMessage是HTML5 XMLHttpRequest Level 2中的API，且是为数不多可以跨域操作的window属性之一，它可用于解决以下方面的问题：</p>\n<ul>\n<li>页面和其打开的新窗口的数据传递</li>\n<li>多窗口之间消息传递</li>\n<li>页面与嵌套的iframe消息传递</li>\n<li>上面三个场景的跨域数据传递</li>\n</ul>\n<p><code>http://localhost:3000/a.html</code>页面向<code>http://localhost:4000/b.html</code>发送信息</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">// a.html\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://localhost:4000/b.html<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">frameborder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>frame<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">&gt;</span></span> //等它加载完触发一个事件\n  //内嵌在http://localhost:3000/a.html\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword\">function</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> frame <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'frame'</span><span class=\"token punctuation\">)</span>\n        frame<span class=\"token punctuation\">.</span>contentWindow<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我爱你'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://localhost:4000'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//发送数据</span>\n        window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//接受返回数据</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token comment\">//我不爱你</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// b.html</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token comment\">//我爱你</span>\n    e<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我不爱你'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>origin<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span></code></pre>\n<ol>\n<li>Nginx反向代理</li>\n</ol>\n<p>实现原理类似于Node中间件代理，需要你搭建一个中转nginx服务器，用于转发请求。</p>\n<p>使用nginx反向代理实现跨域，是最简单的跨域方式。只需要修改nginx的配置即可解决跨域问题，支持所有浏览器，支持session，不需要修改任何代码，并且不会影响服务器性能。</p>\n<p>实现思路：通过nginx配置一个代理服务器（域名与domain1相同，端口不同）做跳板机，反向代理访问domain2接口，并且可以顺便修改cookie中domain信息，方便当前域cookie写入，实现跨域登录</p>\n<ol>\n<li>NodeJs中间件代理</li>\n</ol>\n<p>实现原理：<strong>同源策略是浏览器需要遵循的标准，而如果是服务器向服务器请求就无需遵循同源策略。</strong> 代理服务器，需要做以下几个步骤：</p>\n<ul>\n<li>接受客户端请求 </li>\n<li>将请求转发给服务器</li>\n<li>拿到服务器响应数据</li>\n<li>将响应转发给客户端</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20221022213713.webp\" alt=\"中间件代理\"></p>\n<ol>\n<li>websocket</li>\n</ol>\n<p>Websocket是HTML5的一个持久化的协议，它实现了浏览器与服务器的全双工通信，同时也是跨域的一种解决方案。WebSocket和HTTP都是应用层协议，都基于 TCP 协议。但是 <strong>WebSocket 是一种双向通信协议，在建立连接之后，WebSocket 的 server 与 client 都能主动向对方发送或接收数据</strong>。同时，WebSocket 在建立连接时需要借助 HTTP 协议，连接建立好了之后 client 与 server 之间的双向通信就与 HTTP 无关了</p>\n<p>本地文件socket.html向<code>localhost:3000</code>发生数据和接受数据</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">// socket.html\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">let</span> socket <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ws://localhost:3000'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    socket<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      socket<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我爱你'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//向服务器发送数据</span>\n    <span class=\"token punctuation\">}</span>\n    socket<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//接收服务器返回的数据</span>\n    <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// server.js</span>\n<span class=\"token keyword\">let</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> WebSocket <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ws'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//记得安装ws</span>\n<span class=\"token keyword\">let</span> wss <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket<span class=\"token punctuation\">.</span>Server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>port<span class=\"token operator\">:</span><span class=\"token number\">3000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwss<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connection'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ws</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ws<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ws<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我不爱你'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<ol>\n<li>window.name + iframe</li>\n<li>location.hash + iframe</li>\n<li>document.domain + iframe</li>\n</ol>\n<h3 id=\"XLSX\"><a href=\"#XLSX\" class=\"headerlink\" title=\"XLSX\"></a>XLSX</h3><p>安装</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> xlsx</code></pre>\n<p>导入</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">XLSX</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'xlsx'</span>\n<span class=\"token keyword\">import</span> <span class=\"token constant\">XLSX</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'xlsx'</span></code></pre>\n<p>新建工作簿</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> wb <span class=\"token operator\">=</span> <span class=\"token constant\">XLSX</span><span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">book_new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>数据格式转换</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// json类型数据转换成sheet</span>\n<span class=\"token keyword\">let</span> sheet1 <span class=\"token operator\">=</span> <span class=\"token constant\">XLSX</span><span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">json_to_sheet</span><span class=\"token punctuation\">(</span>rows<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// json数据格式</span>\n<span class=\"token keyword\">const</span> rows <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token string\">'列1'</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'列2'</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'列3'</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token string\">'列1'</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'列2'</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'列3'</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">// 二维数组</span>\n<span class=\"token keyword\">let</span> sheet2 <span class=\"token operator\">=</span> <span class=\"token constant\">XLSX</span><span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">aoa_to_sheet</span><span class=\"token punctuation\">(</span>ws_data<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 数组格式</span>\n<span class=\"token keyword\">const</span> ws_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"姓名\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"性别\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"年龄\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"蔡徐坤\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"男\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"60\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"李明\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"男\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"30\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span></code></pre>\n<p>添加工作表数据</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 参数：工作簿、sheet数据、工作表(sheet)名字</span>\n    <span class=\"token constant\">XLSX</span><span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">book_append_sheet</span><span class=\"token punctuation\">(</span>wb<span class=\"token punctuation\">,</span>sheet1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Sheet1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n<p>文件存储</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token constant\">XLSX</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>wb<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h2><h3 id=\"节流与防抖\"><a href=\"#节流与防抖\" class=\"headerlink\" title=\"节流与防抖\"></a>节流与防抖</h3><h4 id=\"防抖\"><a href=\"#防抖\" class=\"headerlink\" title=\"防抖\"></a>防抖</h4><p>事件频繁触发情况下，<code>delay</code>时间内被触发则会重新计时</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 防抖 设置方法执行间隔为 delay ms ，delay 时间内事件被触发则重新计时</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">debunce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> delay</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  delay <span class=\"token operator\">=</span> delay <span class=\"token operator\">||</span> <span class=\"token number\">500</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 被闭包函数使用</span>\n  <span class=\"token comment\">// 剩余参数数组</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果 delay 秒内函数被执行则，会清除前面的settimeout</span>\n    timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<blockquote>\n<p>函数防抖就像回城，被打断就会重新计时</p>\n</blockquote>\n<p>应用场景：</p>\n<ul>\n<li>按钮点击</li>\n<li>输入框</li>\n</ul>\n<h4 id=\"节流\"><a href=\"#节流\" class=\"headerlink\" title=\"节流\"></a>节流</h4><p>规定事件在<code>delay</code>时间内只会执行一次</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 节流 设置方法执行间隔为 delay ms， delay 时间内时间被触发则只执行一次事件</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> delay <span class=\"token operator\">=</span> <span class=\"token number\">500</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 有 settimeout 则退出，不执行</span>\n    <span class=\"token keyword\">let</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>timer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<blockquote>\n<p>函数节流就像游戏中的攻击速度，规定一定时间内只能攻击多少次</p>\n</blockquote>\n<p>应用场景：</p>\n<ul>\n<li>DOM元素拖拽</li>\n<li>游戏中的刷新率</li>\n<li>canvas画笔功能</li>\n</ul>\n<h3 id=\"加快首屏加载速度\"><a href=\"#加快首屏加载速度\" class=\"headerlink\" title=\"加快首屏加载速度\"></a>加快首屏加载速度</h3><p><a href=\"https://juejin.cn/post/6844904185264095246\">Vue加快首屏加载速度</a></p>\n<ol>\n<li>压缩</li>\n</ol>\n<ul>\n<li><p>gzip压缩</p>\n</li>\n<li><p>图片压缩</p>\n</li>\n</ul>\n<ol>\n<li>路由懒加载</li>\n<li><p>优化分包策略</p>\n</li>\n<li><p>CDN引入</p>\n</li>\n<li><p>优化分包</p>\n</li>\n<li><p>SSR服务器渲染</p>\n</li>\n<li><p>增加宽带</p>\n</li>\n</ol>\n<h3 id=\"回流与重绘\"><a href=\"#回流与重绘\" class=\"headerlink\" title=\"回流与重绘\"></a>回流与重绘</h3><h4 id=\"浏览器的渲染流程\"><a href=\"#浏览器的渲染流程\" class=\"headerlink\" title=\"浏览器的渲染流程\"></a>浏览器的渲染流程</h4><p><a href=\"https://www.cnblogs.com/xiahj/p/11777786.html\">回流与重绘</a></p>\n<p>渲染引擎：主要有Gecko和Webkit，其中Firefox 使用的是 Gecko，而 Safari 和 Chrome 浏览器使用的都是 WebKit</p>\n<p>渲染流程：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220825175831.png\" alt=\"WebKit 渲染引擎的主流程\"></p>\n<ol>\n<li>解析HTML Source，生成DOM树</li>\n<li>解析CSS，生成CSSOM树</li>\n<li>将DOM树和CSSOM树结合，去除不可见元素，生成渲染树(Render Tree)</li>\n<li>Layout(布局):根据生成的渲染树，进行布局(Layout)，得到节点的几何信息（位置，大小）</li>\n<li>Painting(重绘):根据渲染树以及回流得到的几何信息，将 Render Tree 的每个像素渲染到屏幕上</li>\n</ol>\n<h4 id=\"回流-reflow\"><a href=\"#回流-reflow\" class=\"headerlink\" title=\"回流(reflow)\"></a>回流(reflow)</h4><blockquote>\n<p>渲染对象在创建完成并添加到渲染树时，是将DOM节点和它对应的样式结合起来，并不包含位置和大小信息。</p>\n<p>我们还需要通过 <code>Layout</code> 布局阶段，来计算它们在设备视口(viewport)内的确切<strong>位置和大小</strong>，计算这些值的过程称为<code>回流</code>、<code>布局</code>或<code>重排</code>(reflow)</p>\n</blockquote>\n<p>HTML 采用基于流的布局模型，从根渲染对象（即<code>&lt;html&gt;</code>）开始，递归遍历部分或所有的框架层次结构，为每一个需要计算的渲染对象计算几何信息，大多数情况下只要一次遍历就能<strong>计算</strong>出几何信息。但是也有例外，比如<code>&lt;table&gt;</code>的计算就需要不止一次的遍历</p>\n<h5 id=\"触发回流条件\"><a href=\"#触发回流条件\" class=\"headerlink\" title=\"触发回流条件\"></a>触发回流条件</h5><p>DOM元素的<strong>大小</strong>和<strong>位置</strong>发生变化的时候，会触发回流</p>\n<p>改变这些属性会触发回流：</p>\n<ul>\n<li>盒模型相关的属性: <code>width</code>，<code>height</code>，<code>margin</code>，<code>display</code>，<code>border</code>等</li>\n<li>定位属性及浮动相关的属性: <code>top</code>,<code>position</code>,<code>float</code>等</li>\n<li>改变节点内部文字结构也会触发回流:<code>text-align</code>, <code>overflow</code>, <code>font-size</code>, <code>line-height</code>, <code>vertival-align</code>等</li>\n</ul>\n<p>以及进行以下流程或操作：</p>\n<ul>\n<li>页面一开始渲染的时候</li>\n<li>添加或删除可见的DOM元素，进行DOM操作等</li>\n<li>内容发生变化，比如文本变化或图片被另一个不同尺寸的图片所替代</li>\n<li>浏览器的窗口尺寸变化（因为回流是根据视口的大小来计算元素的位置和大小的）</li>\n<li>css伪类激活</li>\n<li>进行<strong>获取布局</strong>信息的操作，比如<code>offsetWidth</code>、<code>offsetHeight</code>、<code>clientWidth</code>、<code>clientHeight</code>、<code>width</code>、<code>height</code>、<code>scrollTop</code>、<code>scrollHeight</code>,<code>getComputedStyle</code>, <code>getBoundingClientRect</code>等</li>\n</ul>\n<h4 id=\"重绘-repaint\"><a href=\"#重绘-repaint\" class=\"headerlink\" title=\"重绘(repaint)\"></a>重绘(repaint)</h4><blockquote>\n<p> <strong>绘制 paint</strong>：当各种盒子的位置、大小以及其他属性，例如颜色、字体大小等都确定下来后，浏览器便把这些元素都按照各自的特性绘制一遍，于是页面的内容出现了，这个过程也称之为 Repaint（重绘制）</p>\n<p>说白了，页面要呈现的内容，统统画在屏幕上，这就叫 Repaint</p>\n</blockquote>\n<h5 id=\"触发绘制条件\"><a href=\"#触发绘制条件\" class=\"headerlink\" title=\"触发绘制条件\"></a>触发绘制条件</h5><ul>\n<li>DOM改动</li>\n<li>CSS改动</li>\n</ul>\n<p>其实，就是判断当视觉上是否发生变化（无论这个变化是通过DOM改动还是CSS改动）。只要页面显示的内容不一样了，肯定要 Repaint</p>\n<blockquote>\n<p><strong>回流一定会触发重绘，而重绘不一定会回流</strong></p>\n</blockquote>\n<h4 id=\"渲染性能优化\"><a href=\"#渲染性能优化\" class=\"headerlink\" title=\"渲染性能优化\"></a>渲染性能优化</h4><blockquote>\n<p>注意：回流可以避免，但重绘无法避免，否则就成静态页面了</p>\n</blockquote>\n<h5 id=\"避免回流\"><a href=\"#避免回流\" class=\"headerlink\" title=\"避免回流\"></a>避免回流</h5><ol>\n<li>减少对dom的操作</li>\n<li>使元素脱离文档流</li>\n<li>避免或减少访问某些属性</li>\n<li>css属性尽量使用简写</li>\n<li><code>transfrom</code>代替<code>left</code>、<code>top</code>,<code>opacity</code>代替<code>visibility</code>，使用<code>tansfrom</code>或<code>opacity</code>不会触发绘制</li>\n<li>避免使用<code>table</code>布局</li>\n</ol>\n<h5 id=\"减少重绘\"><a href=\"#减少重绘\" class=\"headerlink\" title=\"减少重绘\"></a>减少重绘</h5><ul>\n<li>如果需要创建多个DOM节点，可以使用<strong>DocumentFragment</strong>创建完，然后一次性地加入document。（加一个节点，就repaint一次，不太好）</li>\n<li>将元素的display设置为”none”，完成修改后再把display修改为原来的值</li>\n</ul>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 例1-使用 createDocumentFragment 方法创建虚拟的 dom 对象，将新 dom 需要修改的对象进行复制，然后对创建的 dom 进行相应的修改，最终在把 dom 与旧 dom 进行替换</span>\n  \t<span class=\"token comment\">// 这样的能将对 dom 的多次修改合并为一次，大大减少了回流和重绘的次数</span>\n    <span class=\"token keyword\">let</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#box'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> test <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createDocumentFragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> li <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span>\n        li<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        test<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    box<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span>\n  \n  \n  \t<span class=\"token comment\">// 例2-把需要修改的 dom 隐藏，修改完成后再将 dom 重新显示</span>\n  \t<span class=\"token comment\">// 使用 display: none 后渲染树中将不再渲染当前 dom，所以多次操作也不会多次触发回流和重绘</span>\n  \t<span class=\"token keyword\">let</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#box'</span><span class=\"token punctuation\">)</span>\n    box<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n  \t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> li <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span>\n        li<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        box<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"浏览器原理\"><a href=\"#浏览器原理\" class=\"headerlink\" title=\"浏览器原理\"></a>浏览器原理</h2><h3 id=\"浏览器安全\"><a href=\"#浏览器安全\" class=\"headerlink\" title=\"浏览器安全\"></a>浏览器安全</h3><h4 id=\"XSS攻击\"><a href=\"#XSS攻击\" class=\"headerlink\" title=\"XSS攻击\"></a>XSS攻击</h4><p><a href=\"https://juejin.cn/post/6844903685122703367\">XSS</a></p>\n<p>概念：Cross-Site Scripting（跨站脚本攻击）简称 XSS，是一种代码注入攻击。攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全</p>\n<p>XSS的本质是：恶意代码未经过滤，与网站正常的代码混在一起；浏览器无法分辨哪些脚本是可信的，导致恶意脚本被执行</p>\n<p>XSS攻击方式：用户的输入内容，URL上的参数</p>\n<h4 id=\"XSS分类\"><a href=\"#XSS分类\" class=\"headerlink\" title=\"XSS分类\"></a>XSS分类</h4><p>XSS攻击可分为<a href=\"#存储型\">存储型</a>、<a href=\"#反射型\">反射型</a>和<a href=\"#dom\">DOM型</a>三种</p>\n<h5 id=\"存储型XSS\"><a href=\"#存储型XSS\" class=\"headerlink\" title=\"存储型XSS\"></a><span id=\"存储型\">存储型XSS</span></h5><p>攻击步骤：</p>\n<ol>\n<li>攻击者将恶意代码注入到目标网站的数据库中</li>\n<li>用户打开目标网站时，网站服务器将恶意代码从数据库取出，拼接在HTML中返回给浏览器</li>\n<li>用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。</li>\n<li>恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作</li>\n</ol>\n<p>这种攻击常见于带有用户保存数据的网站功能，如论坛发帖、商品评论、用户私信等</p>\n<h5 id=\"反射型XSS\"><a href=\"#反射型XSS\" class=\"headerlink\" title=\"反射型XSS\"></a><span id=\"反射型\">反射型XSS</span></h5><p>攻击步骤：</p>\n<ol>\n<li>攻击者构造出特殊的 URL，其中包含恶意代码。</li>\n<li>用户打开带有恶意代码的 URL 时，网站服务端将恶意代码从 URL 中取出，拼接在 HTML 中返回给浏览器。</li>\n<li>用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。</li>\n<li>恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作</li>\n</ol>\n<p>反射型 XSS 漏洞常见于通过 URL 传递参数的功能，如网站搜索、跳转等。</p>\n<p>由于需要用户主动打开恶意的 URL 才能生效，攻击者往往会结合多种手段诱导用户点击</p>\n<h5 id=\"DOM型XSS\"><a href=\"#DOM型XSS\" class=\"headerlink\" title=\"DOM型XSS\"></a><span id=\"dom\">DOM型XSS</span></h5><p>攻击步骤：</p>\n<ol>\n<li>攻击者构造出特殊的 URL，其中包含恶意代码。</li>\n<li>用户打开带有恶意代码的 URL。</li>\n<li>用户浏览器接收到响应后解析执行，前端 JavaScript 取出 URL 中的恶意代码并执行。</li>\n<li>恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作</li>\n</ol>\n<p>DOM 型 XSS 跟前两种 XSS 的区别：DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞</p>\n<h4 id=\"XSS攻击预防\"><a href=\"#XSS攻击预防\" class=\"headerlink\" title=\"XSS攻击预防\"></a>XSS攻击预防</h4><p>XSS攻击有两大要素：</p>\n<ol>\n<li>攻击者提交恶意代码</li>\n<li>浏览器执行恶意代码</li>\n</ol>\n<p>预防措施：</p>\n<ol>\n<li><p>输入过滤</p>\n</li>\n<li><p>纯前端渲染</p>\n</li>\n<li><p>转义HTML</p>\n</li>\n<li><p>预防DOM型XSS攻击</p>\n<p>尽量避免使用<code>.innerHTML</code>、<code>.outerHTML</code>，而应尽量使用<code>.textContent</code>、<code>.setAttribute</code>等</p>\n</li>\n</ol>\n<h4 id=\"CSRF攻击\"><a href=\"#CSRF攻击\" class=\"headerlink\" title=\"CSRF攻击\"></a>CSRF攻击</h4><blockquote>\n<p>CSRF指的是<strong>跨站请求伪造攻击</strong>，攻击者诱导用户进入一个第三方网站，然后该网站向被攻击网站发送跨站请求。如果用户在被攻击网站中保存了登录状态，那么攻击者就可以利用这个登录状态，绕过后台的用户验证，冒充用户向服务器执行一些操作</p>\n</blockquote>\n<p>CSRF 攻击的<strong>本质是利用 cookie 会在同源请求中携带发送给服务器的特点，以此来实现用户的冒充</strong></p>\n<h3 id=\"浏览器缓存\"><a href=\"#浏览器缓存\" class=\"headerlink\" title=\"浏览器缓存\"></a>浏览器缓存</h3><h4 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h4><p><a href=\"https://juejin.cn/post/6844903672556552205#heading-5\">浏览器缓存</a></p>\n<blockquote>\n<p>浏览器缓存：是指浏览器对用户请求过的静态资源(html、css、js)，存储到电脑本地磁盘中，当浏览器再次访问时，就可以直接从本地加载了，不需要再去服务端请求</p>\n</blockquote>\n<p>缓存的优点：</p>\n<ul>\n<li>减少了服务器的负担、提升网站性能</li>\n<li>加快客户端网页加载速度</li>\n<li>减少了冗余的数据传输，减少网费</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li>容易导致客户端代码更新不及时</li>\n</ul>\n<p>浏览器缓存分为协商缓存与强缓存</p>\n<h4 id=\"协商缓存与强缓存\"><a href=\"#协商缓存与强缓存\" class=\"headerlink\" title=\"协商缓存与强缓存\"></a>协商缓存与强缓存</h4><h5 id=\"强缓存\"><a href=\"#强缓存\" class=\"headerlink\" title=\"强缓存\"></a>强缓存</h5><p>使用强缓存策略时，如果缓存资源有效，则直接使用缓存资源，不再向服务器发送请求</p>\n<p>强缓存策略可以通过两种方式来设置，分别是响应头中的<code>Expires</code>属性和<code>Cache-Control</code>属性</p>\n<p><code>Expires</code>中的时间是一个绝对时间，它是服务器的时间，因此当客户端的时间和服务器的时间不一致，或者用户对客户端时间进行修改，这样可能会影响缓存命中的结果</p>\n<p><code>Cache-Control</code>的几个取值含义：</p>\n<ul>\n<li><strong>private：</strong> 仅浏览器可以缓存</li>\n<li><strong>public：</strong> 浏览器和代理服务器都可以缓存（对于private和public，前端可以认为一样，不用深究）</li>\n<li><strong>max-age=xxx</strong> 过期时间（重要）</li>\n<li><strong>no-cache</strong>  不进行强缓存（重要）</li>\n<li><strong>no-store</strong>   不强缓存，也不协商缓存，基本不用，缓存越多才越好呢</li>\n</ul>\n<h5 id=\"协商缓存\"><a href=\"#协商缓存\" class=\"headerlink\" title=\"协商缓存\"></a>协商缓存</h5><p>协商缓存条件：</p>\n<ul>\n<li><code>Cache-Control</code>的值为<code>no-cache</code></li>\n<li>或者<code>max-age</code>过期了</li>\n</ul>\n<p>使用协商缓存策略时，会先向服务器发送一个请求，如果资源没有发生修改，则返回一个 304 状态，让浏览器使用本地的缓存副本。如果资源发生了修改，则返回修改后的资源</p>\n<p>协商缓存也可以通过两种方式来设置，分别是 http 头信息中的<strong>Etag</strong> 和<strong>Last-Modified</strong>属性</p>\n<p><code>Etag</code>是服务器根据当前请求的资源生成的一个唯一标识，<strong>这个唯一标识是一个字符串，只要资源有变化这个串就不同</strong>，跟最后修改时间没有关系</p>\n<p>Etag的必要性：</p>\n<p>使用Last-Modified已经足以让浏览器知道本地的缓存副本是否足够新，但是仍然有以下几个问题难以解决：</p>\n<ul>\n<li>一些文件也许会周期性的更改，但是他的内容并不改变(仅仅改变的修改时间)，这个时候我们并不希望客户端认为这个文件被修改了，而重新GET</li>\n<li>某些文件修改非常频繁，比如在秒以下的时间内进行修改，(比方说1s内修改了N次)，If-Modified-Since能检查到的粒度是s级的，这种修改无法判断(或者说UNIX记录MTIME只能精确到秒)</li>\n<li>某些服务器不能精确的得到文件的最后修改时间</li>\n</ul>\n<p><strong>Etag的优先级比Last-Modified的优先级高</strong></p>\n<p>F5 会 跳过强缓存规则，直接走协商缓存；；；Ctrl+F5 ，跳过所有缓存规则，和第一次请求一样，重新获取资源</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220826162750.webp\" alt=\"缓存判断流程\"></p>\n<h3 id=\"浏览器解析URL\"><a href=\"#浏览器解析URL\" class=\"headerlink\" title=\"浏览器解析URL\"></a>浏览器解析URL</h3><p>用户输入URL，到浏览器呈现给用户页面，经历了哪些过程</p>\n<ol>\n<li>用户输入url</li>\n<li>对url地址进行DNs域名解析</li>\n<li>进行TCP连接</li>\n<li>进行HTTP报文的请求与响应</li>\n<li>浏览器解析文档资源并渲染页面</li>\n</ol>\n<h2 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h2><h3 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h3><p><a href=\"https://juejin.cn/post/7032881219524100132\">生命周期</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20221016095155.webp\" alt=\"生命周期.webp\"></p>\n<h3 id=\"vue2到vue3的变化\"><a href=\"#vue2到vue3的变化\" class=\"headerlink\" title=\"vue2到vue3的变化\"></a>vue2到vue3的变化</h3><ul>\n<li>组合式api<ul>\n<li>响应式api：<code>ref()</code>、<code>reactive()</code></li>\n<li>生命周期钩子：<code>onM0unted()</code>、<code>onUnmounted</code></li>\n<li>解决了混入的缺陷</li>\n<li>减少了包的体积</li>\n</ul>\n</li>\n<li>响应式原理 proxy</li>\n<li>emit事件 需要先定义事件名</li>\n<li>vue3可以有多个顶层标签</li>\n<li>style里可以用(<code>v-bind</code>)关键字</li>\n<li>:deep(.foo){}</li>\n</ul>\n<p>和Mixin相比，mixins有三个主要短板</p>\n<p><a href=\"https://cn.vuejs.org/guide/reusability/composables.html#comparisons-with-other-techniques\">官方文档</a></p>\n<ol>\n<li>不清楚的数据来源</li>\n<li>命名空间冲突</li>\n<li>隐式的跨mixin交流</li>\n</ol>\n<h3 id=\"MVVM、MVC、MVP的区别\"><a href=\"#MVVM、MVC、MVP的区别\" class=\"headerlink\" title=\"MVVM、MVC、MVP的区别\"></a>MVVM、MVC、MVP的区别</h3><h4 id=\"MVVM\"><a href=\"#MVVM\" class=\"headerlink\" title=\"MVVM\"></a>MVVM</h4><p><code>MVVM</code>即<code>Model</code>、<code>View</code>、<code>ViewModel</code></p>\n<ul>\n<li>MOdel代表数据模型，数据和业务逻辑都在Model层中定义</li>\n<li>View代表UI视图，负责数据的展示</li>\n<li>ViewModel负责监听Model中数据的改变并且控制视图的更新，处理用户交互操作</li>\n</ul>\n<h4 id=\"MVC\"><a href=\"#MVC\" class=\"headerlink\" title=\"MVC\"></a>MVC</h4><h4 id=\"MVP\"><a href=\"#MVP\" class=\"headerlink\" title=\"MVP\"></a>MVP</h4><h3 id=\"响应式原理\"><a href=\"#响应式原理\" class=\"headerlink\" title=\"响应式原理\"></a>响应式原理</h3><p><code>Vue2</code>监听采用的是<a href=\"#defineProperty\">Object.defineProperty()</a>,<code>Vue3</code>则是<a href=\"#prroxy\">Proxy</a></p>\n<p>采用数据劫持结合发布者订阅者模式的方式，通过Object.defineProperty()来劫持各个属性的getter、setter，在数据变动时执行<code>dep.notify()</code>方法，发布消息给订阅者(<code>Watcher</code>)，进行视图更新</p>\n<h4 id=\"Vue类\"><a href=\"#Vue类\" class=\"headerlink\" title=\"Vue类\"></a>Vue类</h4><p>创建一个Vue类</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token operator\">=</span>options<span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_data<span class=\"token operator\">=</span>options<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$data<span class=\"token operator\">=</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_data<span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//对data进行响应式处理</span>\n       <span class=\"token keyword\">new</span> <span class=\"token class-name\">Observe</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//创建Vue对象</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    el<span class=\"token operator\">:</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n      message<span class=\"token operator\">:</span><span class=\"token string\">'hello world'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<h4 id=\"Observe类\"><a href=\"#Observe类\" class=\"headerlink\" title=\"Observe类\"></a>Observe类</h4><p><code>Observe</code>进行数据监听</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Observe</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token comment\">//如果传入的数据是object</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> data<span class=\"token operator\">==</span><span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n           <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">walk</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//这个方法遍历对象中的属性，并依次对其进行响应式处理</span>\n    <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//获取所有属性</span>\n        <span class=\"token keyword\">const</span> keys<span class=\"token operator\">=</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> keys<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//对所有属性进行监听（数据劫持）</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">defineReactive</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> keys<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">defineReactive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span>key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//如果属性是对象，那么那么递归调用walk方法</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">walk</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">const</span> dep<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Dep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Dep类用于收集依赖</span>\n        <span class=\"token keyword\">const</span> val<span class=\"token operator\">=</span>obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            enumerable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            configurable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">//get代理将Dep.target即Watcher对象添加到依赖集合中</span>\n            <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token comment\">//这里在创建Watcher对象时会给Dep.target赋值</span>\n              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Dep<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                dep<span class=\"token punctuation\">.</span><span class=\"token function\">addSubs</span><span class=\"token punctuation\">(</span>Dep<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n              <span class=\"token keyword\">return</span> val<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>newVal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                val<span class=\"token operator\">=</span>newVal<span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//依赖的变更响应</span>\n                dep<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span>newVal<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span> \n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"Dep类\"><a href=\"#Dep类\" class=\"headerlink\" title=\"Dep类\"></a>Dep类</h4><p><code>Dep</code>收集依赖,当<code>Observer</code>中的<code>data</code>触发<code>getter</code>时，<code>Dep</code>就会收集依赖的<code>Watcher</code>，当<code>data</code>变动时，就会通过<code>Dep</code>给<code>Watcher</code>发通知更新</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dep</span><span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">static</span> target<span class=\"token operator\">=</span><span class=\"token keyword\">null</span>\n   <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subs<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token function\">addSubs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">watcher</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>watcher<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newVal</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n           <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>newVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"Watcher类\"><a href=\"#Watcher类\" class=\"headerlink\" title=\"Watcher类\"></a>Watcher类</h4><p><code>Watcher</code>类用于观察数据的变更，它会调用data中对应属性的<code>get</code>方法触发<code>Dep</code>依赖收集，并在数据变更后执行相应视图更新</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> uid<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//vm即一个Vue对象，key要观察的属性，cb是观测到数据变化后需要做的操作，通常是指DOM变更</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">vm<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span>cb</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vm<span class=\"token operator\">=</span>vm<span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>uid<span class=\"token operator\">=</span>uid<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cb<span class=\"token operator\">=</span>cb<span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//调用get触发依赖收集之前，把自身赋值给Dep.taget静态变量</span>\n       Dep<span class=\"token punctuation\">.</span>target<span class=\"token operator\">=</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//触发对象上代理的get方法，执行get添加依赖</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span>vm<span class=\"token punctuation\">.</span>$data<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//用完即清空</span>\n       Dep<span class=\"token punctuation\">.</span>target<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//在调用set触发Dep的notify时要执行的update函数，用于响应数据变化执行run函数即dom变更</span>\n    <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//值发生变化才变更</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token operator\">!==</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span>newValue<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//执行DOM更新等操作</span>\n    <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>通过以上代码即可实现一个简易版的Vue</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    message<span class=\"token operator\">:</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span>\n    num<span class=\"token operator\">:</span><span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> app<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span>data\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//模拟数据监听</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//模拟dom变更</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message 引起的dom变更---&gt;'</span><span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span><span class=\"token string\">'num'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//模拟dom变更</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'num 引起的dom变更---&gt;'</span><span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>message<span class=\"token operator\">=</span><span class=\"token string\">'world'</span><span class=\"token punctuation\">;</span>\ndata<span class=\"token punctuation\">.</span>num<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span></code></pre>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>其实在 <strong>Vue</strong> 中初始化渲染时，视图上绑定的数据就会实例化一个 <strong>Watcher</strong>，依赖收集就是是通过属性的 <strong>getter</strong> 函数完成的，文章一开始讲到的 <strong>Observer</strong> 、<strong>Watcher</strong> 、<strong>Dep</strong> 都与依赖收集相关。其中 <strong>Observer</strong> 与 <strong>Dep</strong>是一对一的关系， <strong>Dep</strong> 与 <strong>Watcher</strong> 是多对多的关系，<strong>Dep</strong> 则是 <strong>Observer</strong> 和 <strong>Watcher</strong> 之间的纽带。依赖收集完成后，当属性变化会执行被 <strong>Observer</strong> 对象的 <strong>dep.notify()</strong> 方法，这个方法会遍历订阅者（Watcher）列表向其发送消息， <strong>Watcher</strong> 会执行 <strong>run</strong> 方法去更新视图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220823105557.webp\" alt=\"reactive\"></p>\n<h3 id=\"虚拟DOM\"><a href=\"#虚拟DOM\" class=\"headerlink\" title=\"虚拟DOM\"></a>虚拟DOM</h3><blockquote>\n<p>虚拟DOM是对真实DOM的一种抽象,本身就是一个js对象</p>\n</blockquote>\n<p>优点：将真实节点抽象成VNode，有效减少直接操作dom次数，提高程序性能</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160624.jpg","length":31004,"excerpt":"","more":"<p>[TOC]</p>\n<h2 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h2><h3 id=\"typeof\"><a href=\"#typeof\" class=\"headerlink\" title=\"typeof\"></a>typeof</h3><p><code>typeof</code>操作符返回一个字符串，表示未经计算的操作数的类型</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/undefined\">Undefined</a></td>\n<td style=\"text-align:left\"><code>\"undefined\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Null\">Null</a></td>\n<td style=\"text-align:left\"><code>\"object\"</code> (见<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof#typeof_null\">下文</a>)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Boolean\">Boolean</a></td>\n<td style=\"text-align:left\"><code>\"boolean\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Number\">Number</a></td>\n<td style=\"text-align:left\"><code>\"number\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/BigInt\">BigInt</a>(ECMAScript 2020 新增)</td>\n<td style=\"text-align:left\"><code>\"bigint\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/String\">String</a></td>\n<td style=\"text-align:left\"><code>\"string\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a> (ECMAScript 2015 新增)</td>\n<td style=\"text-align:left\"><code>\"symbol\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">宿主对象（由 JS 环境提供）</td>\n<td style=\"text-align:left\"><em>取决于具体实现</em></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Function\">Function</a> 对象 (按照 ECMA-262 规范实现 [[Call]])</td>\n<td style=\"text-align:left\"><code>\"function\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">其他任何对象</td>\n<td style=\"text-align:left\"><code>\"object\"</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>特别地：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"object\"</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"number\"</span></code></pre>\n<p>NaN 是一个特殊值，它和自身不相等，是唯一一个非自反（自反，reflexive，即 x === x 不成立）的值。而 NaN !== NaN 为 true</p>\n<h3 id=\"instanceof\"><a href=\"#instanceof\" class=\"headerlink\" title=\"instanceof\"></a>instanceof</h3><p><code>instanceof</code>可以正确判断对象的类型，<strong>其内部运行机制是判断在其原型链中能否找到该类型的原型</strong></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// false </span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'str'</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// false </span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// true</span></code></pre>\n<p><code>instanceof</code><strong>只能正确判断引用数据类型</strong>，而不能判断基本数据类型。<code>instanceof</code> 运算符可以用来测试一个对象在其原型链中是否存在一个构造函数的 <code>prototype</code> 属性</p>\n<h3 id=\"构造器与new操作符\"><a href=\"#构造器与new操作符\" class=\"headerlink\" title=\"构造器与new操作符\"></a>构造器与new操作符</h3><h4 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h4><p>构造函数在本质上是常规函数，不过有两个约定：</p>\n<ul>\n<li>命名以大写字母开头</li>\n<li>只能由<code>new</code>操作符执行</li>\n</ul>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isAdmin <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jack\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Jack</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre>\n<p>当一个函数被使用<code>new</code>操作符执行时，它按照以下步骤：</p>\n<ul>\n<li>创建一个新的空对象并分配给<code>this</code></li>\n<li>函数执行时，通常会修改<code>this</code>，为其添加新的属性</li>\n<li>隐式<code>return</code>返回<code>this</code>的值</li>\n</ul>\n<p>换句话说，<code>new User(...)</code> 做的就是类似的事情：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// this = {};（隐式创建）</span>\n\n  <span class=\"token comment\">// 添加属性到 this</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isAdmin <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// return this;（隐式返回）</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>所以 <code>new User(\"Jack\")</code> 的结果是相同的对象：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Jack\"</span><span class=\"token punctuation\">,</span>\n  isAdmin<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<h4 id=\"构造器的return\"><a href=\"#构造器的return\" class=\"headerlink\" title=\"构造器的return\"></a>构造器的return</h4><p>通常，构造器没有 <code>return</code> 语句。它们的任务是将所有必要的东西写入 <code>this</code>，并自动转换为结果。</p>\n<p>但是，如果这有一个 <code>return</code> 语句，那么规则就简单了：</p>\n<ul>\n<li>如果 <code>return</code> 返回的是一个对象，则返回这个对象，而不是 <code>this</code>。</li>\n<li>如果 <code>return</code> 返回的是一个原始类型，则忽略。</li>\n</ul>\n<p>换句话说，带有对象的 <code>return</code> 返回该对象，在所有其他情况下返回 <code>this</code></p>\n<h3 id=\"class语法\"><a href=\"#class语法\" class=\"headerlink\" title=\"class语法\"></a>class语法</h3><p>基础语法</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 用法：</span>\n<span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><code>class</code>的本质仍然是函数，<code>class User{...}</code>构造实际上做了如下的事</p>\n<ul>\n<li>创建一个名为<code>User</code>的函数，该函数成为类声明的结果。该函数的代码来自于 <code>constructor</code> 方法（如果我们不编写这种方法，那么它就被假定为空）</li>\n<li>存储类中的方法，例如 <code>User.prototype</code> 中的 <code>sayHi</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220824100400.png\" alt=\"class\"></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>User <span class=\"token operator\">===</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token comment\">// 在原型中实际上有两个方法</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyNames</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// constructor, sayHi</span></code></pre>\n<p><code>class</code>声明的函数与下面代码效果相同</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 1. 创建构造器函数</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 函数的原型（prototype）默认具有 \"constructor\" 属性，</span>\n<span class=\"token comment\">// 所以，我们不需要创建它</span>\n\n<span class=\"token comment\">// 2. 将方法添加到原型</span>\n<span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sayHi</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 用法：</span>\n<span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"原型与原型链\"><a href=\"#原型与原型链\" class=\"headerlink\" title=\"原型与原型链\"></a>原型与原型链</h3><p>所有的实例对象都有一个<code>__proto__</code>属性，属性值是一个对象，指向对象的原型</p>\n<p>所有函数都一个<code>prototype</code>属性，属性值为一个对象,指向函数的原型对象</p>\n<p>所有实例对象的<code>__proto__</code>属性都指向其构造函数的<code>prototype</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828170829.png\" alt=\"原型图\"></p>\n<p>重要公式：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">Object<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></code></pre>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Proto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">Basic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"basic\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>desription <span class=\"token operator\">=</span> <span class=\"token string\">\"基类\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n   <span class=\"token comment\">// 修改 Basic 的原型</span>\n  <span class=\"token class-name\">Basic</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>desription<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">Father</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"father\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>desription <span class=\"token operator\">=</span> <span class=\"token string\">\"父类\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">Son</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"son\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>desription <span class=\"token operator\">=</span> <span class=\"token string\">\"子类\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token class-name\">Father</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Basic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Son</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Father</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> son <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Son</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">// instanceof 本质是从原型链上找</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">%c </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>son <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Basic</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"background: #222; color: #bada55\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----son.constructor----\"</span><span class=\"token punctuation\">,</span> son<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 实例对象的原型,即Father</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----son.__proto__----\"</span><span class=\"token punctuation\">,</span> son<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 方法的原型,即Father</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----Son.prototype----\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Son</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>son<span class=\"token punctuation\">.</span>__proto__<span class=\"token operator\">===</span><span class=\"token class-name\">Son</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----son----\"</span><span class=\"token punctuation\">,</span> son<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----son.getName()----\"</span><span class=\"token punctuation\">,</span> son<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">Proto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220814211054.png\" alt=\"原型与原型链\"></p>\n<h3 id=\"深拷贝和浅拷贝\"><a href=\"#深拷贝和浅拷贝\" class=\"headerlink\" title=\"深拷贝和浅拷贝\"></a>深拷贝和浅拷贝</h3><p>浅拷贝：拷贝时只拷贝最外面一层数据的值，遇到深层次对象则拷贝其地址，改变源对象中的引用对象同时会改变目标对象的值，同样改变目标对象中的引用对象也会改变源对象的值</p>\n<p>object.assigin() 为浅拷贝，只会把<code>可枚举</code>和自有（<code>Object.hasOwnProperty()</code>）属性从一个或多个源对象拷贝至目标对象</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>sources<span class=\"token punctuation\">)</span></code></pre>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">shallowCopy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> c<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  obj1<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 浅拷贝：object.assigin()在拷贝时只拷贝其值，源对象为对象的引用时，拷贝其引用</span>\n  <span class=\"token comment\">// 引用值发生改变目标对象值也会改变</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { a: 0 , b: { c: 2}}</span>\n  obj2<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { a: 0 , b: { c: 3}}</span>\n\n  <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> copy <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 基本类型会被包装成对象</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { '0': 'i', '1': 'd' }</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// shallowCopy();</span></code></pre>\n<p>实现浅拷贝</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">shallowCopy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>obj <span class=\"token operator\">||</span> <span class=\"token keyword\">typeof</span> obj <span class=\"token operator\">!==</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">let</span> newObj <span class=\"token operator\">=</span> obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      newObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> newObj\n<span class=\"token punctuation\">}</span></code></pre>\n<p>深拷贝: 深拷贝会把对象里<strong>所有的数据</strong>重新复制到新的内存空间，是最彻底的拷贝</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 深拷贝</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> c<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  obj1<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  obj1<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { \"a\": 0, \"b\": { \"c\": 0}}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>实现深拷贝</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>obj <span class=\"token operator\">||</span> <span class=\"token keyword\">typeof</span> obj <span class=\"token operator\">!==</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">let</span> newObj <span class=\"token operator\">=</span> obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      newObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">?</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> newobj\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"对象遍历\"><a href=\"#对象遍历\" class=\"headerlink\" title=\"对象遍历\"></a>对象遍历</h3><p>forin: 会遍历对象原型链上的属性 可以遍历数组但数组遍历建议用for of</p>\n<p>hasOwnProperty: 判断对象自身是否包含某个属性，不包含原型链上的属性，有则返回true，无则返回false</p>\n<p>Object.entries() 返回对象中可枚举属性的 键值对数组,与for in 不同的是不会遍历原型链上的属性</p>\n<p>Object.keys() 对应的返回的是 对象的键的数组，但只会获取第一层的key</p>\n<p>Object.values() 对应的返回的是 对象的值的数组，遇到引用对象则拷贝整个对象的值</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 对象遍历</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ObjectLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> triangle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> c<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> d<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> e<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">ColoredTriangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token class-name\">ColoredTriangle</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> triangle<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ColoredTriangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// for in 会遍历对象原型链上的属性 可以遍历数组但数组遍历建议用for of</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">forinLoop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------forinLoop------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> prop <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">obj.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prop<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// obj.color = red obj.a = 1 obj.b = 2 obj.c = 3</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// hasOwnProperty 用法  对象自身是否包含某个属性，不包含原型链上的属性</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------hasOwnProperty------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> prop <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">obj.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prop<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// obj.color = red</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/* Object.entries() 返回对象中可枚举属性的 键值对数组,与for in 不同的是不会遍历原型链上的属性\n   * Object.keys() 对应的返回的是 对象的键的数组 获取第一层的key\n   * Object.values() 对应的返回的是 对象的值的数组\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">entriesLoop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------entriesLoop------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">forinLoop</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">entriesLoop</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'a', 'b' ]</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 1, { c: 2, d: { e: 3 } } ]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"Object-defineProperty和Proxy\"><a href=\"#Object-defineProperty和Proxy\" class=\"headerlink\" title=\"Object.defineProperty和Proxy\"></a>Object.defineProperty和Proxy</h3><h4 id=\"Object-defineProperty\"><a href=\"#Object-defineProperty\" class=\"headerlink\" title=\"Object.defineProperty\"></a><span id=\"defineProperty\">Object.defineProperty</span></h4><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\">MDN</a></p>\n<p>Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或修改对象的属性，并返回修改后的对象</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> descriptor<span class=\"token punctuation\">)</span></code></pre>\n<p><code>obj</code> 要修改属性的对象</p>\n<p><code>prop</code> 要定义或修改的属性的名称</p>\n<p><code>descripto</code> 属性描述符</p>\n<p>常见属性描述符: <code>value</code>、<code>configurable</code>、<code>get</code>、<code>set</code>、<code>enumerable</code></p>\n<p>缺陷：</p>\n<ul>\n<li>无法监控新增的属性，由于该方法监听的是对象的属性，所以在原始对象上新增属性就无法劫持到</li>\n<li><p>对于数组的监听，在对数组进行<code>sort</code>、<code>shift</code>、<code>reverse</code>等改变数组索引操作时会触发多次<code>get</code>和<code>set</code>方法</p>\n</li>\n<li><p>只能劫持对象的属性，从而需要对每个对象，每个属性进行遍历，如果，属性值是对象，还需要深度遍历</p>\n</li>\n</ul>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arrShallow <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> arrDeep <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Object.defineProperty  数组 劫持的是对象的属性，如果劫持的对象的属性的属性值为对象，则需深度遍历</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ArrayHijack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">arrayProperty</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">get: arr[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">set: arr[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">] to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>newValue<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">arrayProperty</span><span class=\"token punctuation\">(</span>arrShallow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  arrShallow<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">999</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打印：set: arr[0] to 999</span>\n  arrShallow<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打印：get: arr[3]</span>\n  arrShallow<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// arr.shift(); // 会导致5次前移，所以产生5次get和5次set</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arrShallow<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">arrayProperty</span><span class=\"token punctuation\">(</span>arrDeep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  arrDeep<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 无法深度监听到数组的变化</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arrDeep[0]:\"</span> <span class=\"token operator\">+</span> arrDeep<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// get: arr[0] arrDeep[0]:1,6,3</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ArrayHijack();</span>\n\n<span class=\"token comment\">// Object.defineProperty 监听的是对象的单个属性</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ObjectHijack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 6</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 6</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"Proxy\"><a href=\"#Proxy\" class=\"headerlink\" title=\"Proxy\"></a><span id=\"proxy\">Proxy</span></h4><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy#handler_%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95\">MDN</a></p>\n<p>Proxy() 用于创建一个对象的代理，从而实现基本操作的拦截和自定义（如属性查找、赋值、枚举、函数调用等）</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span></code></pre>\n<p><code>target</code>: 要进行代理的目标对象(可以是任何类型的对象，包括原生数组，函数，甚至另一个代理)</p>\n<p><code>handler</code>： 代理行为</p>\n<p>常见handler：<code>apply</code>、<code>get</code>、<code>set</code>、<code>has</code></p>\n<p>handler.get(target,property,receiver)</p>\n<p>target: 目标对象</p>\n<p>property: 被获取的属性名</p>\n<p>优势：proxy 是对整个对象进行劫持，并返回一个新对象</p>\n<p>劣势：版本兼容性</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 浅劫持</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">shallowProxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    count<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"JavaScript\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">22</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> proxyObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">get：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">set：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  proxyObj<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Golang\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**浅劫持对象，如果读取到的属性为对象,需要深度劫持获取值\n   * get: user\n   * 相当于 proxyObj.user\n   */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 深度劫持</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">deepProxyObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    count<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"JavaScript\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">22</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">deepProxy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">get：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">&amp;&amp;</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">deepProxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 递归劫持</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">set：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">let</span> proxyObj <span class=\"token operator\">=</span> <span class=\"token function\">deepProxy</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  proxyObj<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Golang\"</span><span class=\"token punctuation\">;</span>\n\n  proxyObj<span class=\"token punctuation\">.</span>fine <span class=\"token operator\">=</span> <span class=\"token string\">\"i am fine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"call、apply、bind的区别\"><a href=\"#call、apply、bind的区别\" class=\"headerlink\" title=\"call、apply、bind的区别\"></a>call、apply、bind的区别</h3><p>call()和apply()作用相同，传递参数不同</p>\n<p>作用：</p>\n<ul>\n<li>改变this的指向</li>\n<li>实现继承</li>\n</ul>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span><span class=\"token function\">prototype</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">,</span> argsArray<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 参数数组</span>\n<span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span><span class=\"token function\">prototype</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">,</span> arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 参数列表</span>\n<span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span><span class=\"token function\">prototype</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">,</span> arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 参数列表</span></code></pre>\n<p><code>thisArg</code>: 函数运行时的this值，可选</p>\n<p><code>arg1</code>: 传递的参数</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">callApply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">animal</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">dog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">animal</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">dog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"哈士奇\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"狗\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">cat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">animal</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 继承</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"---cat---\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">bird</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">animal</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">cat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"加菲貓\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"貓\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 加菲貓</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">bird</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"蜂鸟\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"鸟\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 蜂鸟</span>\n  <span class=\"token function\">display</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"加菲貓\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"貓\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 加菲貓 猫</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\">MDN</a></p>\n<p>bind() 创建一个<strong>新的函数</strong>，在 <code>bind()</code> 被调用时，这个新函数的 <code>this</code> 被指定为 <code>bind()</code> 的第一个参数，而其余参数将作为新函数的参数，供调用时使用</p>\n<ul>\n<li>bind方法能改变this的指向</li>\n<li>call()和apply()是立即调用函数</li>\n<li>bind()是创建一个新的函数</li>\n</ul>\n<p>丢失<code>this</code></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    firstName<span class=\"token operator\">:</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this 为user</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>sayHi<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello, undefined! settimeout的this为window</span></code></pre>\n<p>这里丢失了user的上下文,实际上settimeout可以被重写为</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> f <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>sayHi\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 浏览器中的setTimeout方法，会为函数调用设定this为window</span></code></pre>\n<p>解决方案1：包装器</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 匿名函数</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    user<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello, John!</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 或者箭头函数</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello, John!</span></code></pre>\n<p>但是当后面的代码在settimeout调用方法之前，改变user的属性方法，就获取到的是更改后的值</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello, bob!</span>\nuser<span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">=</span> <span class=\"token string\">\"bob\"</span></code></pre>\n<p>解决方案2: bind</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// this绑定为 user 也就是say 的this绑定为了 user，是对当前 user的绑定，后续代码对 user的更改不会影响 输出结果</span>\n<span class=\"token keyword\">let</span> say <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Hello, John! </span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>say<span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Hello, John!</span>\nuser<span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">=</span> <span class=\"token string\">\"bob\"</span></code></pre>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> username <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token operator\">:</span> <span class=\"token string\">\"bob\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token operator\">:</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">phrase</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>phrase<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> say <span class=\"token operator\">=</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hi, bob!</span>\n<span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> <span class=\"token string\">\"call\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 会立即执行sayHi函数</span>\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"apply\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 会立即执行sayHi函数</span></code></pre>\n<h3 id=\"this指向问题\"><a href=\"#this指向问题\" class=\"headerlink\" title=\"this指向问题\"></a>this指向问题</h3><p><a href=\"https://juejin.cn/post/6844903746984476686\">this指向问题</a></p>\n<p><a href=\"https://juejin.cn/post/6844904167316652045#heading-4\">this指向</a></p>\n<ol>\n<li>严格模式与非严格模式</li>\n</ol>\n<p>this在严格模式下与非严格模式下有细微的差别</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 非严格模式下</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// a</span>\n<span class=\"token comment\">// 严格模式下</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span></code></pre>\n<ol>\n<li>普通函数下的this指向问题</li>\n</ol>\n<p>this指向取决于最终函数的调用者，即取决于当前执行上下文</p>\n<p><code>上下文</code>：上下文类似于英语句子中的主语</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> test <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  prop<span class=\"token operator\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">func</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>prop<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42 // this为 test</span>\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> test<span class=\"token punctuation\">.</span><span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 此时的this为 window 等同于 window.a()</span></code></pre>\n<ol>\n<li>this用于闭包</li>\n</ol>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"pop\"</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"bob\"</span>\n  <span class=\"token comment\">// 无法访问到外部函数的this变量</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// pop</span></code></pre>\n<ol>\n<li>箭头函数中的this指向问题</li>\n</ol>\n<p><a href=\"#arrow\">关于箭头函数</a></p>\n<p>箭头函数中没有<code>this</code>绑定，必须通过查找作用域链来决定其值。 如果箭头函数被非箭头函数包含，则<code>this</code>绑定的是最近一层非箭头函数的<code>this</code>，否则<code>this</code>的值则被设置为全局对象</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'window'</span>\n<span class=\"token keyword\">var</span> student <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'若川'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">doSth</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// var self = this;</span>\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">arrowDoSth</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// console.log(self.name);</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">arrowDoSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">arrowDoSth2</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nstudent<span class=\"token punctuation\">.</span><span class=\"token function\">doSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// '若川'</span>\nstudent<span class=\"token punctuation\">.</span><span class=\"token function\">arrowDoSth2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'window'</span></code></pre>\n<p><code>call</code>、<code>apply</code>、<code>bind</code>无法直接改变箭头函数的<code>this</code>(它自身没有<code>this</code>),但可以通过改变箭头函数生成的普通函数的<code>this</code>,来改变<code>this</code>的指向</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'window'</span>\n<span class=\"token keyword\">var</span> student <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'若川'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">doSth</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'arrow this'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'person'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nstudent<span class=\"token punctuation\">.</span><span class=\"token function\">doSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 若川 arrow this 若川</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> student<span class=\"token punctuation\">.</span><span class=\"token function\">doSth</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span> <span class=\"token comment\">// person</span>\n<span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// arrow this person</span></code></pre>\n<ol>\n<li>隐式函数绑定下丢失<code>this</code>上下文的问题</li>\n</ol>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    foo<span class=\"token operator\">:</span> foo\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bar <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">;</span> <span class=\"token comment\">//传递了函数，隐式绑定丢失了</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'hello' 丢失了上下文</span></code></pre>\n<p>综合考察</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'window'</span>\n\n<span class=\"token keyword\">var</span> person1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'person1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">show1</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">show2</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">show3</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">show4</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> person2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'person2'</span> <span class=\"token punctuation\">}</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show1</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show2</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show3</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show4</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<p>正确答案：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">person1<span class=\"token punctuation\">.</span><span class=\"token function\">show1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// person1</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show1</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// person2</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show2</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// person2</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show3</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// person1</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// person1</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">show4</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// person2</span></code></pre>\n<p>其中<code>person1.show3()</code>获取到的是一个函数，需要赋值给一个变量才会执行，加上<code>()</code>相当于立即执行函数，执行环境为<code>window</code>,所以打印window</p>\n<p>相当于执行了以下操作</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> fun <span class=\"token operator\">=</span> person1<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<p><code>person1.show3().call(person2)</code> 与 <code>person1.show3.call(person2)()</code> 也好理解了。前者是通过person2调用了最终的打印方法。后者是先通过person2调用了person1的高阶函数，然后再在全局环境中执行了该打印方法</p>\n<h3 id=\"手写instanceof\"><a href=\"#手写instanceof\" class=\"headerlink\" title=\"手写instanceof\"></a>手写instanceof</h3><p><a href=\"#instanceof\">instanceof</a></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">_instanceof</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">left<span class=\"token punctuation\">,</span> right</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> _proto_ <span class=\"token operator\">=</span> left<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> prototype <span class=\"token operator\">=</span> right<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_proto_ <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_proto_ <span class=\"token operator\">===</span> prototype<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    _proto_ <span class=\"token operator\">=</span> _proto_<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"手写继承\"><a href=\"#手写继承\" class=\"headerlink\" title=\"手写继承\"></a>手写继承</h3><p><strong><code>Object.create()</code></strong> 方法用于创建一个新对象，使用现有的对象来作为新创建对象的原型（prototype）<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create\">MDN</a></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">inherit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">eat</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> eat something</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token class-name\">Parent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">say</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> say my name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> age </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">Child</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> sex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Parent</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> sex<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Child.prototype = new Parent(); // 与Object.create()效果相同</span>\n  <span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Parent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 更改需要利用constructor 指向 如果利用对象的形式修改了原型对象,需要利用constructor 指回原来的构造函数,即修复 constructor</span>\n  <span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">=</span> Child<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> stu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"male\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  stu<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  stu<span class=\"token punctuation\">.</span><span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Child</span>\n  <span class=\"token comment\">// 如果没把Child.prototype.constructor重新指回Child,这里的值会是Parent</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">inherit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"手写call\"><a href=\"#手写call\" class=\"headerlink\" title=\"手写call\"></a>手写call</h3><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'toy'</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> human <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'bob'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">customCall</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 判断 call 方法调用者是否为函数</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">this</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type error'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 这里的this指向为person，实际执行为person</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 如果传入对象上下文不存在，则设置为 window</span>\n  ctx <span class=\"token operator\">=</span> ctx <span class=\"token operator\">||</span> window\n  <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 为 human 添加一个 person 方法</span>\n  ctx<span class=\"token punctuation\">.</span>fn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n  <span class=\"token comment\">// 执行该方法 并传入参数 返回运行结果</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 删除</span>\n  <span class=\"token keyword\">delete</span> ctx<span class=\"token punctuation\">.</span>fn\n  <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span>\n\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">customCall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">customCall</span><span class=\"token punctuation\">(</span>human<span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"手写apply\"><a href=\"#手写apply\" class=\"headerlink\" title=\"手写apply\"></a>手写apply</h3><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">customApply</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 判断 call 方法调用者是否为函数</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">this</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type error'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 这里的this指向为person，实际执行为person</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 如果传入对象上下文不存在，则设置为 window</span>\n  ctx <span class=\"token operator\">=</span> ctx <span class=\"token operator\">||</span> window\n  <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 为 human 添加一个 person 方法</span>\n  ctx<span class=\"token punctuation\">.</span>fn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n  <span class=\"token comment\">// 执行该方法 并传入参数 返回运行结果</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 删除</span>\n  <span class=\"token keyword\">delete</span> ctx<span class=\"token punctuation\">.</span>fn\n  <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span>\n\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">customApply</span><span class=\"token punctuation\">(</span>human<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"手写bind\"><a href=\"#手写bind\" class=\"headerlink\" title=\"手写bind\"></a>手写bind</h3><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">#</code></pre>\n<h3 id=\"箭头函数\"><a href=\"#箭头函数\" class=\"headerlink\" title=\"箭头函数\"></a><span id=\"arrow\">箭头函数</span></h3><ul>\n<li>没有<code>this</code></li>\n<li>没有<code>arguments</code></li>\n<li>不能使用<code>new</code>进行调用</li>\n</ul>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 箭头函数的this指向与常规变量的查找方式相同,即一层层往上找</span>\n<span class=\"token keyword\">let</span> group <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">\"Our Group\"</span><span class=\"token punctuation\">,</span>\n  students<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pete\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">showList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>\n      <span class=\"token parameter\">student</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title <span class=\"token operator\">+</span> <span class=\"token string\">': '</span> <span class=\"token operator\">+</span> student<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ngroup<span class=\"token punctuation\">.</span><span class=\"token function\">showList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"ES6\"><a href=\"#ES6\" class=\"headerlink\" title=\"ES6\"></a>ES6</h3><p><a href=\"#var\">块级作用域</a></p>\n<p><a href=\"#destruct\">解构赋值</a></p>\n<p><a href=\"#promise\">异步</a></p>\n<p><a href=\"#arrow\">箭头函数</a></p>\n<p><a href=\"moudle\">模块化</a></p>\n<h3 id=\"解构赋值\"><a href=\"#解构赋值\" class=\"headerlink\" title=\"解构赋值\"></a><span id=\"destruct\">解构赋值</span></h3><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">destructArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 数组解构</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------数组解构------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">[</span>arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arrRest<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arrShallow<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arrRest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">[</span>arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>arr2<span class=\"token punctuation\">,</span> arr1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------数组交换------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 对象解构</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------对象解构------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    size<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      width<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      height<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    items<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Cake\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Donut\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    extra<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      bob<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      pop<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span>\n    items<span class=\"token operator\">:</span> item<span class=\"token punctuation\">,</span>\n    size<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> width <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>restObject\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> restObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"rest参数\"><a href=\"#rest参数\" class=\"headerlink\" title=\"rest参数\"></a>rest参数</h3><p>扩展运算符被用在函数形参上时，<strong>它还可以把一个分离的参数序列整合成一个数组</strong>。这一点<strong>经常用于获取函数的多余参数，或者像上面这样处理函数参数个数不确定的情况</strong></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">mutiple</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">mutiple</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// [1, 2, 3, 4]</span></code></pre>\n<h3 id=\"async、await和promise\"><a href=\"#async、await和promise\" class=\"headerlink\" title=\"async、await和promise\"></a><span id=\"promise\">async、await和promise</span></h3><p>宏任务：setTimeout、setInterval</p>\n<p>微任务：Promise.then()</p>\n<p>任务执行顺序：同步任务—&gt; 微任务—&gt; 宏任务</p>\n<p>微任务会依次全部执行再执行下一个宏任务</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> Promise1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Promise1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resolve\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"111\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Promise1End\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"can?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// console.log(Primise1);</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"同步1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"同步2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> Promise2 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Promise2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Promise2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"同步3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Promise.all([Promise1, Promise2]);</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"var、let和const\"><a href=\"#var、let和const\" class=\"headerlink\" title=\"var、let和const\"></a><span id=\"var\">var、let和const</span></h3><p>let和const的特点:</p>\n<ul>\n<li><p>不允许重复声明</p>\n</li>\n<li><p>不存在变量提升</p>\n</li>\n<li><p>暂时性死区</p>\n</li>\n<li><p>块级作用域</p>\n</li>\n</ul>\n<p>var:</p>\n<p>  存在变量提升、可重复声明、无块级作用域</p>\n<p>暂时性死区：</p>\n<p>  使用let、const声明的变量，必须先声明变量在使用</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"></code></pre>\n<h3 id=\"判断数组\"><a href=\"#判断数组\" class=\"headerlink\" title=\"判断数组\"></a>判断数组</h3><h4 id=\"Object-prototype-toString-call\"><a href=\"#Object-prototype-toString-call\" class=\"headerlink\" title=\"Object.prototype.toString.call\"></a>Object.prototype.toString.call</h4><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\">MDN</a></p>\n<p><code>toString()</code>方法返回一个表示改对象的字符串</p>\n<blockquote>\n<p>每个对象都有一个 <code>toString()</code> 方法，当该对象被表示为一个文本值时，或者一个对象以预期的字符串方式引用时自动调用。默认情况下，<code>toString()</code> 方法被每个 <code>Object</code> 对象继承。如果此方法在自定义对象中未被覆盖，<code>toString()</code> 返回 “[object <em>type</em>]”，其中 <code>type</code> 是对象的类型</p>\n</blockquote>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [object Object]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [object Object]</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object String]\"</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object Number]\"</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object Symbol]\"</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object Null]\"</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object Undefined]\"</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object Function]\"</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'An'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"[object Object]\"</span></code></pre>\n<p>重写<code>toString</code>方法</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> breed<span class=\"token punctuation\">,</span> sex<span class=\"token punctuation\">,</span> color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>breed <span class=\"token operator\">=</span> breed<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> sex<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Dog</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">toString</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">dogString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Dog </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is a </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>breed<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> dog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"catty\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lab\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"male\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dog<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Dog catty is a male black Lab</span></code></pre>\n<h4 id=\"instanceof-1\"><a href=\"#instanceof-1\" class=\"headerlink\" title=\" instanceof\"></a><span id=\"instanceof\"> instanceof</span></h4><p><code>instanceof</code> 的内部机制是通过判断对象的原型链中是不是能找到类型的 <code>prototype</code></p>\n<p>使用 <code>instanceof</code>判断一个对象是否为数组，<code>instanceof</code> 会判断这个对象的原型链上是否会找到对应的 <code>Array</code> 的原型，找到返回 <code>true</code>，否则返回 <code>false</code></p>\n<p>但 <code>instanceof</code> 只能用来判断对象类型，原始类型不可以。并且所有对象类型 instanceof Object 都是 true</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre>\n<h4 id=\"Array-isArray\"><a href=\"#Array-isArray\" class=\"headerlink\" title=\"Array.isArray\"></a>Array.isArray</h4><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\">MDN</a></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span></code></pre>\n<h3 id=\"EventLoop\"><a href=\"#EventLoop\" class=\"headerlink\" title=\"EventLoop\"></a>EventLoop</h3><p>在<code>JavaScript</code>中，任务被分为两种，一种宏任务（<code>MacroTask</code>）也叫<code>Task</code>，一种叫微任务（<code>MicroTask</code>）</p>\n<p>宏任务</p>\n<p><a href=\"https://juejin.cn/post/6844903657264136200\">微任务、宏任务与Eventloop</a>  <a href=\"https://juejin.cn/post/6844903764202094606\">EventLoop</a></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>浏览器</th>\n<th>Node</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>I/O</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>setTimeout</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>setInterval</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>setImmediate</td>\n<td>❌</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>requestAnimationFrame</td>\n<td>✅</td>\n<td>❌</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>微任务</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>浏览器</th>\n<th>NOde</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>process.nextTick</td>\n<td>❌</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>MutationObserver</td>\n<td>✅</td>\n<td>❌</td>\n</tr>\n<tr>\n<td>Promise.then catch finally</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"跨域\"><a href=\"#跨域\" class=\"headerlink\" title=\"跨域\"></a>跨域</h3><h4 id=\"跨域的定义\"><a href=\"#跨域的定义\" class=\"headerlink\" title=\"跨域的定义\"></a>跨域的定义</h4><p>当协议、域名、端口中任意一个不相同时，就会造成跨域。跨域是浏览器<strong>同源策略</strong>导致的。</p>\n<p>同源：协议、域名、端口三者都相同</p>\n<p>同源策略限制内容有：</p>\n<ul>\n<li>Cookie、LocalStorage、IndexedDB 等存储性内容</li>\n<li>DOM 节点</li>\n<li>AJAX 请求发送后，结果被浏览器拦截了</li>\n</ul>\n<p>但有三个标签运行跨域加载资源</p>\n<ul>\n<li><code>&lt;img src=XXX&gt;</code></li>\n<li><code>&lt;link href=XXX&gt;</code></li>\n<li><code>&lt;script src=XXX&gt;</code></li>\n</ul>\n<h4 id=\"跨域解决方案\"><a href=\"#跨域解决方案\" class=\"headerlink\" title=\"跨域解决方案\"></a>跨域解决方案</h4><p><a href=\"https://juejin.cn/post/6844903767226351623\">跨域的解决方案</a></p>\n<ol>\n<li>JSONP</li>\n</ol>\n<p>原理：利用<code>&lt;script&gt;</code>标签没有跨域限制的漏洞，实现跨域</p>\n<p>缺点：只支持get请求，不安全可能会遭受XSS攻击</p>\n<p>实现：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">jsonp</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> url<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">,</span> callback <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span>\n    window<span class=\"token punctuation\">[</span>callback<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n      document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>params<span class=\"token punctuation\">,</span> callback <span class=\"token punctuation\">}</span> <span class=\"token comment\">// wd=b&amp;callback=show</span>\n    <span class=\"token keyword\">let</span> arrs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      arrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>params<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    script<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>arrs<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&amp;'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">jsonp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  url<span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:3000/say'</span><span class=\"token punctuation\">,</span>\n  params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> wd<span class=\"token operator\">:</span> <span class=\"token string\">'Iloveyou'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  callback<span class=\"token operator\">:</span> <span class=\"token string\">'show'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>上面这段代码相当于向<code>http://localhost:3000/say?wd=Iloveyou&amp;callback=show</code>这个地址请求数据</p>\n<ol>\n<li>CORS</li>\n</ol>\n<p><strong>CORS 需要浏览器和后端同时支持。IE 8 和 9 需要通过 XDomainRequest 来实现</strong></p>\n<p>浏览器会自动进行 CORS 通信，实现 CORS 通信的关键是后端。只要后端实现了 CORS，就实现了跨域</p>\n<p>服务端设置 <strong>Access-Control-Allow-Origin</strong> 就可以开启 CORS。 该属性表示哪些域名可以访问资源，如果设置通配符则表示所有网站都可以访问资源</p>\n<ol>\n<li>postMessage</li>\n</ol>\n<p>postMessage是HTML5 XMLHttpRequest Level 2中的API，且是为数不多可以跨域操作的window属性之一，它可用于解决以下方面的问题：</p>\n<ul>\n<li>页面和其打开的新窗口的数据传递</li>\n<li>多窗口之间消息传递</li>\n<li>页面与嵌套的iframe消息传递</li>\n<li>上面三个场景的跨域数据传递</li>\n</ul>\n<p><code>http://localhost:3000/a.html</code>页面向<code>http://localhost:4000/b.html</code>发送信息</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">// a.html\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://localhost:4000/b.html<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">frameborder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>frame<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">&gt;</span></span> //等它加载完触发一个事件\n  //内嵌在http://localhost:3000/a.html\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword\">function</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> frame <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'frame'</span><span class=\"token punctuation\">)</span>\n        frame<span class=\"token punctuation\">.</span>contentWindow<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我爱你'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://localhost:4000'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//发送数据</span>\n        window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//接受返回数据</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token comment\">//我不爱你</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// b.html</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token comment\">//我爱你</span>\n    e<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我不爱你'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>origin<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span></code></pre>\n<ol>\n<li>Nginx反向代理</li>\n</ol>\n<p>实现原理类似于Node中间件代理，需要你搭建一个中转nginx服务器，用于转发请求。</p>\n<p>使用nginx反向代理实现跨域，是最简单的跨域方式。只需要修改nginx的配置即可解决跨域问题，支持所有浏览器，支持session，不需要修改任何代码，并且不会影响服务器性能。</p>\n<p>实现思路：通过nginx配置一个代理服务器（域名与domain1相同，端口不同）做跳板机，反向代理访问domain2接口，并且可以顺便修改cookie中domain信息，方便当前域cookie写入，实现跨域登录</p>\n<ol>\n<li>NodeJs中间件代理</li>\n</ol>\n<p>实现原理：<strong>同源策略是浏览器需要遵循的标准，而如果是服务器向服务器请求就无需遵循同源策略。</strong> 代理服务器，需要做以下几个步骤：</p>\n<ul>\n<li>接受客户端请求 </li>\n<li>将请求转发给服务器</li>\n<li>拿到服务器响应数据</li>\n<li>将响应转发给客户端</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20221022213713.webp\" alt=\"中间件代理\"></p>\n<ol>\n<li>websocket</li>\n</ol>\n<p>Websocket是HTML5的一个持久化的协议，它实现了浏览器与服务器的全双工通信，同时也是跨域的一种解决方案。WebSocket和HTTP都是应用层协议，都基于 TCP 协议。但是 <strong>WebSocket 是一种双向通信协议，在建立连接之后，WebSocket 的 server 与 client 都能主动向对方发送或接收数据</strong>。同时，WebSocket 在建立连接时需要借助 HTTP 协议，连接建立好了之后 client 与 server 之间的双向通信就与 HTTP 无关了</p>\n<p>本地文件socket.html向<code>localhost:3000</code>发生数据和接受数据</p>\n<pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\">// socket.html\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">let</span> socket <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ws://localhost:3000'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    socket<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      socket<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我爱你'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//向服务器发送数据</span>\n    <span class=\"token punctuation\">}</span>\n    socket<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//接收服务器返回的数据</span>\n    <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// server.js</span>\n<span class=\"token keyword\">let</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> WebSocket <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ws'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//记得安装ws</span>\n<span class=\"token keyword\">let</span> wss <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket<span class=\"token punctuation\">.</span>Server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>port<span class=\"token operator\">:</span><span class=\"token number\">3000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwss<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connection'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ws</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ws<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ws<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我不爱你'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<ol>\n<li>window.name + iframe</li>\n<li>location.hash + iframe</li>\n<li>document.domain + iframe</li>\n</ol>\n<h3 id=\"XLSX\"><a href=\"#XLSX\" class=\"headerlink\" title=\"XLSX\"></a>XLSX</h3><p>安装</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> xlsx</code></pre>\n<p>导入</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">XLSX</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'xlsx'</span>\n<span class=\"token keyword\">import</span> <span class=\"token constant\">XLSX</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'xlsx'</span></code></pre>\n<p>新建工作簿</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> wb <span class=\"token operator\">=</span> <span class=\"token constant\">XLSX</span><span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">book_new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>数据格式转换</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// json类型数据转换成sheet</span>\n<span class=\"token keyword\">let</span> sheet1 <span class=\"token operator\">=</span> <span class=\"token constant\">XLSX</span><span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">json_to_sheet</span><span class=\"token punctuation\">(</span>rows<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// json数据格式</span>\n<span class=\"token keyword\">const</span> rows <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token string\">'列1'</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'列2'</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'列3'</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token string\">'列1'</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'列2'</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'列3'</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">// 二维数组</span>\n<span class=\"token keyword\">let</span> sheet2 <span class=\"token operator\">=</span> <span class=\"token constant\">XLSX</span><span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">aoa_to_sheet</span><span class=\"token punctuation\">(</span>ws_data<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 数组格式</span>\n<span class=\"token keyword\">const</span> ws_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"姓名\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"性别\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"年龄\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"蔡徐坤\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"男\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"60\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"李明\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"男\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"30\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span></code></pre>\n<p>添加工作表数据</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 参数：工作簿、sheet数据、工作表(sheet)名字</span>\n    <span class=\"token constant\">XLSX</span><span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">book_append_sheet</span><span class=\"token punctuation\">(</span>wb<span class=\"token punctuation\">,</span>sheet1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Sheet1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n<p>文件存储</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token constant\">XLSX</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>wb<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h2><h3 id=\"节流与防抖\"><a href=\"#节流与防抖\" class=\"headerlink\" title=\"节流与防抖\"></a>节流与防抖</h3><h4 id=\"防抖\"><a href=\"#防抖\" class=\"headerlink\" title=\"防抖\"></a>防抖</h4><p>事件频繁触发情况下，<code>delay</code>时间内被触发则会重新计时</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 防抖 设置方法执行间隔为 delay ms ，delay 时间内事件被触发则重新计时</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">debunce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> delay</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  delay <span class=\"token operator\">=</span> delay <span class=\"token operator\">||</span> <span class=\"token number\">500</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 被闭包函数使用</span>\n  <span class=\"token comment\">// 剩余参数数组</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果 delay 秒内函数被执行则，会清除前面的settimeout</span>\n    timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<blockquote>\n<p>函数防抖就像回城，被打断就会重新计时</p>\n</blockquote>\n<p>应用场景：</p>\n<ul>\n<li>按钮点击</li>\n<li>输入框</li>\n</ul>\n<h4 id=\"节流\"><a href=\"#节流\" class=\"headerlink\" title=\"节流\"></a>节流</h4><p>规定事件在<code>delay</code>时间内只会执行一次</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 节流 设置方法执行间隔为 delay ms， delay 时间内时间被触发则只执行一次事件</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> delay <span class=\"token operator\">=</span> <span class=\"token number\">500</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 有 settimeout 则退出，不执行</span>\n    <span class=\"token keyword\">let</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>timer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<blockquote>\n<p>函数节流就像游戏中的攻击速度，规定一定时间内只能攻击多少次</p>\n</blockquote>\n<p>应用场景：</p>\n<ul>\n<li>DOM元素拖拽</li>\n<li>游戏中的刷新率</li>\n<li>canvas画笔功能</li>\n</ul>\n<h3 id=\"加快首屏加载速度\"><a href=\"#加快首屏加载速度\" class=\"headerlink\" title=\"加快首屏加载速度\"></a>加快首屏加载速度</h3><p><a href=\"https://juejin.cn/post/6844904185264095246\">Vue加快首屏加载速度</a></p>\n<ol>\n<li>压缩</li>\n</ol>\n<ul>\n<li><p>gzip压缩</p>\n</li>\n<li><p>图片压缩</p>\n</li>\n</ul>\n<ol>\n<li>路由懒加载</li>\n<li><p>优化分包策略</p>\n</li>\n<li><p>CDN引入</p>\n</li>\n<li><p>优化分包</p>\n</li>\n<li><p>SSR服务器渲染</p>\n</li>\n<li><p>增加宽带</p>\n</li>\n</ol>\n<h3 id=\"回流与重绘\"><a href=\"#回流与重绘\" class=\"headerlink\" title=\"回流与重绘\"></a>回流与重绘</h3><h4 id=\"浏览器的渲染流程\"><a href=\"#浏览器的渲染流程\" class=\"headerlink\" title=\"浏览器的渲染流程\"></a>浏览器的渲染流程</h4><p><a href=\"https://www.cnblogs.com/xiahj/p/11777786.html\">回流与重绘</a></p>\n<p>渲染引擎：主要有Gecko和Webkit，其中Firefox 使用的是 Gecko，而 Safari 和 Chrome 浏览器使用的都是 WebKit</p>\n<p>渲染流程：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220825175831.png\" alt=\"WebKit 渲染引擎的主流程\"></p>\n<ol>\n<li>解析HTML Source，生成DOM树</li>\n<li>解析CSS，生成CSSOM树</li>\n<li>将DOM树和CSSOM树结合，去除不可见元素，生成渲染树(Render Tree)</li>\n<li>Layout(布局):根据生成的渲染树，进行布局(Layout)，得到节点的几何信息（位置，大小）</li>\n<li>Painting(重绘):根据渲染树以及回流得到的几何信息，将 Render Tree 的每个像素渲染到屏幕上</li>\n</ol>\n<h4 id=\"回流-reflow\"><a href=\"#回流-reflow\" class=\"headerlink\" title=\"回流(reflow)\"></a>回流(reflow)</h4><blockquote>\n<p>渲染对象在创建完成并添加到渲染树时，是将DOM节点和它对应的样式结合起来，并不包含位置和大小信息。</p>\n<p>我们还需要通过 <code>Layout</code> 布局阶段，来计算它们在设备视口(viewport)内的确切<strong>位置和大小</strong>，计算这些值的过程称为<code>回流</code>、<code>布局</code>或<code>重排</code>(reflow)</p>\n</blockquote>\n<p>HTML 采用基于流的布局模型，从根渲染对象（即<code>&lt;html&gt;</code>）开始，递归遍历部分或所有的框架层次结构，为每一个需要计算的渲染对象计算几何信息，大多数情况下只要一次遍历就能<strong>计算</strong>出几何信息。但是也有例外，比如<code>&lt;table&gt;</code>的计算就需要不止一次的遍历</p>\n<h5 id=\"触发回流条件\"><a href=\"#触发回流条件\" class=\"headerlink\" title=\"触发回流条件\"></a>触发回流条件</h5><p>DOM元素的<strong>大小</strong>和<strong>位置</strong>发生变化的时候，会触发回流</p>\n<p>改变这些属性会触发回流：</p>\n<ul>\n<li>盒模型相关的属性: <code>width</code>，<code>height</code>，<code>margin</code>，<code>display</code>，<code>border</code>等</li>\n<li>定位属性及浮动相关的属性: <code>top</code>,<code>position</code>,<code>float</code>等</li>\n<li>改变节点内部文字结构也会触发回流:<code>text-align</code>, <code>overflow</code>, <code>font-size</code>, <code>line-height</code>, <code>vertival-align</code>等</li>\n</ul>\n<p>以及进行以下流程或操作：</p>\n<ul>\n<li>页面一开始渲染的时候</li>\n<li>添加或删除可见的DOM元素，进行DOM操作等</li>\n<li>内容发生变化，比如文本变化或图片被另一个不同尺寸的图片所替代</li>\n<li>浏览器的窗口尺寸变化（因为回流是根据视口的大小来计算元素的位置和大小的）</li>\n<li>css伪类激活</li>\n<li>进行<strong>获取布局</strong>信息的操作，比如<code>offsetWidth</code>、<code>offsetHeight</code>、<code>clientWidth</code>、<code>clientHeight</code>、<code>width</code>、<code>height</code>、<code>scrollTop</code>、<code>scrollHeight</code>,<code>getComputedStyle</code>, <code>getBoundingClientRect</code>等</li>\n</ul>\n<h4 id=\"重绘-repaint\"><a href=\"#重绘-repaint\" class=\"headerlink\" title=\"重绘(repaint)\"></a>重绘(repaint)</h4><blockquote>\n<p> <strong>绘制 paint</strong>：当各种盒子的位置、大小以及其他属性，例如颜色、字体大小等都确定下来后，浏览器便把这些元素都按照各自的特性绘制一遍，于是页面的内容出现了，这个过程也称之为 Repaint（重绘制）</p>\n<p>说白了，页面要呈现的内容，统统画在屏幕上，这就叫 Repaint</p>\n</blockquote>\n<h5 id=\"触发绘制条件\"><a href=\"#触发绘制条件\" class=\"headerlink\" title=\"触发绘制条件\"></a>触发绘制条件</h5><ul>\n<li>DOM改动</li>\n<li>CSS改动</li>\n</ul>\n<p>其实，就是判断当视觉上是否发生变化（无论这个变化是通过DOM改动还是CSS改动）。只要页面显示的内容不一样了，肯定要 Repaint</p>\n<blockquote>\n<p><strong>回流一定会触发重绘，而重绘不一定会回流</strong></p>\n</blockquote>\n<h4 id=\"渲染性能优化\"><a href=\"#渲染性能优化\" class=\"headerlink\" title=\"渲染性能优化\"></a>渲染性能优化</h4><blockquote>\n<p>注意：回流可以避免，但重绘无法避免，否则就成静态页面了</p>\n</blockquote>\n<h5 id=\"避免回流\"><a href=\"#避免回流\" class=\"headerlink\" title=\"避免回流\"></a>避免回流</h5><ol>\n<li>减少对dom的操作</li>\n<li>使元素脱离文档流</li>\n<li>避免或减少访问某些属性</li>\n<li>css属性尽量使用简写</li>\n<li><code>transfrom</code>代替<code>left</code>、<code>top</code>,<code>opacity</code>代替<code>visibility</code>，使用<code>tansfrom</code>或<code>opacity</code>不会触发绘制</li>\n<li>避免使用<code>table</code>布局</li>\n</ol>\n<h5 id=\"减少重绘\"><a href=\"#减少重绘\" class=\"headerlink\" title=\"减少重绘\"></a>减少重绘</h5><ul>\n<li>如果需要创建多个DOM节点，可以使用<strong>DocumentFragment</strong>创建完，然后一次性地加入document。（加一个节点，就repaint一次，不太好）</li>\n<li>将元素的display设置为”none”，完成修改后再把display修改为原来的值</li>\n</ul>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 例1-使用 createDocumentFragment 方法创建虚拟的 dom 对象，将新 dom 需要修改的对象进行复制，然后对创建的 dom 进行相应的修改，最终在把 dom 与旧 dom 进行替换</span>\n  \t<span class=\"token comment\">// 这样的能将对 dom 的多次修改合并为一次，大大减少了回流和重绘的次数</span>\n    <span class=\"token keyword\">let</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#box'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> test <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createDocumentFragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> li <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span>\n        li<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        test<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    box<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span>\n  \n  \n  \t<span class=\"token comment\">// 例2-把需要修改的 dom 隐藏，修改完成后再将 dom 重新显示</span>\n  \t<span class=\"token comment\">// 使用 display: none 后渲染树中将不再渲染当前 dom，所以多次操作也不会多次触发回流和重绘</span>\n  \t<span class=\"token keyword\">let</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#box'</span><span class=\"token punctuation\">)</span>\n    box<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n  \t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> li <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span>\n        li<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        box<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"浏览器原理\"><a href=\"#浏览器原理\" class=\"headerlink\" title=\"浏览器原理\"></a>浏览器原理</h2><h3 id=\"浏览器安全\"><a href=\"#浏览器安全\" class=\"headerlink\" title=\"浏览器安全\"></a>浏览器安全</h3><h4 id=\"XSS攻击\"><a href=\"#XSS攻击\" class=\"headerlink\" title=\"XSS攻击\"></a>XSS攻击</h4><p><a href=\"https://juejin.cn/post/6844903685122703367\">XSS</a></p>\n<p>概念：Cross-Site Scripting（跨站脚本攻击）简称 XSS，是一种代码注入攻击。攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全</p>\n<p>XSS的本质是：恶意代码未经过滤，与网站正常的代码混在一起；浏览器无法分辨哪些脚本是可信的，导致恶意脚本被执行</p>\n<p>XSS攻击方式：用户的输入内容，URL上的参数</p>\n<h4 id=\"XSS分类\"><a href=\"#XSS分类\" class=\"headerlink\" title=\"XSS分类\"></a>XSS分类</h4><p>XSS攻击可分为<a href=\"#存储型\">存储型</a>、<a href=\"#反射型\">反射型</a>和<a href=\"#dom\">DOM型</a>三种</p>\n<h5 id=\"存储型XSS\"><a href=\"#存储型XSS\" class=\"headerlink\" title=\"存储型XSS\"></a><span id=\"存储型\">存储型XSS</span></h5><p>攻击步骤：</p>\n<ol>\n<li>攻击者将恶意代码注入到目标网站的数据库中</li>\n<li>用户打开目标网站时，网站服务器将恶意代码从数据库取出，拼接在HTML中返回给浏览器</li>\n<li>用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。</li>\n<li>恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作</li>\n</ol>\n<p>这种攻击常见于带有用户保存数据的网站功能，如论坛发帖、商品评论、用户私信等</p>\n<h5 id=\"反射型XSS\"><a href=\"#反射型XSS\" class=\"headerlink\" title=\"反射型XSS\"></a><span id=\"反射型\">反射型XSS</span></h5><p>攻击步骤：</p>\n<ol>\n<li>攻击者构造出特殊的 URL，其中包含恶意代码。</li>\n<li>用户打开带有恶意代码的 URL 时，网站服务端将恶意代码从 URL 中取出，拼接在 HTML 中返回给浏览器。</li>\n<li>用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。</li>\n<li>恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作</li>\n</ol>\n<p>反射型 XSS 漏洞常见于通过 URL 传递参数的功能，如网站搜索、跳转等。</p>\n<p>由于需要用户主动打开恶意的 URL 才能生效，攻击者往往会结合多种手段诱导用户点击</p>\n<h5 id=\"DOM型XSS\"><a href=\"#DOM型XSS\" class=\"headerlink\" title=\"DOM型XSS\"></a><span id=\"dom\">DOM型XSS</span></h5><p>攻击步骤：</p>\n<ol>\n<li>攻击者构造出特殊的 URL，其中包含恶意代码。</li>\n<li>用户打开带有恶意代码的 URL。</li>\n<li>用户浏览器接收到响应后解析执行，前端 JavaScript 取出 URL 中的恶意代码并执行。</li>\n<li>恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作</li>\n</ol>\n<p>DOM 型 XSS 跟前两种 XSS 的区别：DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞</p>\n<h4 id=\"XSS攻击预防\"><a href=\"#XSS攻击预防\" class=\"headerlink\" title=\"XSS攻击预防\"></a>XSS攻击预防</h4><p>XSS攻击有两大要素：</p>\n<ol>\n<li>攻击者提交恶意代码</li>\n<li>浏览器执行恶意代码</li>\n</ol>\n<p>预防措施：</p>\n<ol>\n<li><p>输入过滤</p>\n</li>\n<li><p>纯前端渲染</p>\n</li>\n<li><p>转义HTML</p>\n</li>\n<li><p>预防DOM型XSS攻击</p>\n<p>尽量避免使用<code>.innerHTML</code>、<code>.outerHTML</code>，而应尽量使用<code>.textContent</code>、<code>.setAttribute</code>等</p>\n</li>\n</ol>\n<h4 id=\"CSRF攻击\"><a href=\"#CSRF攻击\" class=\"headerlink\" title=\"CSRF攻击\"></a>CSRF攻击</h4><blockquote>\n<p>CSRF指的是<strong>跨站请求伪造攻击</strong>，攻击者诱导用户进入一个第三方网站，然后该网站向被攻击网站发送跨站请求。如果用户在被攻击网站中保存了登录状态，那么攻击者就可以利用这个登录状态，绕过后台的用户验证，冒充用户向服务器执行一些操作</p>\n</blockquote>\n<p>CSRF 攻击的<strong>本质是利用 cookie 会在同源请求中携带发送给服务器的特点，以此来实现用户的冒充</strong></p>\n<h3 id=\"浏览器缓存\"><a href=\"#浏览器缓存\" class=\"headerlink\" title=\"浏览器缓存\"></a>浏览器缓存</h3><h4 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h4><p><a href=\"https://juejin.cn/post/6844903672556552205#heading-5\">浏览器缓存</a></p>\n<blockquote>\n<p>浏览器缓存：是指浏览器对用户请求过的静态资源(html、css、js)，存储到电脑本地磁盘中，当浏览器再次访问时，就可以直接从本地加载了，不需要再去服务端请求</p>\n</blockquote>\n<p>缓存的优点：</p>\n<ul>\n<li>减少了服务器的负担、提升网站性能</li>\n<li>加快客户端网页加载速度</li>\n<li>减少了冗余的数据传输，减少网费</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li>容易导致客户端代码更新不及时</li>\n</ul>\n<p>浏览器缓存分为协商缓存与强缓存</p>\n<h4 id=\"协商缓存与强缓存\"><a href=\"#协商缓存与强缓存\" class=\"headerlink\" title=\"协商缓存与强缓存\"></a>协商缓存与强缓存</h4><h5 id=\"强缓存\"><a href=\"#强缓存\" class=\"headerlink\" title=\"强缓存\"></a>强缓存</h5><p>使用强缓存策略时，如果缓存资源有效，则直接使用缓存资源，不再向服务器发送请求</p>\n<p>强缓存策略可以通过两种方式来设置，分别是响应头中的<code>Expires</code>属性和<code>Cache-Control</code>属性</p>\n<p><code>Expires</code>中的时间是一个绝对时间，它是服务器的时间，因此当客户端的时间和服务器的时间不一致，或者用户对客户端时间进行修改，这样可能会影响缓存命中的结果</p>\n<p><code>Cache-Control</code>的几个取值含义：</p>\n<ul>\n<li><strong>private：</strong> 仅浏览器可以缓存</li>\n<li><strong>public：</strong> 浏览器和代理服务器都可以缓存（对于private和public，前端可以认为一样，不用深究）</li>\n<li><strong>max-age=xxx</strong> 过期时间（重要）</li>\n<li><strong>no-cache</strong>  不进行强缓存（重要）</li>\n<li><strong>no-store</strong>   不强缓存，也不协商缓存，基本不用，缓存越多才越好呢</li>\n</ul>\n<h5 id=\"协商缓存\"><a href=\"#协商缓存\" class=\"headerlink\" title=\"协商缓存\"></a>协商缓存</h5><p>协商缓存条件：</p>\n<ul>\n<li><code>Cache-Control</code>的值为<code>no-cache</code></li>\n<li>或者<code>max-age</code>过期了</li>\n</ul>\n<p>使用协商缓存策略时，会先向服务器发送一个请求，如果资源没有发生修改，则返回一个 304 状态，让浏览器使用本地的缓存副本。如果资源发生了修改，则返回修改后的资源</p>\n<p>协商缓存也可以通过两种方式来设置，分别是 http 头信息中的<strong>Etag</strong> 和<strong>Last-Modified</strong>属性</p>\n<p><code>Etag</code>是服务器根据当前请求的资源生成的一个唯一标识，<strong>这个唯一标识是一个字符串，只要资源有变化这个串就不同</strong>，跟最后修改时间没有关系</p>\n<p>Etag的必要性：</p>\n<p>使用Last-Modified已经足以让浏览器知道本地的缓存副本是否足够新，但是仍然有以下几个问题难以解决：</p>\n<ul>\n<li>一些文件也许会周期性的更改，但是他的内容并不改变(仅仅改变的修改时间)，这个时候我们并不希望客户端认为这个文件被修改了，而重新GET</li>\n<li>某些文件修改非常频繁，比如在秒以下的时间内进行修改，(比方说1s内修改了N次)，If-Modified-Since能检查到的粒度是s级的，这种修改无法判断(或者说UNIX记录MTIME只能精确到秒)</li>\n<li>某些服务器不能精确的得到文件的最后修改时间</li>\n</ul>\n<p><strong>Etag的优先级比Last-Modified的优先级高</strong></p>\n<p>F5 会 跳过强缓存规则，直接走协商缓存；；；Ctrl+F5 ，跳过所有缓存规则，和第一次请求一样，重新获取资源</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220826162750.webp\" alt=\"缓存判断流程\"></p>\n<h3 id=\"浏览器解析URL\"><a href=\"#浏览器解析URL\" class=\"headerlink\" title=\"浏览器解析URL\"></a>浏览器解析URL</h3><p>用户输入URL，到浏览器呈现给用户页面，经历了哪些过程</p>\n<ol>\n<li>用户输入url</li>\n<li>对url地址进行DNs域名解析</li>\n<li>进行TCP连接</li>\n<li>进行HTTP报文的请求与响应</li>\n<li>浏览器解析文档资源并渲染页面</li>\n</ol>\n<h2 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h2><h3 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h3><p><a href=\"https://juejin.cn/post/7032881219524100132\">生命周期</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20221016095155.webp\" alt=\"生命周期.webp\"></p>\n<h3 id=\"vue2到vue3的变化\"><a href=\"#vue2到vue3的变化\" class=\"headerlink\" title=\"vue2到vue3的变化\"></a>vue2到vue3的变化</h3><ul>\n<li>组合式api<ul>\n<li>响应式api：<code>ref()</code>、<code>reactive()</code></li>\n<li>生命周期钩子：<code>onM0unted()</code>、<code>onUnmounted</code></li>\n<li>解决了混入的缺陷</li>\n<li>减少了包的体积</li>\n</ul>\n</li>\n<li>响应式原理 proxy</li>\n<li>emit事件 需要先定义事件名</li>\n<li>vue3可以有多个顶层标签</li>\n<li>style里可以用(<code>v-bind</code>)关键字</li>\n<li>:deep(.foo){}</li>\n</ul>\n<p>和Mixin相比，mixins有三个主要短板</p>\n<p><a href=\"https://cn.vuejs.org/guide/reusability/composables.html#comparisons-with-other-techniques\">官方文档</a></p>\n<ol>\n<li>不清楚的数据来源</li>\n<li>命名空间冲突</li>\n<li>隐式的跨mixin交流</li>\n</ol>\n<h3 id=\"MVVM、MVC、MVP的区别\"><a href=\"#MVVM、MVC、MVP的区别\" class=\"headerlink\" title=\"MVVM、MVC、MVP的区别\"></a>MVVM、MVC、MVP的区别</h3><h4 id=\"MVVM\"><a href=\"#MVVM\" class=\"headerlink\" title=\"MVVM\"></a>MVVM</h4><p><code>MVVM</code>即<code>Model</code>、<code>View</code>、<code>ViewModel</code></p>\n<ul>\n<li>MOdel代表数据模型，数据和业务逻辑都在Model层中定义</li>\n<li>View代表UI视图，负责数据的展示</li>\n<li>ViewModel负责监听Model中数据的改变并且控制视图的更新，处理用户交互操作</li>\n</ul>\n<h4 id=\"MVC\"><a href=\"#MVC\" class=\"headerlink\" title=\"MVC\"></a>MVC</h4><h4 id=\"MVP\"><a href=\"#MVP\" class=\"headerlink\" title=\"MVP\"></a>MVP</h4><h3 id=\"响应式原理\"><a href=\"#响应式原理\" class=\"headerlink\" title=\"响应式原理\"></a>响应式原理</h3><p><code>Vue2</code>监听采用的是<a href=\"#defineProperty\">Object.defineProperty()</a>,<code>Vue3</code>则是<a href=\"#prroxy\">Proxy</a></p>\n<p>采用数据劫持结合发布者订阅者模式的方式，通过Object.defineProperty()来劫持各个属性的getter、setter，在数据变动时执行<code>dep.notify()</code>方法，发布消息给订阅者(<code>Watcher</code>)，进行视图更新</p>\n<h4 id=\"Vue类\"><a href=\"#Vue类\" class=\"headerlink\" title=\"Vue类\"></a>Vue类</h4><p>创建一个Vue类</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token operator\">=</span>options<span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_data<span class=\"token operator\">=</span>options<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$data<span class=\"token operator\">=</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_data<span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//对data进行响应式处理</span>\n       <span class=\"token keyword\">new</span> <span class=\"token class-name\">Observe</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//创建Vue对象</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    el<span class=\"token operator\">:</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n      message<span class=\"token operator\">:</span><span class=\"token string\">'hello world'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<h4 id=\"Observe类\"><a href=\"#Observe类\" class=\"headerlink\" title=\"Observe类\"></a>Observe类</h4><p><code>Observe</code>进行数据监听</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Observe</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token comment\">//如果传入的数据是object</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> data<span class=\"token operator\">==</span><span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n           <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">walk</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//这个方法遍历对象中的属性，并依次对其进行响应式处理</span>\n    <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//获取所有属性</span>\n        <span class=\"token keyword\">const</span> keys<span class=\"token operator\">=</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> keys<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//对所有属性进行监听（数据劫持）</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">defineReactive</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> keys<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">defineReactive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span>key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//如果属性是对象，那么那么递归调用walk方法</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">walk</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">const</span> dep<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Dep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Dep类用于收集依赖</span>\n        <span class=\"token keyword\">const</span> val<span class=\"token operator\">=</span>obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            enumerable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            configurable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">//get代理将Dep.target即Watcher对象添加到依赖集合中</span>\n            <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token comment\">//这里在创建Watcher对象时会给Dep.target赋值</span>\n              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Dep<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                dep<span class=\"token punctuation\">.</span><span class=\"token function\">addSubs</span><span class=\"token punctuation\">(</span>Dep<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n              <span class=\"token keyword\">return</span> val<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>newVal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                val<span class=\"token operator\">=</span>newVal<span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//依赖的变更响应</span>\n                dep<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span>newVal<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span> \n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"Dep类\"><a href=\"#Dep类\" class=\"headerlink\" title=\"Dep类\"></a>Dep类</h4><p><code>Dep</code>收集依赖,当<code>Observer</code>中的<code>data</code>触发<code>getter</code>时，<code>Dep</code>就会收集依赖的<code>Watcher</code>，当<code>data</code>变动时，就会通过<code>Dep</code>给<code>Watcher</code>发通知更新</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dep</span><span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">static</span> target<span class=\"token operator\">=</span><span class=\"token keyword\">null</span>\n   <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subs<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token function\">addSubs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">watcher</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>watcher<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newVal</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n           <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>newVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"Watcher类\"><a href=\"#Watcher类\" class=\"headerlink\" title=\"Watcher类\"></a>Watcher类</h4><p><code>Watcher</code>类用于观察数据的变更，它会调用data中对应属性的<code>get</code>方法触发<code>Dep</code>依赖收集，并在数据变更后执行相应视图更新</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> uid<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//vm即一个Vue对象，key要观察的属性，cb是观测到数据变化后需要做的操作，通常是指DOM变更</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">vm<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span>cb</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vm<span class=\"token operator\">=</span>vm<span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>uid<span class=\"token operator\">=</span>uid<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cb<span class=\"token operator\">=</span>cb<span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//调用get触发依赖收集之前，把自身赋值给Dep.taget静态变量</span>\n       Dep<span class=\"token punctuation\">.</span>target<span class=\"token operator\">=</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//触发对象上代理的get方法，执行get添加依赖</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span>vm<span class=\"token punctuation\">.</span>$data<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//用完即清空</span>\n       Dep<span class=\"token punctuation\">.</span>target<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//在调用set触发Dep的notify时要执行的update函数，用于响应数据变化执行run函数即dom变更</span>\n    <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//值发生变化才变更</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token operator\">!==</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span>newValue<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//执行DOM更新等操作</span>\n    <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>通过以上代码即可实现一个简易版的Vue</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    message<span class=\"token operator\">:</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span>\n    num<span class=\"token operator\">:</span><span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> app<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span>data\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//模拟数据监听</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//模拟dom变更</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message 引起的dom变更---&gt;'</span><span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span><span class=\"token string\">'num'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//模拟dom变更</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'num 引起的dom变更---&gt;'</span><span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>message<span class=\"token operator\">=</span><span class=\"token string\">'world'</span><span class=\"token punctuation\">;</span>\ndata<span class=\"token punctuation\">.</span>num<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span></code></pre>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>其实在 <strong>Vue</strong> 中初始化渲染时，视图上绑定的数据就会实例化一个 <strong>Watcher</strong>，依赖收集就是是通过属性的 <strong>getter</strong> 函数完成的，文章一开始讲到的 <strong>Observer</strong> 、<strong>Watcher</strong> 、<strong>Dep</strong> 都与依赖收集相关。其中 <strong>Observer</strong> 与 <strong>Dep</strong>是一对一的关系， <strong>Dep</strong> 与 <strong>Watcher</strong> 是多对多的关系，<strong>Dep</strong> 则是 <strong>Observer</strong> 和 <strong>Watcher</strong> 之间的纽带。依赖收集完成后，当属性变化会执行被 <strong>Observer</strong> 对象的 <strong>dep.notify()</strong> 方法，这个方法会遍历订阅者（Watcher）列表向其发送消息， <strong>Watcher</strong> 会执行 <strong>run</strong> 方法去更新视图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220823105557.webp\" alt=\"reactive\"></p>\n<h3 id=\"虚拟DOM\"><a href=\"#虚拟DOM\" class=\"headerlink\" title=\"虚拟DOM\"></a>虚拟DOM</h3><blockquote>\n<p>虚拟DOM是对真实DOM的一种抽象,本身就是一个js对象</p>\n</blockquote>\n<p>优点：将真实节点抽象成VNode，有效减少直接操作dom次数，提高程序性能</p>\n"},{"title":"常见配置文件","mathjax":true,"date":"2022-07-03T06:48:30.000Z","description":"开发中一些常见的`config`配置文件的作用","_content":"\n### 配置文件\n\n#### jsconfig.json\n\n用于webpack配置别名，要让vscode正确提示路径，需在Vscode的中启用js文件语义检查\n![](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220703145404.PNG)\n\n```json\n{\n  \"compilerOptions\": {\n    \"target\": \"es6\",\n    \"experimentalDecorators\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\n      \"./src/*\"\n      ],\n      \"@assets/*\": [\"./src/assets/*\"],\n      \"@components/*\": [\"./src/components/*\"],\n      \"@config/*\": [\"./src/config/*\"],\n      \"@service/*\": [\"./src/service/*\"],\n      \"@mixins/*\": [\"./src/mixins/*\"]\n    }\n  },\n  \"exclude\": [\"node_modules\", \"dist\"],\n  \"include\": [\"./src/**/*\"]\n}\n```\n+ baseURL 设置文件基础路径\n+ paths 为路径设置别名，简化路径，路径相当于baseURL\n+ exclude 设置排除需要进行语义检查的文件\n+ include 设置包含需要进行语义检查的文件\n\n#### .prettierrc\n\n[配置文档](https://prettier.io/docs/en/configuration.html)\n\t[配置工具](https://prettier.io/playground/)\nprettier插件的配置文件，.prettierignore也是该插件的配置文件，用于设置不需要配置格式化的目录，默认为\n\n```json\n**/.git\n**/.svn\n**/.hg\n**/node_modules\n{\n  printWidth: 80, // 最大行长\n  bracketSpacing: true, // 是否在对象属性添加空格，这里选择是 { foo: bar }\n  \"semi\": false,  // 是否在语句末尾打印分号\n  \"singleQuote\": false // 是否使用单引号\n  tabWidth: 2 // 设置tab长度\n  quoteProps： \"as-needed\"  //   设置引号\n}\n{\n    \"arrowParens\": \"always\",\n    \"bracketSameLine\": false,\n    \"bracketSpacing\": true,\n    \"embeddedLanguageFormatting\": \"auto\",\n    \"htmlWhitespaceSensitivity\": \"css\",\n    \"insertPragma\": false,\n    \"jsxSingleQuote\": true,\n    \"printWidth\": 80,\n    \"proseWrap\": \"preserve\",\n    \"quoteProps\": \"as-needed\",\n    \"requirePragma\": false,\n    \"semi\": true,\n    \"singleQuote\": false,\n    \"tabWidth\": 2,\n    \"trailingComma\": \"es5\",\n    \"useTabs\": false,\n    \"vueIndentScriptAndStyle\": true\n  }\n```\n#### package.json\n[官方文档](http://nodejs.cn/learn/the-package-json-guide)\npackage.json 管理项目依赖的下载，是项目的清单,是 npm 和 yarn 存储所有已安装软件包的名称和版本的地方\n\n```json\n{\n  \"name\": \"leaflet-draw\",\n  \"version\": \"1.0.3\",\n  \"description\": \"Vector drawing plugin for Leaflet\",\n  \"devDependencies\": {\n    \"eslint\": \"^3.5.0 <3.6.0\",\n    \"eslint-config-mourner\": \"^2.0.3\",\n    \"uglifycss\": \"0.0.25\"\n  },\n  \"main\": \"dist/leaflet.draw.js\",\n  \"style\": \"dist/leaflet.draw.css\",\n  \"directories\": {\n    \"doc\": \"docs/\",\n    \"example\": \"docs/example\",\n    \"lib\": \"src/\"\n  },\n  \"files\": [\n    \"dist/*\",\n    \"docs/*\"\n  ],\n  \"scripts\": {\n    \"build\": \"jake build -f ./Jakefile.js\",\n    \"test\": \"jake test\",\n    \"docs\": \"jake docs\",\n    \"release\": \"./build/publish.sh\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"\"\n  },\n  \"keywords\": [\n    \"maps\",\n    \"leaflet\",\n    \"draw\"\n  ],\n  \"contributors\": [\n    {\n      \"name\": \"Jon West\",\n      \"email\": \"ddproxy@gmail.com\"\n    },\n    {\n      \"name\": \"Jacob Toye\"\n    }\n  ],\n  \"license\": \"MIT\",\n  \"readmeFilename\": \"README.md\",\n  \"eslintConfig\": {\n    \"root\": true,\n    \"globals\": {\n      \"L\": true\n    },\n    \"env\": {\n      \"commonjs\": true,\n      \"amd\": true,\n      \"node\": false\n    },\n    \"extends\": \"mourner\",\n    \"rules\": {\n      \"no-mixed-spaces-and-tabs\": [\n        2,\n        \"smart-tabs\"\n      ],\n      \"indent\": [\n        2,\n        \"tab\",\n        {\n          \"VariableDeclarator\": 0\n        }\n      ],\n      \"curly\": 2,\n      \"spaced-comment\": 2,\n      \"strict\": 0,\n      \"wrap-iife\": 0,\n      \"key-spacing\": 0,\n      \"consistent-return\": 0\n    }\n  }\n}\n```\n+ `name` 设置程序或软件包的名称\n+ `author` 设置包的作者名称\n+ `contributors` 项目贡献者\n+ `homepage` 包的主页\n+ `version` 表明当前版本\n+ `license` 包的许可证 (开源协议)\n+ `description` 当前应用程序、软件包的简短描述\n+ `main` 设置程序的入口点\n+ `private` 设置为 `true`,可以防止包被发布到 `npm`\n+ `scripts` 定义运行`node`脚本\n+ `dependencies` 设置程序的依赖包\n+ `devDependencies` 设置开发时的依赖包\n+ `engines` 设置运行的nodejs的版本\n+ `browserlist` 告知支持的浏览器及版本\n+ `repository` 指定包仓库所在的位置\n+ `moudle`\n\n#### vue.config.js\n[官方文档](https://cli.vuejs.org/zh/config/#publicpath)\nvue.config.js是vue工具链`vue-cli`的配置文件\nvue-cli是vue项目构建的脚手架，能通过命令快速创建一个vue项目\nvue-cli带有运行时依赖`@vue/cli-service`,该依赖基于 **webpack** 构建，带有合理的默认配置\n\n```bash\n# 快速创建一个vue项目\nvue create hello-world\n```\n配置参考(vue-cli 3.3以上)\n```js\nconst CompressionWebpackPlugin = require('compression-webpack-plugin');\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\nconst TerserPlugin = require('terser-webpack-plugin');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst productionGzip = true // 是否使用gzip\nconst productionGzipExtensions = ['js', 'css'] // 需要gzip压缩的文件后缀\nconst useCDN = true // 是否使用cdn加速\n// externals\nconst externals = {\n  vue: 'Vue',\n  'vue-router': 'VueRouter',\n  vuex: 'Vuex',\n  vant: 'vant',\n  axios: 'axios'\n}\n\n// CDN外链，会插入到index.html中\nconst cdn = {\n  css: [],\n  js: [\n    'https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js',\n    'https://cdn.jsdelivr.net/npm/vue-router@3.5.3/dist/vue-router.min.js',\n    'https://cdn.jsdelivr.net/npm/axios@0.19.2/dist/axios.min.js',\n    'https://cdn.jsdelivr.net/npm/vuex@3.6.2/dist/vuex.min.js',\n  ]\n}\nmodule.exports = {\n  // publicPath: process.env.publicPath,\n  publicPath: '/gty',\n  filenameHashing: false,\n  productionSourceMap:!isProduction,\n  assetsDir: 'assets',\n  devServer: {\n    port: 8090,\n    proxy: {\n      '/api': {\n        // 代理api\n        target: 'http://www.baidu.com',\n        changeOrigin: true, // 是否跨域\n        ws: true, // proxy websockets\n        pathRewrite: {\n          // 重写路径\n          '^/api': ''\n        }\n      }\n    }\n  },\n  pages: {\n    index: {\n      // page 的入口\n      entry: 'src/main.js',\n      // 模板来源\n      template: 'public/index.html',\n      // 在 dist/index.html 的输出\n      filename: 'index.html',\n      // 当使用 title 选项时，\n      // template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n      title: process.env.SYSTEM_TITLE\n    },\n    natural: {\n      // page 的入口\n      entry: 'src/mapviews/main.js',\n      // 模板来源\n      template: 'public/natural.html',\n      // 在 dist/index.html 的输出\n      filename: 'natural.html',\n      // 当使用 title 选项时，\n      // template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n      title: process.env.SYSTEM_TITLE\n    }\n  },\n  css: {\n    loaderOptions: {\n      sass: {\n        prependData: '@import \"~@/assets/css/css-variables.scss\";'\n      }\n    }\n  },\n  configureWebpack: config => {\n    const myConfig = {}\n    if (isProduction) {\n      // 1. 生产环境npm包转CDN\n      //if(useCDN) {\n      //  myConfig.externals = externals\n      //}\n      myConfig.plugins = []\n      // 2. 构建时开启gzip，降低服务器压缩对CPU资源的占用，服务器也要相应开启gzip\n      productionGzip && myConfig.plugins.push(\n        new CompressionWebpackPlugin({\n          // filename: '[path].gz[query]',\n          algorithm: 'gzip',\n          test: new RegExp('\\\\.(' + productionGzipExtensions.join('|') + ')$'), // 匹配的文件名\n          threshold: 10240, // 文件超过10k，进行gzip压缩\n          minRatio: 0.8,\n          deleteOriginalAssets: false // 是否删除原文件\n        })\n      )\n      // 去掉注释\n      myConfig.plugins.push(\n        new TerserPlugin({\n          parallel: true,\n          sourceMap: true,\n          terserOptions: {\n            warnings: false,\n            compress: {\n              drop_console: true,// 注释console\n              drop_debugger: true, // 注释debugger\n              pure_funcs: [\"console.log\"]\n            }\n          }\n        })\n      )\n    }\n    return myConfig;\n  }\n}\n```\n\n#### vite.config.js\n[官方文档](https://vitejs.cn/config/)\n\n```js\nimport { defineConfig } from \"vite\"\nimport vue from \"@vitejs/plugin-vue\"\nimport path from \"path\"\n// Element Plus自动按需引入配置，先执行 npm install -D unplugin-vue-components unplugin-auto-import\nimport AutoImport from \"unplugin-auto-import/vite\"\nimport Components from \"unplugin-vue-components/vite\"\nimport { ElementPlusResolver } from \"unplugin-vue-components/resolvers\"\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base: \"./\",\n  plugins: [\n    vue(),\n    AutoImport({\n      resolvers: [ElementPlusResolver()],\n    }),\n    Components({\n      resolvers: [ElementPlusResolver()],\n    }),\n  ],\n  define: {\n    \"process.env\": {},\n  },\n  // 路径\n  resolve: {\n    extensions: [\".js\", \".vue\", \".json\", \".scss\"],\n    alias: {\n      \"@\": path.resolve(__dirname, \"src\"),\n    },\n  },\n  server: {\n    open: true,\n  },\n})\n```\n\n","source":"_posts/常见配置文件.md","raw":"---\ntitle: 常见配置文件\nmathjax: true\ndate: 2022-07-03 14:48:30\ntags: [config]\ncategories:\ndescription: 开发中一些常见的`config`配置文件的作用\n---\n\n### 配置文件\n\n#### jsconfig.json\n\n用于webpack配置别名，要让vscode正确提示路径，需在Vscode的中启用js文件语义检查\n![](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220703145404.PNG)\n\n```json\n{\n  \"compilerOptions\": {\n    \"target\": \"es6\",\n    \"experimentalDecorators\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\n      \"./src/*\"\n      ],\n      \"@assets/*\": [\"./src/assets/*\"],\n      \"@components/*\": [\"./src/components/*\"],\n      \"@config/*\": [\"./src/config/*\"],\n      \"@service/*\": [\"./src/service/*\"],\n      \"@mixins/*\": [\"./src/mixins/*\"]\n    }\n  },\n  \"exclude\": [\"node_modules\", \"dist\"],\n  \"include\": [\"./src/**/*\"]\n}\n```\n+ baseURL 设置文件基础路径\n+ paths 为路径设置别名，简化路径，路径相当于baseURL\n+ exclude 设置排除需要进行语义检查的文件\n+ include 设置包含需要进行语义检查的文件\n\n#### .prettierrc\n\n[配置文档](https://prettier.io/docs/en/configuration.html)\n\t[配置工具](https://prettier.io/playground/)\nprettier插件的配置文件，.prettierignore也是该插件的配置文件，用于设置不需要配置格式化的目录，默认为\n\n```json\n**/.git\n**/.svn\n**/.hg\n**/node_modules\n{\n  printWidth: 80, // 最大行长\n  bracketSpacing: true, // 是否在对象属性添加空格，这里选择是 { foo: bar }\n  \"semi\": false,  // 是否在语句末尾打印分号\n  \"singleQuote\": false // 是否使用单引号\n  tabWidth: 2 // 设置tab长度\n  quoteProps： \"as-needed\"  //   设置引号\n}\n{\n    \"arrowParens\": \"always\",\n    \"bracketSameLine\": false,\n    \"bracketSpacing\": true,\n    \"embeddedLanguageFormatting\": \"auto\",\n    \"htmlWhitespaceSensitivity\": \"css\",\n    \"insertPragma\": false,\n    \"jsxSingleQuote\": true,\n    \"printWidth\": 80,\n    \"proseWrap\": \"preserve\",\n    \"quoteProps\": \"as-needed\",\n    \"requirePragma\": false,\n    \"semi\": true,\n    \"singleQuote\": false,\n    \"tabWidth\": 2,\n    \"trailingComma\": \"es5\",\n    \"useTabs\": false,\n    \"vueIndentScriptAndStyle\": true\n  }\n```\n#### package.json\n[官方文档](http://nodejs.cn/learn/the-package-json-guide)\npackage.json 管理项目依赖的下载，是项目的清单,是 npm 和 yarn 存储所有已安装软件包的名称和版本的地方\n\n```json\n{\n  \"name\": \"leaflet-draw\",\n  \"version\": \"1.0.3\",\n  \"description\": \"Vector drawing plugin for Leaflet\",\n  \"devDependencies\": {\n    \"eslint\": \"^3.5.0 <3.6.0\",\n    \"eslint-config-mourner\": \"^2.0.3\",\n    \"uglifycss\": \"0.0.25\"\n  },\n  \"main\": \"dist/leaflet.draw.js\",\n  \"style\": \"dist/leaflet.draw.css\",\n  \"directories\": {\n    \"doc\": \"docs/\",\n    \"example\": \"docs/example\",\n    \"lib\": \"src/\"\n  },\n  \"files\": [\n    \"dist/*\",\n    \"docs/*\"\n  ],\n  \"scripts\": {\n    \"build\": \"jake build -f ./Jakefile.js\",\n    \"test\": \"jake test\",\n    \"docs\": \"jake docs\",\n    \"release\": \"./build/publish.sh\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"\"\n  },\n  \"keywords\": [\n    \"maps\",\n    \"leaflet\",\n    \"draw\"\n  ],\n  \"contributors\": [\n    {\n      \"name\": \"Jon West\",\n      \"email\": \"ddproxy@gmail.com\"\n    },\n    {\n      \"name\": \"Jacob Toye\"\n    }\n  ],\n  \"license\": \"MIT\",\n  \"readmeFilename\": \"README.md\",\n  \"eslintConfig\": {\n    \"root\": true,\n    \"globals\": {\n      \"L\": true\n    },\n    \"env\": {\n      \"commonjs\": true,\n      \"amd\": true,\n      \"node\": false\n    },\n    \"extends\": \"mourner\",\n    \"rules\": {\n      \"no-mixed-spaces-and-tabs\": [\n        2,\n        \"smart-tabs\"\n      ],\n      \"indent\": [\n        2,\n        \"tab\",\n        {\n          \"VariableDeclarator\": 0\n        }\n      ],\n      \"curly\": 2,\n      \"spaced-comment\": 2,\n      \"strict\": 0,\n      \"wrap-iife\": 0,\n      \"key-spacing\": 0,\n      \"consistent-return\": 0\n    }\n  }\n}\n```\n+ `name` 设置程序或软件包的名称\n+ `author` 设置包的作者名称\n+ `contributors` 项目贡献者\n+ `homepage` 包的主页\n+ `version` 表明当前版本\n+ `license` 包的许可证 (开源协议)\n+ `description` 当前应用程序、软件包的简短描述\n+ `main` 设置程序的入口点\n+ `private` 设置为 `true`,可以防止包被发布到 `npm`\n+ `scripts` 定义运行`node`脚本\n+ `dependencies` 设置程序的依赖包\n+ `devDependencies` 设置开发时的依赖包\n+ `engines` 设置运行的nodejs的版本\n+ `browserlist` 告知支持的浏览器及版本\n+ `repository` 指定包仓库所在的位置\n+ `moudle`\n\n#### vue.config.js\n[官方文档](https://cli.vuejs.org/zh/config/#publicpath)\nvue.config.js是vue工具链`vue-cli`的配置文件\nvue-cli是vue项目构建的脚手架，能通过命令快速创建一个vue项目\nvue-cli带有运行时依赖`@vue/cli-service`,该依赖基于 **webpack** 构建，带有合理的默认配置\n\n```bash\n# 快速创建一个vue项目\nvue create hello-world\n```\n配置参考(vue-cli 3.3以上)\n```js\nconst CompressionWebpackPlugin = require('compression-webpack-plugin');\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\nconst TerserPlugin = require('terser-webpack-plugin');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst productionGzip = true // 是否使用gzip\nconst productionGzipExtensions = ['js', 'css'] // 需要gzip压缩的文件后缀\nconst useCDN = true // 是否使用cdn加速\n// externals\nconst externals = {\n  vue: 'Vue',\n  'vue-router': 'VueRouter',\n  vuex: 'Vuex',\n  vant: 'vant',\n  axios: 'axios'\n}\n\n// CDN外链，会插入到index.html中\nconst cdn = {\n  css: [],\n  js: [\n    'https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js',\n    'https://cdn.jsdelivr.net/npm/vue-router@3.5.3/dist/vue-router.min.js',\n    'https://cdn.jsdelivr.net/npm/axios@0.19.2/dist/axios.min.js',\n    'https://cdn.jsdelivr.net/npm/vuex@3.6.2/dist/vuex.min.js',\n  ]\n}\nmodule.exports = {\n  // publicPath: process.env.publicPath,\n  publicPath: '/gty',\n  filenameHashing: false,\n  productionSourceMap:!isProduction,\n  assetsDir: 'assets',\n  devServer: {\n    port: 8090,\n    proxy: {\n      '/api': {\n        // 代理api\n        target: 'http://www.baidu.com',\n        changeOrigin: true, // 是否跨域\n        ws: true, // proxy websockets\n        pathRewrite: {\n          // 重写路径\n          '^/api': ''\n        }\n      }\n    }\n  },\n  pages: {\n    index: {\n      // page 的入口\n      entry: 'src/main.js',\n      // 模板来源\n      template: 'public/index.html',\n      // 在 dist/index.html 的输出\n      filename: 'index.html',\n      // 当使用 title 选项时，\n      // template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n      title: process.env.SYSTEM_TITLE\n    },\n    natural: {\n      // page 的入口\n      entry: 'src/mapviews/main.js',\n      // 模板来源\n      template: 'public/natural.html',\n      // 在 dist/index.html 的输出\n      filename: 'natural.html',\n      // 当使用 title 选项时，\n      // template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n      title: process.env.SYSTEM_TITLE\n    }\n  },\n  css: {\n    loaderOptions: {\n      sass: {\n        prependData: '@import \"~@/assets/css/css-variables.scss\";'\n      }\n    }\n  },\n  configureWebpack: config => {\n    const myConfig = {}\n    if (isProduction) {\n      // 1. 生产环境npm包转CDN\n      //if(useCDN) {\n      //  myConfig.externals = externals\n      //}\n      myConfig.plugins = []\n      // 2. 构建时开启gzip，降低服务器压缩对CPU资源的占用，服务器也要相应开启gzip\n      productionGzip && myConfig.plugins.push(\n        new CompressionWebpackPlugin({\n          // filename: '[path].gz[query]',\n          algorithm: 'gzip',\n          test: new RegExp('\\\\.(' + productionGzipExtensions.join('|') + ')$'), // 匹配的文件名\n          threshold: 10240, // 文件超过10k，进行gzip压缩\n          minRatio: 0.8,\n          deleteOriginalAssets: false // 是否删除原文件\n        })\n      )\n      // 去掉注释\n      myConfig.plugins.push(\n        new TerserPlugin({\n          parallel: true,\n          sourceMap: true,\n          terserOptions: {\n            warnings: false,\n            compress: {\n              drop_console: true,// 注释console\n              drop_debugger: true, // 注释debugger\n              pure_funcs: [\"console.log\"]\n            }\n          }\n        })\n      )\n    }\n    return myConfig;\n  }\n}\n```\n\n#### vite.config.js\n[官方文档](https://vitejs.cn/config/)\n\n```js\nimport { defineConfig } from \"vite\"\nimport vue from \"@vitejs/plugin-vue\"\nimport path from \"path\"\n// Element Plus自动按需引入配置，先执行 npm install -D unplugin-vue-components unplugin-auto-import\nimport AutoImport from \"unplugin-auto-import/vite\"\nimport Components from \"unplugin-vue-components/vite\"\nimport { ElementPlusResolver } from \"unplugin-vue-components/resolvers\"\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base: \"./\",\n  plugins: [\n    vue(),\n    AutoImport({\n      resolvers: [ElementPlusResolver()],\n    }),\n    Components({\n      resolvers: [ElementPlusResolver()],\n    }),\n  ],\n  define: {\n    \"process.env\": {},\n  },\n  // 路径\n  resolve: {\n    extensions: [\".js\", \".vue\", \".json\", \".scss\"],\n    alias: {\n      \"@\": path.resolve(__dirname, \"src\"),\n    },\n  },\n  server: {\n    open: true,\n  },\n})\n```\n\n","slug":"常见配置文件","published":1,"updated":"2022-08-16T13:16:34.122Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3w003ijsvk3ucd08z6","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><h4 id=\"jsconfig-json\"><a href=\"#jsconfig-json\" class=\"headerlink\" title=\"jsconfig.json\"></a>jsconfig.json</h4><p>用于webpack配置别名，要让vscode正确提示路径，需在Vscode的中启用js文件语义检查<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220703145404.PNG\" alt=\"\"></p>\n<pre class=\"language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"@/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"./src/*\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@assets/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/assets/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@components/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/components/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@config/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/config/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@service/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/service/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@mixins/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/mixins/*\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"node_modules\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/**/*\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li>baseURL 设置文件基础路径</li>\n<li>paths 为路径设置别名，简化路径，路径相当于baseURL</li>\n<li>exclude 设置排除需要进行语义检查的文件</li>\n<li>include 设置包含需要进行语义检查的文件</li>\n</ul>\n<h4 id=\"prettierrc\"><a href=\"#prettierrc\" class=\"headerlink\" title=\".prettierrc\"></a>.prettierrc</h4><p><a href=\"https://prettier.io/docs/en/configuration.html\">配置文档</a><br>    <a href=\"https://prettier.io/playground/\">配置工具</a><br>prettier插件的配置文件，.prettierignore也是该插件的配置文件，用于设置不需要配置格式化的目录，默认为</p>\n<pre class=\"language-json\" data-language=\"json\"><code class=\"language-json\">**/.git\n**/.svn\n**/.hg\n**/node_modules\n<span class=\"token punctuation\">{</span>\n  printWidth<span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 最大行长</span>\n  bracketSpacing<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否在对象属性添加空格，这里选择是 { foo: bar }</span>\n  <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 是否在语句末尾打印分号</span>\n  <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// 是否使用单引号</span>\n  tabWidth<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token comment\">// 设置tab长度</span>\n  quoteProps： <span class=\"token string\">\"as-needed\"</span>  <span class=\"token comment\">//   设置引号</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"arrowParens\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"bracketSameLine\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"bracketSpacing\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"embeddedLanguageFormatting\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"auto\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"htmlWhitespaceSensitivity\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"css\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"insertPragma\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"jsxSingleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"printWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"proseWrap\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preserve\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"quoteProps\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"as-needed\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"requirePragma\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"tabWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"trailingComma\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"useTabs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vueIndentScriptAndStyle\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h4><p><a href=\"http://nodejs.cn/learn/the-package-json-guide\">官方文档</a><br>package.json 管理项目依赖的下载，是项目的清单,是 npm 和 yarn 存储所有已安装软件包的名称和版本的地方</p>\n<pre class=\"language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"leaflet-draw\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.3\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Vector drawing plugin for Leaflet\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"eslint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.5.0 &lt;3.6.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint-config-mourner\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.0.3\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"uglifycss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.25\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/leaflet.draw.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"style\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/leaflet.draw.css\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"directories\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"doc\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"docs/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"example\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"docs/example\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src/\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"files\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"dist/*\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"docs/*\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jake build -f ./Jakefile.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jake test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"docs\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jake docs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"release\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./build/publish.sh\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"repository\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"git\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"maps\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"leaflet\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"draw\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"contributors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Jon West\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ddproxy@gmail.com\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Jacob Toye\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"readmeFilename\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"README.md\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"eslintConfig\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"root\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"globals\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"L\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"commonjs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"amd\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mourner\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"no-mixed-spaces-and-tabs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"smart-tabs\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"indent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"tab\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"VariableDeclarator\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"curly\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"spaced-comment\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"wrap-iife\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"key-spacing\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"consistent-return\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li><code>name</code> 设置程序或软件包的名称</li>\n<li><code>author</code> 设置包的作者名称</li>\n<li><code>contributors</code> 项目贡献者</li>\n<li><code>homepage</code> 包的主页</li>\n<li><code>version</code> 表明当前版本</li>\n<li><code>license</code> 包的许可证 (开源协议)</li>\n<li><code>description</code> 当前应用程序、软件包的简短描述</li>\n<li><code>main</code> 设置程序的入口点</li>\n<li><code>private</code> 设置为 <code>true</code>,可以防止包被发布到 <code>npm</code></li>\n<li><code>scripts</code> 定义运行<code>node</code>脚本</li>\n<li><code>dependencies</code> 设置程序的依赖包</li>\n<li><code>devDependencies</code> 设置开发时的依赖包</li>\n<li><code>engines</code> 设置运行的nodejs的版本</li>\n<li><code>browserlist</code> 告知支持的浏览器及版本</li>\n<li><code>repository</code> 指定包仓库所在的位置</li>\n<li><code>moudle</code></li>\n</ul>\n<h4 id=\"vue-config-js\"><a href=\"#vue-config-js\" class=\"headerlink\" title=\"vue.config.js\"></a>vue.config.js</h4><p><a href=\"https://cli.vuejs.org/zh/config/#publicpath\">官方文档</a><br>vue.config.js是vue工具链<code>vue-cli</code>的配置文件<br>vue-cli是vue项目构建的脚手架，能通过命令快速创建一个vue项目<br>vue-cli带有运行时依赖<code>@vue/cli-service</code>,该依赖基于 <strong>webpack</strong> 构建，带有合理的默认配置</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 快速创建一个vue项目</span>\nvue create hello-world</code></pre>\n<p>配置参考(vue-cli 3.3以上)<br><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> CompressionWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'compression-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> HtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"html-webpack-plugin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> TerserPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'terser-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> isProduction <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> productionGzip <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 是否使用gzip</span>\n<span class=\"token keyword\">const</span> productionGzipExtensions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 需要gzip压缩的文件后缀</span>\n<span class=\"token keyword\">const</span> useCDN <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 是否使用cdn加速</span>\n<span class=\"token comment\">// externals</span>\n<span class=\"token keyword\">const</span> externals <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  vue<span class=\"token operator\">:</span> <span class=\"token string\">'Vue'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'vue-router'</span><span class=\"token operator\">:</span> <span class=\"token string\">'VueRouter'</span><span class=\"token punctuation\">,</span>\n  vuex<span class=\"token operator\">:</span> <span class=\"token string\">'Vuex'</span><span class=\"token punctuation\">,</span>\n  vant<span class=\"token operator\">:</span> <span class=\"token string\">'vant'</span><span class=\"token punctuation\">,</span>\n  axios<span class=\"token operator\">:</span> <span class=\"token string\">'axios'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// CDN外链，会插入到index.html中</span>\n<span class=\"token keyword\">const</span> cdn <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  css<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  js<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://cdn.jsdelivr.net/npm/vue-router@3.5.3/dist/vue-router.min.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://cdn.jsdelivr.net/npm/axios@0.19.2/dist/axios.min.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://cdn.jsdelivr.net/npm/vuex@3.6.2/dist/vuex.min.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// publicPath: process.env.publicPath,</span>\n  publicPath<span class=\"token operator\">:</span> <span class=\"token string\">'/gty'</span><span class=\"token punctuation\">,</span>\n  filenameHashing<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  productionSourceMap<span class=\"token operator\">:</span><span class=\"token operator\">!</span>isProduction<span class=\"token punctuation\">,</span>\n  assetsDir<span class=\"token operator\">:</span> <span class=\"token string\">'assets'</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    port<span class=\"token operator\">:</span> <span class=\"token number\">8090</span><span class=\"token punctuation\">,</span>\n    proxy<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'/api'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 代理api</span>\n        target<span class=\"token operator\">:</span> <span class=\"token string\">'http://www.baidu.com'</span><span class=\"token punctuation\">,</span>\n        changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否跨域</span>\n        ws<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// proxy websockets</span>\n        pathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// 重写路径</span>\n          <span class=\"token string\">'^/api'</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  pages<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    index<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// page 的入口</span>\n      entry<span class=\"token operator\">:</span> <span class=\"token string\">'src/main.js'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 模板来源</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'public/index.html'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 在 dist/index.html 的输出</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 当使用 title 选项时，</span>\n      <span class=\"token comment\">// template 中的 title 标签需要是 &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span>\n      title<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SYSTEM_TITLE</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    natural<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// page 的入口</span>\n      entry<span class=\"token operator\">:</span> <span class=\"token string\">'src/mapviews/main.js'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 模板来源</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'public/natural.html'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 在 dist/index.html 的输出</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'natural.html'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 当使用 title 选项时，</span>\n      <span class=\"token comment\">// template 中的 title 标签需要是 &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span>\n      title<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SYSTEM_TITLE</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  css<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    loaderOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      sass<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        prependData<span class=\"token operator\">:</span> <span class=\"token string\">'@import \"~@/assets/css/css-variables.scss\";'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">configureWebpack</span><span class=\"token operator\">:</span> <span class=\"token parameter\">config</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> myConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isProduction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 1. 生产环境npm包转CDN</span>\n      <span class=\"token comment\">//if(useCDN) {</span>\n      <span class=\"token comment\">//  myConfig.externals = externals</span>\n      <span class=\"token comment\">//}</span>\n      myConfig<span class=\"token punctuation\">.</span>plugins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n      <span class=\"token comment\">// 2. 构建时开启gzip，降低服务器压缩对CPU资源的占用，服务器也要相应开启gzip</span>\n      productionGzip <span class=\"token operator\">&amp;&amp;</span> myConfig<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">CompressionWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// filename: '[path].gz[query]',</span>\n          algorithm<span class=\"token operator\">:</span> <span class=\"token string\">'gzip'</span><span class=\"token punctuation\">,</span>\n          test<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\.('</span> <span class=\"token operator\">+</span> productionGzipExtensions<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">')$'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 匹配的文件名</span>\n          threshold<span class=\"token operator\">:</span> <span class=\"token number\">10240</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 文件超过10k，进行gzip压缩</span>\n          minRatio<span class=\"token operator\">:</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>\n          deleteOriginalAssets<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// 是否删除原文件</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// 去掉注释</span>\n      myConfig<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">TerserPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          parallel<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          sourceMap<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          terserOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            warnings<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            compress<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              drop_console<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 注释console</span>\n              drop_debugger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 注释debugger</span>\n              pure_funcs<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"console.log\"</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> myConfig<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></p>\n<h4 id=\"vite-config-js\"><a href=\"#vite-config-js\" class=\"headerlink\" title=\"vite.config.js\"></a>vite.config.js</h4><p><a href=\"https://vitejs.cn/config/\">官方文档</a></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> defineConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vite\"</span>\n<span class=\"token keyword\">import</span> vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"@vitejs/plugin-vue\"</span>\n<span class=\"token keyword\">import</span> path <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span>\n<span class=\"token comment\">// Element Plus自动按需引入配置，先执行 npm install -D unplugin-vue-components unplugin-auto-import</span>\n<span class=\"token keyword\">import</span> AutoImport <span class=\"token keyword\">from</span> <span class=\"token string\">\"unplugin-auto-import/vite\"</span>\n<span class=\"token keyword\">import</span> Components <span class=\"token keyword\">from</span> <span class=\"token string\">\"unplugin-vue-components/vite\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ElementPlusResolver <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"unplugin-vue-components/resolvers\"</span>\n\n<span class=\"token comment\">// https://vitejs.dev/config/</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  base<span class=\"token operator\">:</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">AutoImport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      resolvers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">ElementPlusResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Components</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      resolvers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">ElementPlusResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  define<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"process.env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 路径</span>\n  resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\".js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".vue\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".scss\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    alias<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"@\"</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"src\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  server<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    open<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160705.jpg","length":6194,"excerpt":"","more":"<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><h4 id=\"jsconfig-json\"><a href=\"#jsconfig-json\" class=\"headerlink\" title=\"jsconfig.json\"></a>jsconfig.json</h4><p>用于webpack配置别名，要让vscode正确提示路径，需在Vscode的中启用js文件语义检查<br><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220703145404.PNG\" alt=\"\"></p>\n<pre class=\"language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"@/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"./src/*\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@assets/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/assets/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@components/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/components/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@config/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/config/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@service/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/service/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@mixins/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/mixins/*\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"node_modules\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/**/*\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li>baseURL 设置文件基础路径</li>\n<li>paths 为路径设置别名，简化路径，路径相当于baseURL</li>\n<li>exclude 设置排除需要进行语义检查的文件</li>\n<li>include 设置包含需要进行语义检查的文件</li>\n</ul>\n<h4 id=\"prettierrc\"><a href=\"#prettierrc\" class=\"headerlink\" title=\".prettierrc\"></a>.prettierrc</h4><p><a href=\"https://prettier.io/docs/en/configuration.html\">配置文档</a><br>    <a href=\"https://prettier.io/playground/\">配置工具</a><br>prettier插件的配置文件，.prettierignore也是该插件的配置文件，用于设置不需要配置格式化的目录，默认为</p>\n<pre class=\"language-json\" data-language=\"json\"><code class=\"language-json\">**/.git\n**/.svn\n**/.hg\n**/node_modules\n<span class=\"token punctuation\">{</span>\n  printWidth<span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 最大行长</span>\n  bracketSpacing<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否在对象属性添加空格，这里选择是 { foo: bar }</span>\n  <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 是否在语句末尾打印分号</span>\n  <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// 是否使用单引号</span>\n  tabWidth<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token comment\">// 设置tab长度</span>\n  quoteProps： <span class=\"token string\">\"as-needed\"</span>  <span class=\"token comment\">//   设置引号</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"arrowParens\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"bracketSameLine\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"bracketSpacing\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"embeddedLanguageFormatting\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"auto\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"htmlWhitespaceSensitivity\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"css\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"insertPragma\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"jsxSingleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"printWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"proseWrap\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preserve\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"quoteProps\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"as-needed\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"requirePragma\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"tabWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"trailingComma\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"useTabs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vueIndentScriptAndStyle\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h4><p><a href=\"http://nodejs.cn/learn/the-package-json-guide\">官方文档</a><br>package.json 管理项目依赖的下载，是项目的清单,是 npm 和 yarn 存储所有已安装软件包的名称和版本的地方</p>\n<pre class=\"language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"leaflet-draw\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.3\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Vector drawing plugin for Leaflet\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"eslint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.5.0 &lt;3.6.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint-config-mourner\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.0.3\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"uglifycss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.25\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/leaflet.draw.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"style\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/leaflet.draw.css\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"directories\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"doc\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"docs/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"example\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"docs/example\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src/\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"files\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"dist/*\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"docs/*\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jake build -f ./Jakefile.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jake test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"docs\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jake docs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"release\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./build/publish.sh\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"repository\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"git\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"maps\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"leaflet\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"draw\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"contributors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Jon West\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ddproxy@gmail.com\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Jacob Toye\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"readmeFilename\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"README.md\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"eslintConfig\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"root\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"globals\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"L\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"commonjs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"amd\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mourner\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"no-mixed-spaces-and-tabs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"smart-tabs\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"indent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"tab\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"VariableDeclarator\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"curly\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"spaced-comment\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"wrap-iife\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"key-spacing\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"consistent-return\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li><code>name</code> 设置程序或软件包的名称</li>\n<li><code>author</code> 设置包的作者名称</li>\n<li><code>contributors</code> 项目贡献者</li>\n<li><code>homepage</code> 包的主页</li>\n<li><code>version</code> 表明当前版本</li>\n<li><code>license</code> 包的许可证 (开源协议)</li>\n<li><code>description</code> 当前应用程序、软件包的简短描述</li>\n<li><code>main</code> 设置程序的入口点</li>\n<li><code>private</code> 设置为 <code>true</code>,可以防止包被发布到 <code>npm</code></li>\n<li><code>scripts</code> 定义运行<code>node</code>脚本</li>\n<li><code>dependencies</code> 设置程序的依赖包</li>\n<li><code>devDependencies</code> 设置开发时的依赖包</li>\n<li><code>engines</code> 设置运行的nodejs的版本</li>\n<li><code>browserlist</code> 告知支持的浏览器及版本</li>\n<li><code>repository</code> 指定包仓库所在的位置</li>\n<li><code>moudle</code></li>\n</ul>\n<h4 id=\"vue-config-js\"><a href=\"#vue-config-js\" class=\"headerlink\" title=\"vue.config.js\"></a>vue.config.js</h4><p><a href=\"https://cli.vuejs.org/zh/config/#publicpath\">官方文档</a><br>vue.config.js是vue工具链<code>vue-cli</code>的配置文件<br>vue-cli是vue项目构建的脚手架，能通过命令快速创建一个vue项目<br>vue-cli带有运行时依赖<code>@vue/cli-service</code>,该依赖基于 <strong>webpack</strong> 构建，带有合理的默认配置</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 快速创建一个vue项目</span>\nvue create hello-world</code></pre>\n<p>配置参考(vue-cli 3.3以上)<br><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> CompressionWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'compression-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> HtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"html-webpack-plugin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> TerserPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'terser-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> isProduction <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> productionGzip <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 是否使用gzip</span>\n<span class=\"token keyword\">const</span> productionGzipExtensions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 需要gzip压缩的文件后缀</span>\n<span class=\"token keyword\">const</span> useCDN <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 是否使用cdn加速</span>\n<span class=\"token comment\">// externals</span>\n<span class=\"token keyword\">const</span> externals <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  vue<span class=\"token operator\">:</span> <span class=\"token string\">'Vue'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'vue-router'</span><span class=\"token operator\">:</span> <span class=\"token string\">'VueRouter'</span><span class=\"token punctuation\">,</span>\n  vuex<span class=\"token operator\">:</span> <span class=\"token string\">'Vuex'</span><span class=\"token punctuation\">,</span>\n  vant<span class=\"token operator\">:</span> <span class=\"token string\">'vant'</span><span class=\"token punctuation\">,</span>\n  axios<span class=\"token operator\">:</span> <span class=\"token string\">'axios'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// CDN外链，会插入到index.html中</span>\n<span class=\"token keyword\">const</span> cdn <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  css<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  js<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://cdn.jsdelivr.net/npm/vue-router@3.5.3/dist/vue-router.min.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://cdn.jsdelivr.net/npm/axios@0.19.2/dist/axios.min.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://cdn.jsdelivr.net/npm/vuex@3.6.2/dist/vuex.min.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// publicPath: process.env.publicPath,</span>\n  publicPath<span class=\"token operator\">:</span> <span class=\"token string\">'/gty'</span><span class=\"token punctuation\">,</span>\n  filenameHashing<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  productionSourceMap<span class=\"token operator\">:</span><span class=\"token operator\">!</span>isProduction<span class=\"token punctuation\">,</span>\n  assetsDir<span class=\"token operator\">:</span> <span class=\"token string\">'assets'</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    port<span class=\"token operator\">:</span> <span class=\"token number\">8090</span><span class=\"token punctuation\">,</span>\n    proxy<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'/api'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 代理api</span>\n        target<span class=\"token operator\">:</span> <span class=\"token string\">'http://www.baidu.com'</span><span class=\"token punctuation\">,</span>\n        changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否跨域</span>\n        ws<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// proxy websockets</span>\n        pathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// 重写路径</span>\n          <span class=\"token string\">'^/api'</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  pages<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    index<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// page 的入口</span>\n      entry<span class=\"token operator\">:</span> <span class=\"token string\">'src/main.js'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 模板来源</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'public/index.html'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 在 dist/index.html 的输出</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 当使用 title 选项时，</span>\n      <span class=\"token comment\">// template 中的 title 标签需要是 &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span>\n      title<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SYSTEM_TITLE</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    natural<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// page 的入口</span>\n      entry<span class=\"token operator\">:</span> <span class=\"token string\">'src/mapviews/main.js'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 模板来源</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'public/natural.html'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 在 dist/index.html 的输出</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'natural.html'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 当使用 title 选项时，</span>\n      <span class=\"token comment\">// template 中的 title 标签需要是 &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span>\n      title<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SYSTEM_TITLE</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  css<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    loaderOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      sass<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        prependData<span class=\"token operator\">:</span> <span class=\"token string\">'@import \"~@/assets/css/css-variables.scss\";'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">configureWebpack</span><span class=\"token operator\">:</span> <span class=\"token parameter\">config</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> myConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isProduction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 1. 生产环境npm包转CDN</span>\n      <span class=\"token comment\">//if(useCDN) {</span>\n      <span class=\"token comment\">//  myConfig.externals = externals</span>\n      <span class=\"token comment\">//}</span>\n      myConfig<span class=\"token punctuation\">.</span>plugins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n      <span class=\"token comment\">// 2. 构建时开启gzip，降低服务器压缩对CPU资源的占用，服务器也要相应开启gzip</span>\n      productionGzip <span class=\"token operator\">&amp;&amp;</span> myConfig<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">CompressionWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// filename: '[path].gz[query]',</span>\n          algorithm<span class=\"token operator\">:</span> <span class=\"token string\">'gzip'</span><span class=\"token punctuation\">,</span>\n          test<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\.('</span> <span class=\"token operator\">+</span> productionGzipExtensions<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">')$'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 匹配的文件名</span>\n          threshold<span class=\"token operator\">:</span> <span class=\"token number\">10240</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 文件超过10k，进行gzip压缩</span>\n          minRatio<span class=\"token operator\">:</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>\n          deleteOriginalAssets<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// 是否删除原文件</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// 去掉注释</span>\n      myConfig<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">TerserPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          parallel<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          sourceMap<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          terserOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            warnings<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            compress<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              drop_console<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 注释console</span>\n              drop_debugger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 注释debugger</span>\n              pure_funcs<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"console.log\"</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> myConfig<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></p>\n<h4 id=\"vite-config-js\"><a href=\"#vite-config-js\" class=\"headerlink\" title=\"vite.config.js\"></a>vite.config.js</h4><p><a href=\"https://vitejs.cn/config/\">官方文档</a></p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> defineConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vite\"</span>\n<span class=\"token keyword\">import</span> vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"@vitejs/plugin-vue\"</span>\n<span class=\"token keyword\">import</span> path <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span>\n<span class=\"token comment\">// Element Plus自动按需引入配置，先执行 npm install -D unplugin-vue-components unplugin-auto-import</span>\n<span class=\"token keyword\">import</span> AutoImport <span class=\"token keyword\">from</span> <span class=\"token string\">\"unplugin-auto-import/vite\"</span>\n<span class=\"token keyword\">import</span> Components <span class=\"token keyword\">from</span> <span class=\"token string\">\"unplugin-vue-components/vite\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ElementPlusResolver <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"unplugin-vue-components/resolvers\"</span>\n\n<span class=\"token comment\">// https://vitejs.dev/config/</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  base<span class=\"token operator\">:</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">AutoImport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      resolvers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">ElementPlusResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Components</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      resolvers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">ElementPlusResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  define<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"process.env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 路径</span>\n  resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\".js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".vue\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".scss\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    alias<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"@\"</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"src\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  server<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    open<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n"},{"title":"数字摄影测量","date":"2021-07-05T11:06:46.000Z","description":"数字摄影测量","_content":"\n# 数字摄影测量\n\n\n\n### 概念\n\n+ 数字摄影测量\n\n利用数字灰度信号，采用数字相关技术量测同名像点，在此基础上通过解析计算，进行相对定向和绝对定向，建立数字立体模型，从而建立数字高程模型 绘制等高线 制作正射影像图以及为地理信息系统提供基础信息等\n\n+ 获得数字影像的方法\n  1. 数字摄影机(CCD阵列扫描仪或摄影机)或数码相机获得的数字影像\n  2. 利用数字化扫描仪对像片进行扫描，称为数字化影像\n\n### 影像采样与量化\n\n#### 1. 影像数字化过程\n\n   + 影像数字化\n + ==采样==与==量化==\n   + 将实际的灰度函数离散化。这种对实际连续函数模型离散化的量测过程就是==采样==\n   + 被量测的点称为==样点==，\n   + 样点之间的距离即==采样间隔==。\n   + 将各点的灰度值取为整数，这一过程称为==影像灰度的量化==\n\n#### 2. 数字影像的构成\n\n   + 数字影像是一个灰度矩阵\n   + 矩阵中每个元素称为像素\n\n#### 3. 数字影像内定向\n\n+ 使像平面坐标x,y与其扫描坐标换算成相等的即为数字影像内定向\n+ 即扫描坐标转换为像平面坐标系\n\n### 基于灰度的影像相关\n\n+ **数字影像相关**：从左右数字影像中寻找同名像点\n+ 影像相关是利用互相关函数，评价两块影像的相似性以确定同名点\n+ 方法：\n\n  1. 相关系数法 \n  2. 协方差法\n  3. 高精度最小二乘法\n\n### 同名核线的确定\n\n+ 核线几何关系解析\n+ 沿核线重采样\n+ 核线相关\n\n\n\n","source":"_posts/数字摄影测量.md","raw":"---\ntitle: 数字摄影测量\ndate: 2021-07-05 19:06:46\ncategories: [GIS,摄影测量,数字摄影测量]\ntags: 摄影测量\ndescription: 数字摄影测量\n---\n\n# 数字摄影测量\n\n\n\n### 概念\n\n+ 数字摄影测量\n\n利用数字灰度信号，采用数字相关技术量测同名像点，在此基础上通过解析计算，进行相对定向和绝对定向，建立数字立体模型，从而建立数字高程模型 绘制等高线 制作正射影像图以及为地理信息系统提供基础信息等\n\n+ 获得数字影像的方法\n  1. 数字摄影机(CCD阵列扫描仪或摄影机)或数码相机获得的数字影像\n  2. 利用数字化扫描仪对像片进行扫描，称为数字化影像\n\n### 影像采样与量化\n\n#### 1. 影像数字化过程\n\n   + 影像数字化\n + ==采样==与==量化==\n   + 将实际的灰度函数离散化。这种对实际连续函数模型离散化的量测过程就是==采样==\n   + 被量测的点称为==样点==，\n   + 样点之间的距离即==采样间隔==。\n   + 将各点的灰度值取为整数，这一过程称为==影像灰度的量化==\n\n#### 2. 数字影像的构成\n\n   + 数字影像是一个灰度矩阵\n   + 矩阵中每个元素称为像素\n\n#### 3. 数字影像内定向\n\n+ 使像平面坐标x,y与其扫描坐标换算成相等的即为数字影像内定向\n+ 即扫描坐标转换为像平面坐标系\n\n### 基于灰度的影像相关\n\n+ **数字影像相关**：从左右数字影像中寻找同名像点\n+ 影像相关是利用互相关函数，评价两块影像的相似性以确定同名点\n+ 方法：\n\n  1. 相关系数法 \n  2. 协方差法\n  3. 高精度最小二乘法\n\n### 同名核线的确定\n\n+ 核线几何关系解析\n+ 沿核线重采样\n+ 核线相关\n\n\n\n","slug":"数字摄影测量","published":1,"updated":"2021-11-22T09:59:06.924Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3x003mjsvk3m22hpgw","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"数字摄影测量\"><a href=\"#数字摄影测量\" class=\"headerlink\" title=\"数字摄影测量\"></a>数字摄影测量</h1><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li>数字摄影测量</li>\n</ul>\n<p>利用数字灰度信号，采用数字相关技术量测同名像点，在此基础上通过解析计算，进行相对定向和绝对定向，建立数字立体模型，从而建立数字高程模型 绘制等高线 制作正射影像图以及为地理信息系统提供基础信息等</p>\n<ul>\n<li>获得数字影像的方法<ol>\n<li>数字摄影机(CCD阵列扫描仪或摄影机)或数码相机获得的数字影像</li>\n<li>利用数字化扫描仪对像片进行扫描，称为数字化影像</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"影像采样与量化\"><a href=\"#影像采样与量化\" class=\"headerlink\" title=\"影像采样与量化\"></a>影像采样与量化</h3><h4 id=\"1-影像数字化过程\"><a href=\"#1-影像数字化过程\" class=\"headerlink\" title=\"1. 影像数字化过程\"></a>1. 影像数字化过程</h4><ul>\n<li>影像数字化<ul>\n<li>==采样==与==量化==</li>\n</ul>\n</li>\n<li>将实际的灰度函数离散化。这种对实际连续函数模型离散化的量测过程就是==采样==</li>\n<li>被量测的点称为==样点==，</li>\n<li>样点之间的距离即==采样间隔==。</li>\n<li>将各点的灰度值取为整数，这一过程称为==影像灰度的量化==</li>\n</ul>\n<h4 id=\"2-数字影像的构成\"><a href=\"#2-数字影像的构成\" class=\"headerlink\" title=\"2. 数字影像的构成\"></a>2. 数字影像的构成</h4><ul>\n<li>数字影像是一个灰度矩阵</li>\n<li>矩阵中每个元素称为像素</li>\n</ul>\n<h4 id=\"3-数字影像内定向\"><a href=\"#3-数字影像内定向\" class=\"headerlink\" title=\"3. 数字影像内定向\"></a>3. 数字影像内定向</h4><ul>\n<li>使像平面坐标x,y与其扫描坐标换算成相等的即为数字影像内定向</li>\n<li>即扫描坐标转换为像平面坐标系</li>\n</ul>\n<h3 id=\"基于灰度的影像相关\"><a href=\"#基于灰度的影像相关\" class=\"headerlink\" title=\"基于灰度的影像相关\"></a>基于灰度的影像相关</h3><ul>\n<li><strong>数字影像相关</strong>：从左右数字影像中寻找同名像点</li>\n<li>影像相关是利用互相关函数，评价两块影像的相似性以确定同名点</li>\n<li><p>方法：</p>\n<ol>\n<li>相关系数法 </li>\n<li>协方差法</li>\n<li>高精度最小二乘法</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"同名核线的确定\"><a href=\"#同名核线的确定\" class=\"headerlink\" title=\"同名核线的确定\"></a>同名核线的确定</h3><ul>\n<li>核线几何关系解析</li>\n<li>沿核线重采样</li>\n<li>核线相关</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160624.jpg","length":493,"excerpt":"","more":"<h1 id=\"数字摄影测量\"><a href=\"#数字摄影测量\" class=\"headerlink\" title=\"数字摄影测量\"></a>数字摄影测量</h1><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li>数字摄影测量</li>\n</ul>\n<p>利用数字灰度信号，采用数字相关技术量测同名像点，在此基础上通过解析计算，进行相对定向和绝对定向，建立数字立体模型，从而建立数字高程模型 绘制等高线 制作正射影像图以及为地理信息系统提供基础信息等</p>\n<ul>\n<li>获得数字影像的方法<ol>\n<li>数字摄影机(CCD阵列扫描仪或摄影机)或数码相机获得的数字影像</li>\n<li>利用数字化扫描仪对像片进行扫描，称为数字化影像</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"影像采样与量化\"><a href=\"#影像采样与量化\" class=\"headerlink\" title=\"影像采样与量化\"></a>影像采样与量化</h3><h4 id=\"1-影像数字化过程\"><a href=\"#1-影像数字化过程\" class=\"headerlink\" title=\"1. 影像数字化过程\"></a>1. 影像数字化过程</h4><ul>\n<li>影像数字化<ul>\n<li>==采样==与==量化==</li>\n</ul>\n</li>\n<li>将实际的灰度函数离散化。这种对实际连续函数模型离散化的量测过程就是==采样==</li>\n<li>被量测的点称为==样点==，</li>\n<li>样点之间的距离即==采样间隔==。</li>\n<li>将各点的灰度值取为整数，这一过程称为==影像灰度的量化==</li>\n</ul>\n<h4 id=\"2-数字影像的构成\"><a href=\"#2-数字影像的构成\" class=\"headerlink\" title=\"2. 数字影像的构成\"></a>2. 数字影像的构成</h4><ul>\n<li>数字影像是一个灰度矩阵</li>\n<li>矩阵中每个元素称为像素</li>\n</ul>\n<h4 id=\"3-数字影像内定向\"><a href=\"#3-数字影像内定向\" class=\"headerlink\" title=\"3. 数字影像内定向\"></a>3. 数字影像内定向</h4><ul>\n<li>使像平面坐标x,y与其扫描坐标换算成相等的即为数字影像内定向</li>\n<li>即扫描坐标转换为像平面坐标系</li>\n</ul>\n<h3 id=\"基于灰度的影像相关\"><a href=\"#基于灰度的影像相关\" class=\"headerlink\" title=\"基于灰度的影像相关\"></a>基于灰度的影像相关</h3><ul>\n<li><strong>数字影像相关</strong>：从左右数字影像中寻找同名像点</li>\n<li>影像相关是利用互相关函数，评价两块影像的相似性以确定同名点</li>\n<li><p>方法：</p>\n<ol>\n<li>相关系数法 </li>\n<li>协方差法</li>\n<li>高精度最小二乘法</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"同名核线的确定\"><a href=\"#同名核线的确定\" class=\"headerlink\" title=\"同名核线的确定\"></a>同名核线的确定</h3><ul>\n<li>核线几何关系解析</li>\n<li>沿核线重采样</li>\n<li>核线相关</li>\n</ul>\n"},{"title":"数据编辑与处理","date":"2021-07-05T11:14:40.000Z","description":"数据编辑与处理","_content":"\n# 数据编辑与处理\n\n## 1.坐标与几何变换\n\n### 1. 几何纠正\n\n+ 地形图纠正\n+ 遥感影像纠正\n\n### 2. 坐标变换\n\n+ 投影变换\n+ 仿射变换\n+ 相似变换\n+ 等积变换\n\n### 3. 栅格数据重采样\n\n+ 最邻近法\n\n+ 双线性内插\n\n+ 三次卷积法\n\n\n## 2.数据编辑(图形与属性)\n\n### 1.图形数据编辑\n\n### 2.属性数据编辑\n\n## 3.图形裁剪与拼接\n\n## 4.拓扑生成\n\n## 5.矢量数据压缩\n\n压缩方法\n\n+ 间隔取点法\n+ 垂距法和偏角法\n+ 分裂法\n\n## 6.空间数据结构变换\n\n## 7.空间数据内插\n\n","source":"_posts/数据编辑与处理.md","raw":"---\ntitle: 数据编辑与处理\ndate: 2021-07-05 19:14:40\ncategories: [GIS,地理信息科学,数据编辑与处理] \ntags: 地理信息科学\ndescription: 数据编辑与处理\n---\n\n# 数据编辑与处理\n\n## 1.坐标与几何变换\n\n### 1. 几何纠正\n\n+ 地形图纠正\n+ 遥感影像纠正\n\n### 2. 坐标变换\n\n+ 投影变换\n+ 仿射变换\n+ 相似变换\n+ 等积变换\n\n### 3. 栅格数据重采样\n\n+ 最邻近法\n\n+ 双线性内插\n\n+ 三次卷积法\n\n\n## 2.数据编辑(图形与属性)\n\n### 1.图形数据编辑\n\n### 2.属性数据编辑\n\n## 3.图形裁剪与拼接\n\n## 4.拓扑生成\n\n## 5.矢量数据压缩\n\n压缩方法\n\n+ 间隔取点法\n+ 垂距法和偏角法\n+ 分裂法\n\n## 6.空间数据结构变换\n\n## 7.空间数据内插\n\n","slug":"数据编辑与处理","published":1,"updated":"2021-11-10T11:16:40.662Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt3y003qjsvk6i683inl","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"数据编辑与处理\"><a href=\"#数据编辑与处理\" class=\"headerlink\" title=\"数据编辑与处理\"></a>数据编辑与处理</h1><h2 id=\"1-坐标与几何变换\"><a href=\"#1-坐标与几何变换\" class=\"headerlink\" title=\"1.坐标与几何变换\"></a>1.坐标与几何变换</h2><h3 id=\"1-几何纠正\"><a href=\"#1-几何纠正\" class=\"headerlink\" title=\"1. 几何纠正\"></a>1. 几何纠正</h3><ul>\n<li>地形图纠正</li>\n<li>遥感影像纠正</li>\n</ul>\n<h3 id=\"2-坐标变换\"><a href=\"#2-坐标变换\" class=\"headerlink\" title=\"2. 坐标变换\"></a>2. 坐标变换</h3><ul>\n<li>投影变换</li>\n<li>仿射变换</li>\n<li>相似变换</li>\n<li>等积变换</li>\n</ul>\n<h3 id=\"3-栅格数据重采样\"><a href=\"#3-栅格数据重采样\" class=\"headerlink\" title=\"3. 栅格数据重采样\"></a>3. 栅格数据重采样</h3><ul>\n<li><p>最邻近法</p>\n</li>\n<li><p>双线性内插</p>\n</li>\n<li><p>三次卷积法</p>\n</li>\n</ul>\n<h2 id=\"2-数据编辑-图形与属性\"><a href=\"#2-数据编辑-图形与属性\" class=\"headerlink\" title=\"2.数据编辑(图形与属性)\"></a>2.数据编辑(图形与属性)</h2><h3 id=\"1-图形数据编辑\"><a href=\"#1-图形数据编辑\" class=\"headerlink\" title=\"1.图形数据编辑\"></a>1.图形数据编辑</h3><h3 id=\"2-属性数据编辑\"><a href=\"#2-属性数据编辑\" class=\"headerlink\" title=\"2.属性数据编辑\"></a>2.属性数据编辑</h3><h2 id=\"3-图形裁剪与拼接\"><a href=\"#3-图形裁剪与拼接\" class=\"headerlink\" title=\"3.图形裁剪与拼接\"></a>3.图形裁剪与拼接</h2><h2 id=\"4-拓扑生成\"><a href=\"#4-拓扑生成\" class=\"headerlink\" title=\"4.拓扑生成\"></a>4.拓扑生成</h2><h2 id=\"5-矢量数据压缩\"><a href=\"#5-矢量数据压缩\" class=\"headerlink\" title=\"5.矢量数据压缩\"></a>5.矢量数据压缩</h2><p>压缩方法</p>\n<ul>\n<li>间隔取点法</li>\n<li>垂距法和偏角法</li>\n<li>分裂法</li>\n</ul>\n<h2 id=\"6-空间数据结构变换\"><a href=\"#6-空间数据结构变换\" class=\"headerlink\" title=\"6.空间数据结构变换\"></a>6.空间数据结构变换</h2><h2 id=\"7-空间数据内插\"><a href=\"#7-空间数据内插\" class=\"headerlink\" title=\"7.空间数据内插\"></a>7.空间数据内插</h2>","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160654.webp","length":167,"excerpt":"","more":"<h1 id=\"数据编辑与处理\"><a href=\"#数据编辑与处理\" class=\"headerlink\" title=\"数据编辑与处理\"></a>数据编辑与处理</h1><h2 id=\"1-坐标与几何变换\"><a href=\"#1-坐标与几何变换\" class=\"headerlink\" title=\"1.坐标与几何变换\"></a>1.坐标与几何变换</h2><h3 id=\"1-几何纠正\"><a href=\"#1-几何纠正\" class=\"headerlink\" title=\"1. 几何纠正\"></a>1. 几何纠正</h3><ul>\n<li>地形图纠正</li>\n<li>遥感影像纠正</li>\n</ul>\n<h3 id=\"2-坐标变换\"><a href=\"#2-坐标变换\" class=\"headerlink\" title=\"2. 坐标变换\"></a>2. 坐标变换</h3><ul>\n<li>投影变换</li>\n<li>仿射变换</li>\n<li>相似变换</li>\n<li>等积变换</li>\n</ul>\n<h3 id=\"3-栅格数据重采样\"><a href=\"#3-栅格数据重采样\" class=\"headerlink\" title=\"3. 栅格数据重采样\"></a>3. 栅格数据重采样</h3><ul>\n<li><p>最邻近法</p>\n</li>\n<li><p>双线性内插</p>\n</li>\n<li><p>三次卷积法</p>\n</li>\n</ul>\n<h2 id=\"2-数据编辑-图形与属性\"><a href=\"#2-数据编辑-图形与属性\" class=\"headerlink\" title=\"2.数据编辑(图形与属性)\"></a>2.数据编辑(图形与属性)</h2><h3 id=\"1-图形数据编辑\"><a href=\"#1-图形数据编辑\" class=\"headerlink\" title=\"1.图形数据编辑\"></a>1.图形数据编辑</h3><h3 id=\"2-属性数据编辑\"><a href=\"#2-属性数据编辑\" class=\"headerlink\" title=\"2.属性数据编辑\"></a>2.属性数据编辑</h3><h2 id=\"3-图形裁剪与拼接\"><a href=\"#3-图形裁剪与拼接\" class=\"headerlink\" title=\"3.图形裁剪与拼接\"></a>3.图形裁剪与拼接</h2><h2 id=\"4-拓扑生成\"><a href=\"#4-拓扑生成\" class=\"headerlink\" title=\"4.拓扑生成\"></a>4.拓扑生成</h2><h2 id=\"5-矢量数据压缩\"><a href=\"#5-矢量数据压缩\" class=\"headerlink\" title=\"5.矢量数据压缩\"></a>5.矢量数据压缩</h2><p>压缩方法</p>\n<ul>\n<li>间隔取点法</li>\n<li>垂距法和偏角法</li>\n<li>分裂法</li>\n</ul>\n<h2 id=\"6-空间数据结构变换\"><a href=\"#6-空间数据结构变换\" class=\"headerlink\" title=\"6.空间数据结构变换\"></a>6.空间数据结构变换</h2><h2 id=\"7-空间数据内插\"><a href=\"#7-空间数据内插\" class=\"headerlink\" title=\"7.空间数据内插\"></a>7.空间数据内插</h2>"},{"title":"数字高程模型","date":"2021-07-05T11:10:07.000Z","description":"数字高程模型","_content":"\n##  4D产品\n\n    1. DEM：数字高程模型\n    2. DLG：数字线划图\n    3. DRG：数字栅格\n    4. DOM：数字正射影像\n\n## DTM(数字地面模型)\n\n   DEM是DTM的子集，是DTM最基本的部分\n\n## DEM的表达形式\n\n    1. 规则矩形格网(GRID)\n\n  + 优点：\n\n    储存量小\n\n    计算机处理矩阵方便，便于使用和管理\n\n+ 缺点：\n\n  不能准确表示地形的结构与细部\n\n  描绘的等高线不能准确的表示地貌\n\n2. 不规则三角网(TIN)\n\n   + 优点：\n\n     较好的顾及地貌特征点 线，表达复杂的地形表面比GRID要准确\n\n   + 缺点：\n\n     数据量大，数据结构复杂\n\n     使用及管理复杂\n\n     要存储三角形顶点和各三角形邻接关系\n\n## DEM应用\n\n+ 摄影测量与遥感\n+ 工程设计\n+ 地理信息基础数据\n+ 军事上用于导航或导弹制作\n\n## DEM数据获取方法\n\n1. 野外实测获取\n2. 从现有的地图上获取高程数据与地物\n3. 摄影测量方法\n\n## DEM数据预处理\n\n+ DEM数据预处理是DEM内插之前的准备工作是整个数据处理的一部分。\n+ 内插与逼近指的是根据一系列的参考点上的某些信息来拟合反应该信息特征的表面，并内插出气筒点信息\n+ DEM内插方法\n  + 线性内插\n  + 双线性多项式内插\n  + 移动曲面拟合法\n  + DSM 数字坡度模型\n\n","source":"_posts/数字高程模型.md","raw":"---\ntitle: 数字高程模型\ndate: 2021-07-05 19:10:07\ncategories: [GIS,摄影测量,数字高程模型]\ntags: 摄影测量\ndescription: 数字高程模型\n---\n\n##  4D产品\n\n    1. DEM：数字高程模型\n    2. DLG：数字线划图\n    3. DRG：数字栅格\n    4. DOM：数字正射影像\n\n## DTM(数字地面模型)\n\n   DEM是DTM的子集，是DTM最基本的部分\n\n## DEM的表达形式\n\n    1. 规则矩形格网(GRID)\n\n  + 优点：\n\n    储存量小\n\n    计算机处理矩阵方便，便于使用和管理\n\n+ 缺点：\n\n  不能准确表示地形的结构与细部\n\n  描绘的等高线不能准确的表示地貌\n\n2. 不规则三角网(TIN)\n\n   + 优点：\n\n     较好的顾及地貌特征点 线，表达复杂的地形表面比GRID要准确\n\n   + 缺点：\n\n     数据量大，数据结构复杂\n\n     使用及管理复杂\n\n     要存储三角形顶点和各三角形邻接关系\n\n## DEM应用\n\n+ 摄影测量与遥感\n+ 工程设计\n+ 地理信息基础数据\n+ 军事上用于导航或导弹制作\n\n## DEM数据获取方法\n\n1. 野外实测获取\n2. 从现有的地图上获取高程数据与地物\n3. 摄影测量方法\n\n## DEM数据预处理\n\n+ DEM数据预处理是DEM内插之前的准备工作是整个数据处理的一部分。\n+ 内插与逼近指的是根据一系列的参考点上的某些信息来拟合反应该信息特征的表面，并内插出气筒点信息\n+ DEM内插方法\n  + 线性内插\n  + 双线性多项式内插\n  + 移动曲面拟合法\n  + DSM 数字坡度模型\n\n","slug":"数字高程模型","published":1,"updated":"2021-11-10T11:14:11.846Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt40003ujsvkdnmi4ali","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"4D产品\"><a href=\"#4D产品\" class=\"headerlink\" title=\"4D产品\"></a>4D产品</h2><pre><code>1. DEM：数字高程模型\n2. DLG：数字线划图\n3. DRG：数字栅格\n4. DOM：数字正射影像\n</code></pre><h2 id=\"DTM-数字地面模型\"><a href=\"#DTM-数字地面模型\" class=\"headerlink\" title=\"DTM(数字地面模型)\"></a>DTM(数字地面模型)</h2><p>   DEM是DTM的子集，是DTM最基本的部分</p>\n<h2 id=\"DEM的表达形式\"><a href=\"#DEM的表达形式\" class=\"headerlink\" title=\"DEM的表达形式\"></a>DEM的表达形式</h2><pre><code>1. 规则矩形格网(GRID)\n</code></pre><ul>\n<li><p>优点：</p>\n<p>储存量小</p>\n<p>计算机处理矩阵方便，便于使用和管理</p>\n</li>\n</ul>\n<ul>\n<li><p>缺点：</p>\n<p>不能准确表示地形的结构与细部</p>\n<p>描绘的等高线不能准确的表示地貌</p>\n</li>\n</ul>\n<ol>\n<li><p>不规则三角网(TIN)</p>\n<ul>\n<li><p>优点：</p>\n<p>较好的顾及地貌特征点 线，表达复杂的地形表面比GRID要准确</p>\n</li>\n<li><p>缺点：</p>\n<p>数据量大，数据结构复杂</p>\n<p>使用及管理复杂</p>\n<p>要存储三角形顶点和各三角形邻接关系</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"DEM应用\"><a href=\"#DEM应用\" class=\"headerlink\" title=\"DEM应用\"></a>DEM应用</h2><ul>\n<li>摄影测量与遥感</li>\n<li>工程设计</li>\n<li>地理信息基础数据</li>\n<li>军事上用于导航或导弹制作</li>\n</ul>\n<h2 id=\"DEM数据获取方法\"><a href=\"#DEM数据获取方法\" class=\"headerlink\" title=\"DEM数据获取方法\"></a>DEM数据获取方法</h2><ol>\n<li>野外实测获取</li>\n<li>从现有的地图上获取高程数据与地物</li>\n<li>摄影测量方法</li>\n</ol>\n<h2 id=\"DEM数据预处理\"><a href=\"#DEM数据预处理\" class=\"headerlink\" title=\"DEM数据预处理\"></a>DEM数据预处理</h2><ul>\n<li>DEM数据预处理是DEM内插之前的准备工作是整个数据处理的一部分。</li>\n<li>内插与逼近指的是根据一系列的参考点上的某些信息来拟合反应该信息特征的表面，并内插出气筒点信息</li>\n<li>DEM内插方法<ul>\n<li>线性内插</li>\n<li>双线性多项式内插</li>\n<li>移动曲面拟合法</li>\n<li>DSM 数字坡度模型</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160705.jpg","length":435,"excerpt":"","more":"<h2 id=\"4D产品\"><a href=\"#4D产品\" class=\"headerlink\" title=\"4D产品\"></a>4D产品</h2><pre><code>1. DEM：数字高程模型\n2. DLG：数字线划图\n3. DRG：数字栅格\n4. DOM：数字正射影像\n</code></pre><h2 id=\"DTM-数字地面模型\"><a href=\"#DTM-数字地面模型\" class=\"headerlink\" title=\"DTM(数字地面模型)\"></a>DTM(数字地面模型)</h2><p>   DEM是DTM的子集，是DTM最基本的部分</p>\n<h2 id=\"DEM的表达形式\"><a href=\"#DEM的表达形式\" class=\"headerlink\" title=\"DEM的表达形式\"></a>DEM的表达形式</h2><pre><code>1. 规则矩形格网(GRID)\n</code></pre><ul>\n<li><p>优点：</p>\n<p>储存量小</p>\n<p>计算机处理矩阵方便，便于使用和管理</p>\n</li>\n</ul>\n<ul>\n<li><p>缺点：</p>\n<p>不能准确表示地形的结构与细部</p>\n<p>描绘的等高线不能准确的表示地貌</p>\n</li>\n</ul>\n<ol>\n<li><p>不规则三角网(TIN)</p>\n<ul>\n<li><p>优点：</p>\n<p>较好的顾及地貌特征点 线，表达复杂的地形表面比GRID要准确</p>\n</li>\n<li><p>缺点：</p>\n<p>数据量大，数据结构复杂</p>\n<p>使用及管理复杂</p>\n<p>要存储三角形顶点和各三角形邻接关系</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"DEM应用\"><a href=\"#DEM应用\" class=\"headerlink\" title=\"DEM应用\"></a>DEM应用</h2><ul>\n<li>摄影测量与遥感</li>\n<li>工程设计</li>\n<li>地理信息基础数据</li>\n<li>军事上用于导航或导弹制作</li>\n</ul>\n<h2 id=\"DEM数据获取方法\"><a href=\"#DEM数据获取方法\" class=\"headerlink\" title=\"DEM数据获取方法\"></a>DEM数据获取方法</h2><ol>\n<li>野外实测获取</li>\n<li>从现有的地图上获取高程数据与地物</li>\n<li>摄影测量方法</li>\n</ol>\n<h2 id=\"DEM数据预处理\"><a href=\"#DEM数据预处理\" class=\"headerlink\" title=\"DEM数据预处理\"></a>DEM数据预处理</h2><ul>\n<li>DEM数据预处理是DEM内插之前的准备工作是整个数据处理的一部分。</li>\n<li>内插与逼近指的是根据一系列的参考点上的某些信息来拟合反应该信息特征的表面，并内插出气筒点信息</li>\n<li>DEM内插方法<ul>\n<li>线性内插</li>\n<li>双线性多项式内插</li>\n<li>移动曲面拟合法</li>\n<li>DSM 数字坡度模型</li>\n</ul>\n</li>\n</ul>\n"},{"title":"数组方法","mathjax":true,"date":"2022-09-15T07:15:18.000Z","description":null,"_content":"\n## 数组方法\n\n### 添加、移除数组元素\n\n+ `arr.push()`：从尾端添加元素\n+ `arr.pop()`：从尾端删除元素\n+ `arr.shift()`：从首端删除元素\n+ `arr.unshift()`：从首端添加元素\n\n### splice\n\n`arr.splice`方法可以说是处理数组的瑞士军刀。它可以做所有事情：添加，删除和插入元素。\n\n语法是\n\n```js\narr.splice(start[deleteCount,elem1,...,elemN])\n```\n\n`start`：开始修改的索引位置\n\n`deleteCount`：删除格式\n\n`elem1`：要插入的数\n\n```js\nlet arr = [\"I\", \"study\", \"JavaScript\", \"right\", \"now\"];\n\n// 删除数组的前三项，并使用其他内容代替它们\narr.splice(0, 3, \"Let's\", \"dance\");\n\nalert( arr ) // 现在 [\"Let's\", \"dance\", \"right\", \"now\"]\n```\n\n**`splice`会改变原数组，返回的是被删除的数**\n\n### slice\n\n`arr.slice`方法，将从索引 `start` 到 `end`（不包括 `end`）的数组项复制到一个新的数组。语法：\n\n```js\narr.slice([start], [end])\n```\n\n`slice`不会改变原数组，通常用于获取副本\n\n```js\nlet arr = [\"t\", \"e\", \"s\", \"t\"];\n\nalert( arr.slice(1, 3) ); // e,s（复制从位置 1 到位置 3 的元素）\n\nalert( arr.slice(-2) ); // s,t（复制从位置 -2 到尾端的元素）\n```\n\n### concat\n\n`arr.concat`，创建一个新数组，连接其他数组或值\n\n语法：\n\n```js\narr.concat(arg1,arg2...)\n```\n\n参数可以是数组或值\n\n```js\nlet arr = [1, 2];\nalert( arr.concat([3, 4]) ); // 1,2,3,4\n\nlet arrayLike = {\n  0: \"something\",\n  length: 1\n};\n\nalert( arr.concat(arrayLike) ); // 1,2,3,4,[object Object]\n```\n\n### indexOf/lastIndexOf和includes\n\n+ `arr.indexOf(item,from)`：从索引`from`开始搜索`item`，如果找到则返回索引，**否则返回`-1`**\n+ `arr.lastindexOf(item,from)`与indexof相同，不同的是从右往左查找\n+ `arr.includes(item, from)`：从索引 `from` 开始搜索 `item`，如果找到则返回 `true`，如果没找到，则返回 `false`\n\n```js\nlet arr = [1, 0, false];\n\nalert( arr.indexOf(0) ); // 1\nalert( arr.indexOf(false) ); // 2\nalert( arr.indexOf(null) ); // -1\n\nalert( arr.includes(1) ); // true\n```\n\n`indexOf` 和 `includes` 使用严格相等 `===` 进行比较。所以，如果我们搜索 `false`，它会准确找到 `false` 而不是数字 `0`\n\n特别地\n\n```js\nconst arr = [NaN];\nalert( arr.indexOf(NaN) ); // -1（错，应该为 0）\nalert( arr.includes(NaN) );// true（正确）\n```\n\n\n\n## 数组遍历方法\n\n**1.for循环**\n\n使用临时变量，将长度缓存起来，避免重复获取数组长度，当数组较大时优化效果才会比较明显。\n\n```js\nfor(j = 0,len=arr.length; j < len; j++) { }\n```\n\n \n\n**2.foreach循环**\n\n遍历数组中的每一项，没有返回值，对原数组没有影响，不支持IE\n\n```js\n//1 没有返回值\narr.forEach((item,index,array)=>{//执行代码})\n//参数：value数组中的当前项, index当前项的索引, array原始数组；\n//数组中有几项，那么传递进去的匿名回调函数就需要执行几次；\n```\n\n \n\n**3.map循环**\n\n有返回值，可以return出来\n\nmap的回调函数中支持return返回值；return的是啥，相当于把数组中的这一项变为啥（并不影响原来的数组，只是相当于把原数组克隆一份，把克隆的这一份的数组中的对应项改变了）；\n\n```js\narr.map(function(value,index,array){\n    //do something\n    return  XXX})\nvar ary = [12,23,24,42,1]; \nvar res = ary.map(function (item,index,ary ) {\n    return item*10; \n}) \nconsole.log(res);\n//-->[120,230,240,420,10]; 原数组拷贝了一份，并进行了修改\nconsole.log(ary);\n//-->[12,23,24,42,1]； 原数组并未发生变化\n```\n\n　\n\n**4.forof遍历**\n\n可以正确响应break、continue和return语句\n\n```js\nfor(var value of myArray) { \nconsole.log(value);\n}\n```\n\n　　\n\n**5.filter遍历**\n\n不会改变原始数组,返回新数组\n\n```js\nvar arr = [{ \n\tid: 1, text: 'aa', done: true},\n\t{ id: 2, text: 'bb', done: false}]\n\tconsole.log(arr.filter(item => item.done))\n```\n\n转为ES5\n\n```js\narr.filter(function(item) {\nreturn item.done;\n});\nvar arr = [73,84,56, 22,100]\nvar newArr = arr.filter(item => item>80)  \n//得到新数组 [84, 100] \nconsole.log(newArr,arr)\n```\n\n　　\n\n**6.every遍历**\n\nevery()是对数组中的每一项运行给定函数，如果该函数对每一项返回true,则返回true。\n\n```js\nvar arr = [ 1, 2, 3, 4, 5, 6 ]; \nconsole.log( arr.every(function( item, index, array ){\nreturn item > 3; })); // false\n```\n\n　\n\n**7.some遍历**\n\nsome()是对数组中每一项运行指定函数，如果该函数对任一项返回true，则返回true。\n\n```js\nvar arr = [ 1, 2, 3, 4, 5, 6 ];\nconsole.log( arr.some(functio( item, index, array ){\n returnitem > 3;})); \n //true\n```\n\n　　\n\n**8.reduce**\n\n`reduce() `方法接收一个函数作为累加器（accumulator），数组中的每个值（从左到右）开始缩减，最终为一个值。\n\n```js\nvar total = [0,1,2,3,4].reduce((a, b)=>a + b); //10\n```\n\n`reduce`接受一个函数，函数有四个参数，分别是：上一次的值，当前值，当前值的索引，数组\n\n```js\n[0, 1, 2, 3, 4].reduce(function(previousValue, currentValue, index, array){\nreturn previousValue + currentValue;});\n```\n\n![img](https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112335425-223204218.png)\n\n`reduce`还有第二个参数，我们可以把这个参数作为第一次调用`callback`时的第一个参数，上面这个例子因为没有第二个参数，所以直接从数组的第二项开始，如果我们给了第二个参数为5，那么结果就是这样的：\n\n```js\n[0, 1, 2, 3, 4].reduce(function(previousValue, currentValue, index, array){\nreturn  previousValue + currentValue;},5);\n```\n\n　![img](https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112406091-1932166695.png)\n\n第一次调用的`previousValue`的值就用传入的第二个参数代替，\n\n**9.reduceRight**\n\n`reduceRight()`方法的功能和`reduce()`功能是一样的，不同的是`reduceRight()`从数组的末尾向前将数组中的数组项做累加。\n\n`reduceRight()`首次调用回调函数`callbackfn`时，`prevValue` 和 `curValue` 可以是两个值之一。如果调用 `reduceRight()` 时提供了 `initialValue` 参数，则 `prevValue` 等于 `initialValue`，`curValue` 等于数组中的最后一个值。如果没有提供 `initialValue` 参数，则 `prevValue` 等于数组最后一个值， `curValue` 等于数组中倒数第二个值。\n\n```js\nvar arr = [0,1,2,3,4];\narr.reduceRight(function(preValue,curValue,index,array) {\nreturn preValue + curValue;\n}); // 10\n```\n\n回调将会被调用四次，每次调用的参数及返回值如下：\n\n![img](https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112700747-845347728.png)\n\n如果提供一个初始值`initialValue`为`5`:\n\n```js\nvar arr = [0,1,2,3,4];\narr.reduceRight(function(preValue,curValue,index,array) {\n    return preValue + curValue;\n}, 5); // 15\n```\n\n回调将会被调用五次，每次调用的参数及返回的值如下：\n\n![img](https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112743338-1377666579.png)\n\n同样的，可以对一个数组求和，也可以使用`reduceRight()`方法:\n\n```js\nvar arr = [1,2,3,4,5,6];\nconsole.time(\"ruduceRight\");\nArray.prototype.ruduceRightSum = function(){\n\tfor(var i = 0; i < 10000; i++) {\n\treturn this.reduceRight (function(preValue, curValue) {\n\treturn preValue + curValue;\n\t});\n}}\narr.ruduceRightSum();\nconsole.log('最终的值：'+ arr.ruduceSum()); \n// 21\nconsole.timeEnd(\"ruduceRight\"); // 5.725ms\n```\n\n**10.find**\n\nfind()方法返回数组中符合测试函数条件的第一个元素。否则返回undefined \n\n```js\nvar stu = [{name: '张三',gender:'男',age: 20},{name: '王小毛',gender:'男',age: 20},{name: '李四',gender: '男',age: 20}]\nfunction getStu(element){\n    return element.name == '李四'\n}\nstu.find(getStu) //返回结果为{name: \"李四\", gender: \"男\", age: 20}\n```\n\nES6方法\n\n```js\nstu.find((element) => (element.name == '李四'))\n```\n\n \n\n**11.findIndex**\n\n对于数组中的每个元素，**findIndex** 方法都会调用一次回调函数（采用升序索引顺序），直到有元素返回 **true**。只要有一个元素返回 true，**findIndex** 立即返回该返回 true 的元素的索引值。如果数组中没有任何元素返回 true，则 **findIndex** 返回 -1。\n\n**findIndex** 不会改变数组对象。\n\n```js\n[1,2,3].findIndex(function(x) { x == 2; }); // Returns an index value of 1.\n[1,2,3].findIndex(x => x == 4); // Returns an index value of -1. \n```\n\n**12.keys，values，entries**\n\n ES6 提供三个新的方法 —— entries()，keys()和values() ——  用于遍历数组。它们都返回一个遍历器对象，可以用for...of循环进行遍历，唯一的区别是keys()是对键名的遍历、values()是对键值的遍历，entries()是对键值对的遍历\n\n```js\nfor(let index of ['a','b'].keys()) {\n    console.log(index);\n}\n// 0 \n// 1\nfor(let elem of ['a', 'b'].values()) {\n    console.log(elem);\n}// 'a'\n// 'b'\nfor(let[index, elem] of ['a', 'b'].entries()) {\n    console.log(index, elem);\n}\n// 0 \"a\"\n// 1 \"b\"\n```\n","source":"_posts/数组方法.md","raw":"---\ntitle: 数组方法\nmathjax: true\ndate: 2022-09-15 15:15:18\ntags:\ncategories:\ndescription:\n---\n\n## 数组方法\n\n### 添加、移除数组元素\n\n+ `arr.push()`：从尾端添加元素\n+ `arr.pop()`：从尾端删除元素\n+ `arr.shift()`：从首端删除元素\n+ `arr.unshift()`：从首端添加元素\n\n### splice\n\n`arr.splice`方法可以说是处理数组的瑞士军刀。它可以做所有事情：添加，删除和插入元素。\n\n语法是\n\n```js\narr.splice(start[deleteCount,elem1,...,elemN])\n```\n\n`start`：开始修改的索引位置\n\n`deleteCount`：删除格式\n\n`elem1`：要插入的数\n\n```js\nlet arr = [\"I\", \"study\", \"JavaScript\", \"right\", \"now\"];\n\n// 删除数组的前三项，并使用其他内容代替它们\narr.splice(0, 3, \"Let's\", \"dance\");\n\nalert( arr ) // 现在 [\"Let's\", \"dance\", \"right\", \"now\"]\n```\n\n**`splice`会改变原数组，返回的是被删除的数**\n\n### slice\n\n`arr.slice`方法，将从索引 `start` 到 `end`（不包括 `end`）的数组项复制到一个新的数组。语法：\n\n```js\narr.slice([start], [end])\n```\n\n`slice`不会改变原数组，通常用于获取副本\n\n```js\nlet arr = [\"t\", \"e\", \"s\", \"t\"];\n\nalert( arr.slice(1, 3) ); // e,s（复制从位置 1 到位置 3 的元素）\n\nalert( arr.slice(-2) ); // s,t（复制从位置 -2 到尾端的元素）\n```\n\n### concat\n\n`arr.concat`，创建一个新数组，连接其他数组或值\n\n语法：\n\n```js\narr.concat(arg1,arg2...)\n```\n\n参数可以是数组或值\n\n```js\nlet arr = [1, 2];\nalert( arr.concat([3, 4]) ); // 1,2,3,4\n\nlet arrayLike = {\n  0: \"something\",\n  length: 1\n};\n\nalert( arr.concat(arrayLike) ); // 1,2,3,4,[object Object]\n```\n\n### indexOf/lastIndexOf和includes\n\n+ `arr.indexOf(item,from)`：从索引`from`开始搜索`item`，如果找到则返回索引，**否则返回`-1`**\n+ `arr.lastindexOf(item,from)`与indexof相同，不同的是从右往左查找\n+ `arr.includes(item, from)`：从索引 `from` 开始搜索 `item`，如果找到则返回 `true`，如果没找到，则返回 `false`\n\n```js\nlet arr = [1, 0, false];\n\nalert( arr.indexOf(0) ); // 1\nalert( arr.indexOf(false) ); // 2\nalert( arr.indexOf(null) ); // -1\n\nalert( arr.includes(1) ); // true\n```\n\n`indexOf` 和 `includes` 使用严格相等 `===` 进行比较。所以，如果我们搜索 `false`，它会准确找到 `false` 而不是数字 `0`\n\n特别地\n\n```js\nconst arr = [NaN];\nalert( arr.indexOf(NaN) ); // -1（错，应该为 0）\nalert( arr.includes(NaN) );// true（正确）\n```\n\n\n\n## 数组遍历方法\n\n**1.for循环**\n\n使用临时变量，将长度缓存起来，避免重复获取数组长度，当数组较大时优化效果才会比较明显。\n\n```js\nfor(j = 0,len=arr.length; j < len; j++) { }\n```\n\n \n\n**2.foreach循环**\n\n遍历数组中的每一项，没有返回值，对原数组没有影响，不支持IE\n\n```js\n//1 没有返回值\narr.forEach((item,index,array)=>{//执行代码})\n//参数：value数组中的当前项, index当前项的索引, array原始数组；\n//数组中有几项，那么传递进去的匿名回调函数就需要执行几次；\n```\n\n \n\n**3.map循环**\n\n有返回值，可以return出来\n\nmap的回调函数中支持return返回值；return的是啥，相当于把数组中的这一项变为啥（并不影响原来的数组，只是相当于把原数组克隆一份，把克隆的这一份的数组中的对应项改变了）；\n\n```js\narr.map(function(value,index,array){\n    //do something\n    return  XXX})\nvar ary = [12,23,24,42,1]; \nvar res = ary.map(function (item,index,ary ) {\n    return item*10; \n}) \nconsole.log(res);\n//-->[120,230,240,420,10]; 原数组拷贝了一份，并进行了修改\nconsole.log(ary);\n//-->[12,23,24,42,1]； 原数组并未发生变化\n```\n\n　\n\n**4.forof遍历**\n\n可以正确响应break、continue和return语句\n\n```js\nfor(var value of myArray) { \nconsole.log(value);\n}\n```\n\n　　\n\n**5.filter遍历**\n\n不会改变原始数组,返回新数组\n\n```js\nvar arr = [{ \n\tid: 1, text: 'aa', done: true},\n\t{ id: 2, text: 'bb', done: false}]\n\tconsole.log(arr.filter(item => item.done))\n```\n\n转为ES5\n\n```js\narr.filter(function(item) {\nreturn item.done;\n});\nvar arr = [73,84,56, 22,100]\nvar newArr = arr.filter(item => item>80)  \n//得到新数组 [84, 100] \nconsole.log(newArr,arr)\n```\n\n　　\n\n**6.every遍历**\n\nevery()是对数组中的每一项运行给定函数，如果该函数对每一项返回true,则返回true。\n\n```js\nvar arr = [ 1, 2, 3, 4, 5, 6 ]; \nconsole.log( arr.every(function( item, index, array ){\nreturn item > 3; })); // false\n```\n\n　\n\n**7.some遍历**\n\nsome()是对数组中每一项运行指定函数，如果该函数对任一项返回true，则返回true。\n\n```js\nvar arr = [ 1, 2, 3, 4, 5, 6 ];\nconsole.log( arr.some(functio( item, index, array ){\n returnitem > 3;})); \n //true\n```\n\n　　\n\n**8.reduce**\n\n`reduce() `方法接收一个函数作为累加器（accumulator），数组中的每个值（从左到右）开始缩减，最终为一个值。\n\n```js\nvar total = [0,1,2,3,4].reduce((a, b)=>a + b); //10\n```\n\n`reduce`接受一个函数，函数有四个参数，分别是：上一次的值，当前值，当前值的索引，数组\n\n```js\n[0, 1, 2, 3, 4].reduce(function(previousValue, currentValue, index, array){\nreturn previousValue + currentValue;});\n```\n\n![img](https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112335425-223204218.png)\n\n`reduce`还有第二个参数，我们可以把这个参数作为第一次调用`callback`时的第一个参数，上面这个例子因为没有第二个参数，所以直接从数组的第二项开始，如果我们给了第二个参数为5，那么结果就是这样的：\n\n```js\n[0, 1, 2, 3, 4].reduce(function(previousValue, currentValue, index, array){\nreturn  previousValue + currentValue;},5);\n```\n\n　![img](https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112406091-1932166695.png)\n\n第一次调用的`previousValue`的值就用传入的第二个参数代替，\n\n**9.reduceRight**\n\n`reduceRight()`方法的功能和`reduce()`功能是一样的，不同的是`reduceRight()`从数组的末尾向前将数组中的数组项做累加。\n\n`reduceRight()`首次调用回调函数`callbackfn`时，`prevValue` 和 `curValue` 可以是两个值之一。如果调用 `reduceRight()` 时提供了 `initialValue` 参数，则 `prevValue` 等于 `initialValue`，`curValue` 等于数组中的最后一个值。如果没有提供 `initialValue` 参数，则 `prevValue` 等于数组最后一个值， `curValue` 等于数组中倒数第二个值。\n\n```js\nvar arr = [0,1,2,3,4];\narr.reduceRight(function(preValue,curValue,index,array) {\nreturn preValue + curValue;\n}); // 10\n```\n\n回调将会被调用四次，每次调用的参数及返回值如下：\n\n![img](https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112700747-845347728.png)\n\n如果提供一个初始值`initialValue`为`5`:\n\n```js\nvar arr = [0,1,2,3,4];\narr.reduceRight(function(preValue,curValue,index,array) {\n    return preValue + curValue;\n}, 5); // 15\n```\n\n回调将会被调用五次，每次调用的参数及返回的值如下：\n\n![img](https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112743338-1377666579.png)\n\n同样的，可以对一个数组求和，也可以使用`reduceRight()`方法:\n\n```js\nvar arr = [1,2,3,4,5,6];\nconsole.time(\"ruduceRight\");\nArray.prototype.ruduceRightSum = function(){\n\tfor(var i = 0; i < 10000; i++) {\n\treturn this.reduceRight (function(preValue, curValue) {\n\treturn preValue + curValue;\n\t});\n}}\narr.ruduceRightSum();\nconsole.log('最终的值：'+ arr.ruduceSum()); \n// 21\nconsole.timeEnd(\"ruduceRight\"); // 5.725ms\n```\n\n**10.find**\n\nfind()方法返回数组中符合测试函数条件的第一个元素。否则返回undefined \n\n```js\nvar stu = [{name: '张三',gender:'男',age: 20},{name: '王小毛',gender:'男',age: 20},{name: '李四',gender: '男',age: 20}]\nfunction getStu(element){\n    return element.name == '李四'\n}\nstu.find(getStu) //返回结果为{name: \"李四\", gender: \"男\", age: 20}\n```\n\nES6方法\n\n```js\nstu.find((element) => (element.name == '李四'))\n```\n\n \n\n**11.findIndex**\n\n对于数组中的每个元素，**findIndex** 方法都会调用一次回调函数（采用升序索引顺序），直到有元素返回 **true**。只要有一个元素返回 true，**findIndex** 立即返回该返回 true 的元素的索引值。如果数组中没有任何元素返回 true，则 **findIndex** 返回 -1。\n\n**findIndex** 不会改变数组对象。\n\n```js\n[1,2,3].findIndex(function(x) { x == 2; }); // Returns an index value of 1.\n[1,2,3].findIndex(x => x == 4); // Returns an index value of -1. \n```\n\n**12.keys，values，entries**\n\n ES6 提供三个新的方法 —— entries()，keys()和values() ——  用于遍历数组。它们都返回一个遍历器对象，可以用for...of循环进行遍历，唯一的区别是keys()是对键名的遍历、values()是对键值的遍历，entries()是对键值对的遍历\n\n```js\nfor(let index of ['a','b'].keys()) {\n    console.log(index);\n}\n// 0 \n// 1\nfor(let elem of ['a', 'b'].values()) {\n    console.log(elem);\n}// 'a'\n// 'b'\nfor(let[index, elem] of ['a', 'b'].entries()) {\n    console.log(index, elem);\n}\n// 0 \"a\"\n// 1 \"b\"\n```\n","slug":"数组方法","published":1,"updated":"2022-09-15T07:51:40.658Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt41003xjsvkdg1k3rpj","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"数组方法\"><a href=\"#数组方法\" class=\"headerlink\" title=\"数组方法\"></a>数组方法</h2><h3 id=\"添加、移除数组元素\"><a href=\"#添加、移除数组元素\" class=\"headerlink\" title=\"添加、移除数组元素\"></a>添加、移除数组元素</h3><ul>\n<li><code>arr.push()</code>：从尾端添加元素</li>\n<li><code>arr.pop()</code>：从尾端删除元素</li>\n<li><code>arr.shift()</code>：从首端删除元素</li>\n<li><code>arr.unshift()</code>：从首端添加元素</li>\n</ul>\n<h3 id=\"splice\"><a href=\"#splice\" class=\"headerlink\" title=\"splice\"></a>splice</h3><p><code>arr.splice</code>方法可以说是处理数组的瑞士军刀。它可以做所有事情：添加，删除和插入元素。</p>\n<p>语法是</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">[</span>deleteCount<span class=\"token punctuation\">,</span>elem1<span class=\"token punctuation\">,</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>elemN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n<p><code>start</code>：开始修改的索引位置</p>\n<p><code>deleteCount</code>：删除格式</p>\n<p><code>elem1</code>：要插入的数</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"I\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"study\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"JavaScript\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"right\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"now\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 删除数组的前三项，并使用其他内容代替它们</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Let's\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr <span class=\"token punctuation\">)</span> <span class=\"token comment\">// 现在 [\"Let's\", \"dance\", \"right\", \"now\"]</span></code></pre>\n<p><strong><code>splice</code>会改变原数组，返回的是被删除的数</strong></p>\n<h3 id=\"slice\"><a href=\"#slice\" class=\"headerlink\" title=\"slice\"></a>slice</h3><p><code>arr.slice</code>方法，将从索引 <code>start</code> 到 <code>end</code>（不包括 <code>end</code>）的数组项复制到一个新的数组。语法：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n<p><code>slice</code>不会改变原数组，通常用于获取副本</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"t\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e,s（复制从位置 1 到位置 3 的元素）</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// s,t（复制从位置 -2 到尾端的元素）</span></code></pre>\n<h3 id=\"concat\"><a href=\"#concat\" class=\"headerlink\" title=\"concat\"></a>concat</h3><p><code>arr.concat</code>，创建一个新数组，连接其他数组或值</p>\n<p>语法：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span>arg2<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span></code></pre>\n<p>参数可以是数组或值</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1,2,3,4</span>\n\n<span class=\"token keyword\">let</span> arrayLike <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token string\">\"something\"</span><span class=\"token punctuation\">,</span>\n  length<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>arrayLike<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1,2,3,4,[object Object]</span></code></pre>\n<h3 id=\"indexOf-lastIndexOf和includes\"><a href=\"#indexOf-lastIndexOf和includes\" class=\"headerlink\" title=\"indexOf/lastIndexOf和includes\"></a>indexOf/lastIndexOf和includes</h3><ul>\n<li><code>arr.indexOf(item,from)</code>：从索引<code>from</code>开始搜索<code>item</code>，如果找到则返回索引，<strong>否则返回<code>-1</code></strong></li>\n<li><code>arr.lastindexOf(item,from)</code>与indexof相同，不同的是从右往左查找</li>\n<li><code>arr.includes(item, from)</code>：从索引 <code>from</code> 开始搜索 <code>item</code>，如果找到则返回 <code>true</code>，如果没找到，则返回 <code>false</code></li>\n</ul>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -1</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre>\n<p><code>indexOf</code> 和 <code>includes</code> 使用严格相等 <code>===</code> 进行比较。所以，如果我们搜索 <code>false</code>，它会准确找到 <code>false</code> 而不是数字 <code>0</code></p>\n<p>特别地</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -1（错，应该为 0）</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// true（正确）</span></code></pre>\n<h2 id=\"数组遍历方法\"><a href=\"#数组遍历方法\" class=\"headerlink\" title=\"数组遍历方法\"></a>数组遍历方法</h2><p><strong>1.for循环</strong></p>\n<p>使用临时变量，将长度缓存起来，避免重复获取数组长度，当数组较大时优化效果才会比较明显。</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>len<span class=\"token operator\">=</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span></code></pre>\n<p><strong>2.foreach循环</strong></p>\n<p>遍历数组中的每一项，没有返回值，对原数组没有影响，不支持IE</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">//1 没有返回值</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>array</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{</span><span class=\"token comment\">//执行代码})</span>\n<span class=\"token comment\">//参数：value数组中的当前项, index当前项的索引, array原始数组；</span>\n<span class=\"token comment\">//数组中有几项，那么传递进去的匿名回调函数就需要执行几次；</span></code></pre>\n<p><strong>3.map循环</strong></p>\n<p>有返回值，可以return出来</p>\n<p>map的回调函数中支持return返回值；return的是啥，相当于把数组中的这一项变为啥（并不影响原来的数组，只是相当于把原数组克隆一份，把克隆的这一份的数组中的对应项改变了）；</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//do something</span>\n    <span class=\"token keyword\">return</span>  <span class=\"token constant\">XXX</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> ary <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">var</span> res <span class=\"token operator\">=</span> ary<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>ary</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> item<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//--&gt;[120,230,240,420,10]; 原数组拷贝了一份，并进行了修改</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//--&gt;[12,23,24,42,1]； 原数组并未发生变化</span></code></pre>\n<p>　</p>\n<p><strong>4.forof遍历</strong></p>\n<p>可以正确响应break、continue和return语句</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> value <span class=\"token keyword\">of</span> myArray<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>　　</p>\n<p><strong>5.filter遍历</strong></p>\n<p>不会改变原始数组,返回新数组</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> \n\tid<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'aa'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'bb'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> item<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n<p>转为ES5</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">var</span> newArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> item<span class=\"token operator\">&gt;</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span>  \n<span class=\"token comment\">//得到新数组 [84, 100] </span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newArr<span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">)</span></code></pre>\n<p>　　</p>\n<p><strong>6.every遍历</strong></p>\n<p>every()是对数组中的每一项运行给定函数，如果该函数对每一项返回true,则返回true。</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> item <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre>\n<p>　</p>\n<p><strong>7.some遍历</strong></p>\n<p>some()是对数组中每一项运行指定函数，如果该函数对任一项返回true，则返回true。</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token function\">functio</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n returnitem <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n <span class=\"token comment\">//true</span></code></pre>\n<p>　　</p>\n<p><strong>8.reduce</strong></p>\n<p><code>reduce()</code>方法接收一个函数作为累加器（accumulator），数组中的每个值（从左到右）开始缩减，最终为一个值。</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> total <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=&gt;</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//10</span></code></pre>\n<p><code>reduce</code>接受一个函数，函数有四个参数，分别是：上一次的值，当前值，当前值的索引，数组</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">previousValue<span class=\"token punctuation\">,</span> currentValue<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> previousValue <span class=\"token operator\">+</span> currentValue<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><img src=\"https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112335425-223204218.png\" alt=\"img\"></p>\n<p><code>reduce</code>还有第二个参数，我们可以把这个参数作为第一次调用<code>callback</code>时的第一个参数，上面这个例子因为没有第二个参数，所以直接从数组的第二项开始，如果我们给了第二个参数为5，那么结果就是这样的：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">previousValue<span class=\"token punctuation\">,</span> currentValue<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span>  previousValue <span class=\"token operator\">+</span> currentValue<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>　<img src=\"https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112406091-1932166695.png\" alt=\"img\"></p>\n<p>第一次调用的<code>previousValue</code>的值就用传入的第二个参数代替，</p>\n<p><strong>9.reduceRight</strong></p>\n<p><code>reduceRight()</code>方法的功能和<code>reduce()</code>功能是一样的，不同的是<code>reduceRight()</code>从数组的末尾向前将数组中的数组项做累加。</p>\n<p><code>reduceRight()</code>首次调用回调函数<code>callbackfn</code>时，<code>prevValue</code> 和 <code>curValue</code> 可以是两个值之一。如果调用 <code>reduceRight()</code> 时提供了 <code>initialValue</code> 参数，则 <code>prevValue</code> 等于 <code>initialValue</code>，<code>curValue</code> 等于数组中的最后一个值。如果没有提供 <code>initialValue</code> 参数，则 <code>prevValue</code> 等于数组最后一个值， <code>curValue</code> 等于数组中倒数第二个值。</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">reduceRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">preValue<span class=\"token punctuation\">,</span>curValue<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> preValue <span class=\"token operator\">+</span> curValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span></code></pre>\n<p>回调将会被调用四次，每次调用的参数及返回值如下：</p>\n<p><img src=\"https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112700747-845347728.png\" alt=\"img\"></p>\n<p>如果提供一个初始值<code>initialValue</code>为<code>5</code>:</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">reduceRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">preValue<span class=\"token punctuation\">,</span>curValue<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> preValue <span class=\"token operator\">+</span> curValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 15</span></code></pre>\n<p>回调将会被调用五次，每次调用的参数及返回的值如下：</p>\n<p><img src=\"https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112743338-1377666579.png\" alt=\"img\"></p>\n<p>同样的，可以对一个数组求和，也可以使用<code>reduceRight()</code>方法:</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ruduceRight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ruduceRightSum</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduceRight</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">preValue<span class=\"token punctuation\">,</span> curValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> preValue <span class=\"token operator\">+</span> curValue<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">ruduceRightSum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'最终的值：'</span><span class=\"token operator\">+</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">ruduceSum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 21</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">timeEnd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ruduceRight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5.725ms</span></code></pre>\n<p><strong>10.find</strong></p>\n<p>find()方法返回数组中符合测试函数条件的第一个元素。否则返回undefined </p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> stu <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span>gender<span class=\"token operator\">:</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span>age<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'王小毛'</span><span class=\"token punctuation\">,</span>gender<span class=\"token operator\">:</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span>age<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span>gender<span class=\"token operator\">:</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span>age<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getStu</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'李四'</span>\n<span class=\"token punctuation\">}</span>\nstu<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>getStu<span class=\"token punctuation\">)</span> <span class=\"token comment\">//返回结果为{name: \"李四\", gender: \"男\", age: 20}</span></code></pre>\n<p>ES6方法</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">stu<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n<p><strong>11.findIndex</strong></p>\n<p>对于数组中的每个元素，<strong>findIndex</strong> 方法都会调用一次回调函数（采用升序索引顺序），直到有元素返回 <strong>true</strong>。只要有一个元素返回 true，<strong>findIndex</strong> 立即返回该返回 true 的元素的索引值。如果数组中没有任何元素返回 true，则 <strong>findIndex</strong> 返回 -1。</p>\n<p><strong>findIndex</strong> 不会改变数组对象。</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> x <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Returns an index value of 1.</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=&gt;</span> x <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Returns an index value of -1. </span></code></pre>\n<p><strong>12.keys，values，entries</strong></p>\n<p> ES6 提供三个新的方法 —— entries()，keys()和values() ——  用于遍历数组。它们都返回一个遍历器对象，可以用for…of循环进行遍历，唯一的区别是keys()是对键名的遍历、values()是对键值的遍历，entries()是对键值对的遍历</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> index <span class=\"token keyword\">of</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 0 </span>\n<span class=\"token comment\">// 1</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> elem <span class=\"token keyword\">of</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token comment\">// 'a'</span>\n<span class=\"token comment\">// 'b'</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">,</span> elem<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> elem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 0 \"a\"</span>\n<span class=\"token comment\">// 1 \"b\"</span></code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160624.jpg","length":5150,"excerpt":"","more":"<h2 id=\"数组方法\"><a href=\"#数组方法\" class=\"headerlink\" title=\"数组方法\"></a>数组方法</h2><h3 id=\"添加、移除数组元素\"><a href=\"#添加、移除数组元素\" class=\"headerlink\" title=\"添加、移除数组元素\"></a>添加、移除数组元素</h3><ul>\n<li><code>arr.push()</code>：从尾端添加元素</li>\n<li><code>arr.pop()</code>：从尾端删除元素</li>\n<li><code>arr.shift()</code>：从首端删除元素</li>\n<li><code>arr.unshift()</code>：从首端添加元素</li>\n</ul>\n<h3 id=\"splice\"><a href=\"#splice\" class=\"headerlink\" title=\"splice\"></a>splice</h3><p><code>arr.splice</code>方法可以说是处理数组的瑞士军刀。它可以做所有事情：添加，删除和插入元素。</p>\n<p>语法是</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">[</span>deleteCount<span class=\"token punctuation\">,</span>elem1<span class=\"token punctuation\">,</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>elemN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n<p><code>start</code>：开始修改的索引位置</p>\n<p><code>deleteCount</code>：删除格式</p>\n<p><code>elem1</code>：要插入的数</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"I\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"study\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"JavaScript\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"right\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"now\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 删除数组的前三项，并使用其他内容代替它们</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Let's\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr <span class=\"token punctuation\">)</span> <span class=\"token comment\">// 现在 [\"Let's\", \"dance\", \"right\", \"now\"]</span></code></pre>\n<p><strong><code>splice</code>会改变原数组，返回的是被删除的数</strong></p>\n<h3 id=\"slice\"><a href=\"#slice\" class=\"headerlink\" title=\"slice\"></a>slice</h3><p><code>arr.slice</code>方法，将从索引 <code>start</code> 到 <code>end</code>（不包括 <code>end</code>）的数组项复制到一个新的数组。语法：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n<p><code>slice</code>不会改变原数组，通常用于获取副本</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"t\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e,s（复制从位置 1 到位置 3 的元素）</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// s,t（复制从位置 -2 到尾端的元素）</span></code></pre>\n<h3 id=\"concat\"><a href=\"#concat\" class=\"headerlink\" title=\"concat\"></a>concat</h3><p><code>arr.concat</code>，创建一个新数组，连接其他数组或值</p>\n<p>语法：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span>arg2<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span></code></pre>\n<p>参数可以是数组或值</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1,2,3,4</span>\n\n<span class=\"token keyword\">let</span> arrayLike <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token string\">\"something\"</span><span class=\"token punctuation\">,</span>\n  length<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>arrayLike<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1,2,3,4,[object Object]</span></code></pre>\n<h3 id=\"indexOf-lastIndexOf和includes\"><a href=\"#indexOf-lastIndexOf和includes\" class=\"headerlink\" title=\"indexOf/lastIndexOf和includes\"></a>indexOf/lastIndexOf和includes</h3><ul>\n<li><code>arr.indexOf(item,from)</code>：从索引<code>from</code>开始搜索<code>item</code>，如果找到则返回索引，<strong>否则返回<code>-1</code></strong></li>\n<li><code>arr.lastindexOf(item,from)</code>与indexof相同，不同的是从右往左查找</li>\n<li><code>arr.includes(item, from)</code>：从索引 <code>from</code> 开始搜索 <code>item</code>，如果找到则返回 <code>true</code>，如果没找到，则返回 <code>false</code></li>\n</ul>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -1</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre>\n<p><code>indexOf</code> 和 <code>includes</code> 使用严格相等 <code>===</code> 进行比较。所以，如果我们搜索 <code>false</code>，它会准确找到 <code>false</code> 而不是数字 <code>0</code></p>\n<p>特别地</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -1（错，应该为 0）</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// true（正确）</span></code></pre>\n<h2 id=\"数组遍历方法\"><a href=\"#数组遍历方法\" class=\"headerlink\" title=\"数组遍历方法\"></a>数组遍历方法</h2><p><strong>1.for循环</strong></p>\n<p>使用临时变量，将长度缓存起来，避免重复获取数组长度，当数组较大时优化效果才会比较明显。</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>len<span class=\"token operator\">=</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span></code></pre>\n<p><strong>2.foreach循环</strong></p>\n<p>遍历数组中的每一项，没有返回值，对原数组没有影响，不支持IE</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">//1 没有返回值</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>array</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{</span><span class=\"token comment\">//执行代码})</span>\n<span class=\"token comment\">//参数：value数组中的当前项, index当前项的索引, array原始数组；</span>\n<span class=\"token comment\">//数组中有几项，那么传递进去的匿名回调函数就需要执行几次；</span></code></pre>\n<p><strong>3.map循环</strong></p>\n<p>有返回值，可以return出来</p>\n<p>map的回调函数中支持return返回值；return的是啥，相当于把数组中的这一项变为啥（并不影响原来的数组，只是相当于把原数组克隆一份，把克隆的这一份的数组中的对应项改变了）；</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//do something</span>\n    <span class=\"token keyword\">return</span>  <span class=\"token constant\">XXX</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> ary <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">var</span> res <span class=\"token operator\">=</span> ary<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>ary</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> item<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//--&gt;[120,230,240,420,10]; 原数组拷贝了一份，并进行了修改</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//--&gt;[12,23,24,42,1]； 原数组并未发生变化</span></code></pre>\n<p>　</p>\n<p><strong>4.forof遍历</strong></p>\n<p>可以正确响应break、continue和return语句</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> value <span class=\"token keyword\">of</span> myArray<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>　　</p>\n<p><strong>5.filter遍历</strong></p>\n<p>不会改变原始数组,返回新数组</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> \n\tid<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'aa'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'bb'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> item<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n<p>转为ES5</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">var</span> newArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> item<span class=\"token operator\">&gt;</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span>  \n<span class=\"token comment\">//得到新数组 [84, 100] </span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newArr<span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">)</span></code></pre>\n<p>　　</p>\n<p><strong>6.every遍历</strong></p>\n<p>every()是对数组中的每一项运行给定函数，如果该函数对每一项返回true,则返回true。</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> item <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre>\n<p>　</p>\n<p><strong>7.some遍历</strong></p>\n<p>some()是对数组中每一项运行指定函数，如果该函数对任一项返回true，则返回true。</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token function\">functio</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n returnitem <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n <span class=\"token comment\">//true</span></code></pre>\n<p>　　</p>\n<p><strong>8.reduce</strong></p>\n<p><code>reduce()</code>方法接收一个函数作为累加器（accumulator），数组中的每个值（从左到右）开始缩减，最终为一个值。</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> total <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=&gt;</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//10</span></code></pre>\n<p><code>reduce</code>接受一个函数，函数有四个参数，分别是：上一次的值，当前值，当前值的索引，数组</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">previousValue<span class=\"token punctuation\">,</span> currentValue<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> previousValue <span class=\"token operator\">+</span> currentValue<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><img src=\"https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112335425-223204218.png\" alt=\"img\"></p>\n<p><code>reduce</code>还有第二个参数，我们可以把这个参数作为第一次调用<code>callback</code>时的第一个参数，上面这个例子因为没有第二个参数，所以直接从数组的第二项开始，如果我们给了第二个参数为5，那么结果就是这样的：</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">previousValue<span class=\"token punctuation\">,</span> currentValue<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span>  previousValue <span class=\"token operator\">+</span> currentValue<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>　<img src=\"https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112406091-1932166695.png\" alt=\"img\"></p>\n<p>第一次调用的<code>previousValue</code>的值就用传入的第二个参数代替，</p>\n<p><strong>9.reduceRight</strong></p>\n<p><code>reduceRight()</code>方法的功能和<code>reduce()</code>功能是一样的，不同的是<code>reduceRight()</code>从数组的末尾向前将数组中的数组项做累加。</p>\n<p><code>reduceRight()</code>首次调用回调函数<code>callbackfn</code>时，<code>prevValue</code> 和 <code>curValue</code> 可以是两个值之一。如果调用 <code>reduceRight()</code> 时提供了 <code>initialValue</code> 参数，则 <code>prevValue</code> 等于 <code>initialValue</code>，<code>curValue</code> 等于数组中的最后一个值。如果没有提供 <code>initialValue</code> 参数，则 <code>prevValue</code> 等于数组最后一个值， <code>curValue</code> 等于数组中倒数第二个值。</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">reduceRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">preValue<span class=\"token punctuation\">,</span>curValue<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> preValue <span class=\"token operator\">+</span> curValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span></code></pre>\n<p>回调将会被调用四次，每次调用的参数及返回值如下：</p>\n<p><img src=\"https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112700747-845347728.png\" alt=\"img\"></p>\n<p>如果提供一个初始值<code>initialValue</code>为<code>5</code>:</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">reduceRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">preValue<span class=\"token punctuation\">,</span>curValue<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> preValue <span class=\"token operator\">+</span> curValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 15</span></code></pre>\n<p>回调将会被调用五次，每次调用的参数及返回的值如下：</p>\n<p><img src=\"https://images2018.cnblogs.com/blog/1403464/201807/1403464-20180713112743338-1377666579.png\" alt=\"img\"></p>\n<p>同样的，可以对一个数组求和，也可以使用<code>reduceRight()</code>方法:</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ruduceRight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ruduceRightSum</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduceRight</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">preValue<span class=\"token punctuation\">,</span> curValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> preValue <span class=\"token operator\">+</span> curValue<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">ruduceRightSum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'最终的值：'</span><span class=\"token operator\">+</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">ruduceSum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 21</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">timeEnd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ruduceRight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5.725ms</span></code></pre>\n<p><strong>10.find</strong></p>\n<p>find()方法返回数组中符合测试函数条件的第一个元素。否则返回undefined </p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> stu <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span>gender<span class=\"token operator\">:</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span>age<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'王小毛'</span><span class=\"token punctuation\">,</span>gender<span class=\"token operator\">:</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span>age<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span>gender<span class=\"token operator\">:</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span>age<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getStu</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'李四'</span>\n<span class=\"token punctuation\">}</span>\nstu<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>getStu<span class=\"token punctuation\">)</span> <span class=\"token comment\">//返回结果为{name: \"李四\", gender: \"男\", age: 20}</span></code></pre>\n<p>ES6方法</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\">stu<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n<p><strong>11.findIndex</strong></p>\n<p>对于数组中的每个元素，<strong>findIndex</strong> 方法都会调用一次回调函数（采用升序索引顺序），直到有元素返回 <strong>true</strong>。只要有一个元素返回 true，<strong>findIndex</strong> 立即返回该返回 true 的元素的索引值。如果数组中没有任何元素返回 true，则 <strong>findIndex</strong> 返回 -1。</p>\n<p><strong>findIndex</strong> 不会改变数组对象。</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> x <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Returns an index value of 1.</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=&gt;</span> x <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Returns an index value of -1. </span></code></pre>\n<p><strong>12.keys，values，entries</strong></p>\n<p> ES6 提供三个新的方法 —— entries()，keys()和values() ——  用于遍历数组。它们都返回一个遍历器对象，可以用for…of循环进行遍历，唯一的区别是keys()是对键名的遍历、values()是对键值的遍历，entries()是对键值对的遍历</p>\n<pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> index <span class=\"token keyword\">of</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 0 </span>\n<span class=\"token comment\">// 1</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> elem <span class=\"token keyword\">of</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token comment\">// 'a'</span>\n<span class=\"token comment\">// 'b'</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">,</span> elem<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> elem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 0 \"a\"</span>\n<span class=\"token comment\">// 1 \"b\"</span></code></pre>\n"},{"title":"时间分辨率","date":"2021-11-08T01:09:58.000Z","description":"时间分辨率基本概念","_content":"\n<h1>\n\t<span id=\"时间分辨率\">\n    \t<center>时间分辨率</center>\n    </span>\n</h1>\n\n## 1. 定义\n\n时间分辨率指传感器重复观测的最小时间间隔\n\n## 2. 理解\n\n(1) 时间分辨率越高，越能描述对象的动态变化过程\n\n(2) 时间分辨率除主要决定于飞行器的回归周期(地表全覆盖)外，还与探测器的设计等因数\n\n(3) 根据遥感系统探测周期的长短和探测目的可将时间分辨率划分为三种类型：\n\n+ 超短或短周期时间分辨率 (小时为单位 如：大气海洋物理现象)\n+ 中周期时间分辨率 (天为单位 如：作物估产)\n+ 长周期时间分辨率 (年为单位 如：湖泊消长 城市扩展)\n\n(4) 根据时间分辨率选择遥感图像时，要考虑研究对象的时间序列变化\n","source":"_posts/时间分辨率.md","raw":"---\ntitle: 时间分辨率\ndate: 2021-11-08 09:09:58\ntags: 遥感\ncategories: [GIS,遥感图像特征,时间分辨率]\ndescription: 时间分辨率基本概念\n---\n\n<h1>\n\t<span id=\"时间分辨率\">\n    \t<center>时间分辨率</center>\n    </span>\n</h1>\n\n## 1. 定义\n\n时间分辨率指传感器重复观测的最小时间间隔\n\n## 2. 理解\n\n(1) 时间分辨率越高，越能描述对象的动态变化过程\n\n(2) 时间分辨率除主要决定于飞行器的回归周期(地表全覆盖)外，还与探测器的设计等因数\n\n(3) 根据遥感系统探测周期的长短和探测目的可将时间分辨率划分为三种类型：\n\n+ 超短或短周期时间分辨率 (小时为单位 如：大气海洋物理现象)\n+ 中周期时间分辨率 (天为单位 如：作物估产)\n+ 长周期时间分辨率 (年为单位 如：湖泊消长 城市扩展)\n\n(4) 根据时间分辨率选择遥感图像时，要考虑研究对象的时间序列变化\n","slug":"时间分辨率","published":1,"updated":"2022-08-16T12:58:35.227Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt430041jsvk2pxearlf","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1>\n    <span id=\"时间分辨率\">\n        <center>时间分辨率</center>\n    </span>\n</h1>\n\n<h2 id=\"1-定义\"><a href=\"#1-定义\" class=\"headerlink\" title=\"1. 定义\"></a>1. 定义</h2><p>时间分辨率指传感器重复观测的最小时间间隔</p>\n<h2 id=\"2-理解\"><a href=\"#2-理解\" class=\"headerlink\" title=\"2. 理解\"></a>2. 理解</h2><p>(1) 时间分辨率越高，越能描述对象的动态变化过程</p>\n<p>(2) 时间分辨率除主要决定于飞行器的回归周期(地表全覆盖)外，还与探测器的设计等因数</p>\n<p>(3) 根据遥感系统探测周期的长短和探测目的可将时间分辨率划分为三种类型：</p>\n<ul>\n<li>超短或短周期时间分辨率 (小时为单位 如：大气海洋物理现象)</li>\n<li>中周期时间分辨率 (天为单位 如：作物估产)</li>\n<li>长周期时间分辨率 (年为单位 如：湖泊消长 城市扩展)</li>\n</ul>\n<p>(4) 根据时间分辨率选择遥感图像时，要考虑研究对象的时间序列变化</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160700.webp","length":239,"excerpt":"","more":"<h1>\n    <span id=\"时间分辨率\">\n        <center>时间分辨率</center>\n    </span>\n</h1>\n\n<h2 id=\"1-定义\"><a href=\"#1-定义\" class=\"headerlink\" title=\"1. 定义\"></a>1. 定义</h2><p>时间分辨率指传感器重复观测的最小时间间隔</p>\n<h2 id=\"2-理解\"><a href=\"#2-理解\" class=\"headerlink\" title=\"2. 理解\"></a>2. 理解</h2><p>(1) 时间分辨率越高，越能描述对象的动态变化过程</p>\n<p>(2) 时间分辨率除主要决定于飞行器的回归周期(地表全覆盖)外，还与探测器的设计等因数</p>\n<p>(3) 根据遥感系统探测周期的长短和探测目的可将时间分辨率划分为三种类型：</p>\n<ul>\n<li>超短或短周期时间分辨率 (小时为单位 如：大气海洋物理现象)</li>\n<li>中周期时间分辨率 (天为单位 如：作物估产)</li>\n<li>长周期时间分辨率 (年为单位 如：湖泊消长 城市扩展)</li>\n</ul>\n<p>(4) 根据时间分辨率选择遥感图像时，要考虑研究对象的时间序列变化</p>\n"},{"title":"暴力破解防护","date":"2021-12-27T03:33:27.000Z","description":"linux服务器防暴力破解的基本方法","_content":"\n## 定义\n\n什么是暴力破解，简单来说就是对一个服务器进行无数次尝试登陆，并用不同的密码进行登陆直到可以登陆成功。暴力破解的基本步骤可以分为以下几步：　　　　　　\n\n**1. 找到对应的linux服务器   Ip地址**\n\n2.扫描端口号：22   nmap扫描端口\n\n3.开始暴力破解: **一般root 破解你的密码 登录你的机器破坏盗取你的重要的数据**\n\n## 方法\n\n1. 将密码设置复杂，长度大于8位或者最好大于14位，密码的复杂度：由大小写字母以及字符和数字组成。 0-9  a-z  A-Z  @!#$%*. 等等。\n2. 更改端口号，默认的端口是sshd(22),修改默认端口号。\n3. 不用root用户登陆(禁止root用户登陆)，使用其他用户登陆并且拥有root用户权限。\n4. sshd服务，直接编写脚本检查/var/log/secure 内登录失败次数超过某个阈值的ip并将它添加到/etc/hosts.deny（fail2ban的优点更多）\n5. 屏蔽IP\n\n### 1.设置复杂密码\n\n 密码的复杂度一定要较高点，尽量通过密钥登陆，这里介绍个密码生成工具：pwgen(需安装，用yum安装下就可以了)\n\n| **参数** | **功能描述**                                       |\n| -------- | -------------------------------------------------- |\n| **-c**   | 密码里面包含至少一个大写字母                       |\n| **-A**   | 密码里面不包含大写字母                             |\n| **-n**   | 密码里面至少包含一个数字。                         |\n| **-0**   | 密码中不包含数字                                   |\n| **-y**   | 密码中至少包含一个特殊字符。                       |\n| **-s**   | 生成安全随机的密码                                 |\n| **-B**   | 密码中不包含混淆的字符，例如“1”和“I”               |\n| **-h**   | 查看帮助信息                                       |\n| **-H**   | 使用指定文件sha1哈希生成，不适用随机生成           |\n| **-C**   | 按列打印生成的随机密码                             |\n| **-1**   | 每行输出一个密码，不按列打印生成密码               |\n| **-v**   | 密码不包括元音字母或者可能被误认为是元音字母的数字 |\n\n示例:\n\n```bash\n#生成密码长度为12的包含至少一个大写字母和至少一个数字和至少一个特殊字符的10个密码，并分行显示\npwgen -c -n -y -1  12 10     \n```\n\n### 2.更改端口号\n\n我们使用的sshd服务的配置文件是在/etc/ssh/sshd_config，我们只需要将端口更改下就行了\n\n```bash\nvim /etc/ssh/sshd_config\n```\n\n![sshd](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211227114334.png)\n\n更改完之后我们需要将我们的82端口开放下。\n\n```bash\nfirewall-cmd --add-port=82/tcp --permanent \nfirewall-cmd --reload\n```\n\n　　然后重启sshd服务即可：\n\n```\nsystemctl restart sshd\n```\n\n　　访问的时候我们需要加上我们的端口号。\n\n```bash\nssh -p82  192.168.1.121\n```\n\n我们可以用nmap 扫描下我们的我们服务器看看哪些端口开放着。\n\n```bash\n[root@localhost ~]# nmap 192.168.1.121\n\nStarting Nmap 6.40 ( http://nmap.org ) at 2018-01-03 14:53 CST\nNmap scan report for li155.members.com (192.168.1.121)\nHost is up (0.070s latency).\nNot shown: 998 filtered ports\nPORT   STATE  SERVICE\n22/tcp closed ssh\n82/tcp open   xfe\n```\n\n可以看到虽然我们82端口被扫描出来了，但是是不知道它是sshd服务的。\n\n### 3.禁止root用户登陆\n\n不使用root用户名登陆，是为了增强未知用户的暴力破解强度。\n注：判断一个用户是不是超级管理员，看的是用户的ID是否为0。\n\n实例：\n要求：创建一个普通帐号，修改ID为0，成为超级管理权限\n创建新用户并设置密码：(以你的用户要求创建)\n\n```shell\nuseradd test\npasswd test\n```\n\n更改超级管理权限 vim /etc/passwd\n\t不使用root用户登录：\n\n    #原：root:x:0:0:root:/root:/bin/bash\n    #改：root:x:0:0:root:/sbin/nologin   #不让root登录系统\n\n更改指定用户为超级管理：\n\n```\n原：test:x:1002:1002::/home/test:/bin/bash\n改：test:x:0:0::/home/test:/bin/bash\t#更改改ID为0，用户变成root身份\n```\n\n### 4.**编写脚本检查/var/log/secure访问日志文件**\n\n思路：通过统计日志文件中的登陆失败的ip，并将达到阈值的ip添加到/etc/hosts.deny来拒绝某个ip的再次访问。\n\n使用crontabp实时任务，每分钟执行一次：`*/1 * * * * /bin/bash /root/protectssh/protectssh.sh`\n\n```bash\n#!/bin/bash\n#protectssh.sh\n#Prevent SSH from being hacked\n#SSH配置文件所在位置\nSSH_config='/etc/hosts.deny'\n#ssh 日志文件位置\nSSH_log='/var/log/secure'\n#记录尝试登陆超过15次且未登陆成功的ip,以及添加进黑名单的时间日志\nDeny_log='/var/lib/ssh_shell/ssh_deny.log'\n#储存所有ip及访问次数文件\nVisit_ip='/var/lib/ssh_shell/ssh_visit.txt'\n#超过设置下面次数将被添加进黑名单\nVisit_number=60\n#检查ssh日志文件是否存在\nif [ ! -e  $SSH_log ]\nthen\n  echo -e \"\\033[41;37m  ssh 日志文件不存在 请检查原因 \\033[0m\"\n  exit 1\nfi\n \nif [ ! -e \"$SSH_config.bak\" ]\nthen\n  cp $SSH_config  $SSH_config.bak\n  if [ $? -eq 0 ]\n  then\n    echo \" 备份文件成功\" >>$Deny_log\n  else\n    echo  -e\"\\033[41;37m ssh备份文件不成功  \\033[0m\"\n    exit 2\n  fi\nelse\n  echo \" 已有备份文件 \" >>$Deny_log\nfi\ncat $SSH_log |awk '/Failed/{print $(NF-3)}'|sort|uniq -c|awk '{ print $2\"===\"$1}' > $Visit_ip\necho \"---------$(date +%F_%T)------------\" >>$Deny_log\n \nfor VI  in  $(cat  $Visit_ip)\ndo\n  Number=$(echo $VI |awk -F=== '{print  $2}')\n  IP=$(echo $VI |awk -F=== '{print  $1}')\n  if  [ $Number -gt $Visit_number ]\n  then\n    grep $IP \"$SSH_config\" >/dev/null\n    if [ $? -ne  0 ]\n    then\n     echo \" sshd:$IP:deny\" >>$SSH_config\n     echo \"$IP \" >>$Deny_log\n   fi         \n fi\ndone\n```\n\n### 5.宝塔屏蔽某个ip\n\n进入宝塔管理界面点击安全，防火墙屏蔽ip\n\n### 实测效果\n\n![](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20211230145321.png)\n","source":"_posts/暴力破解防护.md","raw":"---\ntitle: 暴力破解防护\ndate: 2021-12-27 11:33:27\ntags: linux\ncategories:\ndescription: linux服务器防暴力破解的基本方法\n---\n\n## 定义\n\n什么是暴力破解，简单来说就是对一个服务器进行无数次尝试登陆，并用不同的密码进行登陆直到可以登陆成功。暴力破解的基本步骤可以分为以下几步：　　　　　　\n\n**1. 找到对应的linux服务器   Ip地址**\n\n2.扫描端口号：22   nmap扫描端口\n\n3.开始暴力破解: **一般root 破解你的密码 登录你的机器破坏盗取你的重要的数据**\n\n## 方法\n\n1. 将密码设置复杂，长度大于8位或者最好大于14位，密码的复杂度：由大小写字母以及字符和数字组成。 0-9  a-z  A-Z  @!#$%*. 等等。\n2. 更改端口号，默认的端口是sshd(22),修改默认端口号。\n3. 不用root用户登陆(禁止root用户登陆)，使用其他用户登陆并且拥有root用户权限。\n4. sshd服务，直接编写脚本检查/var/log/secure 内登录失败次数超过某个阈值的ip并将它添加到/etc/hosts.deny（fail2ban的优点更多）\n5. 屏蔽IP\n\n### 1.设置复杂密码\n\n 密码的复杂度一定要较高点，尽量通过密钥登陆，这里介绍个密码生成工具：pwgen(需安装，用yum安装下就可以了)\n\n| **参数** | **功能描述**                                       |\n| -------- | -------------------------------------------------- |\n| **-c**   | 密码里面包含至少一个大写字母                       |\n| **-A**   | 密码里面不包含大写字母                             |\n| **-n**   | 密码里面至少包含一个数字。                         |\n| **-0**   | 密码中不包含数字                                   |\n| **-y**   | 密码中至少包含一个特殊字符。                       |\n| **-s**   | 生成安全随机的密码                                 |\n| **-B**   | 密码中不包含混淆的字符，例如“1”和“I”               |\n| **-h**   | 查看帮助信息                                       |\n| **-H**   | 使用指定文件sha1哈希生成，不适用随机生成           |\n| **-C**   | 按列打印生成的随机密码                             |\n| **-1**   | 每行输出一个密码，不按列打印生成密码               |\n| **-v**   | 密码不包括元音字母或者可能被误认为是元音字母的数字 |\n\n示例:\n\n```bash\n#生成密码长度为12的包含至少一个大写字母和至少一个数字和至少一个特殊字符的10个密码，并分行显示\npwgen -c -n -y -1  12 10     \n```\n\n### 2.更改端口号\n\n我们使用的sshd服务的配置文件是在/etc/ssh/sshd_config，我们只需要将端口更改下就行了\n\n```bash\nvim /etc/ssh/sshd_config\n```\n\n![sshd](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211227114334.png)\n\n更改完之后我们需要将我们的82端口开放下。\n\n```bash\nfirewall-cmd --add-port=82/tcp --permanent \nfirewall-cmd --reload\n```\n\n　　然后重启sshd服务即可：\n\n```\nsystemctl restart sshd\n```\n\n　　访问的时候我们需要加上我们的端口号。\n\n```bash\nssh -p82  192.168.1.121\n```\n\n我们可以用nmap 扫描下我们的我们服务器看看哪些端口开放着。\n\n```bash\n[root@localhost ~]# nmap 192.168.1.121\n\nStarting Nmap 6.40 ( http://nmap.org ) at 2018-01-03 14:53 CST\nNmap scan report for li155.members.com (192.168.1.121)\nHost is up (0.070s latency).\nNot shown: 998 filtered ports\nPORT   STATE  SERVICE\n22/tcp closed ssh\n82/tcp open   xfe\n```\n\n可以看到虽然我们82端口被扫描出来了，但是是不知道它是sshd服务的。\n\n### 3.禁止root用户登陆\n\n不使用root用户名登陆，是为了增强未知用户的暴力破解强度。\n注：判断一个用户是不是超级管理员，看的是用户的ID是否为0。\n\n实例：\n要求：创建一个普通帐号，修改ID为0，成为超级管理权限\n创建新用户并设置密码：(以你的用户要求创建)\n\n```shell\nuseradd test\npasswd test\n```\n\n更改超级管理权限 vim /etc/passwd\n\t不使用root用户登录：\n\n    #原：root:x:0:0:root:/root:/bin/bash\n    #改：root:x:0:0:root:/sbin/nologin   #不让root登录系统\n\n更改指定用户为超级管理：\n\n```\n原：test:x:1002:1002::/home/test:/bin/bash\n改：test:x:0:0::/home/test:/bin/bash\t#更改改ID为0，用户变成root身份\n```\n\n### 4.**编写脚本检查/var/log/secure访问日志文件**\n\n思路：通过统计日志文件中的登陆失败的ip，并将达到阈值的ip添加到/etc/hosts.deny来拒绝某个ip的再次访问。\n\n使用crontabp实时任务，每分钟执行一次：`*/1 * * * * /bin/bash /root/protectssh/protectssh.sh`\n\n```bash\n#!/bin/bash\n#protectssh.sh\n#Prevent SSH from being hacked\n#SSH配置文件所在位置\nSSH_config='/etc/hosts.deny'\n#ssh 日志文件位置\nSSH_log='/var/log/secure'\n#记录尝试登陆超过15次且未登陆成功的ip,以及添加进黑名单的时间日志\nDeny_log='/var/lib/ssh_shell/ssh_deny.log'\n#储存所有ip及访问次数文件\nVisit_ip='/var/lib/ssh_shell/ssh_visit.txt'\n#超过设置下面次数将被添加进黑名单\nVisit_number=60\n#检查ssh日志文件是否存在\nif [ ! -e  $SSH_log ]\nthen\n  echo -e \"\\033[41;37m  ssh 日志文件不存在 请检查原因 \\033[0m\"\n  exit 1\nfi\n \nif [ ! -e \"$SSH_config.bak\" ]\nthen\n  cp $SSH_config  $SSH_config.bak\n  if [ $? -eq 0 ]\n  then\n    echo \" 备份文件成功\" >>$Deny_log\n  else\n    echo  -e\"\\033[41;37m ssh备份文件不成功  \\033[0m\"\n    exit 2\n  fi\nelse\n  echo \" 已有备份文件 \" >>$Deny_log\nfi\ncat $SSH_log |awk '/Failed/{print $(NF-3)}'|sort|uniq -c|awk '{ print $2\"===\"$1}' > $Visit_ip\necho \"---------$(date +%F_%T)------------\" >>$Deny_log\n \nfor VI  in  $(cat  $Visit_ip)\ndo\n  Number=$(echo $VI |awk -F=== '{print  $2}')\n  IP=$(echo $VI |awk -F=== '{print  $1}')\n  if  [ $Number -gt $Visit_number ]\n  then\n    grep $IP \"$SSH_config\" >/dev/null\n    if [ $? -ne  0 ]\n    then\n     echo \" sshd:$IP:deny\" >>$SSH_config\n     echo \"$IP \" >>$Deny_log\n   fi         \n fi\ndone\n```\n\n### 5.宝塔屏蔽某个ip\n\n进入宝塔管理界面点击安全，防火墙屏蔽ip\n\n### 实测效果\n\n![](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20211230145321.png)\n","slug":"暴力破解防护","published":1,"updated":"2021-12-30T06:53:37.321Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt440043jsvkgysi0nyc","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>什么是暴力破解，简单来说就是对一个服务器进行无数次尝试登陆，并用不同的密码进行登陆直到可以登陆成功。暴力破解的基本步骤可以分为以下几步：　　　　　　</p>\n<p><strong>1. 找到对应的linux服务器   Ip地址</strong></p>\n<p>2.扫描端口号：22   nmap扫描端口</p>\n<p>3.开始暴力破解: <strong>一般root 破解你的密码 登录你的机器破坏盗取你的重要的数据</strong></p>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><ol>\n<li>将密码设置复杂，长度大于8位或者最好大于14位，密码的复杂度：由大小写字母以及字符和数字组成。 0-9  a-z  A-Z  @!#$%*. 等等。</li>\n<li>更改端口号，默认的端口是sshd(22),修改默认端口号。</li>\n<li>不用root用户登陆(禁止root用户登陆)，使用其他用户登陆并且拥有root用户权限。</li>\n<li>sshd服务，直接编写脚本检查/var/log/secure 内登录失败次数超过某个阈值的ip并将它添加到/etc/hosts.deny（fail2ban的优点更多）</li>\n<li>屏蔽IP</li>\n</ol>\n<h3 id=\"1-设置复杂密码\"><a href=\"#1-设置复杂密码\" class=\"headerlink\" title=\"1.设置复杂密码\"></a>1.设置复杂密码</h3><p> 密码的复杂度一定要较高点，尽量通过密钥登陆，这里介绍个密码生成工具：pwgen(需安装，用yum安装下就可以了)</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>参数</strong></th>\n<th><strong>功能描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>-c</strong></td>\n<td>密码里面包含至少一个大写字母</td>\n</tr>\n<tr>\n<td><strong>-A</strong></td>\n<td>密码里面不包含大写字母</td>\n</tr>\n<tr>\n<td><strong>-n</strong></td>\n<td>密码里面至少包含一个数字。</td>\n</tr>\n<tr>\n<td><strong>-0</strong></td>\n<td>密码中不包含数字</td>\n</tr>\n<tr>\n<td><strong>-y</strong></td>\n<td>密码中至少包含一个特殊字符。</td>\n</tr>\n<tr>\n<td><strong>-s</strong></td>\n<td>生成安全随机的密码</td>\n</tr>\n<tr>\n<td><strong>-B</strong></td>\n<td>密码中不包含混淆的字符，例如“1”和“I”</td>\n</tr>\n<tr>\n<td><strong>-h</strong></td>\n<td>查看帮助信息</td>\n</tr>\n<tr>\n<td><strong>-H</strong></td>\n<td>使用指定文件sha1哈希生成，不适用随机生成</td>\n</tr>\n<tr>\n<td><strong>-C</strong></td>\n<td>按列打印生成的随机密码</td>\n</tr>\n<tr>\n<td><strong>-1</strong></td>\n<td>每行输出一个密码，不按列打印生成密码</td>\n</tr>\n<tr>\n<td><strong>-v</strong></td>\n<td>密码不包括元音字母或者可能被误认为是元音字母的数字</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>示例:</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#生成密码长度为12的包含至少一个大写字母和至少一个数字和至少一个特殊字符的10个密码，并分行显示</span>\npwgen -c -n -y -1  <span class=\"token number\">12</span> <span class=\"token number\">10</span>     </code></pre>\n<h3 id=\"2-更改端口号\"><a href=\"#2-更改端口号\" class=\"headerlink\" title=\"2.更改端口号\"></a>2.更改端口号</h3><p>我们使用的sshd服务的配置文件是在/etc/ssh/sshd_config，我们只需要将端口更改下就行了</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/ssh/sshd_config</code></pre>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211227114334.png\" alt=\"sshd\"></p>\n<p>更改完之后我们需要将我们的82端口开放下。</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">firewall-cmd --add-port<span class=\"token operator\">=</span><span class=\"token number\">82</span>/tcp --permanent \nfirewall-cmd --reload</code></pre>\n<p>　　然后重启sshd服务即可：</p>\n<pre class=\"language-none\"><code class=\"language-none\">systemctl restart sshd</code></pre>\n<p>　　访问的时候我们需要加上我们的端口号。</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> -p82  <span class=\"token number\">192.168</span>.1.121</code></pre>\n<p>我们可以用nmap 扫描下我们的我们服务器看看哪些端口开放着。</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># nmap 192.168.1.121</span>\n\nStarting Nmap <span class=\"token number\">6.40</span> <span class=\"token punctuation\">(</span> http://nmap.org <span class=\"token punctuation\">)</span> at <span class=\"token number\">2018</span>-01-03 <span class=\"token number\">14</span>:53 CST\nNmap scan report <span class=\"token keyword\">for</span> li155.members.com <span class=\"token punctuation\">(</span><span class=\"token number\">192.168</span>.1.121<span class=\"token punctuation\">)</span>\nHost is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.070s latency<span class=\"token punctuation\">)</span>.\nNot shown: <span class=\"token number\">998</span> filtered ports\nPORT   STATE  SERVICE\n<span class=\"token number\">22</span>/tcp closed <span class=\"token function\">ssh</span>\n<span class=\"token number\">82</span>/tcp <span class=\"token function\">open</span>   xfe</code></pre>\n<p>可以看到虽然我们82端口被扫描出来了，但是是不知道它是sshd服务的。</p>\n<h3 id=\"3-禁止root用户登陆\"><a href=\"#3-禁止root用户登陆\" class=\"headerlink\" title=\"3.禁止root用户登陆\"></a>3.禁止root用户登陆</h3><p>不使用root用户名登陆，是为了增强未知用户的暴力破解强度。<br>注：判断一个用户是不是超级管理员，看的是用户的ID是否为0。</p>\n<p>实例：<br>要求：创建一个普通帐号，修改ID为0，成为超级管理权限<br>创建新用户并设置密码：(以你的用户要求创建)</p>\n<pre class=\"language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">useradd</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token function\">passwd</span> <span class=\"token builtin class-name\">test</span></code></pre>\n<p>更改超级管理权限 vim /etc/passwd<br>    不使用root用户登录：</p>\n<pre><code>#原：root:x:0:0:root:/root:/bin/bash\n#改：root:x:0:0:root:/sbin/nologin   #不让root登录系统\n</code></pre><p>更改指定用户为超级管理：</p>\n<pre class=\"language-none\"><code class=\"language-none\">原：test:x:1002:1002::&#x2F;home&#x2F;test:&#x2F;bin&#x2F;bash\n改：test:x:0:0::&#x2F;home&#x2F;test:&#x2F;bin&#x2F;bash\t#更改改ID为0，用户变成root身份</code></pre>\n<h3 id=\"4-编写脚本检查-var-log-secure访问日志文件\"><a href=\"#4-编写脚本检查-var-log-secure访问日志文件\" class=\"headerlink\" title=\"4.编写脚本检查/var/log/secure访问日志文件\"></a>4.<strong>编写脚本检查/var/log/secure访问日志文件</strong></h3><p>思路：通过统计日志文件中的登陆失败的ip，并将达到阈值的ip添加到/etc/hosts.deny来拒绝某个ip的再次访问。</p>\n<p>使用crontabp实时任务，每分钟执行一次：<code>*/1 * * * * /bin/bash /root/protectssh/protectssh.sh</code></p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token comment\">#protectssh.sh</span>\n<span class=\"token comment\">#Prevent SSH from being hacked</span>\n<span class=\"token comment\">#SSH配置文件所在位置</span>\n<span class=\"token assign-left variable\">SSH_config</span><span class=\"token operator\">=</span><span class=\"token string\">'/etc/hosts.deny'</span>\n<span class=\"token comment\">#ssh 日志文件位置</span>\n<span class=\"token assign-left variable\">SSH_log</span><span class=\"token operator\">=</span><span class=\"token string\">'/var/log/secure'</span>\n<span class=\"token comment\">#记录尝试登陆超过15次且未登陆成功的ip,以及添加进黑名单的时间日志</span>\n<span class=\"token assign-left variable\">Deny_log</span><span class=\"token operator\">=</span><span class=\"token string\">'/var/lib/ssh_shell/ssh_deny.log'</span>\n<span class=\"token comment\">#储存所有ip及访问次数文件</span>\n<span class=\"token assign-left variable\">Visit_ip</span><span class=\"token operator\">=</span><span class=\"token string\">'/var/lib/ssh_shell/ssh_visit.txt'</span>\n<span class=\"token comment\">#超过设置下面次数将被添加进黑名单</span>\n<span class=\"token assign-left variable\">Visit_number</span><span class=\"token operator\">=</span><span class=\"token number\">60</span>\n<span class=\"token comment\">#检查ssh日志文件是否存在</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -e  <span class=\"token variable\">$SSH_log</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[41;37m  ssh 日志文件不存在 请检查原因 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n \n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -e <span class=\"token string\">\"<span class=\"token variable\">$SSH_config</span>.bak\"</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n  <span class=\"token function\">cp</span> <span class=\"token variable\">$SSH_config</span>  <span class=\"token variable\">$SSH_config</span>.bak\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\" 备份文件成功\"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$Deny_log</span>\n  <span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span>  -e<span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[41;37m ssh备份文件不成功  <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">2</span>\n  <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">else</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\" 已有备份文件 \"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$Deny_log</span>\n<span class=\"token keyword\">fi</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$SSH_log</span> <span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token string\">'/Failed/&#123;print $(NF-3)&#125;'</span><span class=\"token operator\">|</span><span class=\"token function\">sort</span><span class=\"token operator\">|</span><span class=\"token function\">uniq</span> -c<span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token string\">'&#123; print $2\"===\"$1&#125;'</span> <span class=\"token operator\">></span> <span class=\"token variable\">$Visit_ip</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"---------<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%F_%T<span class=\"token variable\">)</span></span>------------\"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$Deny_log</span>\n \n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">VI</span>  <span class=\"token keyword\">in</span>  <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span>  $Visit_ip<span class=\"token variable\">)</span></span>\n<span class=\"token keyword\">do</span>\n  <span class=\"token assign-left variable\">Number</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $VI <span class=\"token operator\">|</span><span class=\"token function\">awk</span> -F<span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token string\">'&#123;print  $2&#125;'</span><span class=\"token variable\">)</span></span>\n  <span class=\"token assign-left variable\">IP</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $VI <span class=\"token operator\">|</span><span class=\"token function\">awk</span> -F<span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token string\">'&#123;print  $1&#125;'</span><span class=\"token variable\">)</span></span>\n  <span class=\"token keyword\">if</span>  <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Number</span> -gt <span class=\"token variable\">$Visit_number</span> <span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">then</span>\n    <span class=\"token function\">grep</span> <span class=\"token variable\">$IP</span> <span class=\"token string\">\"<span class=\"token variable\">$SSH_config</span>\"</span> <span class=\"token operator\">></span>/dev/null\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> -ne  <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">then</span>\n     <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\" sshd:<span class=\"token variable\">$IP</span>:deny\"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$SSH_config</span>\n     <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$IP</span> \"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$Deny_log</span>\n   <span class=\"token keyword\">fi</span>         \n <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">done</span></code></pre>\n<h3 id=\"5-宝塔屏蔽某个ip\"><a href=\"#5-宝塔屏蔽某个ip\" class=\"headerlink\" title=\"5.宝塔屏蔽某个ip\"></a>5.宝塔屏蔽某个ip</h3><p>进入宝塔管理界面点击安全，防火墙屏蔽ip</p>\n<h3 id=\"实测效果\"><a href=\"#实测效果\" class=\"headerlink\" title=\"实测效果\"></a>实测效果</h3><p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20211230145321.png\" alt=\"\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160624.jpg","length":2776,"excerpt":"","more":"<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>什么是暴力破解，简单来说就是对一个服务器进行无数次尝试登陆，并用不同的密码进行登陆直到可以登陆成功。暴力破解的基本步骤可以分为以下几步：　　　　　　</p>\n<p><strong>1. 找到对应的linux服务器   Ip地址</strong></p>\n<p>2.扫描端口号：22   nmap扫描端口</p>\n<p>3.开始暴力破解: <strong>一般root 破解你的密码 登录你的机器破坏盗取你的重要的数据</strong></p>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><ol>\n<li>将密码设置复杂，长度大于8位或者最好大于14位，密码的复杂度：由大小写字母以及字符和数字组成。 0-9  a-z  A-Z  @!#$%*. 等等。</li>\n<li>更改端口号，默认的端口是sshd(22),修改默认端口号。</li>\n<li>不用root用户登陆(禁止root用户登陆)，使用其他用户登陆并且拥有root用户权限。</li>\n<li>sshd服务，直接编写脚本检查/var/log/secure 内登录失败次数超过某个阈值的ip并将它添加到/etc/hosts.deny（fail2ban的优点更多）</li>\n<li>屏蔽IP</li>\n</ol>\n<h3 id=\"1-设置复杂密码\"><a href=\"#1-设置复杂密码\" class=\"headerlink\" title=\"1.设置复杂密码\"></a>1.设置复杂密码</h3><p> 密码的复杂度一定要较高点，尽量通过密钥登陆，这里介绍个密码生成工具：pwgen(需安装，用yum安装下就可以了)</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>参数</strong></th>\n<th><strong>功能描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>-c</strong></td>\n<td>密码里面包含至少一个大写字母</td>\n</tr>\n<tr>\n<td><strong>-A</strong></td>\n<td>密码里面不包含大写字母</td>\n</tr>\n<tr>\n<td><strong>-n</strong></td>\n<td>密码里面至少包含一个数字。</td>\n</tr>\n<tr>\n<td><strong>-0</strong></td>\n<td>密码中不包含数字</td>\n</tr>\n<tr>\n<td><strong>-y</strong></td>\n<td>密码中至少包含一个特殊字符。</td>\n</tr>\n<tr>\n<td><strong>-s</strong></td>\n<td>生成安全随机的密码</td>\n</tr>\n<tr>\n<td><strong>-B</strong></td>\n<td>密码中不包含混淆的字符，例如“1”和“I”</td>\n</tr>\n<tr>\n<td><strong>-h</strong></td>\n<td>查看帮助信息</td>\n</tr>\n<tr>\n<td><strong>-H</strong></td>\n<td>使用指定文件sha1哈希生成，不适用随机生成</td>\n</tr>\n<tr>\n<td><strong>-C</strong></td>\n<td>按列打印生成的随机密码</td>\n</tr>\n<tr>\n<td><strong>-1</strong></td>\n<td>每行输出一个密码，不按列打印生成密码</td>\n</tr>\n<tr>\n<td><strong>-v</strong></td>\n<td>密码不包括元音字母或者可能被误认为是元音字母的数字</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>示例:</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#生成密码长度为12的包含至少一个大写字母和至少一个数字和至少一个特殊字符的10个密码，并分行显示</span>\npwgen -c -n -y -1  <span class=\"token number\">12</span> <span class=\"token number\">10</span>     </code></pre>\n<h3 id=\"2-更改端口号\"><a href=\"#2-更改端口号\" class=\"headerlink\" title=\"2.更改端口号\"></a>2.更改端口号</h3><p>我们使用的sshd服务的配置文件是在/etc/ssh/sshd_config，我们只需要将端口更改下就行了</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/ssh/sshd_config</code></pre>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211227114334.png\" alt=\"sshd\"></p>\n<p>更改完之后我们需要将我们的82端口开放下。</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">firewall-cmd --add-port<span class=\"token operator\">=</span><span class=\"token number\">82</span>/tcp --permanent \nfirewall-cmd --reload</code></pre>\n<p>　　然后重启sshd服务即可：</p>\n<pre class=\"language-none\"><code class=\"language-none\">systemctl restart sshd</code></pre>\n<p>　　访问的时候我们需要加上我们的端口号。</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> -p82  <span class=\"token number\">192.168</span>.1.121</code></pre>\n<p>我们可以用nmap 扫描下我们的我们服务器看看哪些端口开放着。</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># nmap 192.168.1.121</span>\n\nStarting Nmap <span class=\"token number\">6.40</span> <span class=\"token punctuation\">(</span> http://nmap.org <span class=\"token punctuation\">)</span> at <span class=\"token number\">2018</span>-01-03 <span class=\"token number\">14</span>:53 CST\nNmap scan report <span class=\"token keyword\">for</span> li155.members.com <span class=\"token punctuation\">(</span><span class=\"token number\">192.168</span>.1.121<span class=\"token punctuation\">)</span>\nHost is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.070s latency<span class=\"token punctuation\">)</span>.\nNot shown: <span class=\"token number\">998</span> filtered ports\nPORT   STATE  SERVICE\n<span class=\"token number\">22</span>/tcp closed <span class=\"token function\">ssh</span>\n<span class=\"token number\">82</span>/tcp <span class=\"token function\">open</span>   xfe</code></pre>\n<p>可以看到虽然我们82端口被扫描出来了，但是是不知道它是sshd服务的。</p>\n<h3 id=\"3-禁止root用户登陆\"><a href=\"#3-禁止root用户登陆\" class=\"headerlink\" title=\"3.禁止root用户登陆\"></a>3.禁止root用户登陆</h3><p>不使用root用户名登陆，是为了增强未知用户的暴力破解强度。<br>注：判断一个用户是不是超级管理员，看的是用户的ID是否为0。</p>\n<p>实例：<br>要求：创建一个普通帐号，修改ID为0，成为超级管理权限<br>创建新用户并设置密码：(以你的用户要求创建)</p>\n<pre class=\"language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">useradd</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token function\">passwd</span> <span class=\"token builtin class-name\">test</span></code></pre>\n<p>更改超级管理权限 vim /etc/passwd<br>    不使用root用户登录：</p>\n<pre><code>#原：root:x:0:0:root:/root:/bin/bash\n#改：root:x:0:0:root:/sbin/nologin   #不让root登录系统\n</code></pre><p>更改指定用户为超级管理：</p>\n<pre class=\"language-none\"><code class=\"language-none\">原：test:x:1002:1002::&#x2F;home&#x2F;test:&#x2F;bin&#x2F;bash\n改：test:x:0:0::&#x2F;home&#x2F;test:&#x2F;bin&#x2F;bash\t#更改改ID为0，用户变成root身份</code></pre>\n<h3 id=\"4-编写脚本检查-var-log-secure访问日志文件\"><a href=\"#4-编写脚本检查-var-log-secure访问日志文件\" class=\"headerlink\" title=\"4.编写脚本检查/var/log/secure访问日志文件\"></a>4.<strong>编写脚本检查/var/log/secure访问日志文件</strong></h3><p>思路：通过统计日志文件中的登陆失败的ip，并将达到阈值的ip添加到/etc/hosts.deny来拒绝某个ip的再次访问。</p>\n<p>使用crontabp实时任务，每分钟执行一次：<code>*/1 * * * * /bin/bash /root/protectssh/protectssh.sh</code></p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token comment\">#protectssh.sh</span>\n<span class=\"token comment\">#Prevent SSH from being hacked</span>\n<span class=\"token comment\">#SSH配置文件所在位置</span>\n<span class=\"token assign-left variable\">SSH_config</span><span class=\"token operator\">=</span><span class=\"token string\">'/etc/hosts.deny'</span>\n<span class=\"token comment\">#ssh 日志文件位置</span>\n<span class=\"token assign-left variable\">SSH_log</span><span class=\"token operator\">=</span><span class=\"token string\">'/var/log/secure'</span>\n<span class=\"token comment\">#记录尝试登陆超过15次且未登陆成功的ip,以及添加进黑名单的时间日志</span>\n<span class=\"token assign-left variable\">Deny_log</span><span class=\"token operator\">=</span><span class=\"token string\">'/var/lib/ssh_shell/ssh_deny.log'</span>\n<span class=\"token comment\">#储存所有ip及访问次数文件</span>\n<span class=\"token assign-left variable\">Visit_ip</span><span class=\"token operator\">=</span><span class=\"token string\">'/var/lib/ssh_shell/ssh_visit.txt'</span>\n<span class=\"token comment\">#超过设置下面次数将被添加进黑名单</span>\n<span class=\"token assign-left variable\">Visit_number</span><span class=\"token operator\">=</span><span class=\"token number\">60</span>\n<span class=\"token comment\">#检查ssh日志文件是否存在</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -e  <span class=\"token variable\">$SSH_log</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[41;37m  ssh 日志文件不存在 请检查原因 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n \n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -e <span class=\"token string\">\"<span class=\"token variable\">$SSH_config</span>.bak\"</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n  <span class=\"token function\">cp</span> <span class=\"token variable\">$SSH_config</span>  <span class=\"token variable\">$SSH_config</span>.bak\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\" 备份文件成功\"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$Deny_log</span>\n  <span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span>  -e<span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[41;37m ssh备份文件不成功  <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">2</span>\n  <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">else</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\" 已有备份文件 \"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$Deny_log</span>\n<span class=\"token keyword\">fi</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$SSH_log</span> <span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token string\">'/Failed/&#123;print $(NF-3)&#125;'</span><span class=\"token operator\">|</span><span class=\"token function\">sort</span><span class=\"token operator\">|</span><span class=\"token function\">uniq</span> -c<span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token string\">'&#123; print $2\"===\"$1&#125;'</span> <span class=\"token operator\">></span> <span class=\"token variable\">$Visit_ip</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"---------<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%F_%T<span class=\"token variable\">)</span></span>------------\"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$Deny_log</span>\n \n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">VI</span>  <span class=\"token keyword\">in</span>  <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span>  $Visit_ip<span class=\"token variable\">)</span></span>\n<span class=\"token keyword\">do</span>\n  <span class=\"token assign-left variable\">Number</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $VI <span class=\"token operator\">|</span><span class=\"token function\">awk</span> -F<span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token string\">'&#123;print  $2&#125;'</span><span class=\"token variable\">)</span></span>\n  <span class=\"token assign-left variable\">IP</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $VI <span class=\"token operator\">|</span><span class=\"token function\">awk</span> -F<span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token string\">'&#123;print  $1&#125;'</span><span class=\"token variable\">)</span></span>\n  <span class=\"token keyword\">if</span>  <span class=\"token punctuation\">[</span> <span class=\"token variable\">$Number</span> -gt <span class=\"token variable\">$Visit_number</span> <span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">then</span>\n    <span class=\"token function\">grep</span> <span class=\"token variable\">$IP</span> <span class=\"token string\">\"<span class=\"token variable\">$SSH_config</span>\"</span> <span class=\"token operator\">></span>/dev/null\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> -ne  <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">then</span>\n     <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\" sshd:<span class=\"token variable\">$IP</span>:deny\"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$SSH_config</span>\n     <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$IP</span> \"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$Deny_log</span>\n   <span class=\"token keyword\">fi</span>         \n <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">done</span></code></pre>\n<h3 id=\"5-宝塔屏蔽某个ip\"><a href=\"#5-宝塔屏蔽某个ip\" class=\"headerlink\" title=\"5.宝塔屏蔽某个ip\"></a>5.宝塔屏蔽某个ip</h3><p>进入宝塔管理界面点击安全，防火墙屏蔽ip</p>\n<h3 id=\"实测效果\"><a href=\"#实测效果\" class=\"headerlink\" title=\"实测效果\"></a>实测效果</h3><p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20211230145321.png\" alt=\"\"></p>\n"},{"title":"空间分析与GIS","date":"2021-11-10T10:20:49.000Z","mathjax":true,"description":"空间分析基本概念","_content":"\n**地理学第一定律，即地理事物或属性在空间分布上互为相关，存在聚集、随机、规则分布**\n\n# <span id=\"基本概念\">基本概念</span>\n\n## 1. 空间\n\n指维度上的扩展或延续\n\n## 2. 地理空间\n\n现实中的地理空间：具有空间参考信息的地理实体或地理现象发生、发展的时空位置集是GIS表达和研究的对象区域\n\nGIS中的地理空间：绝对空间 + 相对空间\n\n绝对空间：具有属性描述的空间几何位置的集合，由一系列不同位置的空间坐标组成，来源于地球坐标系中的绝对坐标\n\n相对空间：由不同实体之间的空间关系构成，根据实体之间的空间关系及推理机制定义\n\n综合定义：指**球面坐标系**中或者经过**投影变换后**在**笛卡尔坐标系**中的地球表达特征空间。是地理空间在信息层面的抽象表达\n\nGIS的基本原则:同区域的不同图层或者相邻图层在空间上必须相匹配，否则将会出现明显的错误\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211116220555.png)\n\n\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211121223508.png)\n\n## 3. 分析空间\n\n用于分析实际应用问题的二维或三维范围，即研究范围\n\n## 4. 工作空间\n\n计算机的**文件系统中的工作路径**。\n\n## 5.地理空间分析\n\n### 1.空间分析概念\n\n> 空间分析是对空间**信息的获取**\n>\n> 空间分析是**对空间问题的求解**，获取空间信息是**解决空间问题**的**必要手段**\n>\n> 空间分析是指在**计算机技术**的支撑下，提取地理对象**在位置、属性、关系**等方面的信息，以支持特定的空间问题的求解\n\n### 2. 空间分析内容\n\n+ 空间数据操作\n  + 主要是指在GIS中基于空间对象几何特征进行的**拓扑分析，叠加分析，距离，面积，路径计算，以及基于空间关系的空间查询等**；对于属性数据则主要表现为地图可视化操作\n+ 空间数据分析\n  + 一般是指空间数据的**描述性和探索性分析**技术和方法，特别是对于大规模数据集，通过将数据图形化或地图化的探索性分析技术，研究数据中潜在的模式，异常等，为后续分析做准备，是所有空间分析过程中的首要一环\n+ 空间统计分析\n  + 空间自相关(莫兰指数)目的是确定某一变量是否在空间上相关，其相关程度如何\n  + 空间自相关系数常用来定量地描述事物在空间上的依赖关系\n  + 用**统计的方法**描述和解释空间数据的性质，以及数据对于统计模型是否典型或是否所期望的。由于空间数据具有空间自相关性，这一特性违背了经典统计理论关于数据独立性的假设，因此需要专门用于空间数据分析的空间统计方法\n  + 如果某一变量的值随着测定距离的缩小而变得更相似，这一变量呈空间**正相关**\n  + 若所测值随距离的缩小而更为不同，则称之为空间**负相关**\n  + 若所测值不表现出任何空间依赖关系，那么，这一变量表现出空间若所测值不表现出任何空间依赖关系，那么，这一变量表现出空**间不相关性或空间随机性**\n+ 空间建模\n  + 主要是指依据某些理论和假设，建立模型描述空间现象的**分布模式，预测空间过程及结果**\n\n### 3. 空间分析研究的内容\n\n+ 空间分析理论\n+ 空间分析方法\n+ 空间分析应用\n\n### 4. 与一般数据分析差别\n\n+ 揭示空间规律和空间机制\n+ 描述的是空间过程\n\n## 1. 地理空间分析的重要性\n\n## 2. 地理空间分析的基本内容\n\n+ 空间格局\n+ 空间位置：空间物体的**个体定位**信息，通过空间坐标系传递\n+ 空间分布：同类空间事物的**群体定位**信息\n+ 空间形态：运用空间问题的**几何特征**定量描述\n+ 空间关系：涉及空间属性的关系\n  + 距离关系：空间对象之间的空间距离\n  + 方位关系：俩空间对象之间距离所形成的方位角\n  + 拓扑关系：拓扑属性是指图形(研究对象)在连续变形的条件下，保持不变的整体性质。拓扑关系是指空间对象之间的拓扑属性，具体的拓扑关系可包括：相邻、包含、相交等\n  + 空间相关：场对象模型中，空间两点值的大小与两点之间距离之间的关系服从地理学第一定律，即从统计角度上讲，空间俩点之间的距离越近，其相似度就越高\n  + 空间关联：在空间上不连续的两个或多个对象，它们的属性存在着对应的关系。\n  + 空间配置：某种资源(水﹑电﹑资金等）在不同对象或对象不同部分的分配关系。\n  + 空间过程关系\n  + 空间尺度：空间尺度是指观察者从高分辨率到低分辨率或从相反方向变化观察空间对象时所的呈现出的规律，那么空间对象在不同尺度上的关系就可被认为是空间尺度关系。**空间对象所表现出的特征往往取决于观察的尺度**因此，空间尺度还被称为空间数据的“第四维”。\n+ 空间过程：空间对象在空间和时间中所留下的轨迹，这种轨迹是时空要素的耦合，它反映了空间对象的属性的时空耦合关系。\n\n## 3. <span id=\"空间分析的一般过程\">地理空间分析的基本步骤</span>\n\n1. 确定问题\n2. 选择分析工具\n3. 准备空间数据\n4. 制定空间分析流程\n5. 展示并解释分析结果\n\n## <span id=\"空间分析任务\">空间分析的基本任务</span>\n\n+ 基本任务\n\n  > 获取空间信息$\\rightarrow$解决空间问题\n\n+ 5类具体任务\n  + 位置分析\n    + 某一事物或现象在什么位置、在特定的位置有什么和是什么等\n  + 条件分析\n    + 符合某些条件的地理对象是什么、在哪里等问题\n  + 变化趋势分析\n    + 地理对象随时间变化而变化$\\rightarrow$预测未来的可能状况(根本目的)$\\rightarrow$发生机理和变化因子$\\rightarrow$做出科学的决策\n  + 模式认知\n    + 地理对象实体或对象之间的空间关系模式、地球系统内部各要素之间或各子系统之间的关系模式等\n  + 模拟与预测\n    + 对未发生或已发生的地理事件、现象、规律进行演变和反馈\n\n## 讨论\n\n![数字化纸质地图](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211110184415.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211110184540.png)\n\n## 目录\n\n| 章节   | 内容                                                   |\n| ------ | ------------------------------------------------------ |\n| 第一章 | <a href=\"#基本概念\">空间分析与GIS</a>                  |\n| 第二章 | <a href=\"../空间特征与空间问题\">空间特征与空间问题</a> |\n| 第三章 | <a href=\"../空间量算与数据探测\">空间量算与数据探测</a> |\n| 第四章 | <a href=\"../位置与几何关系分析\">位置与几何关系分析</a> |\n| 第五章 | <a href=\"../空间相关性分析\">空间相关性分析</a>         |\n| 第六章 | <a href=\"../表面与三维空间分析\">表面与三维空间分析</a> |\n\n","source":"_posts/空间分析与GIS.md","raw":"---\ntitle: 空间分析与GIS\ndate: 2021-11-10 18:20:49\ntags: GIS空间分析\nmathjax: true\ncategories: [GIS,GIS空间分析,空间分析与GIS]\ndescription: 空间分析基本概念\n---\n\n**地理学第一定律，即地理事物或属性在空间分布上互为相关，存在聚集、随机、规则分布**\n\n# <span id=\"基本概念\">基本概念</span>\n\n## 1. 空间\n\n指维度上的扩展或延续\n\n## 2. 地理空间\n\n现实中的地理空间：具有空间参考信息的地理实体或地理现象发生、发展的时空位置集是GIS表达和研究的对象区域\n\nGIS中的地理空间：绝对空间 + 相对空间\n\n绝对空间：具有属性描述的空间几何位置的集合，由一系列不同位置的空间坐标组成，来源于地球坐标系中的绝对坐标\n\n相对空间：由不同实体之间的空间关系构成，根据实体之间的空间关系及推理机制定义\n\n综合定义：指**球面坐标系**中或者经过**投影变换后**在**笛卡尔坐标系**中的地球表达特征空间。是地理空间在信息层面的抽象表达\n\nGIS的基本原则:同区域的不同图层或者相邻图层在空间上必须相匹配，否则将会出现明显的错误\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211116220555.png)\n\n\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211121223508.png)\n\n## 3. 分析空间\n\n用于分析实际应用问题的二维或三维范围，即研究范围\n\n## 4. 工作空间\n\n计算机的**文件系统中的工作路径**。\n\n## 5.地理空间分析\n\n### 1.空间分析概念\n\n> 空间分析是对空间**信息的获取**\n>\n> 空间分析是**对空间问题的求解**，获取空间信息是**解决空间问题**的**必要手段**\n>\n> 空间分析是指在**计算机技术**的支撑下，提取地理对象**在位置、属性、关系**等方面的信息，以支持特定的空间问题的求解\n\n### 2. 空间分析内容\n\n+ 空间数据操作\n  + 主要是指在GIS中基于空间对象几何特征进行的**拓扑分析，叠加分析，距离，面积，路径计算，以及基于空间关系的空间查询等**；对于属性数据则主要表现为地图可视化操作\n+ 空间数据分析\n  + 一般是指空间数据的**描述性和探索性分析**技术和方法，特别是对于大规模数据集，通过将数据图形化或地图化的探索性分析技术，研究数据中潜在的模式，异常等，为后续分析做准备，是所有空间分析过程中的首要一环\n+ 空间统计分析\n  + 空间自相关(莫兰指数)目的是确定某一变量是否在空间上相关，其相关程度如何\n  + 空间自相关系数常用来定量地描述事物在空间上的依赖关系\n  + 用**统计的方法**描述和解释空间数据的性质，以及数据对于统计模型是否典型或是否所期望的。由于空间数据具有空间自相关性，这一特性违背了经典统计理论关于数据独立性的假设，因此需要专门用于空间数据分析的空间统计方法\n  + 如果某一变量的值随着测定距离的缩小而变得更相似，这一变量呈空间**正相关**\n  + 若所测值随距离的缩小而更为不同，则称之为空间**负相关**\n  + 若所测值不表现出任何空间依赖关系，那么，这一变量表现出空间若所测值不表现出任何空间依赖关系，那么，这一变量表现出空**间不相关性或空间随机性**\n+ 空间建模\n  + 主要是指依据某些理论和假设，建立模型描述空间现象的**分布模式，预测空间过程及结果**\n\n### 3. 空间分析研究的内容\n\n+ 空间分析理论\n+ 空间分析方法\n+ 空间分析应用\n\n### 4. 与一般数据分析差别\n\n+ 揭示空间规律和空间机制\n+ 描述的是空间过程\n\n## 1. 地理空间分析的重要性\n\n## 2. 地理空间分析的基本内容\n\n+ 空间格局\n+ 空间位置：空间物体的**个体定位**信息，通过空间坐标系传递\n+ 空间分布：同类空间事物的**群体定位**信息\n+ 空间形态：运用空间问题的**几何特征**定量描述\n+ 空间关系：涉及空间属性的关系\n  + 距离关系：空间对象之间的空间距离\n  + 方位关系：俩空间对象之间距离所形成的方位角\n  + 拓扑关系：拓扑属性是指图形(研究对象)在连续变形的条件下，保持不变的整体性质。拓扑关系是指空间对象之间的拓扑属性，具体的拓扑关系可包括：相邻、包含、相交等\n  + 空间相关：场对象模型中，空间两点值的大小与两点之间距离之间的关系服从地理学第一定律，即从统计角度上讲，空间俩点之间的距离越近，其相似度就越高\n  + 空间关联：在空间上不连续的两个或多个对象，它们的属性存在着对应的关系。\n  + 空间配置：某种资源(水﹑电﹑资金等）在不同对象或对象不同部分的分配关系。\n  + 空间过程关系\n  + 空间尺度：空间尺度是指观察者从高分辨率到低分辨率或从相反方向变化观察空间对象时所的呈现出的规律，那么空间对象在不同尺度上的关系就可被认为是空间尺度关系。**空间对象所表现出的特征往往取决于观察的尺度**因此，空间尺度还被称为空间数据的“第四维”。\n+ 空间过程：空间对象在空间和时间中所留下的轨迹，这种轨迹是时空要素的耦合，它反映了空间对象的属性的时空耦合关系。\n\n## 3. <span id=\"空间分析的一般过程\">地理空间分析的基本步骤</span>\n\n1. 确定问题\n2. 选择分析工具\n3. 准备空间数据\n4. 制定空间分析流程\n5. 展示并解释分析结果\n\n## <span id=\"空间分析任务\">空间分析的基本任务</span>\n\n+ 基本任务\n\n  > 获取空间信息$\\rightarrow$解决空间问题\n\n+ 5类具体任务\n  + 位置分析\n    + 某一事物或现象在什么位置、在特定的位置有什么和是什么等\n  + 条件分析\n    + 符合某些条件的地理对象是什么、在哪里等问题\n  + 变化趋势分析\n    + 地理对象随时间变化而变化$\\rightarrow$预测未来的可能状况(根本目的)$\\rightarrow$发生机理和变化因子$\\rightarrow$做出科学的决策\n  + 模式认知\n    + 地理对象实体或对象之间的空间关系模式、地球系统内部各要素之间或各子系统之间的关系模式等\n  + 模拟与预测\n    + 对未发生或已发生的地理事件、现象、规律进行演变和反馈\n\n## 讨论\n\n![数字化纸质地图](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211110184415.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211110184540.png)\n\n## 目录\n\n| 章节   | 内容                                                   |\n| ------ | ------------------------------------------------------ |\n| 第一章 | <a href=\"#基本概念\">空间分析与GIS</a>                  |\n| 第二章 | <a href=\"../空间特征与空间问题\">空间特征与空间问题</a> |\n| 第三章 | <a href=\"../空间量算与数据探测\">空间量算与数据探测</a> |\n| 第四章 | <a href=\"../位置与几何关系分析\">位置与几何关系分析</a> |\n| 第五章 | <a href=\"../空间相关性分析\">空间相关性分析</a>         |\n| 第六章 | <a href=\"../表面与三维空间分析\">表面与三维空间分析</a> |\n\n","slug":"空间分析与GIS","published":1,"updated":"2021-12-27T08:07:03.225Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt450047jsvkcxh7bayk","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>地理学第一定律，即地理事物或属性在空间分布上互为相关，存在聚集、随机、规则分布</strong></p>\n<h1 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a><span id=\"基本概念\">基本概念</span></h1><h2 id=\"1-空间\"><a href=\"#1-空间\" class=\"headerlink\" title=\"1. 空间\"></a>1. 空间</h2><p>指维度上的扩展或延续</p>\n<h2 id=\"2-地理空间\"><a href=\"#2-地理空间\" class=\"headerlink\" title=\"2. 地理空间\"></a>2. 地理空间</h2><p>现实中的地理空间：具有空间参考信息的地理实体或地理现象发生、发展的时空位置集是GIS表达和研究的对象区域</p>\n<p>GIS中的地理空间：绝对空间 + 相对空间</p>\n<p>绝对空间：具有属性描述的空间几何位置的集合，由一系列不同位置的空间坐标组成，来源于地球坐标系中的绝对坐标</p>\n<p>相对空间：由不同实体之间的空间关系构成，根据实体之间的空间关系及推理机制定义</p>\n<p>综合定义：指<strong>球面坐标系</strong>中或者经过<strong>投影变换后</strong>在<strong>笛卡尔坐标系</strong>中的地球表达特征空间。是地理空间在信息层面的抽象表达</p>\n<p>GIS的基本原则:同区域的不同图层或者相邻图层在空间上必须相匹配，否则将会出现明显的错误</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211116220555.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211121223508.png\" alt=\"\"></p>\n<h2 id=\"3-分析空间\"><a href=\"#3-分析空间\" class=\"headerlink\" title=\"3. 分析空间\"></a>3. 分析空间</h2><p>用于分析实际应用问题的二维或三维范围，即研究范围</p>\n<h2 id=\"4-工作空间\"><a href=\"#4-工作空间\" class=\"headerlink\" title=\"4. 工作空间\"></a>4. 工作空间</h2><p>计算机的<strong>文件系统中的工作路径</strong>。</p>\n<h2 id=\"5-地理空间分析\"><a href=\"#5-地理空间分析\" class=\"headerlink\" title=\"5.地理空间分析\"></a>5.地理空间分析</h2><h3 id=\"1-空间分析概念\"><a href=\"#1-空间分析概念\" class=\"headerlink\" title=\"1.空间分析概念\"></a>1.空间分析概念</h3><blockquote>\n<p>空间分析是对空间<strong>信息的获取</strong></p>\n<p>空间分析是<strong>对空间问题的求解</strong>，获取空间信息是<strong>解决空间问题</strong>的<strong>必要手段</strong></p>\n<p>空间分析是指在<strong>计算机技术</strong>的支撑下，提取地理对象<strong>在位置、属性、关系</strong>等方面的信息，以支持特定的空间问题的求解</p>\n</blockquote>\n<h3 id=\"2-空间分析内容\"><a href=\"#2-空间分析内容\" class=\"headerlink\" title=\"2. 空间分析内容\"></a>2. 空间分析内容</h3><ul>\n<li>空间数据操作<ul>\n<li>主要是指在GIS中基于空间对象几何特征进行的<strong>拓扑分析，叠加分析，距离，面积，路径计算，以及基于空间关系的空间查询等</strong>；对于属性数据则主要表现为地图可视化操作</li>\n</ul>\n</li>\n<li>空间数据分析<ul>\n<li>一般是指空间数据的<strong>描述性和探索性分析</strong>技术和方法，特别是对于大规模数据集，通过将数据图形化或地图化的探索性分析技术，研究数据中潜在的模式，异常等，为后续分析做准备，是所有空间分析过程中的首要一环</li>\n</ul>\n</li>\n<li>空间统计分析<ul>\n<li>空间自相关(莫兰指数)目的是确定某一变量是否在空间上相关，其相关程度如何</li>\n<li>空间自相关系数常用来定量地描述事物在空间上的依赖关系</li>\n<li>用<strong>统计的方法</strong>描述和解释空间数据的性质，以及数据对于统计模型是否典型或是否所期望的。由于空间数据具有空间自相关性，这一特性违背了经典统计理论关于数据独立性的假设，因此需要专门用于空间数据分析的空间统计方法</li>\n<li>如果某一变量的值随着测定距离的缩小而变得更相似，这一变量呈空间<strong>正相关</strong></li>\n<li>若所测值随距离的缩小而更为不同，则称之为空间<strong>负相关</strong></li>\n<li>若所测值不表现出任何空间依赖关系，那么，这一变量表现出空间若所测值不表现出任何空间依赖关系，那么，这一变量表现出空<strong>间不相关性或空间随机性</strong></li>\n</ul>\n</li>\n<li>空间建模<ul>\n<li>主要是指依据某些理论和假设，建立模型描述空间现象的<strong>分布模式，预测空间过程及结果</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-空间分析研究的内容\"><a href=\"#3-空间分析研究的内容\" class=\"headerlink\" title=\"3. 空间分析研究的内容\"></a>3. 空间分析研究的内容</h3><ul>\n<li>空间分析理论</li>\n<li>空间分析方法</li>\n<li>空间分析应用</li>\n</ul>\n<h3 id=\"4-与一般数据分析差别\"><a href=\"#4-与一般数据分析差别\" class=\"headerlink\" title=\"4. 与一般数据分析差别\"></a>4. 与一般数据分析差别</h3><ul>\n<li>揭示空间规律和空间机制</li>\n<li>描述的是空间过程</li>\n</ul>\n<h2 id=\"1-地理空间分析的重要性\"><a href=\"#1-地理空间分析的重要性\" class=\"headerlink\" title=\"1. 地理空间分析的重要性\"></a>1. 地理空间分析的重要性</h2><h2 id=\"2-地理空间分析的基本内容\"><a href=\"#2-地理空间分析的基本内容\" class=\"headerlink\" title=\"2. 地理空间分析的基本内容\"></a>2. 地理空间分析的基本内容</h2><ul>\n<li>空间格局</li>\n<li>空间位置：空间物体的<strong>个体定位</strong>信息，通过空间坐标系传递</li>\n<li>空间分布：同类空间事物的<strong>群体定位</strong>信息</li>\n<li>空间形态：运用空间问题的<strong>几何特征</strong>定量描述</li>\n<li>空间关系：涉及空间属性的关系<ul>\n<li>距离关系：空间对象之间的空间距离</li>\n<li>方位关系：俩空间对象之间距离所形成的方位角</li>\n<li>拓扑关系：拓扑属性是指图形(研究对象)在连续变形的条件下，保持不变的整体性质。拓扑关系是指空间对象之间的拓扑属性，具体的拓扑关系可包括：相邻、包含、相交等</li>\n<li>空间相关：场对象模型中，空间两点值的大小与两点之间距离之间的关系服从地理学第一定律，即从统计角度上讲，空间俩点之间的距离越近，其相似度就越高</li>\n<li>空间关联：在空间上不连续的两个或多个对象，它们的属性存在着对应的关系。</li>\n<li>空间配置：某种资源(水﹑电﹑资金等）在不同对象或对象不同部分的分配关系。</li>\n<li>空间过程关系</li>\n<li>空间尺度：空间尺度是指观察者从高分辨率到低分辨率或从相反方向变化观察空间对象时所的呈现出的规律，那么空间对象在不同尺度上的关系就可被认为是空间尺度关系。<strong>空间对象所表现出的特征往往取决于观察的尺度</strong>因此，空间尺度还被称为空间数据的“第四维”。</li>\n</ul>\n</li>\n<li>空间过程：空间对象在空间和时间中所留下的轨迹，这种轨迹是时空要素的耦合，它反映了空间对象的属性的时空耦合关系。</li>\n</ul>\n<h2 id=\"3-地理空间分析的基本步骤\"><a href=\"#3-地理空间分析的基本步骤\" class=\"headerlink\" title=\"3. 地理空间分析的基本步骤\"></a>3. <span id=\"空间分析的一般过程\">地理空间分析的基本步骤</span></h2><ol>\n<li>确定问题</li>\n<li>选择分析工具</li>\n<li>准备空间数据</li>\n<li>制定空间分析流程</li>\n<li>展示并解释分析结果</li>\n</ol>\n<h2 id=\"空间分析的基本任务\"><a href=\"#空间分析的基本任务\" class=\"headerlink\" title=\"空间分析的基本任务\"></a><span id=\"空间分析任务\">空间分析的基本任务</span></h2><ul>\n<li><p>基本任务</p>\n<blockquote>\n<p>获取空间信息<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>解决空间问题</p>\n</blockquote>\n</li>\n<li><p>5类具体任务</p>\n<ul>\n<li>位置分析<ul>\n<li>某一事物或现象在什么位置、在特定的位置有什么和是什么等</li>\n</ul>\n</li>\n<li>条件分析<ul>\n<li>符合某些条件的地理对象是什么、在哪里等问题</li>\n</ul>\n</li>\n<li>变化趋势分析<ul>\n<li>地理对象随时间变化而变化<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>预测未来的可能状况(根本目的)<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>发生机理和变化因子<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>做出科学的决策</li>\n</ul>\n</li>\n<li>模式认知<ul>\n<li>地理对象实体或对象之间的空间关系模式、地球系统内部各要素之间或各子系统之间的关系模式等</li>\n</ul>\n</li>\n<li>模拟与预测<ul>\n<li>对未发生或已发生的地理事件、现象、规律进行演变和反馈</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"讨论\"><a href=\"#讨论\" class=\"headerlink\" title=\"讨论\"></a>讨论</h2><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211110184415.png\" alt=\"数字化纸质地图\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211110184540.png\" alt=\"\"></p>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>章节</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>第一章</td>\n<td><a href=\"#基本概念\">空间分析与GIS</a></td>\n</tr>\n<tr>\n<td>第二章</td>\n<td><a href=\"../空间特征与空间问题\">空间特征与空间问题</a></td>\n</tr>\n<tr>\n<td>第三章</td>\n<td><a href=\"../空间量算与数据探测\">空间量算与数据探测</a></td>\n</tr>\n<tr>\n<td>第四章</td>\n<td><a href=\"../位置与几何关系分析\">位置与几何关系分析</a></td>\n</tr>\n<tr>\n<td>第五章</td>\n<td><a href=\"../空间相关性分析\">空间相关性分析</a></td>\n</tr>\n<tr>\n<td>第六章</td>\n<td><a href=\"../表面与三维空间分析\">表面与三维空间分析</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160701.webp","length":2008,"excerpt":"","more":"<p><strong>地理学第一定律，即地理事物或属性在空间分布上互为相关，存在聚集、随机、规则分布</strong></p>\n<h1 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a><span id=\"基本概念\">基本概念</span></h1><h2 id=\"1-空间\"><a href=\"#1-空间\" class=\"headerlink\" title=\"1. 空间\"></a>1. 空间</h2><p>指维度上的扩展或延续</p>\n<h2 id=\"2-地理空间\"><a href=\"#2-地理空间\" class=\"headerlink\" title=\"2. 地理空间\"></a>2. 地理空间</h2><p>现实中的地理空间：具有空间参考信息的地理实体或地理现象发生、发展的时空位置集是GIS表达和研究的对象区域</p>\n<p>GIS中的地理空间：绝对空间 + 相对空间</p>\n<p>绝对空间：具有属性描述的空间几何位置的集合，由一系列不同位置的空间坐标组成，来源于地球坐标系中的绝对坐标</p>\n<p>相对空间：由不同实体之间的空间关系构成，根据实体之间的空间关系及推理机制定义</p>\n<p>综合定义：指<strong>球面坐标系</strong>中或者经过<strong>投影变换后</strong>在<strong>笛卡尔坐标系</strong>中的地球表达特征空间。是地理空间在信息层面的抽象表达</p>\n<p>GIS的基本原则:同区域的不同图层或者相邻图层在空间上必须相匹配，否则将会出现明显的错误</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211116220555.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211121223508.png\" alt=\"\"></p>\n<h2 id=\"3-分析空间\"><a href=\"#3-分析空间\" class=\"headerlink\" title=\"3. 分析空间\"></a>3. 分析空间</h2><p>用于分析实际应用问题的二维或三维范围，即研究范围</p>\n<h2 id=\"4-工作空间\"><a href=\"#4-工作空间\" class=\"headerlink\" title=\"4. 工作空间\"></a>4. 工作空间</h2><p>计算机的<strong>文件系统中的工作路径</strong>。</p>\n<h2 id=\"5-地理空间分析\"><a href=\"#5-地理空间分析\" class=\"headerlink\" title=\"5.地理空间分析\"></a>5.地理空间分析</h2><h3 id=\"1-空间分析概念\"><a href=\"#1-空间分析概念\" class=\"headerlink\" title=\"1.空间分析概念\"></a>1.空间分析概念</h3><blockquote>\n<p>空间分析是对空间<strong>信息的获取</strong></p>\n<p>空间分析是<strong>对空间问题的求解</strong>，获取空间信息是<strong>解决空间问题</strong>的<strong>必要手段</strong></p>\n<p>空间分析是指在<strong>计算机技术</strong>的支撑下，提取地理对象<strong>在位置、属性、关系</strong>等方面的信息，以支持特定的空间问题的求解</p>\n</blockquote>\n<h3 id=\"2-空间分析内容\"><a href=\"#2-空间分析内容\" class=\"headerlink\" title=\"2. 空间分析内容\"></a>2. 空间分析内容</h3><ul>\n<li>空间数据操作<ul>\n<li>主要是指在GIS中基于空间对象几何特征进行的<strong>拓扑分析，叠加分析，距离，面积，路径计算，以及基于空间关系的空间查询等</strong>；对于属性数据则主要表现为地图可视化操作</li>\n</ul>\n</li>\n<li>空间数据分析<ul>\n<li>一般是指空间数据的<strong>描述性和探索性分析</strong>技术和方法，特别是对于大规模数据集，通过将数据图形化或地图化的探索性分析技术，研究数据中潜在的模式，异常等，为后续分析做准备，是所有空间分析过程中的首要一环</li>\n</ul>\n</li>\n<li>空间统计分析<ul>\n<li>空间自相关(莫兰指数)目的是确定某一变量是否在空间上相关，其相关程度如何</li>\n<li>空间自相关系数常用来定量地描述事物在空间上的依赖关系</li>\n<li>用<strong>统计的方法</strong>描述和解释空间数据的性质，以及数据对于统计模型是否典型或是否所期望的。由于空间数据具有空间自相关性，这一特性违背了经典统计理论关于数据独立性的假设，因此需要专门用于空间数据分析的空间统计方法</li>\n<li>如果某一变量的值随着测定距离的缩小而变得更相似，这一变量呈空间<strong>正相关</strong></li>\n<li>若所测值随距离的缩小而更为不同，则称之为空间<strong>负相关</strong></li>\n<li>若所测值不表现出任何空间依赖关系，那么，这一变量表现出空间若所测值不表现出任何空间依赖关系，那么，这一变量表现出空<strong>间不相关性或空间随机性</strong></li>\n</ul>\n</li>\n<li>空间建模<ul>\n<li>主要是指依据某些理论和假设，建立模型描述空间现象的<strong>分布模式，预测空间过程及结果</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-空间分析研究的内容\"><a href=\"#3-空间分析研究的内容\" class=\"headerlink\" title=\"3. 空间分析研究的内容\"></a>3. 空间分析研究的内容</h3><ul>\n<li>空间分析理论</li>\n<li>空间分析方法</li>\n<li>空间分析应用</li>\n</ul>\n<h3 id=\"4-与一般数据分析差别\"><a href=\"#4-与一般数据分析差别\" class=\"headerlink\" title=\"4. 与一般数据分析差别\"></a>4. 与一般数据分析差别</h3><ul>\n<li>揭示空间规律和空间机制</li>\n<li>描述的是空间过程</li>\n</ul>\n<h2 id=\"1-地理空间分析的重要性\"><a href=\"#1-地理空间分析的重要性\" class=\"headerlink\" title=\"1. 地理空间分析的重要性\"></a>1. 地理空间分析的重要性</h2><h2 id=\"2-地理空间分析的基本内容\"><a href=\"#2-地理空间分析的基本内容\" class=\"headerlink\" title=\"2. 地理空间分析的基本内容\"></a>2. 地理空间分析的基本内容</h2><ul>\n<li>空间格局</li>\n<li>空间位置：空间物体的<strong>个体定位</strong>信息，通过空间坐标系传递</li>\n<li>空间分布：同类空间事物的<strong>群体定位</strong>信息</li>\n<li>空间形态：运用空间问题的<strong>几何特征</strong>定量描述</li>\n<li>空间关系：涉及空间属性的关系<ul>\n<li>距离关系：空间对象之间的空间距离</li>\n<li>方位关系：俩空间对象之间距离所形成的方位角</li>\n<li>拓扑关系：拓扑属性是指图形(研究对象)在连续变形的条件下，保持不变的整体性质。拓扑关系是指空间对象之间的拓扑属性，具体的拓扑关系可包括：相邻、包含、相交等</li>\n<li>空间相关：场对象模型中，空间两点值的大小与两点之间距离之间的关系服从地理学第一定律，即从统计角度上讲，空间俩点之间的距离越近，其相似度就越高</li>\n<li>空间关联：在空间上不连续的两个或多个对象，它们的属性存在着对应的关系。</li>\n<li>空间配置：某种资源(水﹑电﹑资金等）在不同对象或对象不同部分的分配关系。</li>\n<li>空间过程关系</li>\n<li>空间尺度：空间尺度是指观察者从高分辨率到低分辨率或从相反方向变化观察空间对象时所的呈现出的规律，那么空间对象在不同尺度上的关系就可被认为是空间尺度关系。<strong>空间对象所表现出的特征往往取决于观察的尺度</strong>因此，空间尺度还被称为空间数据的“第四维”。</li>\n</ul>\n</li>\n<li>空间过程：空间对象在空间和时间中所留下的轨迹，这种轨迹是时空要素的耦合，它反映了空间对象的属性的时空耦合关系。</li>\n</ul>\n<h2 id=\"3-地理空间分析的基本步骤\"><a href=\"#3-地理空间分析的基本步骤\" class=\"headerlink\" title=\"3. 地理空间分析的基本步骤\"></a>3. <span id=\"空间分析的一般过程\">地理空间分析的基本步骤</span></h2><ol>\n<li>确定问题</li>\n<li>选择分析工具</li>\n<li>准备空间数据</li>\n<li>制定空间分析流程</li>\n<li>展示并解释分析结果</li>\n</ol>\n<h2 id=\"空间分析的基本任务\"><a href=\"#空间分析的基本任务\" class=\"headerlink\" title=\"空间分析的基本任务\"></a><span id=\"空间分析任务\">空间分析的基本任务</span></h2><ul>\n<li><p>基本任务</p>\n<blockquote>\n<p>获取空间信息<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>解决空间问题</p>\n</blockquote>\n</li>\n<li><p>5类具体任务</p>\n<ul>\n<li>位置分析<ul>\n<li>某一事物或现象在什么位置、在特定的位置有什么和是什么等</li>\n</ul>\n</li>\n<li>条件分析<ul>\n<li>符合某些条件的地理对象是什么、在哪里等问题</li>\n</ul>\n</li>\n<li>变化趋势分析<ul>\n<li>地理对象随时间变化而变化<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>预测未来的可能状况(根本目的)<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>发生机理和变化因子<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container>做出科学的决策</li>\n</ul>\n</li>\n<li>模式认知<ul>\n<li>地理对象实体或对象之间的空间关系模式、地球系统内部各要素之间或各子系统之间的关系模式等</li>\n</ul>\n</li>\n<li>模拟与预测<ul>\n<li>对未发生或已发生的地理事件、现象、规律进行演变和反馈</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"讨论\"><a href=\"#讨论\" class=\"headerlink\" title=\"讨论\"></a>讨论</h2><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211110184415.png\" alt=\"数字化纸质地图\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211110184540.png\" alt=\"\"></p>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>章节</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>第一章</td>\n<td><a href=\"#基本概念\">空间分析与GIS</a></td>\n</tr>\n<tr>\n<td>第二章</td>\n<td><a href=\"../空间特征与空间问题\">空间特征与空间问题</a></td>\n</tr>\n<tr>\n<td>第三章</td>\n<td><a href=\"../空间量算与数据探测\">空间量算与数据探测</a></td>\n</tr>\n<tr>\n<td>第四章</td>\n<td><a href=\"../位置与几何关系分析\">位置与几何关系分析</a></td>\n</tr>\n<tr>\n<td>第五章</td>\n<td><a href=\"../空间相关性分析\">空间相关性分析</a></td>\n</tr>\n<tr>\n<td>第六章</td>\n<td><a href=\"../表面与三维空间分析\">表面与三维空间分析</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n"},{"title":"空间分辨率","date":"2021-11-04T01:14:10.000Z","mathjax":true,"description":"空间分辨率基本概念","_content":"\n<h1> \n\t<span id=\"空间分辨率\">\n\t\t<center>空间分辨率<center>\n\t</span>\n</h1>\n\n\n## 1. 定义\n\n+ 几何特征 (<a href=\"../空间分辨率\">空间分辨率</a>)\n+ 物理特征 (<a href=\"../光谱分辨率\">光谱分辨率</a>、<a href=\"../辐射分辨率\">辐射分辨率</a>)\n+ 时间特征 (<a href=\"../时间分辨率\">时间分辨率</a>)\n空间分辨率，又称地面分辨率，均反映对两个非常靠近目标物的识别区分能力。\n\n空间分辨率是针对**遥感器或图像**而言的，指图像上能够详细5区分的最小单元的尺寸或大小\n\n地面分辨率，针对<b>地面</b>而言的，指可以识别的最小地面距离或最小目标物的大小\n\n## 2. 特性\n\n空间分辨率越高，能够区分的最小单元的尺寸越小；反之，空间分辨率越低，能区分的最小单元尺寸越大。\n\n## 3. 表示方法\n\n### 3.1 像元\n\n像元是一种从图像角度考虑的空间分辨率表示方法，指单个像元所对应的地面面积大小，单位为m或km\n\n### 3.2 线对数\n\n线对数是从摄影系统的角度考虑的空间分辨率表示方法，影像最小单元常通过**1mm**间隔内包含的线对数确定，单位为线对/mm\n\n线对指一对同等大小的**明暗条纹**或**规则间隔的明暗条对**\n\n![线对数](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211104091441.png)\n\n$R~g~=\\frac{R~s~f}{H}$\n\n$R~s~$：胶片的分辨率和摄影镜头的分辨率所构成的系统分辨率，单位线对/mm\n\nH：摄影机距地面高度，单位m\n\nf：摄影焦距，单位mm\n\n$R~g~$：地面分辨率，单位线对/mm\n\n### \t3.3 瞬时视场角(IFOV)\n\n瞬时视场角是从**传感器**的角度考虑的空间分辨率表示方法，指遥感器内单个探测元件的受光角度或观测视野，单位为毫弧度(mrad)\n\nIFOV越小，最小可分辨单元(可分像素)越小，空间分辨率越高\n$$\nGR = 2 * tan(IFOV/2) * H ≈ IFOV * H\n$$\nGR：空间分辨率\n\nIFOV：瞬时视场角\n\nH：传感器距离地面的高度\n\n## 4. 空间分辨率的理解\n\n### 4.1  一般说来，遥感系统的空间分辨率越高，其识别物体的能力越强\n\n不同空间分辨率图像对地物的识别能力不同。但实际上每一目标在图像的可分辨程度不完全决定于空间分辨率的具体值，而是和它的形状大小，以及与周围物体亮度结构的相对差异有关\n\n### 4.2  经验表明，一般选择小于被探测目标最小直径$\\frac{1}{2}$的空间分辨率\n\n### 4.3  空间分辨率决定了所使用数据能够直接确定的信息类别\n\n同样的地面覆盖范围，空间分辨率越低，对地物细节的反映程度也越低\n\n### 4.4  设计成遥感器系统时，选择空间分辨率是必须考虑的重点之一\n\n不同的需求对空间分辨率的要求不同。比如气象研究，需要观察大空间尺度的气象云图，对空间分辨率的要求就会比较低\n\n","source":"_posts/空间分辨率.md","raw":"---\ntitle: 空间分辨率\ndate: 2021-11-04 09:14:10\ntags: 遥感\nmathjax: true\ncategories: [GIS,遥感图像特征,空间分辨率]\ndescription: 空间分辨率基本概念\n---\n\n<h1> \n\t<span id=\"空间分辨率\">\n\t\t<center>空间分辨率<center>\n\t</span>\n</h1>\n\n\n## 1. 定义\n\n+ 几何特征 (<a href=\"../空间分辨率\">空间分辨率</a>)\n+ 物理特征 (<a href=\"../光谱分辨率\">光谱分辨率</a>、<a href=\"../辐射分辨率\">辐射分辨率</a>)\n+ 时间特征 (<a href=\"../时间分辨率\">时间分辨率</a>)\n空间分辨率，又称地面分辨率，均反映对两个非常靠近目标物的识别区分能力。\n\n空间分辨率是针对**遥感器或图像**而言的，指图像上能够详细5区分的最小单元的尺寸或大小\n\n地面分辨率，针对<b>地面</b>而言的，指可以识别的最小地面距离或最小目标物的大小\n\n## 2. 特性\n\n空间分辨率越高，能够区分的最小单元的尺寸越小；反之，空间分辨率越低，能区分的最小单元尺寸越大。\n\n## 3. 表示方法\n\n### 3.1 像元\n\n像元是一种从图像角度考虑的空间分辨率表示方法，指单个像元所对应的地面面积大小，单位为m或km\n\n### 3.2 线对数\n\n线对数是从摄影系统的角度考虑的空间分辨率表示方法，影像最小单元常通过**1mm**间隔内包含的线对数确定，单位为线对/mm\n\n线对指一对同等大小的**明暗条纹**或**规则间隔的明暗条对**\n\n![线对数](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211104091441.png)\n\n$R~g~=\\frac{R~s~f}{H}$\n\n$R~s~$：胶片的分辨率和摄影镜头的分辨率所构成的系统分辨率，单位线对/mm\n\nH：摄影机距地面高度，单位m\n\nf：摄影焦距，单位mm\n\n$R~g~$：地面分辨率，单位线对/mm\n\n### \t3.3 瞬时视场角(IFOV)\n\n瞬时视场角是从**传感器**的角度考虑的空间分辨率表示方法，指遥感器内单个探测元件的受光角度或观测视野，单位为毫弧度(mrad)\n\nIFOV越小，最小可分辨单元(可分像素)越小，空间分辨率越高\n$$\nGR = 2 * tan(IFOV/2) * H ≈ IFOV * H\n$$\nGR：空间分辨率\n\nIFOV：瞬时视场角\n\nH：传感器距离地面的高度\n\n## 4. 空间分辨率的理解\n\n### 4.1  一般说来，遥感系统的空间分辨率越高，其识别物体的能力越强\n\n不同空间分辨率图像对地物的识别能力不同。但实际上每一目标在图像的可分辨程度不完全决定于空间分辨率的具体值，而是和它的形状大小，以及与周围物体亮度结构的相对差异有关\n\n### 4.2  经验表明，一般选择小于被探测目标最小直径$\\frac{1}{2}$的空间分辨率\n\n### 4.3  空间分辨率决定了所使用数据能够直接确定的信息类别\n\n同样的地面覆盖范围，空间分辨率越低，对地物细节的反映程度也越低\n\n### 4.4  设计成遥感器系统时，选择空间分辨率是必须考虑的重点之一\n\n不同的需求对空间分辨率的要求不同。比如气象研究，需要观察大空间尺度的气象云图，对空间分辨率的要求就会比较低\n\n","slug":"空间分辨率","published":1,"updated":"2021-12-27T08:08:25.241Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt46004ajsvk1lnr29my","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1> \n    <span id=\"空间分辨率\">\n        <center>空间分辨率<center>\n    </center></center></span>\n</h1>\n\n\n<h2 id=\"1-定义\"><a href=\"#1-定义\" class=\"headerlink\" title=\"1. 定义\"></a>1. 定义</h2><ul>\n<li>几何特征 (<a href=\"../空间分辨率\">空间分辨率</a>)</li>\n<li>物理特征 (<a href=\"../光谱分辨率\">光谱分辨率</a>、<a href=\"../辐射分辨率\">辐射分辨率</a>)</li>\n<li>时间特征 (<a href=\"../时间分辨率\">时间分辨率</a>)<br>空间分辨率，又称地面分辨率，均反映对两个非常靠近目标物的识别区分能力。</li>\n</ul>\n<p>空间分辨率是针对<strong>遥感器或图像</strong>而言的，指图像上能够详细5区分的最小单元的尺寸或大小</p>\n<p>地面分辨率，针对<b>地面</b>而言的，指可以识别的最小地面距离或最小目标物的大小</p>\n<h2 id=\"2-特性\"><a href=\"#2-特性\" class=\"headerlink\" title=\"2. 特性\"></a>2. 特性</h2><p>空间分辨率越高，能够区分的最小单元的尺寸越小；反之，空间分辨率越低，能区分的最小单元尺寸越大。</p>\n<h2 id=\"3-表示方法\"><a href=\"#3-表示方法\" class=\"headerlink\" title=\"3. 表示方法\"></a>3. 表示方法</h2><h3 id=\"3-1-像元\"><a href=\"#3-1-像元\" class=\"headerlink\" title=\"3.1 像元\"></a>3.1 像元</h3><p>像元是一种从图像角度考虑的空间分辨率表示方法，指单个像元所对应的地面面积大小，单位为m或km</p>\n<h3 id=\"3-2-线对数\"><a href=\"#3-2-线对数\" class=\"headerlink\" title=\"3.2 线对数\"></a>3.2 线对数</h3><p>线对数是从摄影系统的角度考虑的空间分辨率表示方法，影像最小单元常通过<strong>1mm</strong>间隔内包含的线对数确定，单位为线对/mm</p>\n<p>线对指一对同等大小的<strong>明暗条纹</strong>或<strong>规则间隔的明暗条对</strong></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211104091441.png\" alt=\"线对数\"></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.781ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.584ex\" height=\"3.006ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -983.5 5120.3 1328.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(759,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1009,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(1486,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2013.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(3069.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,485) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(759,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1009,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(1478,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1728,0)\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(711.4,-345) scale(0.707)\"><path data-c=\"1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><rect width=\"1810.8\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.048ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.91ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1728 704\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(759,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1009,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(1478,0)\"><path data-c=\"A0\" d=\"\"></path></g></g></g></svg></mjx-container>：胶片的分辨率和摄影镜头的分辨率所构成的系统分辨率，单位线对/mm</p>\n<p>H：摄影机距地面高度，单位m</p>\n<p>f：摄影焦距，单位mm</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.928ex\" height=\"2.009ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1736 888\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(759,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1009,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(1486,0)\"><path data-c=\"A0\" d=\"\"></path></g></g></g></svg></mjx-container>：地面分辨率，单位线对/mm</p>\n<h3 id=\"3-3-瞬时视场角-IFOV\"><a href=\"#3-3-瞬时视场角-IFOV\" class=\"headerlink\" title=\"3.3 瞬时视场角(IFOV)\"></a>3.3 瞬时视场角(IFOV)</h3><p>瞬时视场角是从<strong>传感器</strong>的角度考虑的空间分辨率表示方法，指遥感器内单个探测元件的受光角度或观测视野，单位为毫弧度(mrad)</p>\n<p>IFOV越小，最小可分辨单元(可分像素)越小，空间分辨率越高</p>\n<script type=\"math/tex; mode=display\">\nGR = 2 * tan(IFOV/2) * H ≈ IFOV * H</script><p>GR：空间分辨率</p>\n<p>IFOV：瞬时视场角</p>\n<p>H：传感器距离地面的高度</p>\n<h2 id=\"4-空间分辨率的理解\"><a href=\"#4-空间分辨率的理解\" class=\"headerlink\" title=\"4. 空间分辨率的理解\"></a>4. 空间分辨率的理解</h2><h3 id=\"4-1-一般说来，遥感系统的空间分辨率越高，其识别物体的能力越强\"><a href=\"#4-1-一般说来，遥感系统的空间分辨率越高，其识别物体的能力越强\" class=\"headerlink\" title=\"4.1  一般说来，遥感系统的空间分辨率越高，其识别物体的能力越强\"></a>4.1  一般说来，遥感系统的空间分辨率越高，其识别物体的能力越强</h3><p>不同空间分辨率图像对地物的识别能力不同。但实际上每一目标在图像的可分辨程度不完全决定于空间分辨率的具体值，而是和它的形状大小，以及与周围物体亮度结构的相对差异有关</p>\n<h3 id=\"4-2-经验表明，一般选择小于被探测目标最小直径-frac-1-2-的空间分辨率\"><a href=\"#4-2-经验表明，一般选择小于被探测目标最小直径-frac-1-2-的空间分辨率\" class=\"headerlink\" title=\"4.2  经验表明，一般选择小于被探测目标最小直径$\\frac{1}{2}$的空间分辨率\"></a>4.2  经验表明，一般选择小于被探测目标最小直径<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.781ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.795ex\" height=\"2.737ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864.9 793.6 1209.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mn\" transform=\"translate(220,394) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><rect width=\"553.6\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container>的空间分辨率</h3><h3 id=\"4-3-空间分辨率决定了所使用数据能够直接确定的信息类别\"><a href=\"#4-3-空间分辨率决定了所使用数据能够直接确定的信息类别\" class=\"headerlink\" title=\"4.3  空间分辨率决定了所使用数据能够直接确定的信息类别\"></a>4.3  空间分辨率决定了所使用数据能够直接确定的信息类别</h3><p>同样的地面覆盖范围，空间分辨率越低，对地物细节的反映程度也越低</p>\n<h3 id=\"4-4-设计成遥感器系统时，选择空间分辨率是必须考虑的重点之一\"><a href=\"#4-4-设计成遥感器系统时，选择空间分辨率是必须考虑的重点之一\" class=\"headerlink\" title=\"4.4  设计成遥感器系统时，选择空间分辨率是必须考虑的重点之一\"></a>4.4  设计成遥感器系统时，选择空间分辨率是必须考虑的重点之一</h3><p>不同的需求对空间分辨率的要求不同。比如气象研究，需要观察大空间尺度的气象云图，对空间分辨率的要求就会比较低</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220124161839.webp","length":923,"excerpt":"","more":"<h1> \n    <span id=\"空间分辨率\">\n        <center>空间分辨率<center>\n    </center></center></span>\n</h1>\n\n\n<h2 id=\"1-定义\"><a href=\"#1-定义\" class=\"headerlink\" title=\"1. 定义\"></a>1. 定义</h2><ul>\n<li>几何特征 (<a href=\"../空间分辨率\">空间分辨率</a>)</li>\n<li>物理特征 (<a href=\"../光谱分辨率\">光谱分辨率</a>、<a href=\"../辐射分辨率\">辐射分辨率</a>)</li>\n<li>时间特征 (<a href=\"../时间分辨率\">时间分辨率</a>)<br>空间分辨率，又称地面分辨率，均反映对两个非常靠近目标物的识别区分能力。</li>\n</ul>\n<p>空间分辨率是针对<strong>遥感器或图像</strong>而言的，指图像上能够详细5区分的最小单元的尺寸或大小</p>\n<p>地面分辨率，针对<b>地面</b>而言的，指可以识别的最小地面距离或最小目标物的大小</p>\n<h2 id=\"2-特性\"><a href=\"#2-特性\" class=\"headerlink\" title=\"2. 特性\"></a>2. 特性</h2><p>空间分辨率越高，能够区分的最小单元的尺寸越小；反之，空间分辨率越低，能区分的最小单元尺寸越大。</p>\n<h2 id=\"3-表示方法\"><a href=\"#3-表示方法\" class=\"headerlink\" title=\"3. 表示方法\"></a>3. 表示方法</h2><h3 id=\"3-1-像元\"><a href=\"#3-1-像元\" class=\"headerlink\" title=\"3.1 像元\"></a>3.1 像元</h3><p>像元是一种从图像角度考虑的空间分辨率表示方法，指单个像元所对应的地面面积大小，单位为m或km</p>\n<h3 id=\"3-2-线对数\"><a href=\"#3-2-线对数\" class=\"headerlink\" title=\"3.2 线对数\"></a>3.2 线对数</h3><p>线对数是从摄影系统的角度考虑的空间分辨率表示方法，影像最小单元常通过<strong>1mm</strong>间隔内包含的线对数确定，单位为线对/mm</p>\n<p>线对指一对同等大小的<strong>明暗条纹</strong>或<strong>规则间隔的明暗条对</strong></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211104091441.png\" alt=\"线对数\"></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.781ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.584ex\" height=\"3.006ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -983.5 5120.3 1328.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(759,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1009,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(1486,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2013.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(3069.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,485) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(759,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1009,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(1478,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1728,0)\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(711.4,-345) scale(0.707)\"><path data-c=\"1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><rect width=\"1810.8\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.048ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.91ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1728 704\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(759,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1009,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(1478,0)\"><path data-c=\"A0\" d=\"\"></path></g></g></g></svg></mjx-container>：胶片的分辨率和摄影镜头的分辨率所构成的系统分辨率，单位线对/mm</p>\n<p>H：摄影机距地面高度，单位m</p>\n<p>f：摄影焦距，单位mm</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.928ex\" height=\"2.009ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1736 888\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(759,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1009,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(1486,0)\"><path data-c=\"A0\" d=\"\"></path></g></g></g></svg></mjx-container>：地面分辨率，单位线对/mm</p>\n<h3 id=\"3-3-瞬时视场角-IFOV\"><a href=\"#3-3-瞬时视场角-IFOV\" class=\"headerlink\" title=\"3.3 瞬时视场角(IFOV)\"></a>3.3 瞬时视场角(IFOV)</h3><p>瞬时视场角是从<strong>传感器</strong>的角度考虑的空间分辨率表示方法，指遥感器内单个探测元件的受光角度或观测视野，单位为毫弧度(mrad)</p>\n<p>IFOV越小，最小可分辨单元(可分像素)越小，空间分辨率越高</p>\n<script type=\"math/tex; mode=display\">\nGR = 2 * tan(IFOV/2) * H ≈ IFOV * H</script><p>GR：空间分辨率</p>\n<p>IFOV：瞬时视场角</p>\n<p>H：传感器距离地面的高度</p>\n<h2 id=\"4-空间分辨率的理解\"><a href=\"#4-空间分辨率的理解\" class=\"headerlink\" title=\"4. 空间分辨率的理解\"></a>4. 空间分辨率的理解</h2><h3 id=\"4-1-一般说来，遥感系统的空间分辨率越高，其识别物体的能力越强\"><a href=\"#4-1-一般说来，遥感系统的空间分辨率越高，其识别物体的能力越强\" class=\"headerlink\" title=\"4.1  一般说来，遥感系统的空间分辨率越高，其识别物体的能力越强\"></a>4.1  一般说来，遥感系统的空间分辨率越高，其识别物体的能力越强</h3><p>不同空间分辨率图像对地物的识别能力不同。但实际上每一目标在图像的可分辨程度不完全决定于空间分辨率的具体值，而是和它的形状大小，以及与周围物体亮度结构的相对差异有关</p>\n<h3 id=\"4-2-经验表明，一般选择小于被探测目标最小直径-frac-1-2-的空间分辨率\"><a href=\"#4-2-经验表明，一般选择小于被探测目标最小直径-frac-1-2-的空间分辨率\" class=\"headerlink\" title=\"4.2  经验表明，一般选择小于被探测目标最小直径$\\frac{1}{2}$的空间分辨率\"></a>4.2  经验表明，一般选择小于被探测目标最小直径<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.781ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.795ex\" height=\"2.737ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864.9 793.6 1209.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mn\" transform=\"translate(220,394) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><rect width=\"553.6\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container>的空间分辨率</h3><h3 id=\"4-3-空间分辨率决定了所使用数据能够直接确定的信息类别\"><a href=\"#4-3-空间分辨率决定了所使用数据能够直接确定的信息类别\" class=\"headerlink\" title=\"4.3  空间分辨率决定了所使用数据能够直接确定的信息类别\"></a>4.3  空间分辨率决定了所使用数据能够直接确定的信息类别</h3><p>同样的地面覆盖范围，空间分辨率越低，对地物细节的反映程度也越低</p>\n<h3 id=\"4-4-设计成遥感器系统时，选择空间分辨率是必须考虑的重点之一\"><a href=\"#4-4-设计成遥感器系统时，选择空间分辨率是必须考虑的重点之一\" class=\"headerlink\" title=\"4.4  设计成遥感器系统时，选择空间分辨率是必须考虑的重点之一\"></a>4.4  设计成遥感器系统时，选择空间分辨率是必须考虑的重点之一</h3><p>不同的需求对空间分辨率的要求不同。比如气象研究，需要观察大空间尺度的气象云图，对空间分辨率的要求就会比较低</p>\n"},{"title":"空间查询与分析","date":"2021-07-05T11:15:35.000Z","password":null,"description":"空间数据查询","_content":"\n## 空间数据查询\n\n### 查询概述\n\n#### 方式\n\n+ 属性查图形\n+ 图形查属性\n\n#### 内容\n\n+ 空间对象的**属性**，**空间位置**，**空间分布**，**几何特征**，以及和其它空间对象的空间关系\n\n#### 结果\n\n+ 高亮度显示，属性列表和统计图等\n\n<img src=\"https://i.loli.net/2021/07/03/1K5LCIHO8hS6mdZ.png\" alt=\"数据查询\" style=\"zoom:50%;\" />\n\n### 矢量数据查询\n\n+ 属性数据查询\n+ 图形数据查询\n+ 空间关系查询\n+ 运算对象为字段\n\n### 栅格数据查询\n\n+ 运算对象为栅格本身\n\n## 矢量数据分析\n\n### 缓冲区分析\n\n+ 指定距离之内的区域称为缓冲区\n+ 应用：水库淹没范围，环境污染影响带，城市规划拆迁等\n\n### 叠置分析\n\n+ **地图叠置**是指合并两个或多个要素图层的**几何和属性数据**\n\n+ 叠置分析是将两层或多层地图要素进行叠加产生一个**新要素层及其属性**的操作。这个要素层综合了原来各图层所具有的属性\n\n+ 地图叠置根据目的不同分为：<span id=\"合成叠置\">合成叠置</span>与<span id=\"统计叠置\">统计叠置</span>\n\n+ 裁剪(结果数据集与裁剪数据集类型相同)\n\n  ![](https://raw.githubusercontent.com/three-body2/Note/main/img/20210704112804.png)\n\n+ 擦除(结果数据集与被擦除数据集类型相同)\n\n+ <img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210704122653.png\"/>\n\n## 栅格数据分析\n\n### 代数运算\n\n+ 输入栅格像元值的**数学函数**计算输出栅格的像元值\n\n### 重分级\n\n+ 属性数据类别合并或转换成新类\n\n### 邻域分析\n\n+ 邻域类型：矩形 圆形 环形 扇形\n+ 应用：图像处理 <a href=\"#地形分析\">地形分析</a>\n\n## 网络分析\n\n### 最短路径分析\n\n+ 基本思想：把图的顶点分为S，T两类，若起始点到某顶点的最短通路已求出，则将其归入S，其余归入T，随着程序运行T的元素逐个转入S，直到目标顶点转入后结束\n\n<img src=\"https://i.loli.net/2021/07/03/j9dHbWQV41eAtr6.png\" alt=\"Dijkstra\" style=\"zoom:67%;\" />\n\n### 路径分析\n\n+ 生成耗费距离栅格\n+ 规划道路 管线 沟渠 传输线路\n+ 提取线性要素\n\n### 网络分析\n\n+ <a href=\"#路径分析\">路径分析</a>\n+ 最佳设施\n+ 服务器分析\n+ 资源分配\n+ 选址分析\n\n## 地形分析\n\n+ 制作等高线图\n+ 坡度坡向分析\n+ 可视性分析\n+ 地图晕渲图\n+ 测高设色图\n\n## 空间插值\n\n+ 将离散点的测量数据转换为连续的数据曲面，以便与其它空间现象的分布模式进行比较，包括空间内插和外推两种算法\n\n+ 内插：在已存在观测点的区域**范围之内**估计未观测点的特征值的过程\n\n+ 推估：在已存在观测点的区域**范围之外**估计未观测点的特征值的过程\n\n+ **整体内插**：利用每个可利用的控制点来估算未知点数据\n\n+ **局部内插**：使用**一组**已知点样本估算未知点数据\n\n+ 內插函数：线性内插 双线性内插 多项式内插 样条函数 多层曲面叠加\n\n+ 最近邻近法-->泰森多边形法\n\n  采用一种极端的边界内插方法，只用**最近的单个点**进行区域插值(TIN)\n\n<a href=\"#空间数据查询\">返回顶部</a>\n\n","source":"_posts/空间查询与分析.md","raw":"---\ntitle: 空间查询与分析\ndate: 2021-07-05 19:15:35\ncategories: [GIS,地理信息科学,空间数据查询] \ntags: 地理信息科学\npassword: \ndescription: 空间数据查询\n---\n\n## 空间数据查询\n\n### 查询概述\n\n#### 方式\n\n+ 属性查图形\n+ 图形查属性\n\n#### 内容\n\n+ 空间对象的**属性**，**空间位置**，**空间分布**，**几何特征**，以及和其它空间对象的空间关系\n\n#### 结果\n\n+ 高亮度显示，属性列表和统计图等\n\n<img src=\"https://i.loli.net/2021/07/03/1K5LCIHO8hS6mdZ.png\" alt=\"数据查询\" style=\"zoom:50%;\" />\n\n### 矢量数据查询\n\n+ 属性数据查询\n+ 图形数据查询\n+ 空间关系查询\n+ 运算对象为字段\n\n### 栅格数据查询\n\n+ 运算对象为栅格本身\n\n## 矢量数据分析\n\n### 缓冲区分析\n\n+ 指定距离之内的区域称为缓冲区\n+ 应用：水库淹没范围，环境污染影响带，城市规划拆迁等\n\n### 叠置分析\n\n+ **地图叠置**是指合并两个或多个要素图层的**几何和属性数据**\n\n+ 叠置分析是将两层或多层地图要素进行叠加产生一个**新要素层及其属性**的操作。这个要素层综合了原来各图层所具有的属性\n\n+ 地图叠置根据目的不同分为：<span id=\"合成叠置\">合成叠置</span>与<span id=\"统计叠置\">统计叠置</span>\n\n+ 裁剪(结果数据集与裁剪数据集类型相同)\n\n  ![](https://raw.githubusercontent.com/three-body2/Note/main/img/20210704112804.png)\n\n+ 擦除(结果数据集与被擦除数据集类型相同)\n\n+ <img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210704122653.png\"/>\n\n## 栅格数据分析\n\n### 代数运算\n\n+ 输入栅格像元值的**数学函数**计算输出栅格的像元值\n\n### 重分级\n\n+ 属性数据类别合并或转换成新类\n\n### 邻域分析\n\n+ 邻域类型：矩形 圆形 环形 扇形\n+ 应用：图像处理 <a href=\"#地形分析\">地形分析</a>\n\n## 网络分析\n\n### 最短路径分析\n\n+ 基本思想：把图的顶点分为S，T两类，若起始点到某顶点的最短通路已求出，则将其归入S，其余归入T，随着程序运行T的元素逐个转入S，直到目标顶点转入后结束\n\n<img src=\"https://i.loli.net/2021/07/03/j9dHbWQV41eAtr6.png\" alt=\"Dijkstra\" style=\"zoom:67%;\" />\n\n### 路径分析\n\n+ 生成耗费距离栅格\n+ 规划道路 管线 沟渠 传输线路\n+ 提取线性要素\n\n### 网络分析\n\n+ <a href=\"#路径分析\">路径分析</a>\n+ 最佳设施\n+ 服务器分析\n+ 资源分配\n+ 选址分析\n\n## 地形分析\n\n+ 制作等高线图\n+ 坡度坡向分析\n+ 可视性分析\n+ 地图晕渲图\n+ 测高设色图\n\n## 空间插值\n\n+ 将离散点的测量数据转换为连续的数据曲面，以便与其它空间现象的分布模式进行比较，包括空间内插和外推两种算法\n\n+ 内插：在已存在观测点的区域**范围之内**估计未观测点的特征值的过程\n\n+ 推估：在已存在观测点的区域**范围之外**估计未观测点的特征值的过程\n\n+ **整体内插**：利用每个可利用的控制点来估算未知点数据\n\n+ **局部内插**：使用**一组**已知点样本估算未知点数据\n\n+ 內插函数：线性内插 双线性内插 多项式内插 样条函数 多层曲面叠加\n\n+ 最近邻近法-->泰森多边形法\n\n  采用一种极端的边界内插方法，只用**最近的单个点**进行区域插值(TIN)\n\n<a href=\"#空间数据查询\">返回顶部</a>\n\n","slug":"空间查询与分析","published":1,"updated":"2021-12-27T07:57:10.193Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt47004cjsvkcbdtc6jq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"空间数据查询\"><a href=\"#空间数据查询\" class=\"headerlink\" title=\"空间数据查询\"></a>空间数据查询</h2><h3 id=\"查询概述\"><a href=\"#查询概述\" class=\"headerlink\" title=\"查询概述\"></a>查询概述</h3><h4 id=\"方式\"><a href=\"#方式\" class=\"headerlink\" title=\"方式\"></a>方式</h4><ul>\n<li>属性查图形</li>\n<li>图形查属性</li>\n</ul>\n<h4 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h4><ul>\n<li>空间对象的<strong>属性</strong>，<strong>空间位置</strong>，<strong>空间分布</strong>，<strong>几何特征</strong>，以及和其它空间对象的空间关系</li>\n</ul>\n<h4 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h4><ul>\n<li>高亮度显示，属性列表和统计图等</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/07/03/1K5LCIHO8hS6mdZ.png\" alt=\"数据查询\" style=\"zoom:50%;\" /></p>\n<h3 id=\"矢量数据查询\"><a href=\"#矢量数据查询\" class=\"headerlink\" title=\"矢量数据查询\"></a>矢量数据查询</h3><ul>\n<li>属性数据查询</li>\n<li>图形数据查询</li>\n<li>空间关系查询</li>\n<li>运算对象为字段</li>\n</ul>\n<h3 id=\"栅格数据查询\"><a href=\"#栅格数据查询\" class=\"headerlink\" title=\"栅格数据查询\"></a>栅格数据查询</h3><ul>\n<li>运算对象为栅格本身</li>\n</ul>\n<h2 id=\"矢量数据分析\"><a href=\"#矢量数据分析\" class=\"headerlink\" title=\"矢量数据分析\"></a>矢量数据分析</h2><h3 id=\"缓冲区分析\"><a href=\"#缓冲区分析\" class=\"headerlink\" title=\"缓冲区分析\"></a>缓冲区分析</h3><ul>\n<li>指定距离之内的区域称为缓冲区</li>\n<li>应用：水库淹没范围，环境污染影响带，城市规划拆迁等</li>\n</ul>\n<h3 id=\"叠置分析\"><a href=\"#叠置分析\" class=\"headerlink\" title=\"叠置分析\"></a>叠置分析</h3><ul>\n<li><p><strong>地图叠置</strong>是指合并两个或多个要素图层的<strong>几何和属性数据</strong></p>\n</li>\n<li><p>叠置分析是将两层或多层地图要素进行叠加产生一个<strong>新要素层及其属性</strong>的操作。这个要素层综合了原来各图层所具有的属性</p>\n</li>\n<li><p>地图叠置根据目的不同分为：<span id=\"合成叠置\">合成叠置</span>与<span id=\"统计叠置\">统计叠置</span></p>\n</li>\n<li><p>裁剪(结果数据集与裁剪数据集类型相同)</p>\n<p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/img/20210704112804.png\" alt=\"\"></p>\n</li>\n<li><p>擦除(结果数据集与被擦除数据集类型相同)</p>\n</li>\n<li><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210704122653.png\"/></p>\n</li>\n</ul>\n<h2 id=\"栅格数据分析\"><a href=\"#栅格数据分析\" class=\"headerlink\" title=\"栅格数据分析\"></a>栅格数据分析</h2><h3 id=\"代数运算\"><a href=\"#代数运算\" class=\"headerlink\" title=\"代数运算\"></a>代数运算</h3><ul>\n<li>输入栅格像元值的<strong>数学函数</strong>计算输出栅格的像元值</li>\n</ul>\n<h3 id=\"重分级\"><a href=\"#重分级\" class=\"headerlink\" title=\"重分级\"></a>重分级</h3><ul>\n<li>属性数据类别合并或转换成新类</li>\n</ul>\n<h3 id=\"邻域分析\"><a href=\"#邻域分析\" class=\"headerlink\" title=\"邻域分析\"></a>邻域分析</h3><ul>\n<li>邻域类型：矩形 圆形 环形 扇形</li>\n<li>应用：图像处理 <a href=\"#地形分析\">地形分析</a></li>\n</ul>\n<h2 id=\"网络分析\"><a href=\"#网络分析\" class=\"headerlink\" title=\"网络分析\"></a>网络分析</h2><h3 id=\"最短路径分析\"><a href=\"#最短路径分析\" class=\"headerlink\" title=\"最短路径分析\"></a>最短路径分析</h3><ul>\n<li>基本思想：把图的顶点分为S，T两类，若起始点到某顶点的最短通路已求出，则将其归入S，其余归入T，随着程序运行T的元素逐个转入S，直到目标顶点转入后结束</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/07/03/j9dHbWQV41eAtr6.png\" alt=\"Dijkstra\" style=\"zoom:67%;\" /></p>\n<h3 id=\"路径分析\"><a href=\"#路径分析\" class=\"headerlink\" title=\"路径分析\"></a>路径分析</h3><ul>\n<li>生成耗费距离栅格</li>\n<li>规划道路 管线 沟渠 传输线路</li>\n<li>提取线性要素</li>\n</ul>\n<h3 id=\"网络分析-1\"><a href=\"#网络分析-1\" class=\"headerlink\" title=\"网络分析\"></a>网络分析</h3><ul>\n<li><a href=\"#路径分析\">路径分析</a></li>\n<li>最佳设施</li>\n<li>服务器分析</li>\n<li>资源分配</li>\n<li>选址分析</li>\n</ul>\n<h2 id=\"地形分析\"><a href=\"#地形分析\" class=\"headerlink\" title=\"地形分析\"></a>地形分析</h2><ul>\n<li>制作等高线图</li>\n<li>坡度坡向分析</li>\n<li>可视性分析</li>\n<li>地图晕渲图</li>\n<li>测高设色图</li>\n</ul>\n<h2 id=\"空间插值\"><a href=\"#空间插值\" class=\"headerlink\" title=\"空间插值\"></a>空间插值</h2><ul>\n<li><p>将离散点的测量数据转换为连续的数据曲面，以便与其它空间现象的分布模式进行比较，包括空间内插和外推两种算法</p>\n</li>\n<li><p>内插：在已存在观测点的区域<strong>范围之内</strong>估计未观测点的特征值的过程</p>\n</li>\n<li><p>推估：在已存在观测点的区域<strong>范围之外</strong>估计未观测点的特征值的过程</p>\n</li>\n<li><p><strong>整体内插</strong>：利用每个可利用的控制点来估算未知点数据</p>\n</li>\n<li><p><strong>局部内插</strong>：使用<strong>一组</strong>已知点样本估算未知点数据</p>\n</li>\n<li><p>內插函数：线性内插 双线性内插 多项式内插 样条函数 多层曲面叠加</p>\n</li>\n<li><p>最近邻近法—&gt;泰森多边形法</p>\n<p>采用一种极端的边界内插方法，只用<strong>最近的单个点</strong>进行区域插值(TIN)</p>\n</li>\n</ul>\n<p><a href=\"#空间数据查询\">返回顶部</a></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160654.webp","length":809,"excerpt":"","more":"<h2 id=\"空间数据查询\"><a href=\"#空间数据查询\" class=\"headerlink\" title=\"空间数据查询\"></a>空间数据查询</h2><h3 id=\"查询概述\"><a href=\"#查询概述\" class=\"headerlink\" title=\"查询概述\"></a>查询概述</h3><h4 id=\"方式\"><a href=\"#方式\" class=\"headerlink\" title=\"方式\"></a>方式</h4><ul>\n<li>属性查图形</li>\n<li>图形查属性</li>\n</ul>\n<h4 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h4><ul>\n<li>空间对象的<strong>属性</strong>，<strong>空间位置</strong>，<strong>空间分布</strong>，<strong>几何特征</strong>，以及和其它空间对象的空间关系</li>\n</ul>\n<h4 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h4><ul>\n<li>高亮度显示，属性列表和统计图等</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/07/03/1K5LCIHO8hS6mdZ.png\" alt=\"数据查询\" style=\"zoom:50%;\" /></p>\n<h3 id=\"矢量数据查询\"><a href=\"#矢量数据查询\" class=\"headerlink\" title=\"矢量数据查询\"></a>矢量数据查询</h3><ul>\n<li>属性数据查询</li>\n<li>图形数据查询</li>\n<li>空间关系查询</li>\n<li>运算对象为字段</li>\n</ul>\n<h3 id=\"栅格数据查询\"><a href=\"#栅格数据查询\" class=\"headerlink\" title=\"栅格数据查询\"></a>栅格数据查询</h3><ul>\n<li>运算对象为栅格本身</li>\n</ul>\n<h2 id=\"矢量数据分析\"><a href=\"#矢量数据分析\" class=\"headerlink\" title=\"矢量数据分析\"></a>矢量数据分析</h2><h3 id=\"缓冲区分析\"><a href=\"#缓冲区分析\" class=\"headerlink\" title=\"缓冲区分析\"></a>缓冲区分析</h3><ul>\n<li>指定距离之内的区域称为缓冲区</li>\n<li>应用：水库淹没范围，环境污染影响带，城市规划拆迁等</li>\n</ul>\n<h3 id=\"叠置分析\"><a href=\"#叠置分析\" class=\"headerlink\" title=\"叠置分析\"></a>叠置分析</h3><ul>\n<li><p><strong>地图叠置</strong>是指合并两个或多个要素图层的<strong>几何和属性数据</strong></p>\n</li>\n<li><p>叠置分析是将两层或多层地图要素进行叠加产生一个<strong>新要素层及其属性</strong>的操作。这个要素层综合了原来各图层所具有的属性</p>\n</li>\n<li><p>地图叠置根据目的不同分为：<span id=\"合成叠置\">合成叠置</span>与<span id=\"统计叠置\">统计叠置</span></p>\n</li>\n<li><p>裁剪(结果数据集与裁剪数据集类型相同)</p>\n<p><img src=\"https://raw.githubusercontent.com/three-body2/Note/main/img/20210704112804.png\" alt=\"\"></p>\n</li>\n<li><p>擦除(结果数据集与被擦除数据集类型相同)</p>\n</li>\n<li><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210704122653.png\"/></p>\n</li>\n</ul>\n<h2 id=\"栅格数据分析\"><a href=\"#栅格数据分析\" class=\"headerlink\" title=\"栅格数据分析\"></a>栅格数据分析</h2><h3 id=\"代数运算\"><a href=\"#代数运算\" class=\"headerlink\" title=\"代数运算\"></a>代数运算</h3><ul>\n<li>输入栅格像元值的<strong>数学函数</strong>计算输出栅格的像元值</li>\n</ul>\n<h3 id=\"重分级\"><a href=\"#重分级\" class=\"headerlink\" title=\"重分级\"></a>重分级</h3><ul>\n<li>属性数据类别合并或转换成新类</li>\n</ul>\n<h3 id=\"邻域分析\"><a href=\"#邻域分析\" class=\"headerlink\" title=\"邻域分析\"></a>邻域分析</h3><ul>\n<li>邻域类型：矩形 圆形 环形 扇形</li>\n<li>应用：图像处理 <a href=\"#地形分析\">地形分析</a></li>\n</ul>\n<h2 id=\"网络分析\"><a href=\"#网络分析\" class=\"headerlink\" title=\"网络分析\"></a>网络分析</h2><h3 id=\"最短路径分析\"><a href=\"#最短路径分析\" class=\"headerlink\" title=\"最短路径分析\"></a>最短路径分析</h3><ul>\n<li>基本思想：把图的顶点分为S，T两类，若起始点到某顶点的最短通路已求出，则将其归入S，其余归入T，随着程序运行T的元素逐个转入S，直到目标顶点转入后结束</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/07/03/j9dHbWQV41eAtr6.png\" alt=\"Dijkstra\" style=\"zoom:67%;\" /></p>\n<h3 id=\"路径分析\"><a href=\"#路径分析\" class=\"headerlink\" title=\"路径分析\"></a>路径分析</h3><ul>\n<li>生成耗费距离栅格</li>\n<li>规划道路 管线 沟渠 传输线路</li>\n<li>提取线性要素</li>\n</ul>\n<h3 id=\"网络分析-1\"><a href=\"#网络分析-1\" class=\"headerlink\" title=\"网络分析\"></a>网络分析</h3><ul>\n<li><a href=\"#路径分析\">路径分析</a></li>\n<li>最佳设施</li>\n<li>服务器分析</li>\n<li>资源分配</li>\n<li>选址分析</li>\n</ul>\n<h2 id=\"地形分析\"><a href=\"#地形分析\" class=\"headerlink\" title=\"地形分析\"></a>地形分析</h2><ul>\n<li>制作等高线图</li>\n<li>坡度坡向分析</li>\n<li>可视性分析</li>\n<li>地图晕渲图</li>\n<li>测高设色图</li>\n</ul>\n<h2 id=\"空间插值\"><a href=\"#空间插值\" class=\"headerlink\" title=\"空间插值\"></a>空间插值</h2><ul>\n<li><p>将离散点的测量数据转换为连续的数据曲面，以便与其它空间现象的分布模式进行比较，包括空间内插和外推两种算法</p>\n</li>\n<li><p>内插：在已存在观测点的区域<strong>范围之内</strong>估计未观测点的特征值的过程</p>\n</li>\n<li><p>推估：在已存在观测点的区域<strong>范围之外</strong>估计未观测点的特征值的过程</p>\n</li>\n<li><p><strong>整体内插</strong>：利用每个可利用的控制点来估算未知点数据</p>\n</li>\n<li><p><strong>局部内插</strong>：使用<strong>一组</strong>已知点样本估算未知点数据</p>\n</li>\n<li><p>內插函数：线性内插 双线性内插 多项式内插 样条函数 多层曲面叠加</p>\n</li>\n<li><p>最近邻近法—&gt;泰森多边形法</p>\n<p>采用一种极端的边界内插方法，只用<strong>最近的单个点</strong>进行区域插值(TIN)</p>\n</li>\n</ul>\n<p><a href=\"#空间数据查询\">返回顶部</a></p>\n"},{"title":"空间特征与空间问题","date":"2021-11-10T11:08:52.000Z","description":"地理信息系统区别于其他信息系统的独特功能：空间分析处理的对象是地理空间目标，熟识地理空间数据的特征是进行GIS空间分析的前提和基础。","_content":"\n## 空间与地理空间\n\n> 地理信息系统区别于其他信息系统的独特功能：空间分析处理的对象是地理空间目标，熟识地理空间数据的特征是进行GIS空间分析的前提和基础\n>\n> **本质上**GIS是研究如何在数学化环境下进行空间目标获取，表达，存储，管理，分析与应用服务的相关理论，技术和方法\n\n### 欧式空间\n\n欧式空间是对**物理空间**的一种**数学**理解与表达，是GIS中常用的一种重要空间。欧式空间擅长平面二维空间目标的空间**方位**、**规模**的表达\n\n点用**一组唯一的实数对(x,y)**表示\n\n线在笛卡尔平面中，被定义为**点集合**\n\n面在笛卡尔平面中的面目标也称为多边形。多边形分为：**凸多边形、凹多边形及内环多边形**\n\n### 拓扑空间\n\n拓扑空间是另一种理解和描述物理空间的数学方法，也是GIS中常用的重要数学空间。而拓扑空间则是描述空间目标宏观分布或目标之间**相互关系**的有效方法\n\n拓扑关系是**不考虑距离和方向**的空间目标之间的关系，包括**相邻**，**邻接**，**关联**和**包含**等\n\nGIS中利用拓扑关系可**有效减少数据存储量**。在空间分析中利用拓扑可以高效地管理要素间的共同边界\n\n### 地理空间的概念\n\n地理空间是指经过投影变换后，在**笛卡尔坐标系**中的地球表层特征空间\n\n地理空间由**地理空间定位框架**和连接的**地理空间特征**组成\n\nGIS采用高度抽象的方法将空间地物或现象抽象成几种**基本类型**——点、线、面和复合对象。空间地物间的位置关系采用空间拓扑关系来描述。\n\n### 地理空间数据特征\n\n> 时空特征、多维结构、多尺度性、不确定性、海量性\n\n## 地理空间特征\n\n### <span id=\"空间位置\">空间位置</span>\n\n+ 空间位置包括绝对位置和相对位置\n  + **绝对位置**通常利用经纬度来确定，另外一个参照点或坐标系中坐标原点的位置\n  + **相对位置**是空间中一目标物相对于其他目标物的方位\n\n### 空间形态\n\n+ 空间形态：指空间目标的形状及其特征\n+ 空间形态不仅指**单个**目标的几何形状，还包括**同类**目标或**不同**目标在一定区域上的分布状态\n\n### 空间关系\n\n空间关系是指分布于不同空间位置的多个对象间的相互作用\n\n+ 距离和方位\n+ <a href=\"../位置与几何关系分析\">空间邻近性</a>\n+ 网络\n+ <a href=\"../空间相关性分析\">空间相关性</a>\n\n### 时空尺度\n\n时空尺度规定了地理空间**观测的广度与深度**，同时也表名了对地理空间**理解与描述的精度**\n\n## 地理空间问题\n\nGIS对地学数据的分析过程\n\n> 空间分布和格局、资源配置与规划、空间关系与影响、空间动态过程\n\n## 空间数据质量\n\n**误差**是指测量值与真实值之间的差异\n\n1. 源误差\n\n   **数据固有误差**和**数据采集过程**中产生的误差。\n\n   > 如：遥感数据误差、地图数字化误差、直接测量数据误差、属性数据误差\n\n2. 处理误差\n\n   数据录入后进行**数据处理过程中**产生的误差\n\n   > 包括计算机处理数据的数字模型和计算精度，处理影像的几何纠正方法，**坐标变换和比例变换**，投影变换，几何数据的编辑，属性数据的编辑，空间分析，数据压缩或去噪，数据格式转换等过程产生的误差\n\n3. 使用误差\n\n   使用误差指空间数据在**使用过程中**，由于数据的完备程度，时效性，拓扑关系的正确性，缺乏数据的质量报告，应用模型精度等引起的误差\n\n**分辨率**指最小的可分离单元或最小的可表达单元\n\n+ 对于**栅格数据**，指图像**像元大小**\n  + **分辨率越高**，**像素越小**，每个度量单元具有较多的信息和潜在的细节\n  + 分辨率越低，就意味着像素越大，每个度量单元的细节就越小，信息密度越低\n\n+ 对于**矢量数据**，指**坐标点的密度程度**\n  + 矢量空间数据库的比例尺主要由**分辨率**和**位置精度**决定\n\n+ 对于**专题图**，分辨率指所表达的最小物体的大小，称为**最小制图单元**\n\n**空间数据的一致性**是指空间数据所表达的空间实体在位置，属性和关系等方面与实际的符合程度\n\n+ 空间数据库的数据一致性\n  + 实体位置一致、形态与空间关系一致、属性、逻辑一致\n+ 多尺度表达的一致性\n  + 坐标系、投影、内容的一致性\n+ 多源数据集成的一致性\n\n","source":"_posts/空间特征与空间问题.md","raw":"---\ntitle: 空间特征与空间问题\ndate: 2021-11-10 19:08:52\ntags: GIS空间分析\ncategories: [GIS,GIS空间分析,空间特征与空间问题]\ndescription: 地理信息系统区别于其他信息系统的独特功能：空间分析处理的对象是地理空间目标，熟识地理空间数据的特征是进行GIS空间分析的前提和基础。\n---\n\n## 空间与地理空间\n\n> 地理信息系统区别于其他信息系统的独特功能：空间分析处理的对象是地理空间目标，熟识地理空间数据的特征是进行GIS空间分析的前提和基础\n>\n> **本质上**GIS是研究如何在数学化环境下进行空间目标获取，表达，存储，管理，分析与应用服务的相关理论，技术和方法\n\n### 欧式空间\n\n欧式空间是对**物理空间**的一种**数学**理解与表达，是GIS中常用的一种重要空间。欧式空间擅长平面二维空间目标的空间**方位**、**规模**的表达\n\n点用**一组唯一的实数对(x,y)**表示\n\n线在笛卡尔平面中，被定义为**点集合**\n\n面在笛卡尔平面中的面目标也称为多边形。多边形分为：**凸多边形、凹多边形及内环多边形**\n\n### 拓扑空间\n\n拓扑空间是另一种理解和描述物理空间的数学方法，也是GIS中常用的重要数学空间。而拓扑空间则是描述空间目标宏观分布或目标之间**相互关系**的有效方法\n\n拓扑关系是**不考虑距离和方向**的空间目标之间的关系，包括**相邻**，**邻接**，**关联**和**包含**等\n\nGIS中利用拓扑关系可**有效减少数据存储量**。在空间分析中利用拓扑可以高效地管理要素间的共同边界\n\n### 地理空间的概念\n\n地理空间是指经过投影变换后，在**笛卡尔坐标系**中的地球表层特征空间\n\n地理空间由**地理空间定位框架**和连接的**地理空间特征**组成\n\nGIS采用高度抽象的方法将空间地物或现象抽象成几种**基本类型**——点、线、面和复合对象。空间地物间的位置关系采用空间拓扑关系来描述。\n\n### 地理空间数据特征\n\n> 时空特征、多维结构、多尺度性、不确定性、海量性\n\n## 地理空间特征\n\n### <span id=\"空间位置\">空间位置</span>\n\n+ 空间位置包括绝对位置和相对位置\n  + **绝对位置**通常利用经纬度来确定，另外一个参照点或坐标系中坐标原点的位置\n  + **相对位置**是空间中一目标物相对于其他目标物的方位\n\n### 空间形态\n\n+ 空间形态：指空间目标的形状及其特征\n+ 空间形态不仅指**单个**目标的几何形状，还包括**同类**目标或**不同**目标在一定区域上的分布状态\n\n### 空间关系\n\n空间关系是指分布于不同空间位置的多个对象间的相互作用\n\n+ 距离和方位\n+ <a href=\"../位置与几何关系分析\">空间邻近性</a>\n+ 网络\n+ <a href=\"../空间相关性分析\">空间相关性</a>\n\n### 时空尺度\n\n时空尺度规定了地理空间**观测的广度与深度**，同时也表名了对地理空间**理解与描述的精度**\n\n## 地理空间问题\n\nGIS对地学数据的分析过程\n\n> 空间分布和格局、资源配置与规划、空间关系与影响、空间动态过程\n\n## 空间数据质量\n\n**误差**是指测量值与真实值之间的差异\n\n1. 源误差\n\n   **数据固有误差**和**数据采集过程**中产生的误差。\n\n   > 如：遥感数据误差、地图数字化误差、直接测量数据误差、属性数据误差\n\n2. 处理误差\n\n   数据录入后进行**数据处理过程中**产生的误差\n\n   > 包括计算机处理数据的数字模型和计算精度，处理影像的几何纠正方法，**坐标变换和比例变换**，投影变换，几何数据的编辑，属性数据的编辑，空间分析，数据压缩或去噪，数据格式转换等过程产生的误差\n\n3. 使用误差\n\n   使用误差指空间数据在**使用过程中**，由于数据的完备程度，时效性，拓扑关系的正确性，缺乏数据的质量报告，应用模型精度等引起的误差\n\n**分辨率**指最小的可分离单元或最小的可表达单元\n\n+ 对于**栅格数据**，指图像**像元大小**\n  + **分辨率越高**，**像素越小**，每个度量单元具有较多的信息和潜在的细节\n  + 分辨率越低，就意味着像素越大，每个度量单元的细节就越小，信息密度越低\n\n+ 对于**矢量数据**，指**坐标点的密度程度**\n  + 矢量空间数据库的比例尺主要由**分辨率**和**位置精度**决定\n\n+ 对于**专题图**，分辨率指所表达的最小物体的大小，称为**最小制图单元**\n\n**空间数据的一致性**是指空间数据所表达的空间实体在位置，属性和关系等方面与实际的符合程度\n\n+ 空间数据库的数据一致性\n  + 实体位置一致、形态与空间关系一致、属性、逻辑一致\n+ 多尺度表达的一致性\n  + 坐标系、投影、内容的一致性\n+ 多源数据集成的一致性\n\n","slug":"空间特征与空间问题","published":1,"updated":"2021-11-22T02:20:55.915Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt48004gjsvkczfd4cn4","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"空间与地理空间\"><a href=\"#空间与地理空间\" class=\"headerlink\" title=\"空间与地理空间\"></a>空间与地理空间</h2><blockquote>\n<p>地理信息系统区别于其他信息系统的独特功能：空间分析处理的对象是地理空间目标，熟识地理空间数据的特征是进行GIS空间分析的前提和基础</p>\n<p><strong>本质上</strong>GIS是研究如何在数学化环境下进行空间目标获取，表达，存储，管理，分析与应用服务的相关理论，技术和方法</p>\n</blockquote>\n<h3 id=\"欧式空间\"><a href=\"#欧式空间\" class=\"headerlink\" title=\"欧式空间\"></a>欧式空间</h3><p>欧式空间是对<strong>物理空间</strong>的一种<strong>数学</strong>理解与表达，是GIS中常用的一种重要空间。欧式空间擅长平面二维空间目标的空间<strong>方位</strong>、<strong>规模</strong>的表达</p>\n<p>点用<strong>一组唯一的实数对(x,y)</strong>表示</p>\n<p>线在笛卡尔平面中，被定义为<strong>点集合</strong></p>\n<p>面在笛卡尔平面中的面目标也称为多边形。多边形分为：<strong>凸多边形、凹多边形及内环多边形</strong></p>\n<h3 id=\"拓扑空间\"><a href=\"#拓扑空间\" class=\"headerlink\" title=\"拓扑空间\"></a>拓扑空间</h3><p>拓扑空间是另一种理解和描述物理空间的数学方法，也是GIS中常用的重要数学空间。而拓扑空间则是描述空间目标宏观分布或目标之间<strong>相互关系</strong>的有效方法</p>\n<p>拓扑关系是<strong>不考虑距离和方向</strong>的空间目标之间的关系，包括<strong>相邻</strong>，<strong>邻接</strong>，<strong>关联</strong>和<strong>包含</strong>等</p>\n<p>GIS中利用拓扑关系可<strong>有效减少数据存储量</strong>。在空间分析中利用拓扑可以高效地管理要素间的共同边界</p>\n<h3 id=\"地理空间的概念\"><a href=\"#地理空间的概念\" class=\"headerlink\" title=\"地理空间的概念\"></a>地理空间的概念</h3><p>地理空间是指经过投影变换后，在<strong>笛卡尔坐标系</strong>中的地球表层特征空间</p>\n<p>地理空间由<strong>地理空间定位框架</strong>和连接的<strong>地理空间特征</strong>组成</p>\n<p>GIS采用高度抽象的方法将空间地物或现象抽象成几种<strong>基本类型</strong>——点、线、面和复合对象。空间地物间的位置关系采用空间拓扑关系来描述。</p>\n<h3 id=\"地理空间数据特征\"><a href=\"#地理空间数据特征\" class=\"headerlink\" title=\"地理空间数据特征\"></a>地理空间数据特征</h3><blockquote>\n<p>时空特征、多维结构、多尺度性、不确定性、海量性</p>\n</blockquote>\n<h2 id=\"地理空间特征\"><a href=\"#地理空间特征\" class=\"headerlink\" title=\"地理空间特征\"></a>地理空间特征</h2><h3 id=\"空间位置\"><a href=\"#空间位置\" class=\"headerlink\" title=\"空间位置\"></a><span id=\"空间位置\">空间位置</span></h3><ul>\n<li>空间位置包括绝对位置和相对位置<ul>\n<li><strong>绝对位置</strong>通常利用经纬度来确定，另外一个参照点或坐标系中坐标原点的位置</li>\n<li><strong>相对位置</strong>是空间中一目标物相对于其他目标物的方位</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"空间形态\"><a href=\"#空间形态\" class=\"headerlink\" title=\"空间形态\"></a>空间形态</h3><ul>\n<li>空间形态：指空间目标的形状及其特征</li>\n<li>空间形态不仅指<strong>单个</strong>目标的几何形状，还包括<strong>同类</strong>目标或<strong>不同</strong>目标在一定区域上的分布状态</li>\n</ul>\n<h3 id=\"空间关系\"><a href=\"#空间关系\" class=\"headerlink\" title=\"空间关系\"></a>空间关系</h3><p>空间关系是指分布于不同空间位置的多个对象间的相互作用</p>\n<ul>\n<li>距离和方位</li>\n<li><a href=\"../位置与几何关系分析\">空间邻近性</a></li>\n<li>网络</li>\n<li><a href=\"../空间相关性分析\">空间相关性</a></li>\n</ul>\n<h3 id=\"时空尺度\"><a href=\"#时空尺度\" class=\"headerlink\" title=\"时空尺度\"></a>时空尺度</h3><p>时空尺度规定了地理空间<strong>观测的广度与深度</strong>，同时也表名了对地理空间<strong>理解与描述的精度</strong></p>\n<h2 id=\"地理空间问题\"><a href=\"#地理空间问题\" class=\"headerlink\" title=\"地理空间问题\"></a>地理空间问题</h2><p>GIS对地学数据的分析过程</p>\n<blockquote>\n<p>空间分布和格局、资源配置与规划、空间关系与影响、空间动态过程</p>\n</blockquote>\n<h2 id=\"空间数据质量\"><a href=\"#空间数据质量\" class=\"headerlink\" title=\"空间数据质量\"></a>空间数据质量</h2><p><strong>误差</strong>是指测量值与真实值之间的差异</p>\n<ol>\n<li><p>源误差</p>\n<p><strong>数据固有误差</strong>和<strong>数据采集过程</strong>中产生的误差。</p>\n<blockquote>\n<p>如：遥感数据误差、地图数字化误差、直接测量数据误差、属性数据误差</p>\n</blockquote>\n</li>\n<li><p>处理误差</p>\n<p>数据录入后进行<strong>数据处理过程中</strong>产生的误差</p>\n<blockquote>\n<p>包括计算机处理数据的数字模型和计算精度，处理影像的几何纠正方法，<strong>坐标变换和比例变换</strong>，投影变换，几何数据的编辑，属性数据的编辑，空间分析，数据压缩或去噪，数据格式转换等过程产生的误差</p>\n</blockquote>\n</li>\n<li><p>使用误差</p>\n<p>使用误差指空间数据在<strong>使用过程中</strong>，由于数据的完备程度，时效性，拓扑关系的正确性，缺乏数据的质量报告，应用模型精度等引起的误差</p>\n</li>\n</ol>\n<p><strong>分辨率</strong>指最小的可分离单元或最小的可表达单元</p>\n<ul>\n<li><p>对于<strong>栅格数据</strong>，指图像<strong>像元大小</strong></p>\n<ul>\n<li><strong>分辨率越高</strong>，<strong>像素越小</strong>，每个度量单元具有较多的信息和潜在的细节</li>\n<li>分辨率越低，就意味着像素越大，每个度量单元的细节就越小，信息密度越低</li>\n</ul>\n</li>\n<li><p>对于<strong>矢量数据</strong>，指<strong>坐标点的密度程度</strong></p>\n<ul>\n<li>矢量空间数据库的比例尺主要由<strong>分辨率</strong>和<strong>位置精度</strong>决定</li>\n</ul>\n</li>\n<li><p>对于<strong>专题图</strong>，分辨率指所表达的最小物体的大小，称为<strong>最小制图单元</strong></p>\n</li>\n</ul>\n<p><strong>空间数据的一致性</strong>是指空间数据所表达的空间实体在位置，属性和关系等方面与实际的符合程度</p>\n<ul>\n<li>空间数据库的数据一致性<ul>\n<li>实体位置一致、形态与空间关系一致、属性、逻辑一致</li>\n</ul>\n</li>\n<li>多尺度表达的一致性<ul>\n<li>坐标系、投影、内容的一致性</li>\n</ul>\n</li>\n<li>多源数据集成的一致性</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160701.webp","length":1395,"excerpt":"","more":"<h2 id=\"空间与地理空间\"><a href=\"#空间与地理空间\" class=\"headerlink\" title=\"空间与地理空间\"></a>空间与地理空间</h2><blockquote>\n<p>地理信息系统区别于其他信息系统的独特功能：空间分析处理的对象是地理空间目标，熟识地理空间数据的特征是进行GIS空间分析的前提和基础</p>\n<p><strong>本质上</strong>GIS是研究如何在数学化环境下进行空间目标获取，表达，存储，管理，分析与应用服务的相关理论，技术和方法</p>\n</blockquote>\n<h3 id=\"欧式空间\"><a href=\"#欧式空间\" class=\"headerlink\" title=\"欧式空间\"></a>欧式空间</h3><p>欧式空间是对<strong>物理空间</strong>的一种<strong>数学</strong>理解与表达，是GIS中常用的一种重要空间。欧式空间擅长平面二维空间目标的空间<strong>方位</strong>、<strong>规模</strong>的表达</p>\n<p>点用<strong>一组唯一的实数对(x,y)</strong>表示</p>\n<p>线在笛卡尔平面中，被定义为<strong>点集合</strong></p>\n<p>面在笛卡尔平面中的面目标也称为多边形。多边形分为：<strong>凸多边形、凹多边形及内环多边形</strong></p>\n<h3 id=\"拓扑空间\"><a href=\"#拓扑空间\" class=\"headerlink\" title=\"拓扑空间\"></a>拓扑空间</h3><p>拓扑空间是另一种理解和描述物理空间的数学方法，也是GIS中常用的重要数学空间。而拓扑空间则是描述空间目标宏观分布或目标之间<strong>相互关系</strong>的有效方法</p>\n<p>拓扑关系是<strong>不考虑距离和方向</strong>的空间目标之间的关系，包括<strong>相邻</strong>，<strong>邻接</strong>，<strong>关联</strong>和<strong>包含</strong>等</p>\n<p>GIS中利用拓扑关系可<strong>有效减少数据存储量</strong>。在空间分析中利用拓扑可以高效地管理要素间的共同边界</p>\n<h3 id=\"地理空间的概念\"><a href=\"#地理空间的概念\" class=\"headerlink\" title=\"地理空间的概念\"></a>地理空间的概念</h3><p>地理空间是指经过投影变换后，在<strong>笛卡尔坐标系</strong>中的地球表层特征空间</p>\n<p>地理空间由<strong>地理空间定位框架</strong>和连接的<strong>地理空间特征</strong>组成</p>\n<p>GIS采用高度抽象的方法将空间地物或现象抽象成几种<strong>基本类型</strong>——点、线、面和复合对象。空间地物间的位置关系采用空间拓扑关系来描述。</p>\n<h3 id=\"地理空间数据特征\"><a href=\"#地理空间数据特征\" class=\"headerlink\" title=\"地理空间数据特征\"></a>地理空间数据特征</h3><blockquote>\n<p>时空特征、多维结构、多尺度性、不确定性、海量性</p>\n</blockquote>\n<h2 id=\"地理空间特征\"><a href=\"#地理空间特征\" class=\"headerlink\" title=\"地理空间特征\"></a>地理空间特征</h2><h3 id=\"空间位置\"><a href=\"#空间位置\" class=\"headerlink\" title=\"空间位置\"></a><span id=\"空间位置\">空间位置</span></h3><ul>\n<li>空间位置包括绝对位置和相对位置<ul>\n<li><strong>绝对位置</strong>通常利用经纬度来确定，另外一个参照点或坐标系中坐标原点的位置</li>\n<li><strong>相对位置</strong>是空间中一目标物相对于其他目标物的方位</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"空间形态\"><a href=\"#空间形态\" class=\"headerlink\" title=\"空间形态\"></a>空间形态</h3><ul>\n<li>空间形态：指空间目标的形状及其特征</li>\n<li>空间形态不仅指<strong>单个</strong>目标的几何形状，还包括<strong>同类</strong>目标或<strong>不同</strong>目标在一定区域上的分布状态</li>\n</ul>\n<h3 id=\"空间关系\"><a href=\"#空间关系\" class=\"headerlink\" title=\"空间关系\"></a>空间关系</h3><p>空间关系是指分布于不同空间位置的多个对象间的相互作用</p>\n<ul>\n<li>距离和方位</li>\n<li><a href=\"../位置与几何关系分析\">空间邻近性</a></li>\n<li>网络</li>\n<li><a href=\"../空间相关性分析\">空间相关性</a></li>\n</ul>\n<h3 id=\"时空尺度\"><a href=\"#时空尺度\" class=\"headerlink\" title=\"时空尺度\"></a>时空尺度</h3><p>时空尺度规定了地理空间<strong>观测的广度与深度</strong>，同时也表名了对地理空间<strong>理解与描述的精度</strong></p>\n<h2 id=\"地理空间问题\"><a href=\"#地理空间问题\" class=\"headerlink\" title=\"地理空间问题\"></a>地理空间问题</h2><p>GIS对地学数据的分析过程</p>\n<blockquote>\n<p>空间分布和格局、资源配置与规划、空间关系与影响、空间动态过程</p>\n</blockquote>\n<h2 id=\"空间数据质量\"><a href=\"#空间数据质量\" class=\"headerlink\" title=\"空间数据质量\"></a>空间数据质量</h2><p><strong>误差</strong>是指测量值与真实值之间的差异</p>\n<ol>\n<li><p>源误差</p>\n<p><strong>数据固有误差</strong>和<strong>数据采集过程</strong>中产生的误差。</p>\n<blockquote>\n<p>如：遥感数据误差、地图数字化误差、直接测量数据误差、属性数据误差</p>\n</blockquote>\n</li>\n<li><p>处理误差</p>\n<p>数据录入后进行<strong>数据处理过程中</strong>产生的误差</p>\n<blockquote>\n<p>包括计算机处理数据的数字模型和计算精度，处理影像的几何纠正方法，<strong>坐标变换和比例变换</strong>，投影变换，几何数据的编辑，属性数据的编辑，空间分析，数据压缩或去噪，数据格式转换等过程产生的误差</p>\n</blockquote>\n</li>\n<li><p>使用误差</p>\n<p>使用误差指空间数据在<strong>使用过程中</strong>，由于数据的完备程度，时效性，拓扑关系的正确性，缺乏数据的质量报告，应用模型精度等引起的误差</p>\n</li>\n</ol>\n<p><strong>分辨率</strong>指最小的可分离单元或最小的可表达单元</p>\n<ul>\n<li><p>对于<strong>栅格数据</strong>，指图像<strong>像元大小</strong></p>\n<ul>\n<li><strong>分辨率越高</strong>，<strong>像素越小</strong>，每个度量单元具有较多的信息和潜在的细节</li>\n<li>分辨率越低，就意味着像素越大，每个度量单元的细节就越小，信息密度越低</li>\n</ul>\n</li>\n<li><p>对于<strong>矢量数据</strong>，指<strong>坐标点的密度程度</strong></p>\n<ul>\n<li>矢量空间数据库的比例尺主要由<strong>分辨率</strong>和<strong>位置精度</strong>决定</li>\n</ul>\n</li>\n<li><p>对于<strong>专题图</strong>，分辨率指所表达的最小物体的大小，称为<strong>最小制图单元</strong></p>\n</li>\n</ul>\n<p><strong>空间数据的一致性</strong>是指空间数据所表达的空间实体在位置，属性和关系等方面与实际的符合程度</p>\n<ul>\n<li>空间数据库的数据一致性<ul>\n<li>实体位置一致、形态与空间关系一致、属性、逻辑一致</li>\n</ul>\n</li>\n<li>多尺度表达的一致性<ul>\n<li>坐标系、投影、内容的一致性</li>\n</ul>\n</li>\n<li>多源数据集成的一致性</li>\n</ul>\n"},{"title":"空间相关性分析","date":"2021-11-11T11:15:24.000Z","description":null,"_content":"\n一般统计分析指对GIS地理空间数据库中的属性数据进行常规统计分析包括统计描述和统计推断\n\n<!-- more -->\n\n空间统计，就是将空间信息与属性信息进行统一的考虑，研究特点属性或属性之间与空间位置的关系\n\n空间统计分析，即空间数据的统计分析，是现代计量地理学中一个快速发展的方向和领域\n\n空间自相关：研究空间中，某个空间单元与其周围的单元之间，就某种特征，通过统计方法，进行空间相关性的计算，以分析这些空间单元在空间上分布现象的特性\n\n空间相关性：检测空间上两种现象的变化是否存在相关性。比如，水稻的产量往往与所处的土壤的肥沃程度相关\n\n空间数据分析与传统统计分析主要有两大差异：\n\n1. 空间数据间并非独立，而是在维空间中具有某种空间相关性。且在不同的空间分辨率下呈现不同之相关程度\n\n2. 地球只有一个，大多数空间问题仅有一组(空间分布不规则的)观测值，而无重复观测数据。因此，空间现象的了解与描述是极为复杂的而传统方法，与其是建立在独立样本上的统计方法，不适合分析空间数据\n\n   经典统计：独立性、随机性假设\n\n   空间统计：自相关、依赖性、异质性\n\n探索性数据分析的特点(EDA)：对数据来源的总体不作假设，并且假设检验也经常被排除在外。使用统计图表、图形和统计概括方法对数据的特征进行分析和描述。\n\n> EDA + GIS $\\rightarrow$ ESDA\n\n探索性空间数据分析(ESDA)：描述和显示空间分布、识别非常规的空间位置、发现隐含空间关系等的一系列技术的集合。与EDA的主要区别就在于它考虑了数据的空间特性\n\n探索性数据分析方法：直方图、散点图、茎叶图、箱线图、QQ图、趋势分析、半变异/协方差函数云图\n\n![直方图](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090141.png)\n\n![茎叶图](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090235.png)\n\n![箱线图](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090318.png)\n\n![QQ图](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090358.png)\n\n![趋势分析](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112091035.png)\n\n![云图](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112091114.png)\n\n<span id=\"探索性空间分析\">探索性空间数据分析的作用</span>\n\n1. 检验数据分布\n\n   用**直方图**或**QQ概率图**可以直观地检验数据分布的形状，并确定分布中心\n\n2. 寻找数据离群值\n\n   用**直方图**和**半变异函数云图**都可以方便地找出离群值的样点\n\n3. 全局趋势分析\n\n   通过用**趋势分析工具**可以直观地得到是否存在全局趋势\n\n<span id=\"空间自相关分析\">空间自相关分析</span>\n\n空间自相关是指同一个变量在不同空间位置上的相关性。目的在于检验空间单元与其相邻的空间单元的属性间是否相似性\n\n空间自相关分析需要的空间数据类型是点或面数据，分析的对象是具有点、面分布特征的特定属性\n\n空间正相关：当某一测样点属性值高，而其相邻点同一属性值也高时，为空间正相关；反之，为空间负相关\n\n各向同性：当空间自相关仅与两点间距离有关时，称为各向同性；否则为各向异性\n\n","source":"_posts/空间相关性分析.md","raw":"---\ntitle: 空间相关性分析\ndate: 2021-11-11 19:15:24\ntags: GIS空间分析\ncategories: [GIS,GIS空间分析,空间相关性分析]\ndescription: \n---\n\n一般统计分析指对GIS地理空间数据库中的属性数据进行常规统计分析包括统计描述和统计推断\n\n<!-- more -->\n\n空间统计，就是将空间信息与属性信息进行统一的考虑，研究特点属性或属性之间与空间位置的关系\n\n空间统计分析，即空间数据的统计分析，是现代计量地理学中一个快速发展的方向和领域\n\n空间自相关：研究空间中，某个空间单元与其周围的单元之间，就某种特征，通过统计方法，进行空间相关性的计算，以分析这些空间单元在空间上分布现象的特性\n\n空间相关性：检测空间上两种现象的变化是否存在相关性。比如，水稻的产量往往与所处的土壤的肥沃程度相关\n\n空间数据分析与传统统计分析主要有两大差异：\n\n1. 空间数据间并非独立，而是在维空间中具有某种空间相关性。且在不同的空间分辨率下呈现不同之相关程度\n\n2. 地球只有一个，大多数空间问题仅有一组(空间分布不规则的)观测值，而无重复观测数据。因此，空间现象的了解与描述是极为复杂的而传统方法，与其是建立在独立样本上的统计方法，不适合分析空间数据\n\n   经典统计：独立性、随机性假设\n\n   空间统计：自相关、依赖性、异质性\n\n探索性数据分析的特点(EDA)：对数据来源的总体不作假设，并且假设检验也经常被排除在外。使用统计图表、图形和统计概括方法对数据的特征进行分析和描述。\n\n> EDA + GIS $\\rightarrow$ ESDA\n\n探索性空间数据分析(ESDA)：描述和显示空间分布、识别非常规的空间位置、发现隐含空间关系等的一系列技术的集合。与EDA的主要区别就在于它考虑了数据的空间特性\n\n探索性数据分析方法：直方图、散点图、茎叶图、箱线图、QQ图、趋势分析、半变异/协方差函数云图\n\n![直方图](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090141.png)\n\n![茎叶图](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090235.png)\n\n![箱线图](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090318.png)\n\n![QQ图](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090358.png)\n\n![趋势分析](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112091035.png)\n\n![云图](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112091114.png)\n\n<span id=\"探索性空间分析\">探索性空间数据分析的作用</span>\n\n1. 检验数据分布\n\n   用**直方图**或**QQ概率图**可以直观地检验数据分布的形状，并确定分布中心\n\n2. 寻找数据离群值\n\n   用**直方图**和**半变异函数云图**都可以方便地找出离群值的样点\n\n3. 全局趋势分析\n\n   通过用**趋势分析工具**可以直观地得到是否存在全局趋势\n\n<span id=\"空间自相关分析\">空间自相关分析</span>\n\n空间自相关是指同一个变量在不同空间位置上的相关性。目的在于检验空间单元与其相邻的空间单元的属性间是否相似性\n\n空间自相关分析需要的空间数据类型是点或面数据，分析的对象是具有点、面分布特征的特定属性\n\n空间正相关：当某一测样点属性值高，而其相邻点同一属性值也高时，为空间正相关；反之，为空间负相关\n\n各向同性：当空间自相关仅与两点间距离有关时，称为各向同性；否则为各向异性\n\n","slug":"空间相关性分析","published":1,"updated":"2021-11-21T11:51:25.698Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt49004ijsvkcdpyczwk","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>一般统计分析指对GIS地理空间数据库中的属性数据进行常规统计分析包括统计描述和统计推断</p>\n<span id=\"more\"></span>\n<p>空间统计，就是将空间信息与属性信息进行统一的考虑，研究特点属性或属性之间与空间位置的关系</p>\n<p>空间统计分析，即空间数据的统计分析，是现代计量地理学中一个快速发展的方向和领域</p>\n<p>空间自相关：研究空间中，某个空间单元与其周围的单元之间，就某种特征，通过统计方法，进行空间相关性的计算，以分析这些空间单元在空间上分布现象的特性</p>\n<p>空间相关性：检测空间上两种现象的变化是否存在相关性。比如，水稻的产量往往与所处的土壤的肥沃程度相关</p>\n<p>空间数据分析与传统统计分析主要有两大差异：</p>\n<ol>\n<li><p>空间数据间并非独立，而是在维空间中具有某种空间相关性。且在不同的空间分辨率下呈现不同之相关程度</p>\n</li>\n<li><p>地球只有一个，大多数空间问题仅有一组(空间分布不规则的)观测值，而无重复观测数据。因此，空间现象的了解与描述是极为复杂的而传统方法，与其是建立在独立样本上的统计方法，不适合分析空间数据</p>\n<p>经典统计：独立性、随机性假设</p>\n<p>空间统计：自相关、依赖性、异质性</p>\n</li>\n</ol>\n<p>探索性数据分析的特点(EDA)：对数据来源的总体不作假设，并且假设检验也经常被排除在外。使用统计图表、图形和统计概括方法对数据的特征进行分析和描述。</p>\n<blockquote>\n<p>EDA + GIS $\\rightarrow$ ESDA</p>\n</blockquote>\n<p>探索性空间数据分析(ESDA)：描述和显示空间分布、识别非常规的空间位置、发现隐含空间关系等的一系列技术的集合。与EDA的主要区别就在于它考虑了数据的空间特性</p>\n<p>探索性数据分析方法：直方图、散点图、茎叶图、箱线图、QQ图、趋势分析、半变异/协方差函数云图</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090141.png\" alt=\"直方图\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090235.png\" alt=\"茎叶图\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090318.png\" alt=\"箱线图\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090358.png\" alt=\"QQ图\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112091035.png\" alt=\"趋势分析\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112091114.png\" alt=\"云图\"></p>\n<p><span id=\"探索性空间分析\">探索性空间数据分析的作用</span></p>\n<ol>\n<li><p>检验数据分布</p>\n<p>用<strong>直方图</strong>或<strong>QQ概率图</strong>可以直观地检验数据分布的形状，并确定分布中心</p>\n</li>\n<li><p>寻找数据离群值</p>\n<p>用<strong>直方图</strong>和<strong>半变异函数云图</strong>都可以方便地找出离群值的样点</p>\n</li>\n<li><p>全局趋势分析</p>\n<p>通过用<strong>趋势分析工具</strong>可以直观地得到是否存在全局趋势</p>\n</li>\n</ol>\n<p><span id=\"空间自相关分析\">空间自相关分析</span></p>\n<p>空间自相关是指同一个变量在不同空间位置上的相关性。目的在于检验空间单元与其相邻的空间单元的属性间是否相似性</p>\n<p>空间自相关分析需要的空间数据类型是点或面数据，分析的对象是具有点、面分布特征的特定属性</p>\n<p>空间正相关：当某一测样点属性值高，而其相邻点同一属性值也高时，为空间正相关；反之，为空间负相关</p>\n<p>各向同性：当空间自相关仅与两点间距离有关时，称为各向同性；否则为各向异性</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160623.jpg","length":959,"excerpt":"<p>一般统计分析指对GIS地理空间数据库中的属性数据进行常规统计分析包括统计描述和统计推断</p>","more":"<p>空间统计，就是将空间信息与属性信息进行统一的考虑，研究特点属性或属性之间与空间位置的关系</p>\n<p>空间统计分析，即空间数据的统计分析，是现代计量地理学中一个快速发展的方向和领域</p>\n<p>空间自相关：研究空间中，某个空间单元与其周围的单元之间，就某种特征，通过统计方法，进行空间相关性的计算，以分析这些空间单元在空间上分布现象的特性</p>\n<p>空间相关性：检测空间上两种现象的变化是否存在相关性。比如，水稻的产量往往与所处的土壤的肥沃程度相关</p>\n<p>空间数据分析与传统统计分析主要有两大差异：</p>\n<ol>\n<li><p>空间数据间并非独立，而是在维空间中具有某种空间相关性。且在不同的空间分辨率下呈现不同之相关程度</p>\n</li>\n<li><p>地球只有一个，大多数空间问题仅有一组(空间分布不规则的)观测值，而无重复观测数据。因此，空间现象的了解与描述是极为复杂的而传统方法，与其是建立在独立样本上的统计方法，不适合分析空间数据</p>\n<p>经典统计：独立性、随机性假设</p>\n<p>空间统计：自相关、依赖性、异质性</p>\n</li>\n</ol>\n<p>探索性数据分析的特点(EDA)：对数据来源的总体不作假设，并且假设检验也经常被排除在外。使用统计图表、图形和统计概括方法对数据的特征进行分析和描述。</p>\n<blockquote>\n<p>EDA + GIS $\\rightarrow$ ESDA</p>\n</blockquote>\n<p>探索性空间数据分析(ESDA)：描述和显示空间分布、识别非常规的空间位置、发现隐含空间关系等的一系列技术的集合。与EDA的主要区别就在于它考虑了数据的空间特性</p>\n<p>探索性数据分析方法：直方图、散点图、茎叶图、箱线图、QQ图、趋势分析、半变异/协方差函数云图</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090141.png\" alt=\"直方图\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090235.png\" alt=\"茎叶图\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090318.png\" alt=\"箱线图\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112090358.png\" alt=\"QQ图\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112091035.png\" alt=\"趋势分析\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112091114.png\" alt=\"云图\"></p>\n<p><span id=\"探索性空间分析\">探索性空间数据分析的作用</span></p>\n<ol>\n<li><p>检验数据分布</p>\n<p>用<strong>直方图</strong>或<strong>QQ概率图</strong>可以直观地检验数据分布的形状，并确定分布中心</p>\n</li>\n<li><p>寻找数据离群值</p>\n<p>用<strong>直方图</strong>和<strong>半变异函数云图</strong>都可以方便地找出离群值的样点</p>\n</li>\n<li><p>全局趋势分析</p>\n<p>通过用<strong>趋势分析工具</strong>可以直观地得到是否存在全局趋势</p>\n</li>\n</ol>\n<p><span id=\"空间自相关分析\">空间自相关分析</span></p>\n<p>空间自相关是指同一个变量在不同空间位置上的相关性。目的在于检验空间单元与其相邻的空间单元的属性间是否相似性</p>\n<p>空间自相关分析需要的空间数据类型是点或面数据，分析的对象是具有点、面分布特征的特定属性</p>\n<p>空间正相关：当某一测样点属性值高，而其相邻点同一属性值也高时，为空间正相关；反之，为空间负相关</p>\n<p>各向同性：当空间自相关仅与两点间距离有关时，称为各向同性；否则为各向异性</p>"},{"title":"空间量算与数据探测","date":"2021-11-10T13:45:03.000Z","mathjax":true,"description":"空间量算与数据探测","_content":"\n## <span id=\"基本几何参数量测\">基本几何参数量测</span>\n\n### <a href=\"../空间特征与空间问题#空间位置\">位置量测</a>\n\n空间位置是所有空间目标共有的描述参数，通过地理空间坐标系来表达\n\n<div class=\"info\">\n\n> 包括绝对位置、相对位置\n\n</div>\n\n### 中心(几何)量测\n\n反映一组数据的一般情况与平均水平\n\n即地理区位中心，仅于空间坐标有关，生成一个点图层\n\n### 重心量测(加权平均中心)\n\n人口重心、经济重心、生态重心、工业重心\n\n### 长度量测\n\n矢量线状地物的长度量测\n\n栅格线状地物的长度量测\n\n#### 长度测量(距离测量)\n\n##### 1. <span id=\"欧氏距离\">欧氏距离</span>(简单距离)\n\n$$\nD(_{p_1 p_2})=\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}\n$$\n\n##### 2. 曼哈顿距离\n$$\nd_{12}=|X_{1}-X_{2}|+|y_1-y_2|\n$$\n\n##### 3. 路网距离\n\n+ 属于路径分析\n+ 路网距离定义的外延：最小成本距离\n\n### 面积量测\n\n投影面积\n\n曲面面积\n\n### 体积量测\n\n体积的概念：空间曲面与一基准面（水平面）的容积\n\n## <span id=\"地理空间目标形态量测\">地理空间目标形态量测</span>\n\n### 线状地物形态的量测\n\n+ 曲率与平均曲率\n\n  + 曲率：**曲线切线方向角**相对于弧长的变化率\n\n+ 弯曲度\n\n  + 线实体的**实际长度**与线实体起点和终点的**直线距离**之比\n\n+ 分形维数\n\n  + 分形维描述了曲线的复杂弯曲程度\n\n### 面状地物的形态\n\n+ 形状量算\n+ 简单图形概况\n  + 外接矩形\n  + 最大内切圆：多边形内点状符号的自动设置定位的关键\n  + 最小外接圆\n  + 最小凸多边形：包含所有数据点，面积也达到最小值\n+ 空间完整性\n  + 欧拉数\n\n## 空间分布计算与分析\n\n### 空间分布\n\n空间上的**组合、排列、彼此间的相互关系**，反映同类空间事物的**群体**定位特征\n\n### 空间分布类型\n\n+ 点分布\n  + 空间地物：实地点或者相对于比例尺由面转化成的点沿线状或区域离散分布，表达**离散分布现象或连续分布现象**\n+ 线分布\n+ 面分布\n\n### <span id=\"点模式\">点分布空间量测</span>\n\n#### 分布中心\n\n+ 中心要素\n\n  + 现有要素中，距离其他要素之和最小的要素\n\n+ **算术平均中心**\n\n  + 平均工资、平均收入(对极值非常敏感)\n\n+ **中位中心**\n\n  + 中位中心到其他所有点的距离和最小\n\n    $$\n    \\displaystyle\\sum_{i=1}^n\\sqrt{(x_i-x_m)^2+(y_i-y_m)^2}=min\n    $$\n    \n\n+ **加权平均中心**\n\n  + 不同仓库的承载力的差异作为属性值来考虑\n\n+ **极值中心**\n\n  **算术平均中心对极值非常敏感**\n\n  **中位数中心对异常值较为稳健**\n\n#### 分布轴线\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211121090056.png)\n\n#### 离散度\n\n表示**面域上离散点的分布情况**，是对分布密度和分布中心的补充，相同的分布中心，离散程度可以不同；相同的分布密度，因离散情况的不同也反映出不同的分布特性\n\n#### 分布密度\n\n单位分布区域内分布对象的数量\n\n分布密度类型\n\n+ 全局分布密度\n+ 局部分布密度\n\n#### 线分布空间量测\n\n线密度、最近邻分析、线状对象的定向、连通度\n\n### 面分布空间量测\n\n离散区域分布模式、连续区域分布模式\n","source":"_posts/空间量算与数据探测.md","raw":"---\ntitle: 空间量算与数据探测\ndate: 2021-11-10 21:45:03\ntags: GIS空间分析\nmathjax: true\ncategories: [GIS,GIS空间分析,空间量算与数据探测]\ndescription: 空间量算与数据探测\n---\n\n## <span id=\"基本几何参数量测\">基本几何参数量测</span>\n\n### <a href=\"../空间特征与空间问题#空间位置\">位置量测</a>\n\n空间位置是所有空间目标共有的描述参数，通过地理空间坐标系来表达\n\n<div class=\"info\">\n\n> 包括绝对位置、相对位置\n\n</div>\n\n### 中心(几何)量测\n\n反映一组数据的一般情况与平均水平\n\n即地理区位中心，仅于空间坐标有关，生成一个点图层\n\n### 重心量测(加权平均中心)\n\n人口重心、经济重心、生态重心、工业重心\n\n### 长度量测\n\n矢量线状地物的长度量测\n\n栅格线状地物的长度量测\n\n#### 长度测量(距离测量)\n\n##### 1. <span id=\"欧氏距离\">欧氏距离</span>(简单距离)\n\n$$\nD(_{p_1 p_2})=\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}\n$$\n\n##### 2. 曼哈顿距离\n$$\nd_{12}=|X_{1}-X_{2}|+|y_1-y_2|\n$$\n\n##### 3. 路网距离\n\n+ 属于路径分析\n+ 路网距离定义的外延：最小成本距离\n\n### 面积量测\n\n投影面积\n\n曲面面积\n\n### 体积量测\n\n体积的概念：空间曲面与一基准面（水平面）的容积\n\n## <span id=\"地理空间目标形态量测\">地理空间目标形态量测</span>\n\n### 线状地物形态的量测\n\n+ 曲率与平均曲率\n\n  + 曲率：**曲线切线方向角**相对于弧长的变化率\n\n+ 弯曲度\n\n  + 线实体的**实际长度**与线实体起点和终点的**直线距离**之比\n\n+ 分形维数\n\n  + 分形维描述了曲线的复杂弯曲程度\n\n### 面状地物的形态\n\n+ 形状量算\n+ 简单图形概况\n  + 外接矩形\n  + 最大内切圆：多边形内点状符号的自动设置定位的关键\n  + 最小外接圆\n  + 最小凸多边形：包含所有数据点，面积也达到最小值\n+ 空间完整性\n  + 欧拉数\n\n## 空间分布计算与分析\n\n### 空间分布\n\n空间上的**组合、排列、彼此间的相互关系**，反映同类空间事物的**群体**定位特征\n\n### 空间分布类型\n\n+ 点分布\n  + 空间地物：实地点或者相对于比例尺由面转化成的点沿线状或区域离散分布，表达**离散分布现象或连续分布现象**\n+ 线分布\n+ 面分布\n\n### <span id=\"点模式\">点分布空间量测</span>\n\n#### 分布中心\n\n+ 中心要素\n\n  + 现有要素中，距离其他要素之和最小的要素\n\n+ **算术平均中心**\n\n  + 平均工资、平均收入(对极值非常敏感)\n\n+ **中位中心**\n\n  + 中位中心到其他所有点的距离和最小\n\n    $$\n    \\displaystyle\\sum_{i=1}^n\\sqrt{(x_i-x_m)^2+(y_i-y_m)^2}=min\n    $$\n    \n\n+ **加权平均中心**\n\n  + 不同仓库的承载力的差异作为属性值来考虑\n\n+ **极值中心**\n\n  **算术平均中心对极值非常敏感**\n\n  **中位数中心对异常值较为稳健**\n\n#### 分布轴线\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211121090056.png)\n\n#### 离散度\n\n表示**面域上离散点的分布情况**，是对分布密度和分布中心的补充，相同的分布中心，离散程度可以不同；相同的分布密度，因离散情况的不同也反映出不同的分布特性\n\n#### 分布密度\n\n单位分布区域内分布对象的数量\n\n分布密度类型\n\n+ 全局分布密度\n+ 局部分布密度\n\n#### 线分布空间量测\n\n线密度、最近邻分析、线状对象的定向、连通度\n\n### 面分布空间量测\n\n离散区域分布模式、连续区域分布模式\n","slug":"空间量算与数据探测","published":1,"updated":"2021-12-27T08:07:36.831Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt4a004mjsvkfkny0o6p","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"基本几何参数量测\"><a href=\"#基本几何参数量测\" class=\"headerlink\" title=\"基本几何参数量测\"></a><span id=\"基本几何参数量测\">基本几何参数量测</span></h2><h3 id=\"位置量测\"><a href=\"#位置量测\" class=\"headerlink\" title=\"位置量测\"></a><a href=\"../空间特征与空间问题#空间位置\">位置量测</a></h3><p>空间位置是所有空间目标共有的描述参数，通过地理空间坐标系来表达</p>\n<div class=\"info\">\n\n&gt; 包括绝对位置、相对位置\n\n</div>\n\n<h3 id=\"中心-几何-量测\"><a href=\"#中心-几何-量测\" class=\"headerlink\" title=\"中心(几何)量测\"></a>中心(几何)量测</h3><p>反映一组数据的一般情况与平均水平</p>\n<p>即地理区位中心，仅于空间坐标有关，生成一个点图层</p>\n<h3 id=\"重心量测-加权平均中心\"><a href=\"#重心量测-加权平均中心\" class=\"headerlink\" title=\"重心量测(加权平均中心)\"></a>重心量测(加权平均中心)</h3><p>人口重心、经济重心、生态重心、工业重心</p>\n<h3 id=\"长度量测\"><a href=\"#长度量测\" class=\"headerlink\" title=\"长度量测\"></a>长度量测</h3><p>矢量线状地物的长度量测</p>\n<p>栅格线状地物的长度量测</p>\n<h4 id=\"长度测量-距离测量\"><a href=\"#长度测量-距离测量\" class=\"headerlink\" title=\"长度测量(距离测量)\"></a>长度测量(距离测量)</h4><h5 id=\"1-欧氏距离-简单距离\"><a href=\"#1-欧氏距离-简单距离\" class=\"headerlink\" title=\"1. 欧氏距离(简单距离)\"></a>1. <span id=\"欧氏距离\">欧氏距离</span>(简单距离)</h5><script type=\"math/tex; mode=display\">\nD(_{p_1 p_2})=\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}</script><h5 id=\"2-曼哈顿距离\"><a href=\"#2-曼哈顿距离\" class=\"headerlink\" title=\"2. 曼哈顿距离\"></a>2. 曼哈顿距离</h5><script type=\"math/tex; mode=display\">\nd_{12}=|X_{1}-X_{2}|+|y_1-y_2|</script><h5 id=\"3-路网距离\"><a href=\"#3-路网距离\" class=\"headerlink\" title=\"3. 路网距离\"></a>3. 路网距离</h5><ul>\n<li>属于路径分析</li>\n<li>路网距离定义的外延：最小成本距离</li>\n</ul>\n<h3 id=\"面积量测\"><a href=\"#面积量测\" class=\"headerlink\" title=\"面积量测\"></a>面积量测</h3><p>投影面积</p>\n<p>曲面面积</p>\n<h3 id=\"体积量测\"><a href=\"#体积量测\" class=\"headerlink\" title=\"体积量测\"></a>体积量测</h3><p>体积的概念：空间曲面与一基准面（水平面）的容积</p>\n<h2 id=\"地理空间目标形态量测\"><a href=\"#地理空间目标形态量测\" class=\"headerlink\" title=\"地理空间目标形态量测\"></a><span id=\"地理空间目标形态量测\">地理空间目标形态量测</span></h2><h3 id=\"线状地物形态的量测\"><a href=\"#线状地物形态的量测\" class=\"headerlink\" title=\"线状地物形态的量测\"></a>线状地物形态的量测</h3><ul>\n<li><p>曲率与平均曲率</p>\n<ul>\n<li>曲率：<strong>曲线切线方向角</strong>相对于弧长的变化率</li>\n</ul>\n</li>\n<li><p>弯曲度</p>\n<ul>\n<li>线实体的<strong>实际长度</strong>与线实体起点和终点的<strong>直线距离</strong>之比</li>\n</ul>\n</li>\n<li><p>分形维数</p>\n<ul>\n<li>分形维描述了曲线的复杂弯曲程度</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"面状地物的形态\"><a href=\"#面状地物的形态\" class=\"headerlink\" title=\"面状地物的形态\"></a>面状地物的形态</h3><ul>\n<li>形状量算</li>\n<li>简单图形概况<ul>\n<li>外接矩形</li>\n<li>最大内切圆：多边形内点状符号的自动设置定位的关键</li>\n<li>最小外接圆</li>\n<li>最小凸多边形：包含所有数据点，面积也达到最小值</li>\n</ul>\n</li>\n<li>空间完整性<ul>\n<li>欧拉数</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"空间分布计算与分析\"><a href=\"#空间分布计算与分析\" class=\"headerlink\" title=\"空间分布计算与分析\"></a>空间分布计算与分析</h2><h3 id=\"空间分布\"><a href=\"#空间分布\" class=\"headerlink\" title=\"空间分布\"></a>空间分布</h3><p>空间上的<strong>组合、排列、彼此间的相互关系</strong>，反映同类空间事物的<strong>群体</strong>定位特征</p>\n<h3 id=\"空间分布类型\"><a href=\"#空间分布类型\" class=\"headerlink\" title=\"空间分布类型\"></a>空间分布类型</h3><ul>\n<li>点分布<ul>\n<li>空间地物：实地点或者相对于比例尺由面转化成的点沿线状或区域离散分布，表达<strong>离散分布现象或连续分布现象</strong></li>\n</ul>\n</li>\n<li>线分布</li>\n<li>面分布</li>\n</ul>\n<h3 id=\"点分布空间量测\"><a href=\"#点分布空间量测\" class=\"headerlink\" title=\"点分布空间量测\"></a><span id=\"点模式\">点分布空间量测</span></h3><h4 id=\"分布中心\"><a href=\"#分布中心\" class=\"headerlink\" title=\"分布中心\"></a>分布中心</h4><ul>\n<li><p>中心要素</p>\n<ul>\n<li>现有要素中，距离其他要素之和最小的要素</li>\n</ul>\n</li>\n<li><p><strong>算术平均中心</strong></p>\n<ul>\n<li>平均工资、平均收入(对极值非常敏感)</li>\n</ul>\n</li>\n<li><p><strong>中位中心</strong></p>\n<ul>\n<li><p>中位中心到其他所有点的距离和最小</p>\n<script type=\"math/tex; mode=display\">\n\\displaystyle\\sum_{i=1}^n\\sqrt{(x_i-x_m)^2+(y_i-y_m)^2}=min</script></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p><strong>加权平均中心</strong></p>\n<ul>\n<li>不同仓库的承载力的差异作为属性值来考虑</li>\n</ul>\n</li>\n<li><p><strong>极值中心</strong></p>\n<p><strong>算术平均中心对极值非常敏感</strong></p>\n<p><strong>中位数中心对异常值较为稳健</strong></p>\n</li>\n</ul>\n<h4 id=\"分布轴线\"><a href=\"#分布轴线\" class=\"headerlink\" title=\"分布轴线\"></a>分布轴线</h4><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211121090056.png\" alt=\"\"></p>\n<h4 id=\"离散度\"><a href=\"#离散度\" class=\"headerlink\" title=\"离散度\"></a>离散度</h4><p>表示<strong>面域上离散点的分布情况</strong>，是对分布密度和分布中心的补充，相同的分布中心，离散程度可以不同；相同的分布密度，因离散情况的不同也反映出不同的分布特性</p>\n<h4 id=\"分布密度\"><a href=\"#分布密度\" class=\"headerlink\" title=\"分布密度\"></a>分布密度</h4><p>单位分布区域内分布对象的数量</p>\n<p>分布密度类型</p>\n<ul>\n<li>全局分布密度</li>\n<li>局部分布密度</li>\n</ul>\n<h4 id=\"线分布空间量测\"><a href=\"#线分布空间量测\" class=\"headerlink\" title=\"线分布空间量测\"></a>线分布空间量测</h4><p>线密度、最近邻分析、线状对象的定向、连通度</p>\n<h3 id=\"面分布空间量测\"><a href=\"#面分布空间量测\" class=\"headerlink\" title=\"面分布空间量测\"></a>面分布空间量测</h3><p>离散区域分布模式、连续区域分布模式</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160705.jpg","length":972,"excerpt":"","more":"<h2 id=\"基本几何参数量测\"><a href=\"#基本几何参数量测\" class=\"headerlink\" title=\"基本几何参数量测\"></a><span id=\"基本几何参数量测\">基本几何参数量测</span></h2><h3 id=\"位置量测\"><a href=\"#位置量测\" class=\"headerlink\" title=\"位置量测\"></a><a href=\"../空间特征与空间问题#空间位置\">位置量测</a></h3><p>空间位置是所有空间目标共有的描述参数，通过地理空间坐标系来表达</p>\n<div class=\"info\">\n\n&gt; 包括绝对位置、相对位置\n\n</div>\n\n<h3 id=\"中心-几何-量测\"><a href=\"#中心-几何-量测\" class=\"headerlink\" title=\"中心(几何)量测\"></a>中心(几何)量测</h3><p>反映一组数据的一般情况与平均水平</p>\n<p>即地理区位中心，仅于空间坐标有关，生成一个点图层</p>\n<h3 id=\"重心量测-加权平均中心\"><a href=\"#重心量测-加权平均中心\" class=\"headerlink\" title=\"重心量测(加权平均中心)\"></a>重心量测(加权平均中心)</h3><p>人口重心、经济重心、生态重心、工业重心</p>\n<h3 id=\"长度量测\"><a href=\"#长度量测\" class=\"headerlink\" title=\"长度量测\"></a>长度量测</h3><p>矢量线状地物的长度量测</p>\n<p>栅格线状地物的长度量测</p>\n<h4 id=\"长度测量-距离测量\"><a href=\"#长度测量-距离测量\" class=\"headerlink\" title=\"长度测量(距离测量)\"></a>长度测量(距离测量)</h4><h5 id=\"1-欧氏距离-简单距离\"><a href=\"#1-欧氏距离-简单距离\" class=\"headerlink\" title=\"1. 欧氏距离(简单距离)\"></a>1. <span id=\"欧氏距离\">欧氏距离</span>(简单距离)</h5><script type=\"math/tex; mode=display\">\nD(_{p_1 p_2})=\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}</script><h5 id=\"2-曼哈顿距离\"><a href=\"#2-曼哈顿距离\" class=\"headerlink\" title=\"2. 曼哈顿距离\"></a>2. 曼哈顿距离</h5><script type=\"math/tex; mode=display\">\nd_{12}=|X_{1}-X_{2}|+|y_1-y_2|</script><h5 id=\"3-路网距离\"><a href=\"#3-路网距离\" class=\"headerlink\" title=\"3. 路网距离\"></a>3. 路网距离</h5><ul>\n<li>属于路径分析</li>\n<li>路网距离定义的外延：最小成本距离</li>\n</ul>\n<h3 id=\"面积量测\"><a href=\"#面积量测\" class=\"headerlink\" title=\"面积量测\"></a>面积量测</h3><p>投影面积</p>\n<p>曲面面积</p>\n<h3 id=\"体积量测\"><a href=\"#体积量测\" class=\"headerlink\" title=\"体积量测\"></a>体积量测</h3><p>体积的概念：空间曲面与一基准面（水平面）的容积</p>\n<h2 id=\"地理空间目标形态量测\"><a href=\"#地理空间目标形态量测\" class=\"headerlink\" title=\"地理空间目标形态量测\"></a><span id=\"地理空间目标形态量测\">地理空间目标形态量测</span></h2><h3 id=\"线状地物形态的量测\"><a href=\"#线状地物形态的量测\" class=\"headerlink\" title=\"线状地物形态的量测\"></a>线状地物形态的量测</h3><ul>\n<li><p>曲率与平均曲率</p>\n<ul>\n<li>曲率：<strong>曲线切线方向角</strong>相对于弧长的变化率</li>\n</ul>\n</li>\n<li><p>弯曲度</p>\n<ul>\n<li>线实体的<strong>实际长度</strong>与线实体起点和终点的<strong>直线距离</strong>之比</li>\n</ul>\n</li>\n<li><p>分形维数</p>\n<ul>\n<li>分形维描述了曲线的复杂弯曲程度</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"面状地物的形态\"><a href=\"#面状地物的形态\" class=\"headerlink\" title=\"面状地物的形态\"></a>面状地物的形态</h3><ul>\n<li>形状量算</li>\n<li>简单图形概况<ul>\n<li>外接矩形</li>\n<li>最大内切圆：多边形内点状符号的自动设置定位的关键</li>\n<li>最小外接圆</li>\n<li>最小凸多边形：包含所有数据点，面积也达到最小值</li>\n</ul>\n</li>\n<li>空间完整性<ul>\n<li>欧拉数</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"空间分布计算与分析\"><a href=\"#空间分布计算与分析\" class=\"headerlink\" title=\"空间分布计算与分析\"></a>空间分布计算与分析</h2><h3 id=\"空间分布\"><a href=\"#空间分布\" class=\"headerlink\" title=\"空间分布\"></a>空间分布</h3><p>空间上的<strong>组合、排列、彼此间的相互关系</strong>，反映同类空间事物的<strong>群体</strong>定位特征</p>\n<h3 id=\"空间分布类型\"><a href=\"#空间分布类型\" class=\"headerlink\" title=\"空间分布类型\"></a>空间分布类型</h3><ul>\n<li>点分布<ul>\n<li>空间地物：实地点或者相对于比例尺由面转化成的点沿线状或区域离散分布，表达<strong>离散分布现象或连续分布现象</strong></li>\n</ul>\n</li>\n<li>线分布</li>\n<li>面分布</li>\n</ul>\n<h3 id=\"点分布空间量测\"><a href=\"#点分布空间量测\" class=\"headerlink\" title=\"点分布空间量测\"></a><span id=\"点模式\">点分布空间量测</span></h3><h4 id=\"分布中心\"><a href=\"#分布中心\" class=\"headerlink\" title=\"分布中心\"></a>分布中心</h4><ul>\n<li><p>中心要素</p>\n<ul>\n<li>现有要素中，距离其他要素之和最小的要素</li>\n</ul>\n</li>\n<li><p><strong>算术平均中心</strong></p>\n<ul>\n<li>平均工资、平均收入(对极值非常敏感)</li>\n</ul>\n</li>\n<li><p><strong>中位中心</strong></p>\n<ul>\n<li><p>中位中心到其他所有点的距离和最小</p>\n<script type=\"math/tex; mode=display\">\n\\displaystyle\\sum_{i=1}^n\\sqrt{(x_i-x_m)^2+(y_i-y_m)^2}=min</script></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p><strong>加权平均中心</strong></p>\n<ul>\n<li>不同仓库的承载力的差异作为属性值来考虑</li>\n</ul>\n</li>\n<li><p><strong>极值中心</strong></p>\n<p><strong>算术平均中心对极值非常敏感</strong></p>\n<p><strong>中位数中心对异常值较为稳健</strong></p>\n</li>\n</ul>\n<h4 id=\"分布轴线\"><a href=\"#分布轴线\" class=\"headerlink\" title=\"分布轴线\"></a>分布轴线</h4><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211121090056.png\" alt=\"\"></p>\n<h4 id=\"离散度\"><a href=\"#离散度\" class=\"headerlink\" title=\"离散度\"></a>离散度</h4><p>表示<strong>面域上离散点的分布情况</strong>，是对分布密度和分布中心的补充，相同的分布中心，离散程度可以不同；相同的分布密度，因离散情况的不同也反映出不同的分布特性</p>\n<h4 id=\"分布密度\"><a href=\"#分布密度\" class=\"headerlink\" title=\"分布密度\"></a>分布密度</h4><p>单位分布区域内分布对象的数量</p>\n<p>分布密度类型</p>\n<ul>\n<li>全局分布密度</li>\n<li>局部分布密度</li>\n</ul>\n<h4 id=\"线分布空间量测\"><a href=\"#线分布空间量测\" class=\"headerlink\" title=\"线分布空间量测\"></a>线分布空间量测</h4><p>线密度、最近邻分析、线状对象的定向、连通度</p>\n<h3 id=\"面分布空间量测\"><a href=\"#面分布空间量测\" class=\"headerlink\" title=\"面分布空间量测\"></a>面分布空间量测</h3><p>离散区域分布模式、连续区域分布模式</p>\n"},{"title":"表面与三维空间分析","date":"2021-11-12T02:27:31.000Z","mathjax":true,"description":"表面与三维空间分析","_content":"\n## 地形表面参数计算\n\n### **数字地面模型(<span id=\"DTM\">DTM</span>)**\n\nDTM是指地球表面形态多种信息空间分布的有序数值阵列\n\n### **数字高程模型(DEM)**\n\n**DEM是DTM的一个特例或者子集**\n\nDEM是DTM中基本的部分，是**对地球表面地形地貌的一种离散的数学表达**\n\n#### 应用\n\n 1.  测绘\n\n     > 绘制等高线、坡度图、坡向图、立体透视图、立体景观图、制作正射影像图、立体匹配图、立体地形模型及地图的修测\n\n 2.  工程应用\n\n     > 体积和面积的计算、各种剖面图的绘制及线路的设计\n\n 3.  军事\n\n     > 导航、通讯、作战任务的计划\n\n 4.  遥感\n\n     > 分类的辅助数据\n\n 5.  环境与规划\n\n     > 土地现状分析、规划及洪水险情预报\n\n#### 主要表示模型 \n\n##### 规则格网\n\n![规则格网](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112105412.png)\n\n优点：\n\n+ **结构简单、易于计算机处理**，特别是栅格数据结构的地理信息系统\n+ 可以很容易地计算等高线、坡度、坡向、山坡阴影和自动提取流域地形\n\n缺点：\n\n+ **地形简单的地区存在大量冗余数据**\n+ **地形起伏差别大的地区无法适用**\n+ 对某些特殊计算(如视线计算)的格网轴线方向被夸大\n+ 如栅格过于粗略，则不能精确表示地形的关键特征，如山峰、坑洼、山脊、山谷等\n\n##### 不规则三角网(TIN)\n\n![不规则三角网](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112105459.png)\n\t\t优点：\n\n+ 可根据地形的复杂程度确定采样点的密度和位置，能充分表示地形特征点和线，减少地形较平坦地区的数据冗余\n+ 在显示速度及表示精度方面优于规则格网\n+ TIN是一种**变精度表示方法**：平坦地区数据点较少，地形起伏度较大的地区密度较大。这种机制使得TIN数据可用较小的数据量实现较高的表达精度\n\n##### 等高线模型\n\n将采集的相同高程的地形特征点连接成线，采样间隔(等高间距)是最核心的参数，等高线的分布疏密反映了地形起伏程度\n\n一系列**等高线集合**和它们的**高程值**一起就构成了一种地面高程模型\n\n等高线通常被存为一个**有序的坐标点对序列**，可以认为是一条**带有高程值属性的简单多边形或多边形弧段**\n\n等高线模型只表达了**区域的部分高程值**，往往需要**插值**方法来计算落在等高线外的其他点的高程\n\n#### 数字地形分析(DTA)\n\n> 指在数字高程模型上进行**地形属性计算和特征提取**的数字信息处理技术\n>\n> DTA技术是各种与地形因素相关**空间模拟**技术的基础\n>\n> 主要包含：提取描述地形属性和特征的因子；<a href=\"#DTM\">DTM</a>的可视化分析\n\n#### 高程\n\n![高程](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112155907.png)\n\n#### <span id=\"坡度\">坡度</span>、坡向\n\n坡度：某点在曲面上的**法线方向**与**垂直分析**的夹角，是地面特定点高度变化比率的度量\n\n坡向：**法线的正方向在平面上的投影**与**正北方向的夹角**\n\n应用\n\n​\t坡度：\n\n+ 地形描述中常用的参数，是一个具有方向与大小的矢量\n\n+ 能**间接表示地形起伏形态**\n\n+ 建滑雪娱乐场，选择不同的坡度的区域\n\n  坡向：\n\n+ 植被分析、环境评价等领域具有主要意义\n\n+ 在一个区域内提取所有朝南的坡面，为房地产建设选址提供最佳位置\n\n#### 曲率\n\n定义：地形曲面在各个界面方向上的形状，凹凸变化的反映，是平面点位的函数\n\n反映了地形结构和形态。影响着土壤有机物含量的分布，在地表过程模拟、水文、土壤等领域有着重要的应用价值和意义\n\n坡度变率：地面坡度在微分空间的变化率，是依据坡度的求算原理，在所提取的坡度值的基础上对地面每一点再求算一次坡度，即坡度之坡度\n\n坡向变率：在地表的坡向提取基础之上，进行对坡向变化率值的二次提取，即坡向之坡向\n\n#### 坡长\n\n#### 面积\n\n分块曲面拟合：曲面表面积由分块曲面表面积之和给出\n\n全局拟合的曲面：将计算区域分成若干规则单元，先计算每个单元的面积，再累积计算总面积。\n\n#### 体积\n\n空间曲面与一基准面（水平面）的容积\n\n#### <span id=\"地形起伏度\">地形起伏度</span>、粗糙度、切割深度\n\n地形起伏度：\n\n> 是指在一个特定区域内，最高点海拔高度与最低点海拔高度的差值\n\n地面粗糙度：\n\n> 反映地表起伏变化和侵蚀程度的指标\n>\n> 一般定义为地表单元的曲面面积与其在水平面上的投影面积之比\n\n基于规则格网的粗糙度计算\n\n> $R = \\frac{S_{曲面}}{S_{水平}}$\n>\n> S为曲率，Areas为格点面元趋势面面积，AreaH为格点面元面积\n>\n> 实际应用时，当分析窗口为3*3时，可采用以下公式近似计算\n>\n> 1. 根据DEM提取坡度因子S\n> 2. 粗糙度：$R = \\frac{1}{\\cos(S)}$\n\n地表切割深度\n\n> 地表切割深度是指地面某点的**领域范围的平均高程**与该领域范围内的**最小高程的差值**\n\n## 地形形态特征分析\n\n+ 地形特征提取\n\n  + 地形特征点：山峰、谷底、鞍部点等\n  + 地形特征线：山脊线、山谷线等\n\n+ 水系特征提取\n\n  + 分水线：类似山脊线\n  + 合水线：类似山谷线\n\n+ 谷：地势中相对**最低点**的集合\n\n+ 脊：地势相对**最高点**的集合\n\n  ![山谷山脊](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112194620.png)\n  \n  ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112194823.png)\n  \n  ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112194924.png)\n  \n\n### 水文分析\n\n水文分析是对所研究的水文变量或过程，作出尽可能正确的概率描述，对防止水旱和开发、利用、保护水资源的工程或非工程措施的规划、设计、施工3以及管理运用有着重要的意义，也是DEM数据应用的一个重要方面\n\n主要用于**研究与地表水流有关的各种自然现象**\n\n比如：洪水水位及泛滥情况或者可以划定受污染源影响的地区\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112200620.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112200926.png)\n\n#### <span id=\"水流方向\">水流方向</span>\n\n1. 水流方向提取\n\n   水流方向是指**水流离开每一个栅格单元时的指向**。在GIS中通过将中心栅格的**8**个领域栅格编码，水流方向便可以其中的某一值来确定，栅格方向编码如图所示。例如：如果中心栅格的水流流向左边，则其水流方向被赋值为**16**\n\n   ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202010.png)\n\n2. D8算法\n\n+ 如果最大落差值**小于0**，则赋以负值以表明此格网方向**未定**\n\n+ 如果最大落差值**大于或等于0**，**且最大值只有一个**，则将对应此最大值的方向值作为中心格网处的方向值;\n\n+ 如果最大落差**等于0**，**且有一个以上的0值**，则以这些0值所对应的方向值相加·在极端情况下，如果8个邻域高程值都与中心格网高程值相同，则中心格网方向值赋以**255** \n\n+ 如果最大落差值大于0，且有一个以上的最大值，则任选一个方向作为水流方向\n\n  ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202538.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202712.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202858.png)\n\n#### 汇流累积量\n\n> 区域地形每点的流水累积量，它可以用区域地形表面的流水模拟方法获得\n> 规则格网表示的数字地面高程模型每点处有一个单位的水量，按照自然水流从高处流到低处的自然规律，根据区域地形的水流方向数字矩阵计算每点处所流过的水量数值，便可以得到该区域汇流累积量\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211113190012.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211113190051.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211113190156.png)\n\n#### 水流长度\n\n水流长度：地面上一点沿水流方向到其流向起点(或终点)间的最大地面距离在水平面上的投影长度\n\n水流长度是水土保持上的主要因子之一，当其他条件相同时，水力侵蚀的强度依据坡的长度来决定，破面越长，汇聚的流量越大，其侵蚀力就越强，水流长度直接影响地面径流的速度，从而影响对地面土壤的侵蚀力。因此，对于水流长度的提取和分析，水土保持工作有很主要的作用。\n\n顺流计算：计算地面上每一点沿水流方向到该点所在流域出水口最大地面距离的水平投影\n\n溯流计算：计算地面上每一点沿水流方向到其流向起点间的最大距离的水平投影\n\n#### 剖面分析\n\n以数字地形模型(DEM)为基础构造某一个方向的剖面，以线代面，概括研究区域的地势、地质和水文特征；\n\n可在地形剖面上叠加表示其它地理变量，如坡度、土壤、岩石抗蚀性、植被覆盖类型、土地利用现状等，可以作为提供土地侵蚀速度研究、农业生产布局的立体背景分析、土地利用规划，以及工程决策等的参考依据\n\n## 地形可视化分析\n\n## 城市空间三维分析\n\n","source":"_posts/表面与三维空间分析.md","raw":"---\ntitle: 表面与三维空间分析\ndate: 2021-11-12 10:27:31\ntags: GIS空间分析\nmathjax: true\ncategories: [GIS,GIS空间分析,表面与三维空间分析]\ndescription: 表面与三维空间分析\n---\n\n## 地形表面参数计算\n\n### **数字地面模型(<span id=\"DTM\">DTM</span>)**\n\nDTM是指地球表面形态多种信息空间分布的有序数值阵列\n\n### **数字高程模型(DEM)**\n\n**DEM是DTM的一个特例或者子集**\n\nDEM是DTM中基本的部分，是**对地球表面地形地貌的一种离散的数学表达**\n\n#### 应用\n\n 1.  测绘\n\n     > 绘制等高线、坡度图、坡向图、立体透视图、立体景观图、制作正射影像图、立体匹配图、立体地形模型及地图的修测\n\n 2.  工程应用\n\n     > 体积和面积的计算、各种剖面图的绘制及线路的设计\n\n 3.  军事\n\n     > 导航、通讯、作战任务的计划\n\n 4.  遥感\n\n     > 分类的辅助数据\n\n 5.  环境与规划\n\n     > 土地现状分析、规划及洪水险情预报\n\n#### 主要表示模型 \n\n##### 规则格网\n\n![规则格网](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112105412.png)\n\n优点：\n\n+ **结构简单、易于计算机处理**，特别是栅格数据结构的地理信息系统\n+ 可以很容易地计算等高线、坡度、坡向、山坡阴影和自动提取流域地形\n\n缺点：\n\n+ **地形简单的地区存在大量冗余数据**\n+ **地形起伏差别大的地区无法适用**\n+ 对某些特殊计算(如视线计算)的格网轴线方向被夸大\n+ 如栅格过于粗略，则不能精确表示地形的关键特征，如山峰、坑洼、山脊、山谷等\n\n##### 不规则三角网(TIN)\n\n![不规则三角网](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112105459.png)\n\t\t优点：\n\n+ 可根据地形的复杂程度确定采样点的密度和位置，能充分表示地形特征点和线，减少地形较平坦地区的数据冗余\n+ 在显示速度及表示精度方面优于规则格网\n+ TIN是一种**变精度表示方法**：平坦地区数据点较少，地形起伏度较大的地区密度较大。这种机制使得TIN数据可用较小的数据量实现较高的表达精度\n\n##### 等高线模型\n\n将采集的相同高程的地形特征点连接成线，采样间隔(等高间距)是最核心的参数，等高线的分布疏密反映了地形起伏程度\n\n一系列**等高线集合**和它们的**高程值**一起就构成了一种地面高程模型\n\n等高线通常被存为一个**有序的坐标点对序列**，可以认为是一条**带有高程值属性的简单多边形或多边形弧段**\n\n等高线模型只表达了**区域的部分高程值**，往往需要**插值**方法来计算落在等高线外的其他点的高程\n\n#### 数字地形分析(DTA)\n\n> 指在数字高程模型上进行**地形属性计算和特征提取**的数字信息处理技术\n>\n> DTA技术是各种与地形因素相关**空间模拟**技术的基础\n>\n> 主要包含：提取描述地形属性和特征的因子；<a href=\"#DTM\">DTM</a>的可视化分析\n\n#### 高程\n\n![高程](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112155907.png)\n\n#### <span id=\"坡度\">坡度</span>、坡向\n\n坡度：某点在曲面上的**法线方向**与**垂直分析**的夹角，是地面特定点高度变化比率的度量\n\n坡向：**法线的正方向在平面上的投影**与**正北方向的夹角**\n\n应用\n\n​\t坡度：\n\n+ 地形描述中常用的参数，是一个具有方向与大小的矢量\n\n+ 能**间接表示地形起伏形态**\n\n+ 建滑雪娱乐场，选择不同的坡度的区域\n\n  坡向：\n\n+ 植被分析、环境评价等领域具有主要意义\n\n+ 在一个区域内提取所有朝南的坡面，为房地产建设选址提供最佳位置\n\n#### 曲率\n\n定义：地形曲面在各个界面方向上的形状，凹凸变化的反映，是平面点位的函数\n\n反映了地形结构和形态。影响着土壤有机物含量的分布，在地表过程模拟、水文、土壤等领域有着重要的应用价值和意义\n\n坡度变率：地面坡度在微分空间的变化率，是依据坡度的求算原理，在所提取的坡度值的基础上对地面每一点再求算一次坡度，即坡度之坡度\n\n坡向变率：在地表的坡向提取基础之上，进行对坡向变化率值的二次提取，即坡向之坡向\n\n#### 坡长\n\n#### 面积\n\n分块曲面拟合：曲面表面积由分块曲面表面积之和给出\n\n全局拟合的曲面：将计算区域分成若干规则单元，先计算每个单元的面积，再累积计算总面积。\n\n#### 体积\n\n空间曲面与一基准面（水平面）的容积\n\n#### <span id=\"地形起伏度\">地形起伏度</span>、粗糙度、切割深度\n\n地形起伏度：\n\n> 是指在一个特定区域内，最高点海拔高度与最低点海拔高度的差值\n\n地面粗糙度：\n\n> 反映地表起伏变化和侵蚀程度的指标\n>\n> 一般定义为地表单元的曲面面积与其在水平面上的投影面积之比\n\n基于规则格网的粗糙度计算\n\n> $R = \\frac{S_{曲面}}{S_{水平}}$\n>\n> S为曲率，Areas为格点面元趋势面面积，AreaH为格点面元面积\n>\n> 实际应用时，当分析窗口为3*3时，可采用以下公式近似计算\n>\n> 1. 根据DEM提取坡度因子S\n> 2. 粗糙度：$R = \\frac{1}{\\cos(S)}$\n\n地表切割深度\n\n> 地表切割深度是指地面某点的**领域范围的平均高程**与该领域范围内的**最小高程的差值**\n\n## 地形形态特征分析\n\n+ 地形特征提取\n\n  + 地形特征点：山峰、谷底、鞍部点等\n  + 地形特征线：山脊线、山谷线等\n\n+ 水系特征提取\n\n  + 分水线：类似山脊线\n  + 合水线：类似山谷线\n\n+ 谷：地势中相对**最低点**的集合\n\n+ 脊：地势相对**最高点**的集合\n\n  ![山谷山脊](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112194620.png)\n  \n  ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112194823.png)\n  \n  ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112194924.png)\n  \n\n### 水文分析\n\n水文分析是对所研究的水文变量或过程，作出尽可能正确的概率描述，对防止水旱和开发、利用、保护水资源的工程或非工程措施的规划、设计、施工3以及管理运用有着重要的意义，也是DEM数据应用的一个重要方面\n\n主要用于**研究与地表水流有关的各种自然现象**\n\n比如：洪水水位及泛滥情况或者可以划定受污染源影响的地区\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112200620.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112200926.png)\n\n#### <span id=\"水流方向\">水流方向</span>\n\n1. 水流方向提取\n\n   水流方向是指**水流离开每一个栅格单元时的指向**。在GIS中通过将中心栅格的**8**个领域栅格编码，水流方向便可以其中的某一值来确定，栅格方向编码如图所示。例如：如果中心栅格的水流流向左边，则其水流方向被赋值为**16**\n\n   ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202010.png)\n\n2. D8算法\n\n+ 如果最大落差值**小于0**，则赋以负值以表明此格网方向**未定**\n\n+ 如果最大落差值**大于或等于0**，**且最大值只有一个**，则将对应此最大值的方向值作为中心格网处的方向值;\n\n+ 如果最大落差**等于0**，**且有一个以上的0值**，则以这些0值所对应的方向值相加·在极端情况下，如果8个邻域高程值都与中心格网高程值相同，则中心格网方向值赋以**255** \n\n+ 如果最大落差值大于0，且有一个以上的最大值，则任选一个方向作为水流方向\n\n  ![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202538.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202712.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202858.png)\n\n#### 汇流累积量\n\n> 区域地形每点的流水累积量，它可以用区域地形表面的流水模拟方法获得\n> 规则格网表示的数字地面高程模型每点处有一个单位的水量，按照自然水流从高处流到低处的自然规律，根据区域地形的水流方向数字矩阵计算每点处所流过的水量数值，便可以得到该区域汇流累积量\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211113190012.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211113190051.png)\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211113190156.png)\n\n#### 水流长度\n\n水流长度：地面上一点沿水流方向到其流向起点(或终点)间的最大地面距离在水平面上的投影长度\n\n水流长度是水土保持上的主要因子之一，当其他条件相同时，水力侵蚀的强度依据坡的长度来决定，破面越长，汇聚的流量越大，其侵蚀力就越强，水流长度直接影响地面径流的速度，从而影响对地面土壤的侵蚀力。因此，对于水流长度的提取和分析，水土保持工作有很主要的作用。\n\n顺流计算：计算地面上每一点沿水流方向到该点所在流域出水口最大地面距离的水平投影\n\n溯流计算：计算地面上每一点沿水流方向到其流向起点间的最大距离的水平投影\n\n#### 剖面分析\n\n以数字地形模型(DEM)为基础构造某一个方向的剖面，以线代面，概括研究区域的地势、地质和水文特征；\n\n可在地形剖面上叠加表示其它地理变量，如坡度、土壤、岩石抗蚀性、植被覆盖类型、土地利用现状等，可以作为提供土地侵蚀速度研究、农业生产布局的立体背景分析、土地利用规划，以及工程决策等的参考依据\n\n## 地形可视化分析\n\n## 城市空间三维分析\n\n","slug":"表面与三维空间分析","published":1,"updated":"2021-12-27T08:07:13.326Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt4b004pjsvk3sosdy7z","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"地形表面参数计算\"><a href=\"#地形表面参数计算\" class=\"headerlink\" title=\"地形表面参数计算\"></a>地形表面参数计算</h2><h3 id=\"数字地面模型-DTM\"><a href=\"#数字地面模型-DTM\" class=\"headerlink\" title=\"数字地面模型(DTM)\"></a><strong>数字地面模型(<span id=\"DTM\">DTM</span>)</strong></h3><p>DTM是指地球表面形态多种信息空间分布的有序数值阵列</p>\n<h3 id=\"数字高程模型-DEM\"><a href=\"#数字高程模型-DEM\" class=\"headerlink\" title=\"数字高程模型(DEM)\"></a><strong>数字高程模型(DEM)</strong></h3><p><strong>DEM是DTM的一个特例或者子集</strong></p>\n<p>DEM是DTM中基本的部分，是<strong>对地球表面地形地貌的一种离散的数学表达</strong></p>\n<h4 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h4><ol>\n<li><p>测绘</p>\n<blockquote>\n<p>绘制等高线、坡度图、坡向图、立体透视图、立体景观图、制作正射影像图、立体匹配图、立体地形模型及地图的修测</p>\n</blockquote>\n</li>\n<li><p>工程应用</p>\n<blockquote>\n<p>体积和面积的计算、各种剖面图的绘制及线路的设计</p>\n</blockquote>\n</li>\n<li><p>军事</p>\n<blockquote>\n<p>导航、通讯、作战任务的计划</p>\n</blockquote>\n</li>\n<li><p>遥感</p>\n<blockquote>\n<p>分类的辅助数据</p>\n</blockquote>\n</li>\n<li><p>环境与规划</p>\n<blockquote>\n<p>土地现状分析、规划及洪水险情预报</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"主要表示模型\"><a href=\"#主要表示模型\" class=\"headerlink\" title=\"主要表示模型\"></a>主要表示模型</h4><h5 id=\"规则格网\"><a href=\"#规则格网\" class=\"headerlink\" title=\"规则格网\"></a>规则格网</h5><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112105412.png\" alt=\"规则格网\"></p>\n<p>优点：</p>\n<ul>\n<li><strong>结构简单、易于计算机处理</strong>，特别是栅格数据结构的地理信息系统</li>\n<li>可以很容易地计算等高线、坡度、坡向、山坡阴影和自动提取流域地形</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li><strong>地形简单的地区存在大量冗余数据</strong></li>\n<li><strong>地形起伏差别大的地区无法适用</strong></li>\n<li>对某些特殊计算(如视线计算)的格网轴线方向被夸大</li>\n<li>如栅格过于粗略，则不能精确表示地形的关键特征，如山峰、坑洼、山脊、山谷等</li>\n</ul>\n<h5 id=\"不规则三角网-TIN\"><a href=\"#不规则三角网-TIN\" class=\"headerlink\" title=\"不规则三角网(TIN)\"></a>不规则三角网(TIN)</h5><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112105459.png\" alt=\"不规则三角网\"><br>        优点：</p>\n<ul>\n<li>可根据地形的复杂程度确定采样点的密度和位置，能充分表示地形特征点和线，减少地形较平坦地区的数据冗余</li>\n<li>在显示速度及表示精度方面优于规则格网</li>\n<li>TIN是一种<strong>变精度表示方法</strong>：平坦地区数据点较少，地形起伏度较大的地区密度较大。这种机制使得TIN数据可用较小的数据量实现较高的表达精度</li>\n</ul>\n<h5 id=\"等高线模型\"><a href=\"#等高线模型\" class=\"headerlink\" title=\"等高线模型\"></a>等高线模型</h5><p>将采集的相同高程的地形特征点连接成线，采样间隔(等高间距)是最核心的参数，等高线的分布疏密反映了地形起伏程度</p>\n<p>一系列<strong>等高线集合</strong>和它们的<strong>高程值</strong>一起就构成了一种地面高程模型</p>\n<p>等高线通常被存为一个<strong>有序的坐标点对序列</strong>，可以认为是一条<strong>带有高程值属性的简单多边形或多边形弧段</strong></p>\n<p>等高线模型只表达了<strong>区域的部分高程值</strong>，往往需要<strong>插值</strong>方法来计算落在等高线外的其他点的高程</p>\n<h4 id=\"数字地形分析-DTA\"><a href=\"#数字地形分析-DTA\" class=\"headerlink\" title=\"数字地形分析(DTA)\"></a>数字地形分析(DTA)</h4><blockquote>\n<p>指在数字高程模型上进行<strong>地形属性计算和特征提取</strong>的数字信息处理技术</p>\n<p>DTA技术是各种与地形因素相关<strong>空间模拟</strong>技术的基础</p>\n<p>主要包含：提取描述地形属性和特征的因子；<a href=\"#DTM\">DTM</a>的可视化分析</p>\n</blockquote>\n<h4 id=\"高程\"><a href=\"#高程\" class=\"headerlink\" title=\"高程\"></a>高程</h4><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112155907.png\" alt=\"高程\"></p>\n<h4 id=\"坡度、坡向\"><a href=\"#坡度、坡向\" class=\"headerlink\" title=\"坡度、坡向\"></a><span id=\"坡度\">坡度</span>、坡向</h4><p>坡度：某点在曲面上的<strong>法线方向</strong>与<strong>垂直分析</strong>的夹角，是地面特定点高度变化比率的度量</p>\n<p>坡向：<strong>法线的正方向在平面上的投影</strong>与<strong>正北方向的夹角</strong></p>\n<p>应用</p>\n<p>​    坡度：</p>\n<ul>\n<li><p>地形描述中常用的参数，是一个具有方向与大小的矢量</p>\n</li>\n<li><p>能<strong>间接表示地形起伏形态</strong></p>\n</li>\n<li><p>建滑雪娱乐场，选择不同的坡度的区域</p>\n<p>坡向：</p>\n</li>\n<li><p>植被分析、环境评价等领域具有主要意义</p>\n</li>\n<li><p>在一个区域内提取所有朝南的坡面，为房地产建设选址提供最佳位置</p>\n</li>\n</ul>\n<h4 id=\"曲率\"><a href=\"#曲率\" class=\"headerlink\" title=\"曲率\"></a>曲率</h4><p>定义：地形曲面在各个界面方向上的形状，凹凸变化的反映，是平面点位的函数</p>\n<p>反映了地形结构和形态。影响着土壤有机物含量的分布，在地表过程模拟、水文、土壤等领域有着重要的应用价值和意义</p>\n<p>坡度变率：地面坡度在微分空间的变化率，是依据坡度的求算原理，在所提取的坡度值的基础上对地面每一点再求算一次坡度，即坡度之坡度</p>\n<p>坡向变率：在地表的坡向提取基础之上，进行对坡向变化率值的二次提取，即坡向之坡向</p>\n<h4 id=\"坡长\"><a href=\"#坡长\" class=\"headerlink\" title=\"坡长\"></a>坡长</h4><h4 id=\"面积\"><a href=\"#面积\" class=\"headerlink\" title=\"面积\"></a>面积</h4><p>分块曲面拟合：曲面表面积由分块曲面表面积之和给出</p>\n<p>全局拟合的曲面：将计算区域分成若干规则单元，先计算每个单元的面积，再累积计算总面积。</p>\n<h4 id=\"体积\"><a href=\"#体积\" class=\"headerlink\" title=\"体积\"></a>体积</h4><p>空间曲面与一基准面（水平面）的容积</p>\n<h4 id=\"地形起伏度、粗糙度、切割深度\"><a href=\"#地形起伏度、粗糙度、切割深度\" class=\"headerlink\" title=\"地形起伏度、粗糙度、切割深度\"></a><span id=\"地形起伏度\">地形起伏度</span>、粗糙度、切割深度</h4><p>地形起伏度：</p>\n<blockquote>\n<p>是指在一个特定区域内，最高点海拔高度与最低点海拔高度的差值</p>\n</blockquote>\n<p>地面粗糙度：</p>\n<blockquote>\n<p>反映地表起伏变化和侵蚀程度的指标</p>\n<p>一般定义为地表单元的曲面面积与其在水平面上的投影面积之比</p>\n</blockquote>\n<p>基于规则格网的粗糙度计算</p>\n<blockquote>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.29ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.879ex\" height=\"3.696ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1063.5 3924.7 1633.4\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(2092.6,0)\"><g data-mml-node=\"msub\" transform=\"translate(220,565) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(646,-176.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">曲</text></g><g data-mml-node=\"mi\" transform=\"translate(900,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">面</text></g></g></g><g data-mml-node=\"msub\" transform=\"translate(220,-345) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(646,-176.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">水</text></g><g data-mml-node=\"mi\" transform=\"translate(900,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">平</text></g></g></g><rect width=\"1592.1\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></p>\n<p>S为曲率，Areas为格点面元趋势面面积，AreaH为格点面元面积</p>\n<p>实际应用时，当分析窗口为3*3时，可采用以下公式近似计算</p>\n<ol>\n<li>根据DEM提取坡度因子S</li>\n<li>粗糙度：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.238ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.147ex\" height=\"3.195ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864.9 4484.9 1412\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(2092.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(1019.4,394) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mrow\" transform=\"translate(220,-370.3) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"63\" d=\"M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(444,0)\"></path><path data-c=\"73\" d=\"M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z\" transform=\"translate(944,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1338,0)\"><path data-c=\"2061\" d=\"\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1338,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1727,0)\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2372,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><rect width=\"2152.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></li>\n</ol>\n</blockquote>\n<p>地表切割深度</p>\n<blockquote>\n<p>地表切割深度是指地面某点的<strong>领域范围的平均高程</strong>与该领域范围内的<strong>最小高程的差值</strong></p>\n</blockquote>\n<h2 id=\"地形形态特征分析\"><a href=\"#地形形态特征分析\" class=\"headerlink\" title=\"地形形态特征分析\"></a>地形形态特征分析</h2><ul>\n<li><p>地形特征提取</p>\n<ul>\n<li>地形特征点：山峰、谷底、鞍部点等</li>\n<li>地形特征线：山脊线、山谷线等</li>\n</ul>\n</li>\n<li><p>水系特征提取</p>\n<ul>\n<li>分水线：类似山脊线</li>\n<li>合水线：类似山谷线</li>\n</ul>\n</li>\n<li><p>谷：地势中相对<strong>最低点</strong>的集合</p>\n</li>\n<li><p>脊：地势相对<strong>最高点</strong>的集合</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112194620.png\" alt=\"山谷山脊\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112194823.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112194924.png\" alt=\"\"></p>\n</li>\n</ul>\n<h3 id=\"水文分析\"><a href=\"#水文分析\" class=\"headerlink\" title=\"水文分析\"></a>水文分析</h3><p>水文分析是对所研究的水文变量或过程，作出尽可能正确的概率描述，对防止水旱和开发、利用、保护水资源的工程或非工程措施的规划、设计、施工3以及管理运用有着重要的意义，也是DEM数据应用的一个重要方面</p>\n<p>主要用于<strong>研究与地表水流有关的各种自然现象</strong></p>\n<p>比如：洪水水位及泛滥情况或者可以划定受污染源影响的地区</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112200620.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112200926.png\" alt=\"\"></p>\n<h4 id=\"水流方向\"><a href=\"#水流方向\" class=\"headerlink\" title=\"水流方向\"></a><span id=\"水流方向\">水流方向</span></h4><ol>\n<li><p>水流方向提取</p>\n<p>水流方向是指<strong>水流离开每一个栅格单元时的指向</strong>。在GIS中通过将中心栅格的<strong>8</strong>个领域栅格编码，水流方向便可以其中的某一值来确定，栅格方向编码如图所示。例如：如果中心栅格的水流流向左边，则其水流方向被赋值为<strong>16</strong></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202010.png\" alt=\"\"></p>\n</li>\n<li><p>D8算法</p>\n</li>\n</ol>\n<ul>\n<li><p>如果最大落差值<strong>小于0</strong>，则赋以负值以表明此格网方向<strong>未定</strong></p>\n</li>\n<li><p>如果最大落差值<strong>大于或等于0</strong>，<strong>且最大值只有一个</strong>，则将对应此最大值的方向值作为中心格网处的方向值;</p>\n</li>\n<li><p>如果最大落差<strong>等于0</strong>，<strong>且有一个以上的0值</strong>，则以这些0值所对应的方向值相加·在极端情况下，如果8个邻域高程值都与中心格网高程值相同，则中心格网方向值赋以<strong>255</strong> </p>\n</li>\n<li><p>如果最大落差值大于0，且有一个以上的最大值，则任选一个方向作为水流方向</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202538.png\" alt=\"\"></p>\n</li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202712.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202858.png\" alt=\"\"></p>\n<h4 id=\"汇流累积量\"><a href=\"#汇流累积量\" class=\"headerlink\" title=\"汇流累积量\"></a>汇流累积量</h4><blockquote>\n<p>区域地形每点的流水累积量，它可以用区域地形表面的流水模拟方法获得<br>规则格网表示的数字地面高程模型每点处有一个单位的水量，按照自然水流从高处流到低处的自然规律，根据区域地形的水流方向数字矩阵计算每点处所流过的水量数值，便可以得到该区域汇流累积量</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211113190012.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211113190051.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211113190156.png\" alt=\"\"></p>\n<h4 id=\"水流长度\"><a href=\"#水流长度\" class=\"headerlink\" title=\"水流长度\"></a>水流长度</h4><p>水流长度：地面上一点沿水流方向到其流向起点(或终点)间的最大地面距离在水平面上的投影长度</p>\n<p>水流长度是水土保持上的主要因子之一，当其他条件相同时，水力侵蚀的强度依据坡的长度来决定，破面越长，汇聚的流量越大，其侵蚀力就越强，水流长度直接影响地面径流的速度，从而影响对地面土壤的侵蚀力。因此，对于水流长度的提取和分析，水土保持工作有很主要的作用。</p>\n<p>顺流计算：计算地面上每一点沿水流方向到该点所在流域出水口最大地面距离的水平投影</p>\n<p>溯流计算：计算地面上每一点沿水流方向到其流向起点间的最大距离的水平投影</p>\n<h4 id=\"剖面分析\"><a href=\"#剖面分析\" class=\"headerlink\" title=\"剖面分析\"></a>剖面分析</h4><p>以数字地形模型(DEM)为基础构造某一个方向的剖面，以线代面，概括研究区域的地势、地质和水文特征；</p>\n<p>可在地形剖面上叠加表示其它地理变量，如坡度、土壤、岩石抗蚀性、植被覆盖类型、土地利用现状等，可以作为提供土地侵蚀速度研究、农业生产布局的立体背景分析、土地利用规划，以及工程决策等的参考依据</p>\n<h2 id=\"地形可视化分析\"><a href=\"#地形可视化分析\" class=\"headerlink\" title=\"地形可视化分析\"></a>地形可视化分析</h2><h2 id=\"城市空间三维分析\"><a href=\"#城市空间三维分析\" class=\"headerlink\" title=\"城市空间三维分析\"></a>城市空间三维分析</h2>","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160700.webp","length":2628,"excerpt":"","more":"<h2 id=\"地形表面参数计算\"><a href=\"#地形表面参数计算\" class=\"headerlink\" title=\"地形表面参数计算\"></a>地形表面参数计算</h2><h3 id=\"数字地面模型-DTM\"><a href=\"#数字地面模型-DTM\" class=\"headerlink\" title=\"数字地面模型(DTM)\"></a><strong>数字地面模型(<span id=\"DTM\">DTM</span>)</strong></h3><p>DTM是指地球表面形态多种信息空间分布的有序数值阵列</p>\n<h3 id=\"数字高程模型-DEM\"><a href=\"#数字高程模型-DEM\" class=\"headerlink\" title=\"数字高程模型(DEM)\"></a><strong>数字高程模型(DEM)</strong></h3><p><strong>DEM是DTM的一个特例或者子集</strong></p>\n<p>DEM是DTM中基本的部分，是<strong>对地球表面地形地貌的一种离散的数学表达</strong></p>\n<h4 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h4><ol>\n<li><p>测绘</p>\n<blockquote>\n<p>绘制等高线、坡度图、坡向图、立体透视图、立体景观图、制作正射影像图、立体匹配图、立体地形模型及地图的修测</p>\n</blockquote>\n</li>\n<li><p>工程应用</p>\n<blockquote>\n<p>体积和面积的计算、各种剖面图的绘制及线路的设计</p>\n</blockquote>\n</li>\n<li><p>军事</p>\n<blockquote>\n<p>导航、通讯、作战任务的计划</p>\n</blockquote>\n</li>\n<li><p>遥感</p>\n<blockquote>\n<p>分类的辅助数据</p>\n</blockquote>\n</li>\n<li><p>环境与规划</p>\n<blockquote>\n<p>土地现状分析、规划及洪水险情预报</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"主要表示模型\"><a href=\"#主要表示模型\" class=\"headerlink\" title=\"主要表示模型\"></a>主要表示模型</h4><h5 id=\"规则格网\"><a href=\"#规则格网\" class=\"headerlink\" title=\"规则格网\"></a>规则格网</h5><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112105412.png\" alt=\"规则格网\"></p>\n<p>优点：</p>\n<ul>\n<li><strong>结构简单、易于计算机处理</strong>，特别是栅格数据结构的地理信息系统</li>\n<li>可以很容易地计算等高线、坡度、坡向、山坡阴影和自动提取流域地形</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li><strong>地形简单的地区存在大量冗余数据</strong></li>\n<li><strong>地形起伏差别大的地区无法适用</strong></li>\n<li>对某些特殊计算(如视线计算)的格网轴线方向被夸大</li>\n<li>如栅格过于粗略，则不能精确表示地形的关键特征，如山峰、坑洼、山脊、山谷等</li>\n</ul>\n<h5 id=\"不规则三角网-TIN\"><a href=\"#不规则三角网-TIN\" class=\"headerlink\" title=\"不规则三角网(TIN)\"></a>不规则三角网(TIN)</h5><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112105459.png\" alt=\"不规则三角网\"><br>        优点：</p>\n<ul>\n<li>可根据地形的复杂程度确定采样点的密度和位置，能充分表示地形特征点和线，减少地形较平坦地区的数据冗余</li>\n<li>在显示速度及表示精度方面优于规则格网</li>\n<li>TIN是一种<strong>变精度表示方法</strong>：平坦地区数据点较少，地形起伏度较大的地区密度较大。这种机制使得TIN数据可用较小的数据量实现较高的表达精度</li>\n</ul>\n<h5 id=\"等高线模型\"><a href=\"#等高线模型\" class=\"headerlink\" title=\"等高线模型\"></a>等高线模型</h5><p>将采集的相同高程的地形特征点连接成线，采样间隔(等高间距)是最核心的参数，等高线的分布疏密反映了地形起伏程度</p>\n<p>一系列<strong>等高线集合</strong>和它们的<strong>高程值</strong>一起就构成了一种地面高程模型</p>\n<p>等高线通常被存为一个<strong>有序的坐标点对序列</strong>，可以认为是一条<strong>带有高程值属性的简单多边形或多边形弧段</strong></p>\n<p>等高线模型只表达了<strong>区域的部分高程值</strong>，往往需要<strong>插值</strong>方法来计算落在等高线外的其他点的高程</p>\n<h4 id=\"数字地形分析-DTA\"><a href=\"#数字地形分析-DTA\" class=\"headerlink\" title=\"数字地形分析(DTA)\"></a>数字地形分析(DTA)</h4><blockquote>\n<p>指在数字高程模型上进行<strong>地形属性计算和特征提取</strong>的数字信息处理技术</p>\n<p>DTA技术是各种与地形因素相关<strong>空间模拟</strong>技术的基础</p>\n<p>主要包含：提取描述地形属性和特征的因子；<a href=\"#DTM\">DTM</a>的可视化分析</p>\n</blockquote>\n<h4 id=\"高程\"><a href=\"#高程\" class=\"headerlink\" title=\"高程\"></a>高程</h4><p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112155907.png\" alt=\"高程\"></p>\n<h4 id=\"坡度、坡向\"><a href=\"#坡度、坡向\" class=\"headerlink\" title=\"坡度、坡向\"></a><span id=\"坡度\">坡度</span>、坡向</h4><p>坡度：某点在曲面上的<strong>法线方向</strong>与<strong>垂直分析</strong>的夹角，是地面特定点高度变化比率的度量</p>\n<p>坡向：<strong>法线的正方向在平面上的投影</strong>与<strong>正北方向的夹角</strong></p>\n<p>应用</p>\n<p>​    坡度：</p>\n<ul>\n<li><p>地形描述中常用的参数，是一个具有方向与大小的矢量</p>\n</li>\n<li><p>能<strong>间接表示地形起伏形态</strong></p>\n</li>\n<li><p>建滑雪娱乐场，选择不同的坡度的区域</p>\n<p>坡向：</p>\n</li>\n<li><p>植被分析、环境评价等领域具有主要意义</p>\n</li>\n<li><p>在一个区域内提取所有朝南的坡面，为房地产建设选址提供最佳位置</p>\n</li>\n</ul>\n<h4 id=\"曲率\"><a href=\"#曲率\" class=\"headerlink\" title=\"曲率\"></a>曲率</h4><p>定义：地形曲面在各个界面方向上的形状，凹凸变化的反映，是平面点位的函数</p>\n<p>反映了地形结构和形态。影响着土壤有机物含量的分布，在地表过程模拟、水文、土壤等领域有着重要的应用价值和意义</p>\n<p>坡度变率：地面坡度在微分空间的变化率，是依据坡度的求算原理，在所提取的坡度值的基础上对地面每一点再求算一次坡度，即坡度之坡度</p>\n<p>坡向变率：在地表的坡向提取基础之上，进行对坡向变化率值的二次提取，即坡向之坡向</p>\n<h4 id=\"坡长\"><a href=\"#坡长\" class=\"headerlink\" title=\"坡长\"></a>坡长</h4><h4 id=\"面积\"><a href=\"#面积\" class=\"headerlink\" title=\"面积\"></a>面积</h4><p>分块曲面拟合：曲面表面积由分块曲面表面积之和给出</p>\n<p>全局拟合的曲面：将计算区域分成若干规则单元，先计算每个单元的面积，再累积计算总面积。</p>\n<h4 id=\"体积\"><a href=\"#体积\" class=\"headerlink\" title=\"体积\"></a>体积</h4><p>空间曲面与一基准面（水平面）的容积</p>\n<h4 id=\"地形起伏度、粗糙度、切割深度\"><a href=\"#地形起伏度、粗糙度、切割深度\" class=\"headerlink\" title=\"地形起伏度、粗糙度、切割深度\"></a><span id=\"地形起伏度\">地形起伏度</span>、粗糙度、切割深度</h4><p>地形起伏度：</p>\n<blockquote>\n<p>是指在一个特定区域内，最高点海拔高度与最低点海拔高度的差值</p>\n</blockquote>\n<p>地面粗糙度：</p>\n<blockquote>\n<p>反映地表起伏变化和侵蚀程度的指标</p>\n<p>一般定义为地表单元的曲面面积与其在水平面上的投影面积之比</p>\n</blockquote>\n<p>基于规则格网的粗糙度计算</p>\n<blockquote>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.29ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.879ex\" height=\"3.696ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1063.5 3924.7 1633.4\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(2092.6,0)\"><g data-mml-node=\"msub\" transform=\"translate(220,565) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(646,-176.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">曲</text></g><g data-mml-node=\"mi\" transform=\"translate(900,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">面</text></g></g></g><g data-mml-node=\"msub\" transform=\"translate(220,-345) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(646,-176.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">水</text></g><g data-mml-node=\"mi\" transform=\"translate(900,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">平</text></g></g></g><rect width=\"1592.1\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></p>\n<p>S为曲率，Areas为格点面元趋势面面积，AreaH为格点面元面积</p>\n<p>实际应用时，当分析窗口为3*3时，可采用以下公式近似计算</p>\n<ol>\n<li>根据DEM提取坡度因子S</li>\n<li>粗糙度：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.238ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.147ex\" height=\"3.195ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864.9 4484.9 1412\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(2092.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(1019.4,394) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mrow\" transform=\"translate(220,-370.3) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"63\" d=\"M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(444,0)\"></path><path data-c=\"73\" d=\"M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z\" transform=\"translate(944,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1338,0)\"><path data-c=\"2061\" d=\"\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1338,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1727,0)\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2372,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><rect width=\"2152.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></li>\n</ol>\n</blockquote>\n<p>地表切割深度</p>\n<blockquote>\n<p>地表切割深度是指地面某点的<strong>领域范围的平均高程</strong>与该领域范围内的<strong>最小高程的差值</strong></p>\n</blockquote>\n<h2 id=\"地形形态特征分析\"><a href=\"#地形形态特征分析\" class=\"headerlink\" title=\"地形形态特征分析\"></a>地形形态特征分析</h2><ul>\n<li><p>地形特征提取</p>\n<ul>\n<li>地形特征点：山峰、谷底、鞍部点等</li>\n<li>地形特征线：山脊线、山谷线等</li>\n</ul>\n</li>\n<li><p>水系特征提取</p>\n<ul>\n<li>分水线：类似山脊线</li>\n<li>合水线：类似山谷线</li>\n</ul>\n</li>\n<li><p>谷：地势中相对<strong>最低点</strong>的集合</p>\n</li>\n<li><p>脊：地势相对<strong>最高点</strong>的集合</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112194620.png\" alt=\"山谷山脊\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112194823.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112194924.png\" alt=\"\"></p>\n</li>\n</ul>\n<h3 id=\"水文分析\"><a href=\"#水文分析\" class=\"headerlink\" title=\"水文分析\"></a>水文分析</h3><p>水文分析是对所研究的水文变量或过程，作出尽可能正确的概率描述，对防止水旱和开发、利用、保护水资源的工程或非工程措施的规划、设计、施工3以及管理运用有着重要的意义，也是DEM数据应用的一个重要方面</p>\n<p>主要用于<strong>研究与地表水流有关的各种自然现象</strong></p>\n<p>比如：洪水水位及泛滥情况或者可以划定受污染源影响的地区</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112200620.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112200926.png\" alt=\"\"></p>\n<h4 id=\"水流方向\"><a href=\"#水流方向\" class=\"headerlink\" title=\"水流方向\"></a><span id=\"水流方向\">水流方向</span></h4><ol>\n<li><p>水流方向提取</p>\n<p>水流方向是指<strong>水流离开每一个栅格单元时的指向</strong>。在GIS中通过将中心栅格的<strong>8</strong>个领域栅格编码，水流方向便可以其中的某一值来确定，栅格方向编码如图所示。例如：如果中心栅格的水流流向左边，则其水流方向被赋值为<strong>16</strong></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202010.png\" alt=\"\"></p>\n</li>\n<li><p>D8算法</p>\n</li>\n</ol>\n<ul>\n<li><p>如果最大落差值<strong>小于0</strong>，则赋以负值以表明此格网方向<strong>未定</strong></p>\n</li>\n<li><p>如果最大落差值<strong>大于或等于0</strong>，<strong>且最大值只有一个</strong>，则将对应此最大值的方向值作为中心格网处的方向值;</p>\n</li>\n<li><p>如果最大落差<strong>等于0</strong>，<strong>且有一个以上的0值</strong>，则以这些0值所对应的方向值相加·在极端情况下，如果8个邻域高程值都与中心格网高程值相同，则中心格网方向值赋以<strong>255</strong> </p>\n</li>\n<li><p>如果最大落差值大于0，且有一个以上的最大值，则任选一个方向作为水流方向</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202538.png\" alt=\"\"></p>\n</li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202712.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211112202858.png\" alt=\"\"></p>\n<h4 id=\"汇流累积量\"><a href=\"#汇流累积量\" class=\"headerlink\" title=\"汇流累积量\"></a>汇流累积量</h4><blockquote>\n<p>区域地形每点的流水累积量，它可以用区域地形表面的流水模拟方法获得<br>规则格网表示的数字地面高程模型每点处有一个单位的水量，按照自然水流从高处流到低处的自然规律，根据区域地形的水流方向数字矩阵计算每点处所流过的水量数值，便可以得到该区域汇流累积量</p>\n</blockquote>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211113190012.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211113190051.png\" alt=\"\"></p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211113190156.png\" alt=\"\"></p>\n<h4 id=\"水流长度\"><a href=\"#水流长度\" class=\"headerlink\" title=\"水流长度\"></a>水流长度</h4><p>水流长度：地面上一点沿水流方向到其流向起点(或终点)间的最大地面距离在水平面上的投影长度</p>\n<p>水流长度是水土保持上的主要因子之一，当其他条件相同时，水力侵蚀的强度依据坡的长度来决定，破面越长，汇聚的流量越大，其侵蚀力就越强，水流长度直接影响地面径流的速度，从而影响对地面土壤的侵蚀力。因此，对于水流长度的提取和分析，水土保持工作有很主要的作用。</p>\n<p>顺流计算：计算地面上每一点沿水流方向到该点所在流域出水口最大地面距离的水平投影</p>\n<p>溯流计算：计算地面上每一点沿水流方向到其流向起点间的最大距离的水平投影</p>\n<h4 id=\"剖面分析\"><a href=\"#剖面分析\" class=\"headerlink\" title=\"剖面分析\"></a>剖面分析</h4><p>以数字地形模型(DEM)为基础构造某一个方向的剖面，以线代面，概括研究区域的地势、地质和水文特征；</p>\n<p>可在地形剖面上叠加表示其它地理变量，如坡度、土壤、岩石抗蚀性、植被覆盖类型、土地利用现状等，可以作为提供土地侵蚀速度研究、农业生产布局的立体背景分析、土地利用规划，以及工程决策等的参考依据</p>\n<h2 id=\"地形可视化分析\"><a href=\"#地形可视化分析\" class=\"headerlink\" title=\"地形可视化分析\"></a>地形可视化分析</h2><h2 id=\"城市空间三维分析\"><a href=\"#城市空间三维分析\" class=\"headerlink\" title=\"城市空间三维分析\"></a>城市空间三维分析</h2>"},{"title":"翻墙基础知识","date":"2021-12-26T12:36:29.000Z","description":"科学上网从了解什么是翻墙开始","_content":"\n## 一、中国（大陆）目前的互联网管制概况\n\n在中国大陆无法正常访问的网站很多，除了世界最大的搜索引擎谷歌 Google 、世界最大社交平台脸书 Facebook和推特 Twitter ，还有世界最大的财经网彭博社 Bloomberg 、世界最大视频网 YouTube 、世界最大图片分享平台 Instagram 、世界著名大报纽约时报 New York Times ，时断时续（部分屏蔽）的还有世界最大的百科全书维基百科 Wikipedia 、世界著名电台 BBC 中文网，以及英国《金融时报》、美国《华尔街日报》等等。据不完全统计，前后被中国政府屏蔽的网站在两千个以上，维基百科词条“[中华人民共和国被封锁网站](https://zh.wikipedia.org/wiki/中华人民共和国被封锁网站列表)”就列出了数百个，涵盖政治、经济、文化、邮箱、图片、视频、云存储等等方面，涉及国际互联网几乎所有门类，而且主要是业内领先的大型网站。\n\n很多海归以及初到中国的外国人对此表示很难受，这么多大型网站和手机app都不能用，来到中国就像来到了国际互联网的孤岛，立马与世界失去联系，无奈只得翻墙。翻墙是一件闹心的事，一是网速严重减慢，二是VPN等工具得时时更新，费力费钱。\n\n抓瞎的不止老外，所有需要从被封网站获取信息的国人，包括部分教师、学生（尤其是高校学生）、记者、科研人员、外贸和金融从业人员等等，都被逼天天修炼翻墙大法，学习、工作和生活不同程度受阻。而中国大陆对网络的封锁还在逐渐升级。\n\n## 二、那么为什么要进行网络管制呢？\n\n这个问题不好回答，咱也不知道，咱也不敢问。反正咱也不是不会翻墙。\n\n## 三、VPN是翻墙的代名词？\n\n说到翻墙，大多数人首先想到的可能就是 VPN ，甚至只能想到 VPN 。这里简单说明一下\n\n在很多人心目中就是用来翻墙的工具，其实不是。VPN 是一种加密通讯技术，是一个统称。它有很多的具体实现，比如 PPTP 、L2TP 、IPSec 和 OpenVPN 。VPN 的出现远早于 GFW （中国长城防火墙），所以**它不是为了翻墙而生的**。 VPN 最主要的功能，**并不是用来翻墙**，只是它可以达到翻墙的目的。它的功能是：在公用网络上建立专用网络，进行加密通讯。在企业网络和高校的网络中应用很广泛。（很多大学会提供 VPN 接口，以便随时随地可以从公网接入校园网以便下载知网论文等资源。）你接入 VPN ，其实就是接入了一个专有网络，你的网络访问都从这个出口出去，你和 VPN 之间的通信是否加密，取决于你连接 VPN 的方式或者协议。\n\n既然不是为翻墙而生，那从翻墙的角度上讲，VPN 协议就存在诸多问题。最严重的一个就是流量特征过于明显。经验表明，墙目前已经能够精确识别绝大部分 VPN 协议的流量特征并采取不同程度的封锁措施，所以，VPN 这种古早翻墙方式还是当作备用的吧，不建议作为主要手段。\n\nV2Ray 是一个模块化的代理软件包，是 [Project V](https://www.v2ray.com/) 的核心工具。它的目标是提供常用的代理软件模块，简化网络代理软件的开发。简单来说，它就是一个模块化代理，可以用来科学上网，支持多平台。\n\n已经1202年了，建议将 SS / SSR / V2Ray 等稍晚出现但已经较为成熟的代理协议作为首选。\n\n## 四、什么是 SS /SSR ？什么是 V2Ray ？……\n\nSS ：SS作者是 [clowwindy](https://github.com/clowwindy) 。大约四年前，他自己为了翻墙写了 Shadowsocks ，简称 SS 或者影梭，后来他觉得这个东西非常好用，速度快，而且不会被封锁，他就把源码共享在了github上，然后就火了。但是后来作者被请去喝茶，删了代码，并且保证不再参与维护更新。现在这个项目已被别的开发者接手并持续维护更新。\nSSR ：在 SS 作者被喝茶之后，Github 上出现了一个叫 breakwa11 (破娃)的帐号，声称 SS 容易被防火墙检测到，所以在混淆和协议方面做了改进，更加不容易被检测到，而且兼容 SS ，改进后的项目叫 Shadowsocks-R，简称SSR ，然后 SS 用户和 SSR 用户自然分成了两个派别，互相撕逼，直到破娃被人肉出来，无奈之下删除了 SSR 的代码，并且解散了所有相关群组。\n\nSS 和 SSR 它的原理都是一样的，就是 Socks5 代理。Socks 代理只是简单的传递数据包，而不必关心是何种协议，所以 Socks 代理比其他应用层代理要快的多。Socks5 代理是把你的网络数据请求通过一条连接你和代理服务器之间的通道，由服务器转发到目的地，这个过程中你是没有通过一条专用通道的，只是数据包的发出，然后被代理服务器收到，整个过程并没有额外的处理。通俗的说，现在你有一个代理服务器在香港，比如你现在想要访问 Google ，你的电脑发出请求，流量通过 Socks5 连接发到你在香港的服务器上，然后再由你在香港的服务器去访问 Google ，再把访问结果传回你的电脑，这样就实现了翻墙。\n\n什么是V2Ray？V2Ray是ProjectV的核心工具，具体的可以查看官方文档：https://www.v2ray.com/\n\n## 五、VPN 和 SS/SSR 的区别和优缺点\n\n通过上面的介绍，其实基本已经能看出 VPN 和 SS/SSR 的区别了，那么他们到底孰优孰劣。\n\n因为 VPN 是走的专用通道，它是用来给企业传输加密数据用的，所以 VPN 的流量特征很明显，防火墙可以直接分析你的流量，如果特征匹配，直接封掉。至于封不封，在什么程度上封禁，随缘。（就像不见得所有罪犯都在监狱里呆着一样。）目前就翻墙用途的 VPN 来说，PPTP 类型的 VPN 基本死的差不多了，L2TP 大部分地区干扰严重，很不稳定。\n\nSS/SSR 的目的就是用来翻墙的，而 VPN 的目的是用来加密企业数据的，对于 VPN 来说安全是第一位的，而对于 SS/SSR 来说穿透防火墙是第一位，抗干扰性强，而且对流量做了混淆，所以流量在通过防火墙的时候，基本上都被识别为普通流量，也就是说你翻墙了，但是政府是基本检测不到你在翻墙的。（不过防火墙也是在不断升级的，识别能力肯定也是在提高的。不过截至目前还是正常可用的。）两者的出发点和着重点就不同，SS/SSR 更注重流量的混淆加密。如果要安全匿名上网，可以用 VPN+Tor 或者 SS/SSR+Tor。\n\n而安全性方面还要补充的一点就是，国内的 VPN 服务商，政府是很容易拿到他们的服务器日志的，如果他们真的这样做了，你翻墙做了什么，一览无余。\n\n**总结：如果你的目的是为了翻墙，建议首选 SS/SSR，因为更专业，机场选择也很多，软件也很丰富，很成熟，加密程度也已经足够保证数据安全了，比如使用 AES-256-GCM 加密；如果你的目的是在翻墙的同时又在最大程度上加密数据，或者是是在学不会使用 SS/SSR 的客户端，那还是用传统的 VPN 软件吧，不强求。**\n\n管它黑猫白猫，能抓到老鼠就是好猫。\n\n## 六、什么是机场？\n\n其实这个很好解释，我们常用的 SS/SSR 客户端很多都采用类似于纸飞机的图标。所以我们有时也把这类软件和它们的衍生版叫做小飞机。这些软件都会使用到节点，也就是线路。可以把它们当作可以自定义线路的高级 VPN ，但它们确实不是 VPN 。而机场则可以认为是节点服务的提供商。大致就这样。\n\n机场分为收费的和免费的。这里不对免费的做出评价，自己体验一下就好。个人认为专业的事情还是交给专业的人干吧，虽然节点可以找免费的，也可以自己搭建，但是折腾了几年之后，发现还是直接花点小钱买一个靠谱的机场套餐划算，省钱省时间。对自己好一点，不给自己添麻烦。\n\n\n\n","source":"_posts/翻墙基础知识.md","raw":"---\ntitle: 翻墙基础知识\ndate: 2021-12-26 20:36:29\ntags: 翻墙\ncategories:\ndescription: 科学上网从了解什么是翻墙开始\n---\n\n## 一、中国（大陆）目前的互联网管制概况\n\n在中国大陆无法正常访问的网站很多，除了世界最大的搜索引擎谷歌 Google 、世界最大社交平台脸书 Facebook和推特 Twitter ，还有世界最大的财经网彭博社 Bloomberg 、世界最大视频网 YouTube 、世界最大图片分享平台 Instagram 、世界著名大报纽约时报 New York Times ，时断时续（部分屏蔽）的还有世界最大的百科全书维基百科 Wikipedia 、世界著名电台 BBC 中文网，以及英国《金融时报》、美国《华尔街日报》等等。据不完全统计，前后被中国政府屏蔽的网站在两千个以上，维基百科词条“[中华人民共和国被封锁网站](https://zh.wikipedia.org/wiki/中华人民共和国被封锁网站列表)”就列出了数百个，涵盖政治、经济、文化、邮箱、图片、视频、云存储等等方面，涉及国际互联网几乎所有门类，而且主要是业内领先的大型网站。\n\n很多海归以及初到中国的外国人对此表示很难受，这么多大型网站和手机app都不能用，来到中国就像来到了国际互联网的孤岛，立马与世界失去联系，无奈只得翻墙。翻墙是一件闹心的事，一是网速严重减慢，二是VPN等工具得时时更新，费力费钱。\n\n抓瞎的不止老外，所有需要从被封网站获取信息的国人，包括部分教师、学生（尤其是高校学生）、记者、科研人员、外贸和金融从业人员等等，都被逼天天修炼翻墙大法，学习、工作和生活不同程度受阻。而中国大陆对网络的封锁还在逐渐升级。\n\n## 二、那么为什么要进行网络管制呢？\n\n这个问题不好回答，咱也不知道，咱也不敢问。反正咱也不是不会翻墙。\n\n## 三、VPN是翻墙的代名词？\n\n说到翻墙，大多数人首先想到的可能就是 VPN ，甚至只能想到 VPN 。这里简单说明一下\n\n在很多人心目中就是用来翻墙的工具，其实不是。VPN 是一种加密通讯技术，是一个统称。它有很多的具体实现，比如 PPTP 、L2TP 、IPSec 和 OpenVPN 。VPN 的出现远早于 GFW （中国长城防火墙），所以**它不是为了翻墙而生的**。 VPN 最主要的功能，**并不是用来翻墙**，只是它可以达到翻墙的目的。它的功能是：在公用网络上建立专用网络，进行加密通讯。在企业网络和高校的网络中应用很广泛。（很多大学会提供 VPN 接口，以便随时随地可以从公网接入校园网以便下载知网论文等资源。）你接入 VPN ，其实就是接入了一个专有网络，你的网络访问都从这个出口出去，你和 VPN 之间的通信是否加密，取决于你连接 VPN 的方式或者协议。\n\n既然不是为翻墙而生，那从翻墙的角度上讲，VPN 协议就存在诸多问题。最严重的一个就是流量特征过于明显。经验表明，墙目前已经能够精确识别绝大部分 VPN 协议的流量特征并采取不同程度的封锁措施，所以，VPN 这种古早翻墙方式还是当作备用的吧，不建议作为主要手段。\n\nV2Ray 是一个模块化的代理软件包，是 [Project V](https://www.v2ray.com/) 的核心工具。它的目标是提供常用的代理软件模块，简化网络代理软件的开发。简单来说，它就是一个模块化代理，可以用来科学上网，支持多平台。\n\n已经1202年了，建议将 SS / SSR / V2Ray 等稍晚出现但已经较为成熟的代理协议作为首选。\n\n## 四、什么是 SS /SSR ？什么是 V2Ray ？……\n\nSS ：SS作者是 [clowwindy](https://github.com/clowwindy) 。大约四年前，他自己为了翻墙写了 Shadowsocks ，简称 SS 或者影梭，后来他觉得这个东西非常好用，速度快，而且不会被封锁，他就把源码共享在了github上，然后就火了。但是后来作者被请去喝茶，删了代码，并且保证不再参与维护更新。现在这个项目已被别的开发者接手并持续维护更新。\nSSR ：在 SS 作者被喝茶之后，Github 上出现了一个叫 breakwa11 (破娃)的帐号，声称 SS 容易被防火墙检测到，所以在混淆和协议方面做了改进，更加不容易被检测到，而且兼容 SS ，改进后的项目叫 Shadowsocks-R，简称SSR ，然后 SS 用户和 SSR 用户自然分成了两个派别，互相撕逼，直到破娃被人肉出来，无奈之下删除了 SSR 的代码，并且解散了所有相关群组。\n\nSS 和 SSR 它的原理都是一样的，就是 Socks5 代理。Socks 代理只是简单的传递数据包，而不必关心是何种协议，所以 Socks 代理比其他应用层代理要快的多。Socks5 代理是把你的网络数据请求通过一条连接你和代理服务器之间的通道，由服务器转发到目的地，这个过程中你是没有通过一条专用通道的，只是数据包的发出，然后被代理服务器收到，整个过程并没有额外的处理。通俗的说，现在你有一个代理服务器在香港，比如你现在想要访问 Google ，你的电脑发出请求，流量通过 Socks5 连接发到你在香港的服务器上，然后再由你在香港的服务器去访问 Google ，再把访问结果传回你的电脑，这样就实现了翻墙。\n\n什么是V2Ray？V2Ray是ProjectV的核心工具，具体的可以查看官方文档：https://www.v2ray.com/\n\n## 五、VPN 和 SS/SSR 的区别和优缺点\n\n通过上面的介绍，其实基本已经能看出 VPN 和 SS/SSR 的区别了，那么他们到底孰优孰劣。\n\n因为 VPN 是走的专用通道，它是用来给企业传输加密数据用的，所以 VPN 的流量特征很明显，防火墙可以直接分析你的流量，如果特征匹配，直接封掉。至于封不封，在什么程度上封禁，随缘。（就像不见得所有罪犯都在监狱里呆着一样。）目前就翻墙用途的 VPN 来说，PPTP 类型的 VPN 基本死的差不多了，L2TP 大部分地区干扰严重，很不稳定。\n\nSS/SSR 的目的就是用来翻墙的，而 VPN 的目的是用来加密企业数据的，对于 VPN 来说安全是第一位的，而对于 SS/SSR 来说穿透防火墙是第一位，抗干扰性强，而且对流量做了混淆，所以流量在通过防火墙的时候，基本上都被识别为普通流量，也就是说你翻墙了，但是政府是基本检测不到你在翻墙的。（不过防火墙也是在不断升级的，识别能力肯定也是在提高的。不过截至目前还是正常可用的。）两者的出发点和着重点就不同，SS/SSR 更注重流量的混淆加密。如果要安全匿名上网，可以用 VPN+Tor 或者 SS/SSR+Tor。\n\n而安全性方面还要补充的一点就是，国内的 VPN 服务商，政府是很容易拿到他们的服务器日志的，如果他们真的这样做了，你翻墙做了什么，一览无余。\n\n**总结：如果你的目的是为了翻墙，建议首选 SS/SSR，因为更专业，机场选择也很多，软件也很丰富，很成熟，加密程度也已经足够保证数据安全了，比如使用 AES-256-GCM 加密；如果你的目的是在翻墙的同时又在最大程度上加密数据，或者是是在学不会使用 SS/SSR 的客户端，那还是用传统的 VPN 软件吧，不强求。**\n\n管它黑猫白猫，能抓到老鼠就是好猫。\n\n## 六、什么是机场？\n\n其实这个很好解释，我们常用的 SS/SSR 客户端很多都采用类似于纸飞机的图标。所以我们有时也把这类软件和它们的衍生版叫做小飞机。这些软件都会使用到节点，也就是线路。可以把它们当作可以自定义线路的高级 VPN ，但它们确实不是 VPN 。而机场则可以认为是节点服务的提供商。大致就这样。\n\n机场分为收费的和免费的。这里不对免费的做出评价，自己体验一下就好。个人认为专业的事情还是交给专业的人干吧，虽然节点可以找免费的，也可以自己搭建，但是折腾了几年之后，发现还是直接花点小钱买一个靠谱的机场套餐划算，省钱省时间。对自己好一点，不给自己添麻烦。\n\n\n\n","slug":"翻墙基础知识","published":1,"updated":"2022-01-04T07:49:49.025Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt4c004tjsvk27t2bqr5","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"一、中国（大陆）目前的互联网管制概况\"><a href=\"#一、中国（大陆）目前的互联网管制概况\" class=\"headerlink\" title=\"一、中国（大陆）目前的互联网管制概况\"></a>一、中国（大陆）目前的互联网管制概况</h2><p>在中国大陆无法正常访问的网站很多，除了世界最大的搜索引擎谷歌 Google 、世界最大社交平台脸书 Facebook和推特 Twitter ，还有世界最大的财经网彭博社 Bloomberg 、世界最大视频网 YouTube 、世界最大图片分享平台 Instagram 、世界著名大报纽约时报 New York Times ，时断时续（部分屏蔽）的还有世界最大的百科全书维基百科 Wikipedia 、世界著名电台 BBC 中文网，以及英国《金融时报》、美国《华尔街日报》等等。据不完全统计，前后被中国政府屏蔽的网站在两千个以上，维基百科词条“<a href=\"https://zh.wikipedia.org/wiki/中华人民共和国被封锁网站列表\">中华人民共和国被封锁网站</a>”就列出了数百个，涵盖政治、经济、文化、邮箱、图片、视频、云存储等等方面，涉及国际互联网几乎所有门类，而且主要是业内领先的大型网站。</p>\n<p>很多海归以及初到中国的外国人对此表示很难受，这么多大型网站和手机app都不能用，来到中国就像来到了国际互联网的孤岛，立马与世界失去联系，无奈只得翻墙。翻墙是一件闹心的事，一是网速严重减慢，二是VPN等工具得时时更新，费力费钱。</p>\n<p>抓瞎的不止老外，所有需要从被封网站获取信息的国人，包括部分教师、学生（尤其是高校学生）、记者、科研人员、外贸和金融从业人员等等，都被逼天天修炼翻墙大法，学习、工作和生活不同程度受阻。而中国大陆对网络的封锁还在逐渐升级。</p>\n<h2 id=\"二、那么为什么要进行网络管制呢？\"><a href=\"#二、那么为什么要进行网络管制呢？\" class=\"headerlink\" title=\"二、那么为什么要进行网络管制呢？\"></a>二、那么为什么要进行网络管制呢？</h2><p>这个问题不好回答，咱也不知道，咱也不敢问。反正咱也不是不会翻墙。</p>\n<h2 id=\"三、VPN是翻墙的代名词？\"><a href=\"#三、VPN是翻墙的代名词？\" class=\"headerlink\" title=\"三、VPN是翻墙的代名词？\"></a>三、VPN是翻墙的代名词？</h2><p>说到翻墙，大多数人首先想到的可能就是 VPN ，甚至只能想到 VPN 。这里简单说明一下</p>\n<p>在很多人心目中就是用来翻墙的工具，其实不是。VPN 是一种加密通讯技术，是一个统称。它有很多的具体实现，比如 PPTP 、L2TP 、IPSec 和 OpenVPN 。VPN 的出现远早于 GFW （中国长城防火墙），所以<strong>它不是为了翻墙而生的</strong>。 VPN 最主要的功能，<strong>并不是用来翻墙</strong>，只是它可以达到翻墙的目的。它的功能是：在公用网络上建立专用网络，进行加密通讯。在企业网络和高校的网络中应用很广泛。（很多大学会提供 VPN 接口，以便随时随地可以从公网接入校园网以便下载知网论文等资源。）你接入 VPN ，其实就是接入了一个专有网络，你的网络访问都从这个出口出去，你和 VPN 之间的通信是否加密，取决于你连接 VPN 的方式或者协议。</p>\n<p>既然不是为翻墙而生，那从翻墙的角度上讲，VPN 协议就存在诸多问题。最严重的一个就是流量特征过于明显。经验表明，墙目前已经能够精确识别绝大部分 VPN 协议的流量特征并采取不同程度的封锁措施，所以，VPN 这种古早翻墙方式还是当作备用的吧，不建议作为主要手段。</p>\n<p>V2Ray 是一个模块化的代理软件包，是 <a href=\"https://www.v2ray.com/\">Project V</a> 的核心工具。它的目标是提供常用的代理软件模块，简化网络代理软件的开发。简单来说，它就是一个模块化代理，可以用来科学上网，支持多平台。</p>\n<p>已经1202年了，建议将 SS / SSR / V2Ray 等稍晚出现但已经较为成熟的代理协议作为首选。</p>\n<h2 id=\"四、什么是-SS-SSR-？什么是-V2Ray-？……\"><a href=\"#四、什么是-SS-SSR-？什么是-V2Ray-？……\" class=\"headerlink\" title=\"四、什么是 SS /SSR ？什么是 V2Ray ？……\"></a>四、什么是 SS /SSR ？什么是 V2Ray ？……</h2><p>SS ：SS作者是 <a href=\"https://github.com/clowwindy\">clowwindy</a> 。大约四年前，他自己为了翻墙写了 Shadowsocks ，简称 SS 或者影梭，后来他觉得这个东西非常好用，速度快，而且不会被封锁，他就把源码共享在了github上，然后就火了。但是后来作者被请去喝茶，删了代码，并且保证不再参与维护更新。现在这个项目已被别的开发者接手并持续维护更新。<br>SSR ：在 SS 作者被喝茶之后，Github 上出现了一个叫 breakwa11 (破娃)的帐号，声称 SS 容易被防火墙检测到，所以在混淆和协议方面做了改进，更加不容易被检测到，而且兼容 SS ，改进后的项目叫 Shadowsocks-R，简称SSR ，然后 SS 用户和 SSR 用户自然分成了两个派别，互相撕逼，直到破娃被人肉出来，无奈之下删除了 SSR 的代码，并且解散了所有相关群组。</p>\n<p>SS 和 SSR 它的原理都是一样的，就是 Socks5 代理。Socks 代理只是简单的传递数据包，而不必关心是何种协议，所以 Socks 代理比其他应用层代理要快的多。Socks5 代理是把你的网络数据请求通过一条连接你和代理服务器之间的通道，由服务器转发到目的地，这个过程中你是没有通过一条专用通道的，只是数据包的发出，然后被代理服务器收到，整个过程并没有额外的处理。通俗的说，现在你有一个代理服务器在香港，比如你现在想要访问 Google ，你的电脑发出请求，流量通过 Socks5 连接发到你在香港的服务器上，然后再由你在香港的服务器去访问 Google ，再把访问结果传回你的电脑，这样就实现了翻墙。</p>\n<p>什么是V2Ray？V2Ray是ProjectV的核心工具，具体的可以查看官方文档：<a href=\"https://www.v2ray.com/\">https://www.v2ray.com/</a></p>\n<h2 id=\"五、VPN-和-SS-SSR-的区别和优缺点\"><a href=\"#五、VPN-和-SS-SSR-的区别和优缺点\" class=\"headerlink\" title=\"五、VPN 和 SS/SSR 的区别和优缺点\"></a>五、VPN 和 SS/SSR 的区别和优缺点</h2><p>通过上面的介绍，其实基本已经能看出 VPN 和 SS/SSR 的区别了，那么他们到底孰优孰劣。</p>\n<p>因为 VPN 是走的专用通道，它是用来给企业传输加密数据用的，所以 VPN 的流量特征很明显，防火墙可以直接分析你的流量，如果特征匹配，直接封掉。至于封不封，在什么程度上封禁，随缘。（就像不见得所有罪犯都在监狱里呆着一样。）目前就翻墙用途的 VPN 来说，PPTP 类型的 VPN 基本死的差不多了，L2TP 大部分地区干扰严重，很不稳定。</p>\n<p>SS/SSR 的目的就是用来翻墙的，而 VPN 的目的是用来加密企业数据的，对于 VPN 来说安全是第一位的，而对于 SS/SSR 来说穿透防火墙是第一位，抗干扰性强，而且对流量做了混淆，所以流量在通过防火墙的时候，基本上都被识别为普通流量，也就是说你翻墙了，但是政府是基本检测不到你在翻墙的。（不过防火墙也是在不断升级的，识别能力肯定也是在提高的。不过截至目前还是正常可用的。）两者的出发点和着重点就不同，SS/SSR 更注重流量的混淆加密。如果要安全匿名上网，可以用 VPN+Tor 或者 SS/SSR+Tor。</p>\n<p>而安全性方面还要补充的一点就是，国内的 VPN 服务商，政府是很容易拿到他们的服务器日志的，如果他们真的这样做了，你翻墙做了什么，一览无余。</p>\n<p><strong>总结：如果你的目的是为了翻墙，建议首选 SS/SSR，因为更专业，机场选择也很多，软件也很丰富，很成熟，加密程度也已经足够保证数据安全了，比如使用 AES-256-GCM 加密；如果你的目的是在翻墙的同时又在最大程度上加密数据，或者是是在学不会使用 SS/SSR 的客户端，那还是用传统的 VPN 软件吧，不强求。</strong></p>\n<p>管它黑猫白猫，能抓到老鼠就是好猫。</p>\n<h2 id=\"六、什么是机场？\"><a href=\"#六、什么是机场？\" class=\"headerlink\" title=\"六、什么是机场？\"></a>六、什么是机场？</h2><p>其实这个很好解释，我们常用的 SS/SSR 客户端很多都采用类似于纸飞机的图标。所以我们有时也把这类软件和它们的衍生版叫做小飞机。这些软件都会使用到节点，也就是线路。可以把它们当作可以自定义线路的高级 VPN ，但它们确实不是 VPN 。而机场则可以认为是节点服务的提供商。大致就这样。</p>\n<p>机场分为收费的和免费的。这里不对免费的做出评价，自己体验一下就好。个人认为专业的事情还是交给专业的人干吧，虽然节点可以找免费的，也可以自己搭建，但是折腾了几年之后，发现还是直接花点小钱买一个靠谱的机场套餐划算，省钱省时间。对自己好一点，不给自己添麻烦。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160700.webp","length":2923,"excerpt":"","more":"<h2 id=\"一、中国（大陆）目前的互联网管制概况\"><a href=\"#一、中国（大陆）目前的互联网管制概况\" class=\"headerlink\" title=\"一、中国（大陆）目前的互联网管制概况\"></a>一、中国（大陆）目前的互联网管制概况</h2><p>在中国大陆无法正常访问的网站很多，除了世界最大的搜索引擎谷歌 Google 、世界最大社交平台脸书 Facebook和推特 Twitter ，还有世界最大的财经网彭博社 Bloomberg 、世界最大视频网 YouTube 、世界最大图片分享平台 Instagram 、世界著名大报纽约时报 New York Times ，时断时续（部分屏蔽）的还有世界最大的百科全书维基百科 Wikipedia 、世界著名电台 BBC 中文网，以及英国《金融时报》、美国《华尔街日报》等等。据不完全统计，前后被中国政府屏蔽的网站在两千个以上，维基百科词条“<a href=\"https://zh.wikipedia.org/wiki/中华人民共和国被封锁网站列表\">中华人民共和国被封锁网站</a>”就列出了数百个，涵盖政治、经济、文化、邮箱、图片、视频、云存储等等方面，涉及国际互联网几乎所有门类，而且主要是业内领先的大型网站。</p>\n<p>很多海归以及初到中国的外国人对此表示很难受，这么多大型网站和手机app都不能用，来到中国就像来到了国际互联网的孤岛，立马与世界失去联系，无奈只得翻墙。翻墙是一件闹心的事，一是网速严重减慢，二是VPN等工具得时时更新，费力费钱。</p>\n<p>抓瞎的不止老外，所有需要从被封网站获取信息的国人，包括部分教师、学生（尤其是高校学生）、记者、科研人员、外贸和金融从业人员等等，都被逼天天修炼翻墙大法，学习、工作和生活不同程度受阻。而中国大陆对网络的封锁还在逐渐升级。</p>\n<h2 id=\"二、那么为什么要进行网络管制呢？\"><a href=\"#二、那么为什么要进行网络管制呢？\" class=\"headerlink\" title=\"二、那么为什么要进行网络管制呢？\"></a>二、那么为什么要进行网络管制呢？</h2><p>这个问题不好回答，咱也不知道，咱也不敢问。反正咱也不是不会翻墙。</p>\n<h2 id=\"三、VPN是翻墙的代名词？\"><a href=\"#三、VPN是翻墙的代名词？\" class=\"headerlink\" title=\"三、VPN是翻墙的代名词？\"></a>三、VPN是翻墙的代名词？</h2><p>说到翻墙，大多数人首先想到的可能就是 VPN ，甚至只能想到 VPN 。这里简单说明一下</p>\n<p>在很多人心目中就是用来翻墙的工具，其实不是。VPN 是一种加密通讯技术，是一个统称。它有很多的具体实现，比如 PPTP 、L2TP 、IPSec 和 OpenVPN 。VPN 的出现远早于 GFW （中国长城防火墙），所以<strong>它不是为了翻墙而生的</strong>。 VPN 最主要的功能，<strong>并不是用来翻墙</strong>，只是它可以达到翻墙的目的。它的功能是：在公用网络上建立专用网络，进行加密通讯。在企业网络和高校的网络中应用很广泛。（很多大学会提供 VPN 接口，以便随时随地可以从公网接入校园网以便下载知网论文等资源。）你接入 VPN ，其实就是接入了一个专有网络，你的网络访问都从这个出口出去，你和 VPN 之间的通信是否加密，取决于你连接 VPN 的方式或者协议。</p>\n<p>既然不是为翻墙而生，那从翻墙的角度上讲，VPN 协议就存在诸多问题。最严重的一个就是流量特征过于明显。经验表明，墙目前已经能够精确识别绝大部分 VPN 协议的流量特征并采取不同程度的封锁措施，所以，VPN 这种古早翻墙方式还是当作备用的吧，不建议作为主要手段。</p>\n<p>V2Ray 是一个模块化的代理软件包，是 <a href=\"https://www.v2ray.com/\">Project V</a> 的核心工具。它的目标是提供常用的代理软件模块，简化网络代理软件的开发。简单来说，它就是一个模块化代理，可以用来科学上网，支持多平台。</p>\n<p>已经1202年了，建议将 SS / SSR / V2Ray 等稍晚出现但已经较为成熟的代理协议作为首选。</p>\n<h2 id=\"四、什么是-SS-SSR-？什么是-V2Ray-？……\"><a href=\"#四、什么是-SS-SSR-？什么是-V2Ray-？……\" class=\"headerlink\" title=\"四、什么是 SS /SSR ？什么是 V2Ray ？……\"></a>四、什么是 SS /SSR ？什么是 V2Ray ？……</h2><p>SS ：SS作者是 <a href=\"https://github.com/clowwindy\">clowwindy</a> 。大约四年前，他自己为了翻墙写了 Shadowsocks ，简称 SS 或者影梭，后来他觉得这个东西非常好用，速度快，而且不会被封锁，他就把源码共享在了github上，然后就火了。但是后来作者被请去喝茶，删了代码，并且保证不再参与维护更新。现在这个项目已被别的开发者接手并持续维护更新。<br>SSR ：在 SS 作者被喝茶之后，Github 上出现了一个叫 breakwa11 (破娃)的帐号，声称 SS 容易被防火墙检测到，所以在混淆和协议方面做了改进，更加不容易被检测到，而且兼容 SS ，改进后的项目叫 Shadowsocks-R，简称SSR ，然后 SS 用户和 SSR 用户自然分成了两个派别，互相撕逼，直到破娃被人肉出来，无奈之下删除了 SSR 的代码，并且解散了所有相关群组。</p>\n<p>SS 和 SSR 它的原理都是一样的，就是 Socks5 代理。Socks 代理只是简单的传递数据包，而不必关心是何种协议，所以 Socks 代理比其他应用层代理要快的多。Socks5 代理是把你的网络数据请求通过一条连接你和代理服务器之间的通道，由服务器转发到目的地，这个过程中你是没有通过一条专用通道的，只是数据包的发出，然后被代理服务器收到，整个过程并没有额外的处理。通俗的说，现在你有一个代理服务器在香港，比如你现在想要访问 Google ，你的电脑发出请求，流量通过 Socks5 连接发到你在香港的服务器上，然后再由你在香港的服务器去访问 Google ，再把访问结果传回你的电脑，这样就实现了翻墙。</p>\n<p>什么是V2Ray？V2Ray是ProjectV的核心工具，具体的可以查看官方文档：<a href=\"https://www.v2ray.com/\">https://www.v2ray.com/</a></p>\n<h2 id=\"五、VPN-和-SS-SSR-的区别和优缺点\"><a href=\"#五、VPN-和-SS-SSR-的区别和优缺点\" class=\"headerlink\" title=\"五、VPN 和 SS/SSR 的区别和优缺点\"></a>五、VPN 和 SS/SSR 的区别和优缺点</h2><p>通过上面的介绍，其实基本已经能看出 VPN 和 SS/SSR 的区别了，那么他们到底孰优孰劣。</p>\n<p>因为 VPN 是走的专用通道，它是用来给企业传输加密数据用的，所以 VPN 的流量特征很明显，防火墙可以直接分析你的流量，如果特征匹配，直接封掉。至于封不封，在什么程度上封禁，随缘。（就像不见得所有罪犯都在监狱里呆着一样。）目前就翻墙用途的 VPN 来说，PPTP 类型的 VPN 基本死的差不多了，L2TP 大部分地区干扰严重，很不稳定。</p>\n<p>SS/SSR 的目的就是用来翻墙的，而 VPN 的目的是用来加密企业数据的，对于 VPN 来说安全是第一位的，而对于 SS/SSR 来说穿透防火墙是第一位，抗干扰性强，而且对流量做了混淆，所以流量在通过防火墙的时候，基本上都被识别为普通流量，也就是说你翻墙了，但是政府是基本检测不到你在翻墙的。（不过防火墙也是在不断升级的，识别能力肯定也是在提高的。不过截至目前还是正常可用的。）两者的出发点和着重点就不同，SS/SSR 更注重流量的混淆加密。如果要安全匿名上网，可以用 VPN+Tor 或者 SS/SSR+Tor。</p>\n<p>而安全性方面还要补充的一点就是，国内的 VPN 服务商，政府是很容易拿到他们的服务器日志的，如果他们真的这样做了，你翻墙做了什么，一览无余。</p>\n<p><strong>总结：如果你的目的是为了翻墙，建议首选 SS/SSR，因为更专业，机场选择也很多，软件也很丰富，很成熟，加密程度也已经足够保证数据安全了，比如使用 AES-256-GCM 加密；如果你的目的是在翻墙的同时又在最大程度上加密数据，或者是是在学不会使用 SS/SSR 的客户端，那还是用传统的 VPN 软件吧，不强求。</strong></p>\n<p>管它黑猫白猫，能抓到老鼠就是好猫。</p>\n<h2 id=\"六、什么是机场？\"><a href=\"#六、什么是机场？\" class=\"headerlink\" title=\"六、什么是机场？\"></a>六、什么是机场？</h2><p>其实这个很好解释，我们常用的 SS/SSR 客户端很多都采用类似于纸飞机的图标。所以我们有时也把这类软件和它们的衍生版叫做小飞机。这些软件都会使用到节点，也就是线路。可以把它们当作可以自定义线路的高级 VPN ，但它们确实不是 VPN 。而机场则可以认为是节点服务的提供商。大致就这样。</p>\n<p>机场分为收费的和免费的。这里不对免费的做出评价，自己体验一下就好。个人认为专业的事情还是交给专业的人干吧，虽然节点可以找免费的，也可以自己搭建，但是折腾了几年之后，发现还是直接花点小钱买一个靠谱的机场套餐划算，省钱省时间。对自己好一点，不给自己添麻烦。</p>\n"},{"title":"解析空中三角测量","date":"2021-07-05T11:00:24.000Z","description":"利用少量控制点对整个区域所有影像恢复它们的外方位元素，利用计算的方法，根据航摄像片上所量测的像点坐标以及少量的地面控制点求出地面加密点的物方空间坐标","_content":"\n## 定义\n\n+ 利用少量控制点对整个区域所有影像恢复它们的外方位元素\n\n+ 利用计算的方法，根据航摄像片上所量测的像点坐标以及少量的地面控制点求出地面加密点的物方空间坐标，称之为解析空中三角测量，俗称摄影测量加密\n\n\n## 分类\n\n### 根据平差范围\n\n+ 单航带法\n\n+ 单模型法\n\n+ 区域网法\n\n### 根据平差模型\n\n+ 航带法\n\n+ 独立模型法\n\n+ 光束法\n\n## 作用\n\n+ 极大地减少甚至完全免除常规空中三角测量所必须的地面控制点，以节省野外控制测量工作量 缩短航测成图周期 降低生产成本 提高生产效率\n\n## POS系统及作用\n\n+ 主要包括：GPS信号接收机和惯性测量装置(IMU)\n+ 作用：直接测定影像外方位元素\n\n<img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210705190103.png\"/>\n\n","source":"_posts/解析空中三角测量.md","raw":"---\ntitle: 解析空中三角测量\ndate: 2021-07-05 19:00:24\ncategories: [GIS,摄影测量,解析空中三角测量]\ntags: 摄影测量\ndescription: 利用少量控制点对整个区域所有影像恢复它们的外方位元素，利用计算的方法，根据航摄像片上所量测的像点坐标以及少量的地面控制点求出地面加密点的物方空间坐标\n---\n\n## 定义\n\n+ 利用少量控制点对整个区域所有影像恢复它们的外方位元素\n\n+ 利用计算的方法，根据航摄像片上所量测的像点坐标以及少量的地面控制点求出地面加密点的物方空间坐标，称之为解析空中三角测量，俗称摄影测量加密\n\n\n## 分类\n\n### 根据平差范围\n\n+ 单航带法\n\n+ 单模型法\n\n+ 区域网法\n\n### 根据平差模型\n\n+ 航带法\n\n+ 独立模型法\n\n+ 光束法\n\n## 作用\n\n+ 极大地减少甚至完全免除常规空中三角测量所必须的地面控制点，以节省野外控制测量工作量 缩短航测成图周期 降低生产成本 提高生产效率\n\n## POS系统及作用\n\n+ 主要包括：GPS信号接收机和惯性测量装置(IMU)\n+ 作用：直接测定影像外方位元素\n\n<img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210705190103.png\"/>\n\n","slug":"解析空中三角测量","published":1,"updated":"2021-11-10T11:18:52.463Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt4d004xjsvk8jnz1pvy","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><ul>\n<li><p>利用少量控制点对整个区域所有影像恢复它们的外方位元素</p>\n</li>\n<li><p>利用计算的方法，根据航摄像片上所量测的像点坐标以及少量的地面控制点求出地面加密点的物方空间坐标，称之为解析空中三角测量，俗称摄影测量加密</p>\n</li>\n</ul>\n<h2 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h2><h3 id=\"根据平差范围\"><a href=\"#根据平差范围\" class=\"headerlink\" title=\"根据平差范围\"></a>根据平差范围</h3><ul>\n<li><p>单航带法</p>\n</li>\n<li><p>单模型法</p>\n</li>\n<li><p>区域网法</p>\n</li>\n</ul>\n<h3 id=\"根据平差模型\"><a href=\"#根据平差模型\" class=\"headerlink\" title=\"根据平差模型\"></a>根据平差模型</h3><ul>\n<li><p>航带法</p>\n</li>\n<li><p>独立模型法</p>\n</li>\n<li><p>光束法</p>\n</li>\n</ul>\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><ul>\n<li>极大地减少甚至完全免除常规空中三角测量所必须的地面控制点，以节省野外控制测量工作量 缩短航测成图周期 降低生产成本 提高生产效率</li>\n</ul>\n<h2 id=\"POS系统及作用\"><a href=\"#POS系统及作用\" class=\"headerlink\" title=\"POS系统及作用\"></a>POS系统及作用</h2><ul>\n<li>主要包括：GPS信号接收机和惯性测量装置(IMU)</li>\n<li>作用：直接测定影像外方位元素</li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210705190103.png\"/></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220124161839.webp","length":243,"excerpt":"","more":"<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><ul>\n<li><p>利用少量控制点对整个区域所有影像恢复它们的外方位元素</p>\n</li>\n<li><p>利用计算的方法，根据航摄像片上所量测的像点坐标以及少量的地面控制点求出地面加密点的物方空间坐标，称之为解析空中三角测量，俗称摄影测量加密</p>\n</li>\n</ul>\n<h2 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h2><h3 id=\"根据平差范围\"><a href=\"#根据平差范围\" class=\"headerlink\" title=\"根据平差范围\"></a>根据平差范围</h3><ul>\n<li><p>单航带法</p>\n</li>\n<li><p>单模型法</p>\n</li>\n<li><p>区域网法</p>\n</li>\n</ul>\n<h3 id=\"根据平差模型\"><a href=\"#根据平差模型\" class=\"headerlink\" title=\"根据平差模型\"></a>根据平差模型</h3><ul>\n<li><p>航带法</p>\n</li>\n<li><p>独立模型法</p>\n</li>\n<li><p>光束法</p>\n</li>\n</ul>\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><ul>\n<li>极大地减少甚至完全免除常规空中三角测量所必须的地面控制点，以节省野外控制测量工作量 缩短航测成图周期 降低生产成本 提高生产效率</li>\n</ul>\n<h2 id=\"POS系统及作用\"><a href=\"#POS系统及作用\" class=\"headerlink\" title=\"POS系统及作用\"></a>POS系统及作用</h2><ul>\n<li>主要包括：GPS信号接收机和惯性测量装置(IMU)</li>\n<li>作用：直接测定影像外方位元素</li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210705190103.png\"/></p>\n"},{"title":"计算机网络","mathjax":true,"date":"2022-08-31T07:26:19.000Z","description":"计算机网络","_content":"\n## 计算机网络\n\n### <span id=\"status\">HTTP状态码</span>\n\n常用状态码及其使用场景：\n\n+ 1xx：表示目前是协议的中间状态，还需要后续请求\n+ 2xx：表示请求成功\n+ 3xx：表示重定向状态，需要重新请求\n+ 4xx：表示请求报文错误\n+ 5xx：服务器端错误\n\n常用状态码：\n\n+ 101 切换请求协议，从 HTTP 切换到 WebSocket\n+ 200 请求成功，有响应体\n+ 204 No Content 请求成功执行，但没有内容，常用于测试服务器性能(options方法)\n+ 301 永久重定向：会缓存(cdn)\n+ 302 临时重定向：不会缓存\n+ 304 协商缓存命中\n+ 400 Bad Request 请求错误\n+ 401 Unauthorized 用户认证失败\n+ 403 Forbidden 服务器禁止访问\n+ 404 Not Found 资源未找到\n+ 500 Internal Server Error 服务器端错误\n+ 502 Bad Gateway 网关错误\n+ 503 Service Unavailable 服务器繁忙\n\n302表示临时重定向，资源只是暂时不能被访问了，常用于网站资源需要权限时，会重定向到登陆页面，登陆后才可继续访问\n\n301表示永久重定向,cdn\n\n### HTTP请求方法\n\n+ `GET`：获取资源\n+ `POST`：传输实体信息\n+ `OPOTIONS`：询问支持的方法，`OPTIONS`方法用来查询针对请求URL指定的资源支持的方法\n+ `CONNECT`：\n+ 要求用隧道协议连接代理，CONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行 TCP 通信。主要使用 `SSL（Secure Sockets Layer，安全套接层）`和 TLS`（Transport Layer Security，传输层安全）`协议把通信内容加 密后经网络隧道传输\n+ `TRACE`：追踪路径，`TRACE`方法是让Web服务器端将之前的请求通信返回给客户端\n+ `PUT`：传输文件。但是由于自身不带验证机制，任何人都可以上传文件，存在安全性问题，一般不用该方法\n+ `HEAD`：获取响应首部，`HEAD`方法和`GET`方法一样，只是不返回报文主体部分，用于确定`URL`的有效性及资源更新的日期时间等\n+ `DELTELE`：删除文件，是与`PUT`相反的方法\n\nHTTP请求URL\n\n`http://www.example.com:80/path/to/myfile.html?key1=value1&key2=value2#SomewhereInTheDocument`\n\n+ `http://`：代表请求协议\n\n+ `www.example.com`：代表域名\n\n+ `:80`：端口\n\n+ `/path/to/myfile.html`：请求资源路径\n\n+ `?key1=value1&key2=value2`：请求参数\n\n+ `#SomewhereInTheDocument`：锚点\n\n### 请求头\n\n[MDN关于请求头的介绍](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers)\n\nHTTP的请求标头分为四种：<a href=\"#common-header\">通用标头</a>、<a href=\"#request-header\">请求标头</a>、<a href=\"#response-header\">响应标头</a>、<a href=\"#solid-header\">实体标头</a>\n\n#### <span id=\"common-header\">通用标头</span>\n\n> 通用标头：可以出现在请求标头和响应标头中\n\n通用标头主要有三个，分别是 `Date`、`Cache-Control` 和 `Connection`\n\nDate 是一个通用标头，它可以出现在请求标头和响应标头中，它的基本表示如下\n\n```http\nDate: Wed, 21 Oct 2015 07:28:00 GMT \n```\n\n`Cache-Control`\n\nConnection 决定当前事务（一次三次握手和四次挥手）完成后，是否会关闭网络连接\n\nConnection 有两种：`持久性连接`、`非持久性连接`\n\n持久性连接即一次事务完成后不关闭网络连接\n\n```http\nConnection: keep-alive\n```\n\n非持久性连接即一次事务完成后关闭网络连接\n\n```http\nConnection: close\n```\n\n#### <span id=\"request-header\">请求标头</span>\n\n[MDN](https://developer.mozilla.org/zh-CN/docs/Glossary/Request_header)\n\n`referer`：标记请求来源，告诉服务器该网页是从哪个页面链接来的\n\n```http\nReferer: https://developer.mozilla.org/testpage.html\n```\n\n#### <span id=\"response-header\">响应标头</span>\n\n首先出现的应该就是[响应状态码](#status)\n\n`Access-Control-Allow-Origin`,指定允许访问来源，告诉浏览器允许该源进行资源访问。使用`*`通配符允许如何来源\n\n```http\nAccess-Control-Allow-Origin: https://mozilla.org\n```\n\n`Keep-Alive`：指定[Connection](#connection)非持续性连接的存活时间\n\n```http\nConnection: Keep-Alive\nKeep-Alive: timeout=5, max=997\n```\n\n`timeout`：指示空闲连接必须保持打开状态的最短时间（以秒为单位）。\n\n`max`：指示在关闭连接之前可以在此连接上发送的最大请求数\n\n上述 HTTP 代码的意思就是限制最大的超时时间是 5s 和 最大的连接请求是 997 个\n\n`Server`：服务器标头包含有关原始服务器用来处理请求的软件的信息\n\n```http\nServer: Apache/2.4.1 (Unix)\n```\n\n\n\n#### <span id=\"solid-header\">实体标头</span>\n\n实体标头是描述消息正文内容的HTTP标头，实体标头用于 HTTP 请求和响应中\n\n常见得到实体标头有：`Content-Length`、`Content-Language`、 `Content-Encoding`\n\nContent-Length：指定实体主体的大小，以字节为单位，发送到接收方\n\n```http\ncontent-length: 1736\n```\n\nContent-Language：描述了客户端或者服务端能够接受的语言\n\n```http\nContent-Language: de-DE\nContent-Language: en-US\naccept-language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7\n```\n\nContent-Encoding：指定应用编码方式\n\n常见的内容编码：**gzip、compress、deflate、identity** \n\n```http\nAccept-Encoding: gzip, deflate //请求头\nContent-Encoding: gzip  //响应头\n```\n\n\n\n### 网络模型\n\n#### OSI七层模型\n\n[网络模型](https://www.cnblogs.com/hello-shf/p/13545959.html)\n\n[网络基础](https://tonydeng.github.io/sdn-handbook/basic/tcpip.html)\n\n![OSI](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828091803.png)\n\n七层模型各层功能\n\n![模型功能](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828091952.png)\n\n##### 应用层\n\n`OSI`参考模型中最靠近用户的一层，是为计算机用户提供应用接口，也为用户直接提供各种网络服务。我们常见应用层的网络服务协议有：`HTTP`，`HTTPS`，`FTP`，`POP3`、`SMTP`等\n\n##### 表示层\n\n表示层提供各种用于应用层数据的编码和转换功能,确保一个系统的应用层发送的数据能被另一个系统的应用层识别\n\n如：HTTP请求头/响应头 Content-Type：application/json; charset=utf-8 。这就是规定双方协商的数据格式： application/json; 和编码格式： charset=utf-8\n\n##### 会话层\n\n 会话层就是负责建立、管理和终止表示层实体之间的通信会话。该层的通信由不同设备中的应用程序之间的服务请求和响应组成\n\n##### 传输层\n\n传输层建立了主机端到端的链接，传输层的作用是为上层协议提供端到端的可靠和透明的数据传输服务，包括处理差错控制和流量控制等问题。该层向高层屏蔽了下层数据通信的细节，使高层用户看到的只是在两个传输实体间的一条主机到主机的、可由用户控制和设定的、可靠的数据通路。我们通常说的，`TCP` `UDP`就是在这一层。端口号既是这里的“端”\n\n##### 网络层\n\n本层通过`IP`寻址来建立两个节点之间的连接，为源端的运输层送来的分组，选择合适的路由和交换节点，正确无误地按照地址传送给目的端的运输层。就是通常说的`IP`层。这一层就是我们经常说的`IP`协议层。`IP`协议是`Internet`的基础。我们可以这样理解，网络层规定了数据包的传输路线，而传输层则规定了数据包的传输方式\n\n网络层的主要功能：通过IP地址，实现网络寻址，即IP寻址，通过路由算法进行最优的网络路由\n\n##### 数据链路层\n\n将比特组合成字节,再将字节组合成帧,使用链路层地址 (以太网使用MAC地址)来访问介质,并进行差错检测。 网络层与数据链路层的对比，通过上面的描述，我们或许可以这样理解，网络层是规划了数据包的传输路线，而数据链路层就是传输路线。不过，在数据链路层上还增加了差错控制的功能\n\n该层主要负责建立和管理不同计算机节点间的数据链路，并提供差错检测、封装成帧、透明传输的能力。数据链路层又分为两个层：媒体访问控制子层（MAC）和逻辑链路控制子层（LLC）\n\n##### 物理层\n\n实际最终信号的传输是通过物理层实现的。通过物理介质传输比特流。规定了电平、速度和电缆针脚。常用设备有（各种物理设备）集线器、中继器、调制解调器、网线、双绞线、同轴电缆。这些都是物理层的传输介质\n\n#### TCP/IP五层模型\n\n`TCP/IP`模型比`OSI`模型更加简洁，它把`应用层/表示层/会话层`全部整合为了`应用层`\n\n![五层模型](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828104032.webp)\n\n### TCP与UDP\n\n[TCP与UDP](https://juejin.cn/post/6844903490595061767#heading-11)\n\nTCP和UDP都是传输层协议，都属于TCP/IP协议族\n\n#### TCP\n\nTCP是一种面向连接的、可靠的、基于字节流的传输层通信协议\n\n特点：\n\n1. 面向连接\n\n   即发送数据前必须先建立连接，进行三次握手\n\n2. 仅支持单播传输\n\n   即只支持点对点的数据传输，不支持多播和广播传输方式\n\n3. 面向字节流\n\n   虽然应用程序和TCP的交互是一次一个数据块（大小不等），但TCP把应用程序看成是一连串的无结构的字节流。TCP有一个缓冲，当应用程序传送的数据块太长，TCP就可以把它划分短一些再传送\n\n4. 可靠传输\n\n   对于可靠传输，判断丢包、误码靠的是TCP的段编号以及确认号。TCP为了保证报文传输的可靠，就给每个包一个序号，同时序号也保证了传送到接收端实体的包的按序接收。然后接收端实体对已成功收到的字节发回一个相应的确认(ACK)；如果发送端实体在合理的往返时延(RTT)内未收到确认，那么对应的数据（假设丢失了）将会被重传\n\n5. 提供拥塞控制\n\n   当网络出现拥塞的时候，TCP能够减小向网络注入数据的速率和数量，缓解拥塞\n\n6. 提供全双工通信\n\n   TCP允许通信双方的应用程序在任何时候都能发送数据，因为TCP连接的两端都设有缓存，用来临时存放双向通信的数据。当然，TCP可以立即发送一个数据段，也可以缓存一段时间以便一次发送更多的数据段（最大的数据段大小取决于MSS）\n\n应用：\n\n> TCP主要应用于对效率要求低，对准确性要求高或者要求有连接的的场景\n\n+ 电子邮件\n+ 文件下载与传输(FTP)\n+ 远程终端连接(TELNEt)\n\n#### UDP\n\nUDP的全称是**用户数据报协议**\n\n特点：\n\n1. 面向无连接\n\n   UDP是不需要和TCP一样在发送数据前进行三次握手建立连接的，在接收到数据后就立即开始发送数据\n\n2. 有单播、多播、广播的功能\n\n   UDP支持一对一、多对多、多对一的数据传输方式\n\n3. 面向报文\n\n   UDP不会对数据报文进行合并与拆分\n\n4. 不可靠性\n\n5. 头部开销小，传输数据报文时很高效\n\n应用：\n\n> UDP主要应用于对效率要求高，对准确性要求低的场景\n\n+ 视频、音频通话\n+ 包总量较少的通信(DNS、SNMP等)\n\n![tcp与udp区别](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220826141412.png)\n\n### TCP三次握手与四次挥手\n\n<a href=\"#tcp\">TCP</a>\n\n> TCP: 一种面向连接的、可靠的、基于字节流的传输层通信协议\n\n[三次握手与四次挥手](https://juejin.cn/post/6844903834708344840#heading-1)\n\n#### 三次握手\n\n建立连接\n\n1. 第一次握手：客户端给服务器发送一个SYN报文，进行请求连接\n2. 第二次握手：服务器收到SYN报文后，服务器发送一个SYN+ACK报文\n3. 第三次握手：客户端收到SYN+ACK报文后，会回应一个ACK报文，服务器收到ACK报文后，完成三次握手\n\n#### 四次挥手\n\n断开连接\n\n1. 第一次挥手：客户端发送一个FIN报文给服务器\n2. 第二次挥手：服务器收到FIN之后，会发送ACK报文，\n3. 第三次挥手：服务器发送一个FIN报文给客户端\n4. 第四次挥手：客户端收到FIN之后，发送一个ACK报文应答，客户端会等待一个报文来回的时长，确定服务器没有再发送信息后关闭连接，服务器收到ACK报文之后就关闭连接\n","source":"_posts/计算机网络.md","raw":"---\ntitle: 计算机网络\nmathjax: true\ndate: 2022-08-31 15:26:19\ntags: [前端]\ncategories:\ndescription: 计算机网络\n---\n\n## 计算机网络\n\n### <span id=\"status\">HTTP状态码</span>\n\n常用状态码及其使用场景：\n\n+ 1xx：表示目前是协议的中间状态，还需要后续请求\n+ 2xx：表示请求成功\n+ 3xx：表示重定向状态，需要重新请求\n+ 4xx：表示请求报文错误\n+ 5xx：服务器端错误\n\n常用状态码：\n\n+ 101 切换请求协议，从 HTTP 切换到 WebSocket\n+ 200 请求成功，有响应体\n+ 204 No Content 请求成功执行，但没有内容，常用于测试服务器性能(options方法)\n+ 301 永久重定向：会缓存(cdn)\n+ 302 临时重定向：不会缓存\n+ 304 协商缓存命中\n+ 400 Bad Request 请求错误\n+ 401 Unauthorized 用户认证失败\n+ 403 Forbidden 服务器禁止访问\n+ 404 Not Found 资源未找到\n+ 500 Internal Server Error 服务器端错误\n+ 502 Bad Gateway 网关错误\n+ 503 Service Unavailable 服务器繁忙\n\n302表示临时重定向，资源只是暂时不能被访问了，常用于网站资源需要权限时，会重定向到登陆页面，登陆后才可继续访问\n\n301表示永久重定向,cdn\n\n### HTTP请求方法\n\n+ `GET`：获取资源\n+ `POST`：传输实体信息\n+ `OPOTIONS`：询问支持的方法，`OPTIONS`方法用来查询针对请求URL指定的资源支持的方法\n+ `CONNECT`：\n+ 要求用隧道协议连接代理，CONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行 TCP 通信。主要使用 `SSL（Secure Sockets Layer，安全套接层）`和 TLS`（Transport Layer Security，传输层安全）`协议把通信内容加 密后经网络隧道传输\n+ `TRACE`：追踪路径，`TRACE`方法是让Web服务器端将之前的请求通信返回给客户端\n+ `PUT`：传输文件。但是由于自身不带验证机制，任何人都可以上传文件，存在安全性问题，一般不用该方法\n+ `HEAD`：获取响应首部，`HEAD`方法和`GET`方法一样，只是不返回报文主体部分，用于确定`URL`的有效性及资源更新的日期时间等\n+ `DELTELE`：删除文件，是与`PUT`相反的方法\n\nHTTP请求URL\n\n`http://www.example.com:80/path/to/myfile.html?key1=value1&key2=value2#SomewhereInTheDocument`\n\n+ `http://`：代表请求协议\n\n+ `www.example.com`：代表域名\n\n+ `:80`：端口\n\n+ `/path/to/myfile.html`：请求资源路径\n\n+ `?key1=value1&key2=value2`：请求参数\n\n+ `#SomewhereInTheDocument`：锚点\n\n### 请求头\n\n[MDN关于请求头的介绍](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers)\n\nHTTP的请求标头分为四种：<a href=\"#common-header\">通用标头</a>、<a href=\"#request-header\">请求标头</a>、<a href=\"#response-header\">响应标头</a>、<a href=\"#solid-header\">实体标头</a>\n\n#### <span id=\"common-header\">通用标头</span>\n\n> 通用标头：可以出现在请求标头和响应标头中\n\n通用标头主要有三个，分别是 `Date`、`Cache-Control` 和 `Connection`\n\nDate 是一个通用标头，它可以出现在请求标头和响应标头中，它的基本表示如下\n\n```http\nDate: Wed, 21 Oct 2015 07:28:00 GMT \n```\n\n`Cache-Control`\n\nConnection 决定当前事务（一次三次握手和四次挥手）完成后，是否会关闭网络连接\n\nConnection 有两种：`持久性连接`、`非持久性连接`\n\n持久性连接即一次事务完成后不关闭网络连接\n\n```http\nConnection: keep-alive\n```\n\n非持久性连接即一次事务完成后关闭网络连接\n\n```http\nConnection: close\n```\n\n#### <span id=\"request-header\">请求标头</span>\n\n[MDN](https://developer.mozilla.org/zh-CN/docs/Glossary/Request_header)\n\n`referer`：标记请求来源，告诉服务器该网页是从哪个页面链接来的\n\n```http\nReferer: https://developer.mozilla.org/testpage.html\n```\n\n#### <span id=\"response-header\">响应标头</span>\n\n首先出现的应该就是[响应状态码](#status)\n\n`Access-Control-Allow-Origin`,指定允许访问来源，告诉浏览器允许该源进行资源访问。使用`*`通配符允许如何来源\n\n```http\nAccess-Control-Allow-Origin: https://mozilla.org\n```\n\n`Keep-Alive`：指定[Connection](#connection)非持续性连接的存活时间\n\n```http\nConnection: Keep-Alive\nKeep-Alive: timeout=5, max=997\n```\n\n`timeout`：指示空闲连接必须保持打开状态的最短时间（以秒为单位）。\n\n`max`：指示在关闭连接之前可以在此连接上发送的最大请求数\n\n上述 HTTP 代码的意思就是限制最大的超时时间是 5s 和 最大的连接请求是 997 个\n\n`Server`：服务器标头包含有关原始服务器用来处理请求的软件的信息\n\n```http\nServer: Apache/2.4.1 (Unix)\n```\n\n\n\n#### <span id=\"solid-header\">实体标头</span>\n\n实体标头是描述消息正文内容的HTTP标头，实体标头用于 HTTP 请求和响应中\n\n常见得到实体标头有：`Content-Length`、`Content-Language`、 `Content-Encoding`\n\nContent-Length：指定实体主体的大小，以字节为单位，发送到接收方\n\n```http\ncontent-length: 1736\n```\n\nContent-Language：描述了客户端或者服务端能够接受的语言\n\n```http\nContent-Language: de-DE\nContent-Language: en-US\naccept-language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7\n```\n\nContent-Encoding：指定应用编码方式\n\n常见的内容编码：**gzip、compress、deflate、identity** \n\n```http\nAccept-Encoding: gzip, deflate //请求头\nContent-Encoding: gzip  //响应头\n```\n\n\n\n### 网络模型\n\n#### OSI七层模型\n\n[网络模型](https://www.cnblogs.com/hello-shf/p/13545959.html)\n\n[网络基础](https://tonydeng.github.io/sdn-handbook/basic/tcpip.html)\n\n![OSI](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828091803.png)\n\n七层模型各层功能\n\n![模型功能](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828091952.png)\n\n##### 应用层\n\n`OSI`参考模型中最靠近用户的一层，是为计算机用户提供应用接口，也为用户直接提供各种网络服务。我们常见应用层的网络服务协议有：`HTTP`，`HTTPS`，`FTP`，`POP3`、`SMTP`等\n\n##### 表示层\n\n表示层提供各种用于应用层数据的编码和转换功能,确保一个系统的应用层发送的数据能被另一个系统的应用层识别\n\n如：HTTP请求头/响应头 Content-Type：application/json; charset=utf-8 。这就是规定双方协商的数据格式： application/json; 和编码格式： charset=utf-8\n\n##### 会话层\n\n 会话层就是负责建立、管理和终止表示层实体之间的通信会话。该层的通信由不同设备中的应用程序之间的服务请求和响应组成\n\n##### 传输层\n\n传输层建立了主机端到端的链接，传输层的作用是为上层协议提供端到端的可靠和透明的数据传输服务，包括处理差错控制和流量控制等问题。该层向高层屏蔽了下层数据通信的细节，使高层用户看到的只是在两个传输实体间的一条主机到主机的、可由用户控制和设定的、可靠的数据通路。我们通常说的，`TCP` `UDP`就是在这一层。端口号既是这里的“端”\n\n##### 网络层\n\n本层通过`IP`寻址来建立两个节点之间的连接，为源端的运输层送来的分组，选择合适的路由和交换节点，正确无误地按照地址传送给目的端的运输层。就是通常说的`IP`层。这一层就是我们经常说的`IP`协议层。`IP`协议是`Internet`的基础。我们可以这样理解，网络层规定了数据包的传输路线，而传输层则规定了数据包的传输方式\n\n网络层的主要功能：通过IP地址，实现网络寻址，即IP寻址，通过路由算法进行最优的网络路由\n\n##### 数据链路层\n\n将比特组合成字节,再将字节组合成帧,使用链路层地址 (以太网使用MAC地址)来访问介质,并进行差错检测。 网络层与数据链路层的对比，通过上面的描述，我们或许可以这样理解，网络层是规划了数据包的传输路线，而数据链路层就是传输路线。不过，在数据链路层上还增加了差错控制的功能\n\n该层主要负责建立和管理不同计算机节点间的数据链路，并提供差错检测、封装成帧、透明传输的能力。数据链路层又分为两个层：媒体访问控制子层（MAC）和逻辑链路控制子层（LLC）\n\n##### 物理层\n\n实际最终信号的传输是通过物理层实现的。通过物理介质传输比特流。规定了电平、速度和电缆针脚。常用设备有（各种物理设备）集线器、中继器、调制解调器、网线、双绞线、同轴电缆。这些都是物理层的传输介质\n\n#### TCP/IP五层模型\n\n`TCP/IP`模型比`OSI`模型更加简洁，它把`应用层/表示层/会话层`全部整合为了`应用层`\n\n![五层模型](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828104032.webp)\n\n### TCP与UDP\n\n[TCP与UDP](https://juejin.cn/post/6844903490595061767#heading-11)\n\nTCP和UDP都是传输层协议，都属于TCP/IP协议族\n\n#### TCP\n\nTCP是一种面向连接的、可靠的、基于字节流的传输层通信协议\n\n特点：\n\n1. 面向连接\n\n   即发送数据前必须先建立连接，进行三次握手\n\n2. 仅支持单播传输\n\n   即只支持点对点的数据传输，不支持多播和广播传输方式\n\n3. 面向字节流\n\n   虽然应用程序和TCP的交互是一次一个数据块（大小不等），但TCP把应用程序看成是一连串的无结构的字节流。TCP有一个缓冲，当应用程序传送的数据块太长，TCP就可以把它划分短一些再传送\n\n4. 可靠传输\n\n   对于可靠传输，判断丢包、误码靠的是TCP的段编号以及确认号。TCP为了保证报文传输的可靠，就给每个包一个序号，同时序号也保证了传送到接收端实体的包的按序接收。然后接收端实体对已成功收到的字节发回一个相应的确认(ACK)；如果发送端实体在合理的往返时延(RTT)内未收到确认，那么对应的数据（假设丢失了）将会被重传\n\n5. 提供拥塞控制\n\n   当网络出现拥塞的时候，TCP能够减小向网络注入数据的速率和数量，缓解拥塞\n\n6. 提供全双工通信\n\n   TCP允许通信双方的应用程序在任何时候都能发送数据，因为TCP连接的两端都设有缓存，用来临时存放双向通信的数据。当然，TCP可以立即发送一个数据段，也可以缓存一段时间以便一次发送更多的数据段（最大的数据段大小取决于MSS）\n\n应用：\n\n> TCP主要应用于对效率要求低，对准确性要求高或者要求有连接的的场景\n\n+ 电子邮件\n+ 文件下载与传输(FTP)\n+ 远程终端连接(TELNEt)\n\n#### UDP\n\nUDP的全称是**用户数据报协议**\n\n特点：\n\n1. 面向无连接\n\n   UDP是不需要和TCP一样在发送数据前进行三次握手建立连接的，在接收到数据后就立即开始发送数据\n\n2. 有单播、多播、广播的功能\n\n   UDP支持一对一、多对多、多对一的数据传输方式\n\n3. 面向报文\n\n   UDP不会对数据报文进行合并与拆分\n\n4. 不可靠性\n\n5. 头部开销小，传输数据报文时很高效\n\n应用：\n\n> UDP主要应用于对效率要求高，对准确性要求低的场景\n\n+ 视频、音频通话\n+ 包总量较少的通信(DNS、SNMP等)\n\n![tcp与udp区别](https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220826141412.png)\n\n### TCP三次握手与四次挥手\n\n<a href=\"#tcp\">TCP</a>\n\n> TCP: 一种面向连接的、可靠的、基于字节流的传输层通信协议\n\n[三次握手与四次挥手](https://juejin.cn/post/6844903834708344840#heading-1)\n\n#### 三次握手\n\n建立连接\n\n1. 第一次握手：客户端给服务器发送一个SYN报文，进行请求连接\n2. 第二次握手：服务器收到SYN报文后，服务器发送一个SYN+ACK报文\n3. 第三次握手：客户端收到SYN+ACK报文后，会回应一个ACK报文，服务器收到ACK报文后，完成三次握手\n\n#### 四次挥手\n\n断开连接\n\n1. 第一次挥手：客户端发送一个FIN报文给服务器\n2. 第二次挥手：服务器收到FIN之后，会发送ACK报文，\n3. 第三次挥手：服务器发送一个FIN报文给客户端\n4. 第四次挥手：客户端收到FIN之后，发送一个ACK报文应答，客户端会等待一个报文来回的时长，确定服务器没有再发送信息后关闭连接，服务器收到ACK报文之后就关闭连接\n","slug":"计算机网络","published":1,"updated":"2022-10-22T08:25:26.801Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt4e0051jsvk28z44bvz","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"计算机网络\"><a href=\"#计算机网络\" class=\"headerlink\" title=\"计算机网络\"></a>计算机网络</h2><h3 id=\"HTTP状态码\"><a href=\"#HTTP状态码\" class=\"headerlink\" title=\"HTTP状态码\"></a><span id=\"status\">HTTP状态码</span></h3><p>常用状态码及其使用场景：</p>\n<ul>\n<li>1xx：表示目前是协议的中间状态，还需要后续请求</li>\n<li>2xx：表示请求成功</li>\n<li>3xx：表示重定向状态，需要重新请求</li>\n<li>4xx：表示请求报文错误</li>\n<li>5xx：服务器端错误</li>\n</ul>\n<p>常用状态码：</p>\n<ul>\n<li>101 切换请求协议，从 HTTP 切换到 WebSocket</li>\n<li>200 请求成功，有响应体</li>\n<li>204 No Content 请求成功执行，但没有内容，常用于测试服务器性能(options方法)</li>\n<li>301 永久重定向：会缓存(cdn)</li>\n<li>302 临时重定向：不会缓存</li>\n<li>304 协商缓存命中</li>\n<li>400 Bad Request 请求错误</li>\n<li>401 Unauthorized 用户认证失败</li>\n<li>403 Forbidden 服务器禁止访问</li>\n<li>404 Not Found 资源未找到</li>\n<li>500 Internal Server Error 服务器端错误</li>\n<li>502 Bad Gateway 网关错误</li>\n<li>503 Service Unavailable 服务器繁忙</li>\n</ul>\n<p>302表示临时重定向，资源只是暂时不能被访问了，常用于网站资源需要权限时，会重定向到登陆页面，登陆后才可继续访问</p>\n<p>301表示永久重定向,cdn</p>\n<h3 id=\"HTTP请求方法\"><a href=\"#HTTP请求方法\" class=\"headerlink\" title=\"HTTP请求方法\"></a>HTTP请求方法</h3><ul>\n<li><code>GET</code>：获取资源</li>\n<li><code>POST</code>：传输实体信息</li>\n<li><code>OPOTIONS</code>：询问支持的方法，<code>OPTIONS</code>方法用来查询针对请求URL指定的资源支持的方法</li>\n<li><code>CONNECT</code>：</li>\n<li>要求用隧道协议连接代理，CONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行 TCP 通信。主要使用 <code>SSL（Secure Sockets Layer，安全套接层）</code>和 TLS<code>（Transport Layer Security，传输层安全）</code>协议把通信内容加 密后经网络隧道传输</li>\n<li><code>TRACE</code>：追踪路径，<code>TRACE</code>方法是让Web服务器端将之前的请求通信返回给客户端</li>\n<li><code>PUT</code>：传输文件。但是由于自身不带验证机制，任何人都可以上传文件，存在安全性问题，一般不用该方法</li>\n<li><code>HEAD</code>：获取响应首部，<code>HEAD</code>方法和<code>GET</code>方法一样，只是不返回报文主体部分，用于确定<code>URL</code>的有效性及资源更新的日期时间等</li>\n<li><code>DELTELE</code>：删除文件，是与<code>PUT</code>相反的方法</li>\n</ul>\n<p>HTTP请求URL</p>\n<p><code>http://www.example.com:80/path/to/myfile.html?key1=value1&amp;key2=value2#SomewhereInTheDocument</code></p>\n<ul>\n<li><p><code>http://</code>：代表请求协议</p>\n</li>\n<li><p><code>www.example.com</code>：代表域名</p>\n</li>\n<li><p><code>:80</code>：端口</p>\n</li>\n<li><p><code>/path/to/myfile.html</code>：请求资源路径</p>\n</li>\n<li><p><code>?key1=value1&amp;key2=value2</code>：请求参数</p>\n</li>\n<li><p><code>#SomewhereInTheDocument</code>：锚点</p>\n</li>\n</ul>\n<h3 id=\"请求头\"><a href=\"#请求头\" class=\"headerlink\" title=\"请求头\"></a>请求头</h3><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers\">MDN关于请求头的介绍</a></p>\n<p>HTTP的请求标头分为四种：<a href=\"#common-header\">通用标头</a>、<a href=\"#request-header\">请求标头</a>、<a href=\"#response-header\">响应标头</a>、<a href=\"#solid-header\">实体标头</a></p>\n<h4 id=\"通用标头\"><a href=\"#通用标头\" class=\"headerlink\" title=\"通用标头\"></a><span id=\"common-header\">通用标头</span></h4><blockquote>\n<p>通用标头：可以出现在请求标头和响应标头中</p>\n</blockquote>\n<p>通用标头主要有三个，分别是 <code>Date</code>、<code>Cache-Control</code> 和 <code>Connection</code></p>\n<p>Date 是一个通用标头，它可以出现在请求标头和响应标头中，它的基本表示如下</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Date:</span> Wed, 21 Oct 2015 07:28:00 GMT </code></pre>\n<p><code>Cache-Control</code></p>\n<p>Connection 决定当前事务（一次三次握手和四次挥手）完成后，是否会关闭网络连接</p>\n<p>Connection 有两种：<code>持久性连接</code>、<code>非持久性连接</code></p>\n<p>持久性连接即一次事务完成后不关闭网络连接</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Connection:</span> keep-alive</code></pre>\n<p>非持久性连接即一次事务完成后关闭网络连接</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Connection:</span> close</code></pre>\n<h4 id=\"请求标头\"><a href=\"#请求标头\" class=\"headerlink\" title=\"请求标头\"></a><span id=\"request-header\">请求标头</span></h4><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Request_header\">MDN</a></p>\n<p><code>referer</code>：标记请求来源，告诉服务器该网页是从哪个页面链接来的</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Referer:</span> https://developer.mozilla.org/testpage.html</code></pre>\n<h4 id=\"响应标头\"><a href=\"#响应标头\" class=\"headerlink\" title=\"响应标头\"></a><span id=\"response-header\">响应标头</span></h4><p>首先出现的应该就是<a href=\"#status\">响应状态码</a></p>\n<p><code>Access-Control-Allow-Origin</code>,指定允许访问来源，告诉浏览器允许该源进行资源访问。使用<code>*</code>通配符允许如何来源</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Access-Control-Allow-Origin:</span> https://mozilla.org</code></pre>\n<p><code>Keep-Alive</code>：指定<a href=\"#connection\">Connection</a>非持续性连接的存活时间</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Connection:</span> Keep-Alive\n<span class=\"token header-name keyword\">Keep-Alive:</span> timeout=5, max=997</code></pre>\n<p><code>timeout</code>：指示空闲连接必须保持打开状态的最短时间（以秒为单位）。</p>\n<p><code>max</code>：指示在关闭连接之前可以在此连接上发送的最大请求数</p>\n<p>上述 HTTP 代码的意思就是限制最大的超时时间是 5s 和 最大的连接请求是 997 个</p>\n<p><code>Server</code>：服务器标头包含有关原始服务器用来处理请求的软件的信息</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Server:</span> Apache/2.4.1 (Unix)</code></pre>\n<h4 id=\"实体标头\"><a href=\"#实体标头\" class=\"headerlink\" title=\"实体标头\"></a><span id=\"solid-header\">实体标头</span></h4><p>实体标头是描述消息正文内容的HTTP标头，实体标头用于 HTTP 请求和响应中</p>\n<p>常见得到实体标头有：<code>Content-Length</code>、<code>Content-Language</code>、 <code>Content-Encoding</code></p>\n<p>Content-Length：指定实体主体的大小，以字节为单位，发送到接收方</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">content-length:</span> 1736</code></pre>\n<p>Content-Language：描述了客户端或者服务端能够接受的语言</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Content-Language:</span> de-DE\n<span class=\"token header-name keyword\">Content-Language:</span> en-US\n<span class=\"token header-name keyword\">accept-language:</span> zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</code></pre>\n<p>Content-Encoding：指定应用编码方式</p>\n<p>常见的内容编码：<strong>gzip、compress、deflate、identity</strong> </p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Accept-Encoding:</span> gzip, deflate //请求头\n<span class=\"token header-name keyword\">Content-Encoding:</span> gzip  //响应头</code></pre>\n<h3 id=\"网络模型\"><a href=\"#网络模型\" class=\"headerlink\" title=\"网络模型\"></a>网络模型</h3><h4 id=\"OSI七层模型\"><a href=\"#OSI七层模型\" class=\"headerlink\" title=\"OSI七层模型\"></a>OSI七层模型</h4><p><a href=\"https://www.cnblogs.com/hello-shf/p/13545959.html\">网络模型</a></p>\n<p><a href=\"https://tonydeng.github.io/sdn-handbook/basic/tcpip.html\">网络基础</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828091803.png\" alt=\"OSI\"></p>\n<p>七层模型各层功能</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828091952.png\" alt=\"模型功能\"></p>\n<h5 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h5><p><code>OSI</code>参考模型中最靠近用户的一层，是为计算机用户提供应用接口，也为用户直接提供各种网络服务。我们常见应用层的网络服务协议有：<code>HTTP</code>，<code>HTTPS</code>，<code>FTP</code>，<code>POP3</code>、<code>SMTP</code>等</p>\n<h5 id=\"表示层\"><a href=\"#表示层\" class=\"headerlink\" title=\"表示层\"></a>表示层</h5><p>表示层提供各种用于应用层数据的编码和转换功能,确保一个系统的应用层发送的数据能被另一个系统的应用层识别</p>\n<p>如：HTTP请求头/响应头 Content-Type：application/json; charset=utf-8 。这就是规定双方协商的数据格式： application/json; 和编码格式： charset=utf-8</p>\n<h5 id=\"会话层\"><a href=\"#会话层\" class=\"headerlink\" title=\"会话层\"></a>会话层</h5><p> 会话层就是负责建立、管理和终止表示层实体之间的通信会话。该层的通信由不同设备中的应用程序之间的服务请求和响应组成</p>\n<h5 id=\"传输层\"><a href=\"#传输层\" class=\"headerlink\" title=\"传输层\"></a>传输层</h5><p>传输层建立了主机端到端的链接，传输层的作用是为上层协议提供端到端的可靠和透明的数据传输服务，包括处理差错控制和流量控制等问题。该层向高层屏蔽了下层数据通信的细节，使高层用户看到的只是在两个传输实体间的一条主机到主机的、可由用户控制和设定的、可靠的数据通路。我们通常说的，<code>TCP</code> <code>UDP</code>就是在这一层。端口号既是这里的“端”</p>\n<h5 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h5><p>本层通过<code>IP</code>寻址来建立两个节点之间的连接，为源端的运输层送来的分组，选择合适的路由和交换节点，正确无误地按照地址传送给目的端的运输层。就是通常说的<code>IP</code>层。这一层就是我们经常说的<code>IP</code>协议层。<code>IP</code>协议是<code>Internet</code>的基础。我们可以这样理解，网络层规定了数据包的传输路线，而传输层则规定了数据包的传输方式</p>\n<p>网络层的主要功能：通过IP地址，实现网络寻址，即IP寻址，通过路由算法进行最优的网络路由</p>\n<h5 id=\"数据链路层\"><a href=\"#数据链路层\" class=\"headerlink\" title=\"数据链路层\"></a>数据链路层</h5><p>将比特组合成字节,再将字节组合成帧,使用链路层地址 (以太网使用MAC地址)来访问介质,并进行差错检测。 网络层与数据链路层的对比，通过上面的描述，我们或许可以这样理解，网络层是规划了数据包的传输路线，而数据链路层就是传输路线。不过，在数据链路层上还增加了差错控制的功能</p>\n<p>该层主要负责建立和管理不同计算机节点间的数据链路，并提供差错检测、封装成帧、透明传输的能力。数据链路层又分为两个层：媒体访问控制子层（MAC）和逻辑链路控制子层（LLC）</p>\n<h5 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h5><p>实际最终信号的传输是通过物理层实现的。通过物理介质传输比特流。规定了电平、速度和电缆针脚。常用设备有（各种物理设备）集线器、中继器、调制解调器、网线、双绞线、同轴电缆。这些都是物理层的传输介质</p>\n<h4 id=\"TCP-IP五层模型\"><a href=\"#TCP-IP五层模型\" class=\"headerlink\" title=\"TCP/IP五层模型\"></a>TCP/IP五层模型</h4><p><code>TCP/IP</code>模型比<code>OSI</code>模型更加简洁，它把<code>应用层/表示层/会话层</code>全部整合为了<code>应用层</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828104032.webp\" alt=\"五层模型\"></p>\n<h3 id=\"TCP与UDP\"><a href=\"#TCP与UDP\" class=\"headerlink\" title=\"TCP与UDP\"></a>TCP与UDP</h3><p><a href=\"https://juejin.cn/post/6844903490595061767#heading-11\">TCP与UDP</a></p>\n<p>TCP和UDP都是传输层协议，都属于TCP/IP协议族</p>\n<h4 id=\"TCP\"><a href=\"#TCP\" class=\"headerlink\" title=\"TCP\"></a>TCP</h4><p>TCP是一种面向连接的、可靠的、基于字节流的传输层通信协议</p>\n<p>特点：</p>\n<ol>\n<li><p>面向连接</p>\n<p>即发送数据前必须先建立连接，进行三次握手</p>\n</li>\n<li><p>仅支持单播传输</p>\n<p>即只支持点对点的数据传输，不支持多播和广播传输方式</p>\n</li>\n<li><p>面向字节流</p>\n<p>虽然应用程序和TCP的交互是一次一个数据块（大小不等），但TCP把应用程序看成是一连串的无结构的字节流。TCP有一个缓冲，当应用程序传送的数据块太长，TCP就可以把它划分短一些再传送</p>\n</li>\n<li><p>可靠传输</p>\n<p>对于可靠传输，判断丢包、误码靠的是TCP的段编号以及确认号。TCP为了保证报文传输的可靠，就给每个包一个序号，同时序号也保证了传送到接收端实体的包的按序接收。然后接收端实体对已成功收到的字节发回一个相应的确认(ACK)；如果发送端实体在合理的往返时延(RTT)内未收到确认，那么对应的数据（假设丢失了）将会被重传</p>\n</li>\n<li><p>提供拥塞控制</p>\n<p>当网络出现拥塞的时候，TCP能够减小向网络注入数据的速率和数量，缓解拥塞</p>\n</li>\n<li><p>提供全双工通信</p>\n<p>TCP允许通信双方的应用程序在任何时候都能发送数据，因为TCP连接的两端都设有缓存，用来临时存放双向通信的数据。当然，TCP可以立即发送一个数据段，也可以缓存一段时间以便一次发送更多的数据段（最大的数据段大小取决于MSS）</p>\n</li>\n</ol>\n<p>应用：</p>\n<blockquote>\n<p>TCP主要应用于对效率要求低，对准确性要求高或者要求有连接的的场景</p>\n</blockquote>\n<ul>\n<li>电子邮件</li>\n<li>文件下载与传输(FTP)</li>\n<li>远程终端连接(TELNEt)</li>\n</ul>\n<h4 id=\"UDP\"><a href=\"#UDP\" class=\"headerlink\" title=\"UDP\"></a>UDP</h4><p>UDP的全称是<strong>用户数据报协议</strong></p>\n<p>特点：</p>\n<ol>\n<li><p>面向无连接</p>\n<p>UDP是不需要和TCP一样在发送数据前进行三次握手建立连接的，在接收到数据后就立即开始发送数据</p>\n</li>\n<li><p>有单播、多播、广播的功能</p>\n<p>UDP支持一对一、多对多、多对一的数据传输方式</p>\n</li>\n<li><p>面向报文</p>\n<p>UDP不会对数据报文进行合并与拆分</p>\n</li>\n<li><p>不可靠性</p>\n</li>\n<li><p>头部开销小，传输数据报文时很高效</p>\n</li>\n</ol>\n<p>应用：</p>\n<blockquote>\n<p>UDP主要应用于对效率要求高，对准确性要求低的场景</p>\n</blockquote>\n<ul>\n<li>视频、音频通话</li>\n<li>包总量较少的通信(DNS、SNMP等)</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220826141412.png\" alt=\"tcp与udp区别\"></p>\n<h3 id=\"TCP三次握手与四次挥手\"><a href=\"#TCP三次握手与四次挥手\" class=\"headerlink\" title=\"TCP三次握手与四次挥手\"></a>TCP三次握手与四次挥手</h3><p><a href=\"#tcp\">TCP</a></p>\n<blockquote>\n<p>TCP: 一种面向连接的、可靠的、基于字节流的传输层通信协议</p>\n</blockquote>\n<p><a href=\"https://juejin.cn/post/6844903834708344840#heading-1\">三次握手与四次挥手</a></p>\n<h4 id=\"三次握手\"><a href=\"#三次握手\" class=\"headerlink\" title=\"三次握手\"></a>三次握手</h4><p>建立连接</p>\n<ol>\n<li>第一次握手：客户端给服务器发送一个SYN报文，进行请求连接</li>\n<li>第二次握手：服务器收到SYN报文后，服务器发送一个SYN+ACK报文</li>\n<li>第三次握手：客户端收到SYN+ACK报文后，会回应一个ACK报文，服务器收到ACK报文后，完成三次握手</li>\n</ol>\n<h4 id=\"四次挥手\"><a href=\"#四次挥手\" class=\"headerlink\" title=\"四次挥手\"></a>四次挥手</h4><p>断开连接</p>\n<ol>\n<li>第一次挥手：客户端发送一个FIN报文给服务器</li>\n<li>第二次挥手：服务器收到FIN之后，会发送ACK报文，</li>\n<li>第三次挥手：服务器发送一个FIN报文给客户端</li>\n<li>第四次挥手：客户端收到FIN之后，发送一个ACK报文应答，客户端会等待一个报文来回的时长，确定服务器没有再发送信息后关闭连接，服务器收到ACK报文之后就关闭连接</li>\n</ol>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160623.jpg","length":4493,"excerpt":"","more":"<h2 id=\"计算机网络\"><a href=\"#计算机网络\" class=\"headerlink\" title=\"计算机网络\"></a>计算机网络</h2><h3 id=\"HTTP状态码\"><a href=\"#HTTP状态码\" class=\"headerlink\" title=\"HTTP状态码\"></a><span id=\"status\">HTTP状态码</span></h3><p>常用状态码及其使用场景：</p>\n<ul>\n<li>1xx：表示目前是协议的中间状态，还需要后续请求</li>\n<li>2xx：表示请求成功</li>\n<li>3xx：表示重定向状态，需要重新请求</li>\n<li>4xx：表示请求报文错误</li>\n<li>5xx：服务器端错误</li>\n</ul>\n<p>常用状态码：</p>\n<ul>\n<li>101 切换请求协议，从 HTTP 切换到 WebSocket</li>\n<li>200 请求成功，有响应体</li>\n<li>204 No Content 请求成功执行，但没有内容，常用于测试服务器性能(options方法)</li>\n<li>301 永久重定向：会缓存(cdn)</li>\n<li>302 临时重定向：不会缓存</li>\n<li>304 协商缓存命中</li>\n<li>400 Bad Request 请求错误</li>\n<li>401 Unauthorized 用户认证失败</li>\n<li>403 Forbidden 服务器禁止访问</li>\n<li>404 Not Found 资源未找到</li>\n<li>500 Internal Server Error 服务器端错误</li>\n<li>502 Bad Gateway 网关错误</li>\n<li>503 Service Unavailable 服务器繁忙</li>\n</ul>\n<p>302表示临时重定向，资源只是暂时不能被访问了，常用于网站资源需要权限时，会重定向到登陆页面，登陆后才可继续访问</p>\n<p>301表示永久重定向,cdn</p>\n<h3 id=\"HTTP请求方法\"><a href=\"#HTTP请求方法\" class=\"headerlink\" title=\"HTTP请求方法\"></a>HTTP请求方法</h3><ul>\n<li><code>GET</code>：获取资源</li>\n<li><code>POST</code>：传输实体信息</li>\n<li><code>OPOTIONS</code>：询问支持的方法，<code>OPTIONS</code>方法用来查询针对请求URL指定的资源支持的方法</li>\n<li><code>CONNECT</code>：</li>\n<li>要求用隧道协议连接代理，CONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行 TCP 通信。主要使用 <code>SSL（Secure Sockets Layer，安全套接层）</code>和 TLS<code>（Transport Layer Security，传输层安全）</code>协议把通信内容加 密后经网络隧道传输</li>\n<li><code>TRACE</code>：追踪路径，<code>TRACE</code>方法是让Web服务器端将之前的请求通信返回给客户端</li>\n<li><code>PUT</code>：传输文件。但是由于自身不带验证机制，任何人都可以上传文件，存在安全性问题，一般不用该方法</li>\n<li><code>HEAD</code>：获取响应首部，<code>HEAD</code>方法和<code>GET</code>方法一样，只是不返回报文主体部分，用于确定<code>URL</code>的有效性及资源更新的日期时间等</li>\n<li><code>DELTELE</code>：删除文件，是与<code>PUT</code>相反的方法</li>\n</ul>\n<p>HTTP请求URL</p>\n<p><code>http://www.example.com:80/path/to/myfile.html?key1=value1&amp;key2=value2#SomewhereInTheDocument</code></p>\n<ul>\n<li><p><code>http://</code>：代表请求协议</p>\n</li>\n<li><p><code>www.example.com</code>：代表域名</p>\n</li>\n<li><p><code>:80</code>：端口</p>\n</li>\n<li><p><code>/path/to/myfile.html</code>：请求资源路径</p>\n</li>\n<li><p><code>?key1=value1&amp;key2=value2</code>：请求参数</p>\n</li>\n<li><p><code>#SomewhereInTheDocument</code>：锚点</p>\n</li>\n</ul>\n<h3 id=\"请求头\"><a href=\"#请求头\" class=\"headerlink\" title=\"请求头\"></a>请求头</h3><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers\">MDN关于请求头的介绍</a></p>\n<p>HTTP的请求标头分为四种：<a href=\"#common-header\">通用标头</a>、<a href=\"#request-header\">请求标头</a>、<a href=\"#response-header\">响应标头</a>、<a href=\"#solid-header\">实体标头</a></p>\n<h4 id=\"通用标头\"><a href=\"#通用标头\" class=\"headerlink\" title=\"通用标头\"></a><span id=\"common-header\">通用标头</span></h4><blockquote>\n<p>通用标头：可以出现在请求标头和响应标头中</p>\n</blockquote>\n<p>通用标头主要有三个，分别是 <code>Date</code>、<code>Cache-Control</code> 和 <code>Connection</code></p>\n<p>Date 是一个通用标头，它可以出现在请求标头和响应标头中，它的基本表示如下</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Date:</span> Wed, 21 Oct 2015 07:28:00 GMT </code></pre>\n<p><code>Cache-Control</code></p>\n<p>Connection 决定当前事务（一次三次握手和四次挥手）完成后，是否会关闭网络连接</p>\n<p>Connection 有两种：<code>持久性连接</code>、<code>非持久性连接</code></p>\n<p>持久性连接即一次事务完成后不关闭网络连接</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Connection:</span> keep-alive</code></pre>\n<p>非持久性连接即一次事务完成后关闭网络连接</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Connection:</span> close</code></pre>\n<h4 id=\"请求标头\"><a href=\"#请求标头\" class=\"headerlink\" title=\"请求标头\"></a><span id=\"request-header\">请求标头</span></h4><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Request_header\">MDN</a></p>\n<p><code>referer</code>：标记请求来源，告诉服务器该网页是从哪个页面链接来的</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Referer:</span> https://developer.mozilla.org/testpage.html</code></pre>\n<h4 id=\"响应标头\"><a href=\"#响应标头\" class=\"headerlink\" title=\"响应标头\"></a><span id=\"response-header\">响应标头</span></h4><p>首先出现的应该就是<a href=\"#status\">响应状态码</a></p>\n<p><code>Access-Control-Allow-Origin</code>,指定允许访问来源，告诉浏览器允许该源进行资源访问。使用<code>*</code>通配符允许如何来源</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Access-Control-Allow-Origin:</span> https://mozilla.org</code></pre>\n<p><code>Keep-Alive</code>：指定<a href=\"#connection\">Connection</a>非持续性连接的存活时间</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Connection:</span> Keep-Alive\n<span class=\"token header-name keyword\">Keep-Alive:</span> timeout=5, max=997</code></pre>\n<p><code>timeout</code>：指示空闲连接必须保持打开状态的最短时间（以秒为单位）。</p>\n<p><code>max</code>：指示在关闭连接之前可以在此连接上发送的最大请求数</p>\n<p>上述 HTTP 代码的意思就是限制最大的超时时间是 5s 和 最大的连接请求是 997 个</p>\n<p><code>Server</code>：服务器标头包含有关原始服务器用来处理请求的软件的信息</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Server:</span> Apache/2.4.1 (Unix)</code></pre>\n<h4 id=\"实体标头\"><a href=\"#实体标头\" class=\"headerlink\" title=\"实体标头\"></a><span id=\"solid-header\">实体标头</span></h4><p>实体标头是描述消息正文内容的HTTP标头，实体标头用于 HTTP 请求和响应中</p>\n<p>常见得到实体标头有：<code>Content-Length</code>、<code>Content-Language</code>、 <code>Content-Encoding</code></p>\n<p>Content-Length：指定实体主体的大小，以字节为单位，发送到接收方</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">content-length:</span> 1736</code></pre>\n<p>Content-Language：描述了客户端或者服务端能够接受的语言</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Content-Language:</span> de-DE\n<span class=\"token header-name keyword\">Content-Language:</span> en-US\n<span class=\"token header-name keyword\">accept-language:</span> zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</code></pre>\n<p>Content-Encoding：指定应用编码方式</p>\n<p>常见的内容编码：<strong>gzip、compress、deflate、identity</strong> </p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Accept-Encoding:</span> gzip, deflate //请求头\n<span class=\"token header-name keyword\">Content-Encoding:</span> gzip  //响应头</code></pre>\n<h3 id=\"网络模型\"><a href=\"#网络模型\" class=\"headerlink\" title=\"网络模型\"></a>网络模型</h3><h4 id=\"OSI七层模型\"><a href=\"#OSI七层模型\" class=\"headerlink\" title=\"OSI七层模型\"></a>OSI七层模型</h4><p><a href=\"https://www.cnblogs.com/hello-shf/p/13545959.html\">网络模型</a></p>\n<p><a href=\"https://tonydeng.github.io/sdn-handbook/basic/tcpip.html\">网络基础</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828091803.png\" alt=\"OSI\"></p>\n<p>七层模型各层功能</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828091952.png\" alt=\"模型功能\"></p>\n<h5 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h5><p><code>OSI</code>参考模型中最靠近用户的一层，是为计算机用户提供应用接口，也为用户直接提供各种网络服务。我们常见应用层的网络服务协议有：<code>HTTP</code>，<code>HTTPS</code>，<code>FTP</code>，<code>POP3</code>、<code>SMTP</code>等</p>\n<h5 id=\"表示层\"><a href=\"#表示层\" class=\"headerlink\" title=\"表示层\"></a>表示层</h5><p>表示层提供各种用于应用层数据的编码和转换功能,确保一个系统的应用层发送的数据能被另一个系统的应用层识别</p>\n<p>如：HTTP请求头/响应头 Content-Type：application/json; charset=utf-8 。这就是规定双方协商的数据格式： application/json; 和编码格式： charset=utf-8</p>\n<h5 id=\"会话层\"><a href=\"#会话层\" class=\"headerlink\" title=\"会话层\"></a>会话层</h5><p> 会话层就是负责建立、管理和终止表示层实体之间的通信会话。该层的通信由不同设备中的应用程序之间的服务请求和响应组成</p>\n<h5 id=\"传输层\"><a href=\"#传输层\" class=\"headerlink\" title=\"传输层\"></a>传输层</h5><p>传输层建立了主机端到端的链接，传输层的作用是为上层协议提供端到端的可靠和透明的数据传输服务，包括处理差错控制和流量控制等问题。该层向高层屏蔽了下层数据通信的细节，使高层用户看到的只是在两个传输实体间的一条主机到主机的、可由用户控制和设定的、可靠的数据通路。我们通常说的，<code>TCP</code> <code>UDP</code>就是在这一层。端口号既是这里的“端”</p>\n<h5 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h5><p>本层通过<code>IP</code>寻址来建立两个节点之间的连接，为源端的运输层送来的分组，选择合适的路由和交换节点，正确无误地按照地址传送给目的端的运输层。就是通常说的<code>IP</code>层。这一层就是我们经常说的<code>IP</code>协议层。<code>IP</code>协议是<code>Internet</code>的基础。我们可以这样理解，网络层规定了数据包的传输路线，而传输层则规定了数据包的传输方式</p>\n<p>网络层的主要功能：通过IP地址，实现网络寻址，即IP寻址，通过路由算法进行最优的网络路由</p>\n<h5 id=\"数据链路层\"><a href=\"#数据链路层\" class=\"headerlink\" title=\"数据链路层\"></a>数据链路层</h5><p>将比特组合成字节,再将字节组合成帧,使用链路层地址 (以太网使用MAC地址)来访问介质,并进行差错检测。 网络层与数据链路层的对比，通过上面的描述，我们或许可以这样理解，网络层是规划了数据包的传输路线，而数据链路层就是传输路线。不过，在数据链路层上还增加了差错控制的功能</p>\n<p>该层主要负责建立和管理不同计算机节点间的数据链路，并提供差错检测、封装成帧、透明传输的能力。数据链路层又分为两个层：媒体访问控制子层（MAC）和逻辑链路控制子层（LLC）</p>\n<h5 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h5><p>实际最终信号的传输是通过物理层实现的。通过物理介质传输比特流。规定了电平、速度和电缆针脚。常用设备有（各种物理设备）集线器、中继器、调制解调器、网线、双绞线、同轴电缆。这些都是物理层的传输介质</p>\n<h4 id=\"TCP-IP五层模型\"><a href=\"#TCP-IP五层模型\" class=\"headerlink\" title=\"TCP/IP五层模型\"></a>TCP/IP五层模型</h4><p><code>TCP/IP</code>模型比<code>OSI</code>模型更加简洁，它把<code>应用层/表示层/会话层</code>全部整合为了<code>应用层</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220828104032.webp\" alt=\"五层模型\"></p>\n<h3 id=\"TCP与UDP\"><a href=\"#TCP与UDP\" class=\"headerlink\" title=\"TCP与UDP\"></a>TCP与UDP</h3><p><a href=\"https://juejin.cn/post/6844903490595061767#heading-11\">TCP与UDP</a></p>\n<p>TCP和UDP都是传输层协议，都属于TCP/IP协议族</p>\n<h4 id=\"TCP\"><a href=\"#TCP\" class=\"headerlink\" title=\"TCP\"></a>TCP</h4><p>TCP是一种面向连接的、可靠的、基于字节流的传输层通信协议</p>\n<p>特点：</p>\n<ol>\n<li><p>面向连接</p>\n<p>即发送数据前必须先建立连接，进行三次握手</p>\n</li>\n<li><p>仅支持单播传输</p>\n<p>即只支持点对点的数据传输，不支持多播和广播传输方式</p>\n</li>\n<li><p>面向字节流</p>\n<p>虽然应用程序和TCP的交互是一次一个数据块（大小不等），但TCP把应用程序看成是一连串的无结构的字节流。TCP有一个缓冲，当应用程序传送的数据块太长，TCP就可以把它划分短一些再传送</p>\n</li>\n<li><p>可靠传输</p>\n<p>对于可靠传输，判断丢包、误码靠的是TCP的段编号以及确认号。TCP为了保证报文传输的可靠，就给每个包一个序号，同时序号也保证了传送到接收端实体的包的按序接收。然后接收端实体对已成功收到的字节发回一个相应的确认(ACK)；如果发送端实体在合理的往返时延(RTT)内未收到确认，那么对应的数据（假设丢失了）将会被重传</p>\n</li>\n<li><p>提供拥塞控制</p>\n<p>当网络出现拥塞的时候，TCP能够减小向网络注入数据的速率和数量，缓解拥塞</p>\n</li>\n<li><p>提供全双工通信</p>\n<p>TCP允许通信双方的应用程序在任何时候都能发送数据，因为TCP连接的两端都设有缓存，用来临时存放双向通信的数据。当然，TCP可以立即发送一个数据段，也可以缓存一段时间以便一次发送更多的数据段（最大的数据段大小取决于MSS）</p>\n</li>\n</ol>\n<p>应用：</p>\n<blockquote>\n<p>TCP主要应用于对效率要求低，对准确性要求高或者要求有连接的的场景</p>\n</blockquote>\n<ul>\n<li>电子邮件</li>\n<li>文件下载与传输(FTP)</li>\n<li>远程终端连接(TELNEt)</li>\n</ul>\n<h4 id=\"UDP\"><a href=\"#UDP\" class=\"headerlink\" title=\"UDP\"></a>UDP</h4><p>UDP的全称是<strong>用户数据报协议</strong></p>\n<p>特点：</p>\n<ol>\n<li><p>面向无连接</p>\n<p>UDP是不需要和TCP一样在发送数据前进行三次握手建立连接的，在接收到数据后就立即开始发送数据</p>\n</li>\n<li><p>有单播、多播、广播的功能</p>\n<p>UDP支持一对一、多对多、多对一的数据传输方式</p>\n</li>\n<li><p>面向报文</p>\n<p>UDP不会对数据报文进行合并与拆分</p>\n</li>\n<li><p>不可靠性</p>\n</li>\n<li><p>头部开销小，传输数据报文时很高效</p>\n</li>\n</ol>\n<p>应用：</p>\n<blockquote>\n<p>UDP主要应用于对效率要求高，对准确性要求低的场景</p>\n</blockquote>\n<ul>\n<li>视频、音频通话</li>\n<li>包总量较少的通信(DNS、SNMP等)</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/img/20220826141412.png\" alt=\"tcp与udp区别\"></p>\n<h3 id=\"TCP三次握手与四次挥手\"><a href=\"#TCP三次握手与四次挥手\" class=\"headerlink\" title=\"TCP三次握手与四次挥手\"></a>TCP三次握手与四次挥手</h3><p><a href=\"#tcp\">TCP</a></p>\n<blockquote>\n<p>TCP: 一种面向连接的、可靠的、基于字节流的传输层通信协议</p>\n</blockquote>\n<p><a href=\"https://juejin.cn/post/6844903834708344840#heading-1\">三次握手与四次挥手</a></p>\n<h4 id=\"三次握手\"><a href=\"#三次握手\" class=\"headerlink\" title=\"三次握手\"></a>三次握手</h4><p>建立连接</p>\n<ol>\n<li>第一次握手：客户端给服务器发送一个SYN报文，进行请求连接</li>\n<li>第二次握手：服务器收到SYN报文后，服务器发送一个SYN+ACK报文</li>\n<li>第三次握手：客户端收到SYN+ACK报文后，会回应一个ACK报文，服务器收到ACK报文后，完成三次握手</li>\n</ol>\n<h4 id=\"四次挥手\"><a href=\"#四次挥手\" class=\"headerlink\" title=\"四次挥手\"></a>四次挥手</h4><p>断开连接</p>\n<ol>\n<li>第一次挥手：客户端发送一个FIN报文给服务器</li>\n<li>第二次挥手：服务器收到FIN之后，会发送ACK报文，</li>\n<li>第三次挥手：服务器发送一个FIN报文给客户端</li>\n<li>第四次挥手：客户端收到FIN之后，发送一个ACK报文应答，客户端会等待一个报文来回的时长，确定服务器没有再发送信息后关闭连接，服务器收到ACK报文之后就关闭连接</li>\n</ol>\n"},{"title":"辐射分辨率","date":"2021-11-08T04:05:28.000Z","description":"辐射分辨率基本概念","_content":"\n<h1>\n\t<span id=\"辐射分辨率\">\n    \t<center>辐射分辨率</center>\n    </span>\n</h1>\n\n## 1. 定义\n\n辐射分辨率：传感器接收波谱信号时，能分辨的最小辐射度差 (传感器的灵敏度)\n\n表达了传感器对不同能量、强度的分辨能力\n\n## 2. 表示方法\n\n遥感图像上表现为每一像元的辐射量化级\n\n一般用灰度的分级数表示，即最暗到最亮灰度值间分级的数目 -- 量化级数\n\n如：TM数据以8位来记录，亮度取值范围为0~255\n\n灰度量化等级实质上表达了传感器对能量、强度的分辨能力\n\n## 3. 理解\n\n+ 辐射分辨率越高，则对地物的识别与区分能力越强\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211108120627.png)\n\n+ 空间分辨率与辐射分辨率之间的矛盾\n\n> 提高空间分辨率 ---> IFOV降低 ---> 探测元件接受的辐射能量减少 (入射能量减少) ---> 对微弱能量差异检测能力下降 ---> 辐射分辨率降低\n\n","source":"_posts/辐射分辨率.md","raw":"---\ntitle: 辐射分辨率\ndate: 2021-11-08 12:05:28\ntags: 遥感\ncategories: [GIS,遥感图像特征,辐射分辨率]\ndescription: 辐射分辨率基本概念\n---\n\n<h1>\n\t<span id=\"辐射分辨率\">\n    \t<center>辐射分辨率</center>\n    </span>\n</h1>\n\n## 1. 定义\n\n辐射分辨率：传感器接收波谱信号时，能分辨的最小辐射度差 (传感器的灵敏度)\n\n表达了传感器对不同能量、强度的分辨能力\n\n## 2. 表示方法\n\n遥感图像上表现为每一像元的辐射量化级\n\n一般用灰度的分级数表示，即最暗到最亮灰度值间分级的数目 -- 量化级数\n\n如：TM数据以8位来记录，亮度取值范围为0~255\n\n灰度量化等级实质上表达了传感器对能量、强度的分辨能力\n\n## 3. 理解\n\n+ 辐射分辨率越高，则对地物的识别与区分能力越强\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211108120627.png)\n\n+ 空间分辨率与辐射分辨率之间的矛盾\n\n> 提高空间分辨率 ---> IFOV降低 ---> 探测元件接受的辐射能量减少 (入射能量减少) ---> 对微弱能量差异检测能力下降 ---> 辐射分辨率降低\n\n","slug":"辐射分辨率","published":1,"updated":"2021-11-10T11:10:28.061Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt4e0053jsvk13gfhjem","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1>\n    <span id=\"辐射分辨率\">\n        <center>辐射分辨率</center>\n    </span>\n</h1>\n\n<h2 id=\"1-定义\"><a href=\"#1-定义\" class=\"headerlink\" title=\"1. 定义\"></a>1. 定义</h2><p>辐射分辨率：传感器接收波谱信号时，能分辨的最小辐射度差 (传感器的灵敏度)</p>\n<p>表达了传感器对不同能量、强度的分辨能力</p>\n<h2 id=\"2-表示方法\"><a href=\"#2-表示方法\" class=\"headerlink\" title=\"2. 表示方法\"></a>2. 表示方法</h2><p>遥感图像上表现为每一像元的辐射量化级</p>\n<p>一般用灰度的分级数表示，即最暗到最亮灰度值间分级的数目 — 量化级数</p>\n<p>如：TM数据以8位来记录，亮度取值范围为0~255</p>\n<p>灰度量化等级实质上表达了传感器对能量、强度的分辨能力</p>\n<h2 id=\"3-理解\"><a href=\"#3-理解\" class=\"headerlink\" title=\"3. 理解\"></a>3. 理解</h2><ul>\n<li>辐射分辨率越高，则对地物的识别与区分能力越强</li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211108120627.png\" alt=\"\"></p>\n<ul>\n<li>空间分辨率与辐射分辨率之间的矛盾</li>\n</ul>\n<blockquote>\n<p>提高空间分辨率 —-&gt; IFOV降低 —-&gt; 探测元件接受的辐射能量减少 (入射能量减少) —-&gt; 对微弱能量差异检测能力下降 —-&gt; 辐射分辨率降低</p>\n</blockquote>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160624.jpg","length":291,"excerpt":"","more":"<h1>\n    <span id=\"辐射分辨率\">\n        <center>辐射分辨率</center>\n    </span>\n</h1>\n\n<h2 id=\"1-定义\"><a href=\"#1-定义\" class=\"headerlink\" title=\"1. 定义\"></a>1. 定义</h2><p>辐射分辨率：传感器接收波谱信号时，能分辨的最小辐射度差 (传感器的灵敏度)</p>\n<p>表达了传感器对不同能量、强度的分辨能力</p>\n<h2 id=\"2-表示方法\"><a href=\"#2-表示方法\" class=\"headerlink\" title=\"2. 表示方法\"></a>2. 表示方法</h2><p>遥感图像上表现为每一像元的辐射量化级</p>\n<p>一般用灰度的分级数表示，即最暗到最亮灰度值间分级的数目 — 量化级数</p>\n<p>如：TM数据以8位来记录，亮度取值范围为0~255</p>\n<p>灰度量化等级实质上表达了传感器对能量、强度的分辨能力</p>\n<h2 id=\"3-理解\"><a href=\"#3-理解\" class=\"headerlink\" title=\"3. 理解\"></a>3. 理解</h2><ul>\n<li>辐射分辨率越高，则对地物的识别与区分能力越强</li>\n</ul>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211108120627.png\" alt=\"\"></p>\n<ul>\n<li>空间分辨率与辐射分辨率之间的矛盾</li>\n</ul>\n<blockquote>\n<p>提高空间分辨率 —-&gt; IFOV降低 —-&gt; 探测元件接受的辐射能量减少 (入射能量减少) —-&gt; 对微弱能量差异检测能力下降 —-&gt; 辐射分辨率降低</p>\n</blockquote>\n"},{"title":"遥感平台与遥感成像原理","date":"2021-12-04T00:48:07.000Z","mathjax":true,"description":null,"_content":"\n## 遥感平台\n\n### 概念\n\n1. 遥感平台\n\n遥感平台：装载传感器的工具或设备。主要有地面平台、航空平台、航天平台\n\n2. 轨道参数\n\n卫星轨道在空间的具体形状位置，可由六个轨道参数来确定\n\n> 升交点赤经Ω、近地点角距ω、轨道倾角i、卫星轨道的长半轴a、卫星轨道的偏心率e\\卫星过近地点时刻t\n\n### 陆地卫星及轨道特征\n\n#### 卫星轨道及其运行特点\n\n1. 近圆形轨道\n\n不同地区获得图像的比例尺一致，卫星的运行速度近于匀速，便于避免扫描行之间的不衔接\n\n2. 近极地轨道\n\n增大卫星对地观测的总范围，可观测南北纬81度之间的地区\n\n3. 太阳同步轨道\n\n卫星同一地方时间通过地面上空，有利于卫 =星在相近的光照条件下对地观测。但由于季节和地理位置的变化，太阳高度角并不是任何时间都是一致的\n\n4. 可重复轨道\n\n有利于对地面地物或自然现象的变化做动态监测\n\n## 遥感传感器及其成像原理\n\n传感器根据其成像原理与图像性质可分为：摄影成像、扫描成像、雷达成像、非图像类型传感器\n\n### 摄影成像\n\n传统摄影依靠光学镜头及放置在焦平面的感光胶 片来记录物体影像。数字摄影则通过放置在焦平面的光 敏元件，经光/电转换，以数字信号来记录物体的影像\n\n+ 分幅式摄影机\n+ 全景式摄影机\n+ 多光谱摄影机\n\n### 扫描成像\n\n扫描成像类型的传感器是**逐点逐行地以时序方式获取二维码**，有两种主要的形式：一是**物面扫描系统**，对物面扫描的成像仪。它的特点是对地面直接扫描成像。这类仪器有<u>红外扫描仪</u>、多光谱扫描仪、成像扫描仪等。二是**像面扫描系统**，瞬间在像面上形成一条线图像，甚至是一幅二维图像，然后对影像进行扫描成像。这类仪器有<u>线阵列CCD推扫式成像仪</u>、电视摄像机等\n\n1. 瞬时视场角\n\n扫描镜在一瞬时时间可以视为静止状态，此时，接收到的目标物的电磁波辐射，限制在一个很小的角度之内，这个角度称为瞬时视场角。即扫描仪的**空间分辨率**\n\n2. 总视场角\n\n从遥感平台到地面扫描带外侧所构成的夹角，叫总视场角\n\n#### 物面扫描系统\n\n光/机扫描成像，又称物面扫描系统。由光机左右摆扫和飞行平台向前运动完成二维空间成像，其线列探测器完成每个瞬时视场像元的光谱维获取\n\n1. 扫描仪分类\n\n线性扫描仪、弾扫式扫描仪\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211204102707.png)\n\n2. 扫描线的衔接\n\n假定扫描仪扫描一次所需时间为t,一个探测器的地面分辨率为a，飞行地速为w，则：\n\n+  w=a/t，扫描线间重叠度为0，并且不会漏扫； \n+  w>a/t，会漏扫； \n+  w<a/t,扫描线间部分重叠\n\n3. 特点\n\n+ 光机扫描为行扫描；每条扫描线/扫描线组均有一个投影中心，所得影像为多**中心投影影像**\n+ 飞行方向和扫描方向的比例尺不一致\n+ 在每条扫描线上，距离投影中心越远，像点变形越大\n\n#### 像面扫描系统\n\n1. 成像原理\n\n推扫式扫描系统不用扫描镜，而是把探测器按扫描方向（**垂直于飞行方向**)阵列式排列来感应地面响应，以替代机械的真扫描\n\n有线阵列和面阵列两类\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211204103138.png)\n\n### 微波遥感与成像\n\n#### 微波遥感概念\n\n微波遥感：指通过传感器获取从目标发射或反射的微波辐射，经过判读处理来认识地物的技术\n\n1. 微波遥感的特点\n\n+ 能全天候、全天时工作\n+ 对某些地物具有特殊的波谱特征\n+ 对冰、雪、森林、土壤等具有一定穿透能力\n+ 对海洋遥感具有特殊意义\n+ 分辨率较低、但特性明显\n\n2. 主动微波遥感与被动微波遥感\n\n主动微波遥感：指通过向目标物发射微波并接收其后方向散射信号来实现对地观测的遥感方式\n\n被动微波遥感：通过传感器，接收来自目标地物发射的微波，而达到探测目的的遥感方式\n\n#### 成像雷达(真实孔径雷达-RAR，合成孔径雷达-SAR)\n\n1. 距离分辨率（侧向）\n\n在垂直于飞行的方向上，能分辨两个目标的最小距离\n\n2. 方位分辨率（航向）\n\n在雷达飞行方向上，能分辨两个目标的最小距离\n","source":"_posts/遥感平台与遥感成像原理.md","raw":"---\ntitle: 遥感平台与遥感成像原理\ndate: 2021-12-04 08:48:07\ntags: 遥感\ncategories:\nmathjax: true\ndescription:\n---\n\n## 遥感平台\n\n### 概念\n\n1. 遥感平台\n\n遥感平台：装载传感器的工具或设备。主要有地面平台、航空平台、航天平台\n\n2. 轨道参数\n\n卫星轨道在空间的具体形状位置，可由六个轨道参数来确定\n\n> 升交点赤经Ω、近地点角距ω、轨道倾角i、卫星轨道的长半轴a、卫星轨道的偏心率e\\卫星过近地点时刻t\n\n### 陆地卫星及轨道特征\n\n#### 卫星轨道及其运行特点\n\n1. 近圆形轨道\n\n不同地区获得图像的比例尺一致，卫星的运行速度近于匀速，便于避免扫描行之间的不衔接\n\n2. 近极地轨道\n\n增大卫星对地观测的总范围，可观测南北纬81度之间的地区\n\n3. 太阳同步轨道\n\n卫星同一地方时间通过地面上空，有利于卫 =星在相近的光照条件下对地观测。但由于季节和地理位置的变化，太阳高度角并不是任何时间都是一致的\n\n4. 可重复轨道\n\n有利于对地面地物或自然现象的变化做动态监测\n\n## 遥感传感器及其成像原理\n\n传感器根据其成像原理与图像性质可分为：摄影成像、扫描成像、雷达成像、非图像类型传感器\n\n### 摄影成像\n\n传统摄影依靠光学镜头及放置在焦平面的感光胶 片来记录物体影像。数字摄影则通过放置在焦平面的光 敏元件，经光/电转换，以数字信号来记录物体的影像\n\n+ 分幅式摄影机\n+ 全景式摄影机\n+ 多光谱摄影机\n\n### 扫描成像\n\n扫描成像类型的传感器是**逐点逐行地以时序方式获取二维码**，有两种主要的形式：一是**物面扫描系统**，对物面扫描的成像仪。它的特点是对地面直接扫描成像。这类仪器有<u>红外扫描仪</u>、多光谱扫描仪、成像扫描仪等。二是**像面扫描系统**，瞬间在像面上形成一条线图像，甚至是一幅二维图像，然后对影像进行扫描成像。这类仪器有<u>线阵列CCD推扫式成像仪</u>、电视摄像机等\n\n1. 瞬时视场角\n\n扫描镜在一瞬时时间可以视为静止状态，此时，接收到的目标物的电磁波辐射，限制在一个很小的角度之内，这个角度称为瞬时视场角。即扫描仪的**空间分辨率**\n\n2. 总视场角\n\n从遥感平台到地面扫描带外侧所构成的夹角，叫总视场角\n\n#### 物面扫描系统\n\n光/机扫描成像，又称物面扫描系统。由光机左右摆扫和飞行平台向前运动完成二维空间成像，其线列探测器完成每个瞬时视场像元的光谱维获取\n\n1. 扫描仪分类\n\n线性扫描仪、弾扫式扫描仪\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211204102707.png)\n\n2. 扫描线的衔接\n\n假定扫描仪扫描一次所需时间为t,一个探测器的地面分辨率为a，飞行地速为w，则：\n\n+  w=a/t，扫描线间重叠度为0，并且不会漏扫； \n+  w>a/t，会漏扫； \n+  w<a/t,扫描线间部分重叠\n\n3. 特点\n\n+ 光机扫描为行扫描；每条扫描线/扫描线组均有一个投影中心，所得影像为多**中心投影影像**\n+ 飞行方向和扫描方向的比例尺不一致\n+ 在每条扫描线上，距离投影中心越远，像点变形越大\n\n#### 像面扫描系统\n\n1. 成像原理\n\n推扫式扫描系统不用扫描镜，而是把探测器按扫描方向（**垂直于飞行方向**)阵列式排列来感应地面响应，以替代机械的真扫描\n\n有线阵列和面阵列两类\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211204103138.png)\n\n### 微波遥感与成像\n\n#### 微波遥感概念\n\n微波遥感：指通过传感器获取从目标发射或反射的微波辐射，经过判读处理来认识地物的技术\n\n1. 微波遥感的特点\n\n+ 能全天候、全天时工作\n+ 对某些地物具有特殊的波谱特征\n+ 对冰、雪、森林、土壤等具有一定穿透能力\n+ 对海洋遥感具有特殊意义\n+ 分辨率较低、但特性明显\n\n2. 主动微波遥感与被动微波遥感\n\n主动微波遥感：指通过向目标物发射微波并接收其后方向散射信号来实现对地观测的遥感方式\n\n被动微波遥感：通过传感器，接收来自目标地物发射的微波，而达到探测目的的遥感方式\n\n#### 成像雷达(真实孔径雷达-RAR，合成孔径雷达-SAR)\n\n1. 距离分辨率（侧向）\n\n在垂直于飞行的方向上，能分辨两个目标的最小距离\n\n2. 方位分辨率（航向）\n\n在雷达飞行方向上，能分辨两个目标的最小距离\n","slug":"遥感平台与遥感成像原理","published":1,"updated":"2021-12-27T08:08:43.473Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt4f0056jsvk69u3amuc","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"遥感平台\"><a href=\"#遥感平台\" class=\"headerlink\" title=\"遥感平台\"></a>遥感平台</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ol>\n<li>遥感平台</li>\n</ol>\n<p>遥感平台：装载传感器的工具或设备。主要有地面平台、航空平台、航天平台</p>\n<ol>\n<li>轨道参数</li>\n</ol>\n<p>卫星轨道在空间的具体形状位置，可由六个轨道参数来确定</p>\n<blockquote>\n<p>升交点赤经Ω、近地点角距ω、轨道倾角i、卫星轨道的长半轴a、卫星轨道的偏心率e\\卫星过近地点时刻t</p>\n</blockquote>\n<h3 id=\"陆地卫星及轨道特征\"><a href=\"#陆地卫星及轨道特征\" class=\"headerlink\" title=\"陆地卫星及轨道特征\"></a>陆地卫星及轨道特征</h3><h4 id=\"卫星轨道及其运行特点\"><a href=\"#卫星轨道及其运行特点\" class=\"headerlink\" title=\"卫星轨道及其运行特点\"></a>卫星轨道及其运行特点</h4><ol>\n<li>近圆形轨道</li>\n</ol>\n<p>不同地区获得图像的比例尺一致，卫星的运行速度近于匀速，便于避免扫描行之间的不衔接</p>\n<ol>\n<li>近极地轨道</li>\n</ol>\n<p>增大卫星对地观测的总范围，可观测南北纬81度之间的地区</p>\n<ol>\n<li>太阳同步轨道</li>\n</ol>\n<p>卫星同一地方时间通过地面上空，有利于卫 =星在相近的光照条件下对地观测。但由于季节和地理位置的变化，太阳高度角并不是任何时间都是一致的</p>\n<ol>\n<li>可重复轨道</li>\n</ol>\n<p>有利于对地面地物或自然现象的变化做动态监测</p>\n<h2 id=\"遥感传感器及其成像原理\"><a href=\"#遥感传感器及其成像原理\" class=\"headerlink\" title=\"遥感传感器及其成像原理\"></a>遥感传感器及其成像原理</h2><p>传感器根据其成像原理与图像性质可分为：摄影成像、扫描成像、雷达成像、非图像类型传感器</p>\n<h3 id=\"摄影成像\"><a href=\"#摄影成像\" class=\"headerlink\" title=\"摄影成像\"></a>摄影成像</h3><p>传统摄影依靠光学镜头及放置在焦平面的感光胶 片来记录物体影像。数字摄影则通过放置在焦平面的光 敏元件，经光/电转换，以数字信号来记录物体的影像</p>\n<ul>\n<li>分幅式摄影机</li>\n<li>全景式摄影机</li>\n<li>多光谱摄影机</li>\n</ul>\n<h3 id=\"扫描成像\"><a href=\"#扫描成像\" class=\"headerlink\" title=\"扫描成像\"></a>扫描成像</h3><p>扫描成像类型的传感器是<strong>逐点逐行地以时序方式获取二维码</strong>，有两种主要的形式：一是<strong>物面扫描系统</strong>，对物面扫描的成像仪。它的特点是对地面直接扫描成像。这类仪器有<u>红外扫描仪</u>、多光谱扫描仪、成像扫描仪等。二是<strong>像面扫描系统</strong>，瞬间在像面上形成一条线图像，甚至是一幅二维图像，然后对影像进行扫描成像。这类仪器有<u>线阵列CCD推扫式成像仪</u>、电视摄像机等</p>\n<ol>\n<li>瞬时视场角</li>\n</ol>\n<p>扫描镜在一瞬时时间可以视为静止状态，此时，接收到的目标物的电磁波辐射，限制在一个很小的角度之内，这个角度称为瞬时视场角。即扫描仪的<strong>空间分辨率</strong></p>\n<ol>\n<li>总视场角</li>\n</ol>\n<p>从遥感平台到地面扫描带外侧所构成的夹角，叫总视场角</p>\n<h4 id=\"物面扫描系统\"><a href=\"#物面扫描系统\" class=\"headerlink\" title=\"物面扫描系统\"></a>物面扫描系统</h4><p>光/机扫描成像，又称物面扫描系统。由光机左右摆扫和飞行平台向前运动完成二维空间成像，其线列探测器完成每个瞬时视场像元的光谱维获取</p>\n<ol>\n<li>扫描仪分类</li>\n</ol>\n<p>线性扫描仪、弾扫式扫描仪</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211204102707.png\" alt=\"\"></p>\n<ol>\n<li>扫描线的衔接</li>\n</ol>\n<p>假定扫描仪扫描一次所需时间为t,一个探测器的地面分辨率为a，飞行地速为w，则：</p>\n<ul>\n<li>w=a/t，扫描线间重叠度为0，并且不会漏扫； </li>\n<li>w&gt;a/t，会漏扫； </li>\n<li>w&lt;a/t,扫描线间部分重叠</li>\n</ul>\n<ol>\n<li>特点</li>\n</ol>\n<ul>\n<li>光机扫描为行扫描；每条扫描线/扫描线组均有一个投影中心，所得影像为多<strong>中心投影影像</strong></li>\n<li>飞行方向和扫描方向的比例尺不一致</li>\n<li>在每条扫描线上，距离投影中心越远，像点变形越大</li>\n</ul>\n<h4 id=\"像面扫描系统\"><a href=\"#像面扫描系统\" class=\"headerlink\" title=\"像面扫描系统\"></a>像面扫描系统</h4><ol>\n<li>成像原理</li>\n</ol>\n<p>推扫式扫描系统不用扫描镜，而是把探测器按扫描方向（<strong>垂直于飞行方向</strong>)阵列式排列来感应地面响应，以替代机械的真扫描</p>\n<p>有线阵列和面阵列两类</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211204103138.png\" alt=\"\"></p>\n<h3 id=\"微波遥感与成像\"><a href=\"#微波遥感与成像\" class=\"headerlink\" title=\"微波遥感与成像\"></a>微波遥感与成像</h3><h4 id=\"微波遥感概念\"><a href=\"#微波遥感概念\" class=\"headerlink\" title=\"微波遥感概念\"></a>微波遥感概念</h4><p>微波遥感：指通过传感器获取从目标发射或反射的微波辐射，经过判读处理来认识地物的技术</p>\n<ol>\n<li>微波遥感的特点</li>\n</ol>\n<ul>\n<li>能全天候、全天时工作</li>\n<li>对某些地物具有特殊的波谱特征</li>\n<li>对冰、雪、森林、土壤等具有一定穿透能力</li>\n<li>对海洋遥感具有特殊意义</li>\n<li>分辨率较低、但特性明显</li>\n</ul>\n<ol>\n<li>主动微波遥感与被动微波遥感</li>\n</ol>\n<p>主动微波遥感：指通过向目标物发射微波并接收其后方向散射信号来实现对地观测的遥感方式</p>\n<p>被动微波遥感：通过传感器，接收来自目标地物发射的微波，而达到探测目的的遥感方式</p>\n<h4 id=\"成像雷达-真实孔径雷达-RAR，合成孔径雷达-SAR\"><a href=\"#成像雷达-真实孔径雷达-RAR，合成孔径雷达-SAR\" class=\"headerlink\" title=\"成像雷达(真实孔径雷达-RAR，合成孔径雷达-SAR)\"></a>成像雷达(真实孔径雷达-RAR，合成孔径雷达-SAR)</h4><ol>\n<li>距离分辨率（侧向）</li>\n</ol>\n<p>在垂直于飞行的方向上，能分辨两个目标的最小距离</p>\n<ol>\n<li>方位分辨率（航向）</li>\n</ol>\n<p>在雷达飞行方向上，能分辨两个目标的最小距离</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160703.png","length":1382,"excerpt":"","more":"<h2 id=\"遥感平台\"><a href=\"#遥感平台\" class=\"headerlink\" title=\"遥感平台\"></a>遥感平台</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ol>\n<li>遥感平台</li>\n</ol>\n<p>遥感平台：装载传感器的工具或设备。主要有地面平台、航空平台、航天平台</p>\n<ol>\n<li>轨道参数</li>\n</ol>\n<p>卫星轨道在空间的具体形状位置，可由六个轨道参数来确定</p>\n<blockquote>\n<p>升交点赤经Ω、近地点角距ω、轨道倾角i、卫星轨道的长半轴a、卫星轨道的偏心率e\\卫星过近地点时刻t</p>\n</blockquote>\n<h3 id=\"陆地卫星及轨道特征\"><a href=\"#陆地卫星及轨道特征\" class=\"headerlink\" title=\"陆地卫星及轨道特征\"></a>陆地卫星及轨道特征</h3><h4 id=\"卫星轨道及其运行特点\"><a href=\"#卫星轨道及其运行特点\" class=\"headerlink\" title=\"卫星轨道及其运行特点\"></a>卫星轨道及其运行特点</h4><ol>\n<li>近圆形轨道</li>\n</ol>\n<p>不同地区获得图像的比例尺一致，卫星的运行速度近于匀速，便于避免扫描行之间的不衔接</p>\n<ol>\n<li>近极地轨道</li>\n</ol>\n<p>增大卫星对地观测的总范围，可观测南北纬81度之间的地区</p>\n<ol>\n<li>太阳同步轨道</li>\n</ol>\n<p>卫星同一地方时间通过地面上空，有利于卫 =星在相近的光照条件下对地观测。但由于季节和地理位置的变化，太阳高度角并不是任何时间都是一致的</p>\n<ol>\n<li>可重复轨道</li>\n</ol>\n<p>有利于对地面地物或自然现象的变化做动态监测</p>\n<h2 id=\"遥感传感器及其成像原理\"><a href=\"#遥感传感器及其成像原理\" class=\"headerlink\" title=\"遥感传感器及其成像原理\"></a>遥感传感器及其成像原理</h2><p>传感器根据其成像原理与图像性质可分为：摄影成像、扫描成像、雷达成像、非图像类型传感器</p>\n<h3 id=\"摄影成像\"><a href=\"#摄影成像\" class=\"headerlink\" title=\"摄影成像\"></a>摄影成像</h3><p>传统摄影依靠光学镜头及放置在焦平面的感光胶 片来记录物体影像。数字摄影则通过放置在焦平面的光 敏元件，经光/电转换，以数字信号来记录物体的影像</p>\n<ul>\n<li>分幅式摄影机</li>\n<li>全景式摄影机</li>\n<li>多光谱摄影机</li>\n</ul>\n<h3 id=\"扫描成像\"><a href=\"#扫描成像\" class=\"headerlink\" title=\"扫描成像\"></a>扫描成像</h3><p>扫描成像类型的传感器是<strong>逐点逐行地以时序方式获取二维码</strong>，有两种主要的形式：一是<strong>物面扫描系统</strong>，对物面扫描的成像仪。它的特点是对地面直接扫描成像。这类仪器有<u>红外扫描仪</u>、多光谱扫描仪、成像扫描仪等。二是<strong>像面扫描系统</strong>，瞬间在像面上形成一条线图像，甚至是一幅二维图像，然后对影像进行扫描成像。这类仪器有<u>线阵列CCD推扫式成像仪</u>、电视摄像机等</p>\n<ol>\n<li>瞬时视场角</li>\n</ol>\n<p>扫描镜在一瞬时时间可以视为静止状态，此时，接收到的目标物的电磁波辐射，限制在一个很小的角度之内，这个角度称为瞬时视场角。即扫描仪的<strong>空间分辨率</strong></p>\n<ol>\n<li>总视场角</li>\n</ol>\n<p>从遥感平台到地面扫描带外侧所构成的夹角，叫总视场角</p>\n<h4 id=\"物面扫描系统\"><a href=\"#物面扫描系统\" class=\"headerlink\" title=\"物面扫描系统\"></a>物面扫描系统</h4><p>光/机扫描成像，又称物面扫描系统。由光机左右摆扫和飞行平台向前运动完成二维空间成像，其线列探测器完成每个瞬时视场像元的光谱维获取</p>\n<ol>\n<li>扫描仪分类</li>\n</ol>\n<p>线性扫描仪、弾扫式扫描仪</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211204102707.png\" alt=\"\"></p>\n<ol>\n<li>扫描线的衔接</li>\n</ol>\n<p>假定扫描仪扫描一次所需时间为t,一个探测器的地面分辨率为a，飞行地速为w，则：</p>\n<ul>\n<li>w=a/t，扫描线间重叠度为0，并且不会漏扫； </li>\n<li>w&gt;a/t，会漏扫； </li>\n<li>w&lt;a/t,扫描线间部分重叠</li>\n</ul>\n<ol>\n<li>特点</li>\n</ol>\n<ul>\n<li>光机扫描为行扫描；每条扫描线/扫描线组均有一个投影中心，所得影像为多<strong>中心投影影像</strong></li>\n<li>飞行方向和扫描方向的比例尺不一致</li>\n<li>在每条扫描线上，距离投影中心越远，像点变形越大</li>\n</ul>\n<h4 id=\"像面扫描系统\"><a href=\"#像面扫描系统\" class=\"headerlink\" title=\"像面扫描系统\"></a>像面扫描系统</h4><ol>\n<li>成像原理</li>\n</ol>\n<p>推扫式扫描系统不用扫描镜，而是把探测器按扫描方向（<strong>垂直于飞行方向</strong>)阵列式排列来感应地面响应，以替代机械的真扫描</p>\n<p>有线阵列和面阵列两类</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211204103138.png\" alt=\"\"></p>\n<h3 id=\"微波遥感与成像\"><a href=\"#微波遥感与成像\" class=\"headerlink\" title=\"微波遥感与成像\"></a>微波遥感与成像</h3><h4 id=\"微波遥感概念\"><a href=\"#微波遥感概念\" class=\"headerlink\" title=\"微波遥感概念\"></a>微波遥感概念</h4><p>微波遥感：指通过传感器获取从目标发射或反射的微波辐射，经过判读处理来认识地物的技术</p>\n<ol>\n<li>微波遥感的特点</li>\n</ol>\n<ul>\n<li>能全天候、全天时工作</li>\n<li>对某些地物具有特殊的波谱特征</li>\n<li>对冰、雪、森林、土壤等具有一定穿透能力</li>\n<li>对海洋遥感具有特殊意义</li>\n<li>分辨率较低、但特性明显</li>\n</ul>\n<ol>\n<li>主动微波遥感与被动微波遥感</li>\n</ol>\n<p>主动微波遥感：指通过向目标物发射微波并接收其后方向散射信号来实现对地观测的遥感方式</p>\n<p>被动微波遥感：通过传感器，接收来自目标地物发射的微波，而达到探测目的的遥感方式</p>\n<h4 id=\"成像雷达-真实孔径雷达-RAR，合成孔径雷达-SAR\"><a href=\"#成像雷达-真实孔径雷达-RAR，合成孔径雷达-SAR\" class=\"headerlink\" title=\"成像雷达(真实孔径雷达-RAR，合成孔径雷达-SAR)\"></a>成像雷达(真实孔径雷达-RAR，合成孔径雷达-SAR)</h4><ol>\n<li>距离分辨率（侧向）</li>\n</ol>\n<p>在垂直于飞行的方向上，能分辨两个目标的最小距离</p>\n<ol>\n<li>方位分辨率（航向）</li>\n</ol>\n<p>在雷达飞行方向上，能分辨两个目标的最小距离</p>\n"},{"title":"遥感认识","date":"2021-12-03T06:42:19.000Z","mathjax":true,"description":"遥感基本概念","_content":"## 遥感基本概念\n\n### 遥感的定义\n\n### 遥感平台\n\n地面平台、航空平台、航天平台\n\n### 传感器/遥感器\n\n接收、记录目标物反射或发射电磁波特征的仪器。如扫描仪、雷达、摄影机、摄像机、辐射计\n\n### 遥感技术系统\n\n### 遥感的分类\n\n1. 按照遥感的工作平台分类\n\n   > 地面遥感、航空遥感、航天遥感\n\n2. 按照探测电磁波的工作波段分类\n\n   > 紫外遥感、可见光遥感、红外遥感、微波遥感、多波段遥感\n\n3. 按照遥感应用的目的分类\n\n   > 外层空间遥感、大气、陆地、海洋遥感\n\n4. 按照资料的记录方式\n\n   > 成像方式、非成像方式\n\n5. 按照传感器工作方式分类\n\n   > <a href=\"主动遥感\">主动遥感</a>、<a href=\"被动遥感\">被动遥感</a>\n\n+ <span id=\"主动遥感\">主动遥感</span>\n\n  传感器<u>*本身主动发射*</u>人工探测信号，这些信息与目标对象相互作用后一部分<u>被反射回来</u>，又被传感器所接收，依靠这种信息进行的遥感是主动遥感\n\n+ <span id=\"被动遥感\">被动遥感</span>\n\n  传感器本身<u>*不发射*</u>任何人工探测信号，只能被动地接收从目标对象返回的电磁波信息进行遥感\n\n6. 按应用领域分类\n\n   资源遥感、环境遥感、林业遥感、渔业遥感、城市遥感、农业遥感、水利遥感、地质遥感、军事遥感\n\n7. 按资源类型分类\n\n   土地资源、矿产资源、生物资源、海洋资源、水资源\n\n### 遥感的特点\n\n大面积同步观测、时效性与动态性、多波段性、综合性与可比性、经济性、局限性\n\n### 遥感的主要任务\n\n## 电磁波与电磁波谱\n\n1. 电磁波(横波)\n\n+ 波动性\n\n  干涉、衍射、偏振\n\n+ 粒子性\n\n2. 电磁波谱\n\n![电磁波谱图](https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160650.jpeg)\n\n## 物体的发射辐射\n\n### 黑体辐射\n\n1. 绝对黑体\n\n> <u>**对任何波长**</u>的电磁辐射<u>**全部吸收**</u>的物体。即对任何波长的辐射，反射率和透射率都等于0。也叫完全辐射体\n\n> 一个不透明的物体对入射到它什么的电磁波只有吸收和反射作用，且此物体的<u>光谱吸收率</u>与<u>光谱反射率</u>之和<u>恒等于1</u>\n\n2. 黑体辐射定律\n\n   1. 辐射通量密度随温度增加而迅速增加，每条曲线只有一个最大值\n\n      > 红外装置测定温度的理论基础\n\n   2. 随着温度的升高，辐射峰值波长向短波方向移动\n\n      > 维恩位移定律，常用于选择传感器和最佳的遥感波段\n\n   3. 温度越高辐射通量密度也越高，每条曲线彼此不相交\n\n   4. 黑体微波波段的辐射亮度与温度成正比，与波长的平方成反比\n\n### 太阳辐射对大气对辐射影响\n\n#### 太阳辐射\n\n太阳常数\n\n> 指不受不受大气影响，在距太阳一个天文单位内，垂 直于太阳光辐射方向上，单位面积单位时间黑体所接收 的太阳辐射能量\n\n太阳光谱\n\n+ 太阳辐射的光谱是**<u>连续的</u>**\n+ 太阳辐射特性与绝对黑体的辐射特性基本一致\n+ 从近紫外到中红外这一波段区间能力最**集中**而且相对**稳定**；被动遥感主要利用**可见光、红外**等稳定辐射\n+ 在X射线、射线、远紫外及微波波段，能量小，变化大\n+ 大气层对太阳辐射的吸收、反射和散射\n\n#### 大气对辐射的影响\n\n1. 散射、吸收\n\n+ 大气<u>*散射*</u>集中在太阳辐射的<u>*可见光波段*</u>，<u>太阳辐射衰减主要原因</u>\n+ 大气<u>吸收</u>的影响主要是造成遥感**影像暗淡**，由于大气对**紫外线**有很强的**吸收**作用，遥感**很少用到紫外**波段\n\n2. 瑞利散射\n\n+ 大气中粒子的直径远小于入射电磁波波长\n+ 瑞利散射对可见光影响较大，对红外辐射的影响较小，对微波的影响可以不计(多波段不使用蓝紫光原因)\n+ 主要发生在可见光和近红外波段\n\n3. 米氏散射\n\n+ 大气中不均匀颗粒直径与入射波长同数量级\n\n+ 云、雾的粒子大小与红外线的波长接近\n\n3. 均匀散射\n\n+ 不均匀颗粒直径远远大于入射波长\n\n#### 大气窗口\n\n大气窗口是指通过大气后衰减较小，透过率较高的电磁辐射波段\n\n大气屏障是指透过率很小，甚至完全无法透过电磁波的波段\n\n### 一般物体的发射辐射\n\n1. 发射辐射\n\n自然界中<u>实际物体</u>的<u>发射</u>和<u>吸收</u>的辐射量都比相同条件下<u>绝对黑体低</u>。发射率$\\epsilon=\\frac{W~'}{W}$就是<u>实际物体</u>与<u>同温度的黑体</u>相同条件下<u>辐射功率之比</u>\n\n依据光谱发射率随波长的变化形式，将实际物体分为两类：一类是**选择性辐射体**，在**各波长的光谱发射率不同**；另一类是**灰体**，在各波长处的光谱发射率相等\n\n按照发射率与波长的关系，可把地物分为\n\n+ 黑体或绝对黑体：发射率为1，常数\n+ 灰体，发射率小于1，常数\n+ 选择性辐射体，发射率小于1，且随波长而变化\n+ 理想反射体(绝对白体)：发射率为0\n\n2. 基尔霍夫定律\n\n在一定温度下，物体的辐射出射度和吸收率 之比，对于任何物体都是一个常数，并等于该温 度下同面积黑体的辐射出射度\n$$\n\\epsilon=\\alpha\n$$\n\n<div class=\"danger\">\n\n> 该式说明任何物体的<u>**发射率=吸收率**</u>；吸收率越大，发射率也越大。如果不吸收某些波长的电磁波，也不发射该波长的电磁波\n\n</div>\n\n3. 影响地物发射率的因素\n\n地物的性质、表面状况、 温度（比热、热惯量），还与波长有关\n\n## 地物的反射辐射\n\n#### 地物的反射类别\n\n镜面反射、漫反射、方向反射\n\n#### 反射率与反射波谱\n\n1. 反射率\n\n> 反射率是物体的**反射辐射通量与入射辐射通量**之比。不同地物反射率不同，与物体本身的性质、入射波长、入射角度有关\n\n2. 反射波谱\n\n> 地物的反射率随入射波长变化的规律\n\n> 反射波谱特性曲线：以<u>波长为横坐标</u>，<u>反射率为纵坐标</u>所得的曲线\n\n地物电磁波光谱特征的差异是遥感识别地物性质的基本原理\n\n#### 反射特性曲线应用\n\n##### 同一地物的反射波谱特性\n\n地物的光谱特性一般随时间季节变化，这称之为<u>时间效应</u>；不同地理区域的同种地物具有不同的光谱响应，这称之为<u>空间效应</u>\n\n##### 不同地物的反射波谱特性\n\n1. 道路、建筑物\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211203223120.png)\n\n1. 水体\n\n水体的反射主要在<u>蓝绿光</u>波段，其他波段吸收都很 强，特别到了近红外波段,吸收就更强。水中不同物质的含量影响水体的波谱曲线\n\n3. 土壤\n\n土壤反射波谱曲线呈比 较平滑的特征，**没有明显的峰值**和**谷值**。土壤中的**含水量**和**组分浓度**影响土壤的波谱曲线\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211203223519.png)\n\n4. 植被\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211203223942.png)\n\n#### 影响地物反射波谱的因素\n\n除地物本身的因素外，以下因素会影响地物反射波谱曲线\n\n+ 太阳位置：太阳高度角与方位角 \n+ 传感器位置：观测角与方位角 \n+ 不同的地理位置：海拔高度、地理景观 \n+ 大气状况 \n+ 季节、气候变化\n\n#### 地物波谱特性\n\n地物波谱也称<u>地物光谱</u>。地物波谱特性是指各种地物各自所具有的电磁波特性(发射辐射、反射辐射)\n\n遥感图像的三大信息内容\n\n> 波谱信息、空间信息、时间信息\n\n测量地物的反射波谱特性曲线作用\n\n+ 选择遥感波谱段、设计遥感仪器的依据\n+ 外业测量中，是选择合适的飞行时间的基础资料\n+ 有效进行遥感图像数字处理的前提之一，是用户判断、识别、分析遥感影像的基础","source":"_posts/遥感认识.md","raw":"---\ntitle: 遥感认识\ndate: 2021-12-03 14:42:19\ntags: 遥感\ncategories:\nmathjax: true\ndescription: 遥感基本概念\n---\n## 遥感基本概念\n\n### 遥感的定义\n\n### 遥感平台\n\n地面平台、航空平台、航天平台\n\n### 传感器/遥感器\n\n接收、记录目标物反射或发射电磁波特征的仪器。如扫描仪、雷达、摄影机、摄像机、辐射计\n\n### 遥感技术系统\n\n### 遥感的分类\n\n1. 按照遥感的工作平台分类\n\n   > 地面遥感、航空遥感、航天遥感\n\n2. 按照探测电磁波的工作波段分类\n\n   > 紫外遥感、可见光遥感、红外遥感、微波遥感、多波段遥感\n\n3. 按照遥感应用的目的分类\n\n   > 外层空间遥感、大气、陆地、海洋遥感\n\n4. 按照资料的记录方式\n\n   > 成像方式、非成像方式\n\n5. 按照传感器工作方式分类\n\n   > <a href=\"主动遥感\">主动遥感</a>、<a href=\"被动遥感\">被动遥感</a>\n\n+ <span id=\"主动遥感\">主动遥感</span>\n\n  传感器<u>*本身主动发射*</u>人工探测信号，这些信息与目标对象相互作用后一部分<u>被反射回来</u>，又被传感器所接收，依靠这种信息进行的遥感是主动遥感\n\n+ <span id=\"被动遥感\">被动遥感</span>\n\n  传感器本身<u>*不发射*</u>任何人工探测信号，只能被动地接收从目标对象返回的电磁波信息进行遥感\n\n6. 按应用领域分类\n\n   资源遥感、环境遥感、林业遥感、渔业遥感、城市遥感、农业遥感、水利遥感、地质遥感、军事遥感\n\n7. 按资源类型分类\n\n   土地资源、矿产资源、生物资源、海洋资源、水资源\n\n### 遥感的特点\n\n大面积同步观测、时效性与动态性、多波段性、综合性与可比性、经济性、局限性\n\n### 遥感的主要任务\n\n## 电磁波与电磁波谱\n\n1. 电磁波(横波)\n\n+ 波动性\n\n  干涉、衍射、偏振\n\n+ 粒子性\n\n2. 电磁波谱\n\n![电磁波谱图](https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160650.jpeg)\n\n## 物体的发射辐射\n\n### 黑体辐射\n\n1. 绝对黑体\n\n> <u>**对任何波长**</u>的电磁辐射<u>**全部吸收**</u>的物体。即对任何波长的辐射，反射率和透射率都等于0。也叫完全辐射体\n\n> 一个不透明的物体对入射到它什么的电磁波只有吸收和反射作用，且此物体的<u>光谱吸收率</u>与<u>光谱反射率</u>之和<u>恒等于1</u>\n\n2. 黑体辐射定律\n\n   1. 辐射通量密度随温度增加而迅速增加，每条曲线只有一个最大值\n\n      > 红外装置测定温度的理论基础\n\n   2. 随着温度的升高，辐射峰值波长向短波方向移动\n\n      > 维恩位移定律，常用于选择传感器和最佳的遥感波段\n\n   3. 温度越高辐射通量密度也越高，每条曲线彼此不相交\n\n   4. 黑体微波波段的辐射亮度与温度成正比，与波长的平方成反比\n\n### 太阳辐射对大气对辐射影响\n\n#### 太阳辐射\n\n太阳常数\n\n> 指不受不受大气影响，在距太阳一个天文单位内，垂 直于太阳光辐射方向上，单位面积单位时间黑体所接收 的太阳辐射能量\n\n太阳光谱\n\n+ 太阳辐射的光谱是**<u>连续的</u>**\n+ 太阳辐射特性与绝对黑体的辐射特性基本一致\n+ 从近紫外到中红外这一波段区间能力最**集中**而且相对**稳定**；被动遥感主要利用**可见光、红外**等稳定辐射\n+ 在X射线、射线、远紫外及微波波段，能量小，变化大\n+ 大气层对太阳辐射的吸收、反射和散射\n\n#### 大气对辐射的影响\n\n1. 散射、吸收\n\n+ 大气<u>*散射*</u>集中在太阳辐射的<u>*可见光波段*</u>，<u>太阳辐射衰减主要原因</u>\n+ 大气<u>吸收</u>的影响主要是造成遥感**影像暗淡**，由于大气对**紫外线**有很强的**吸收**作用，遥感**很少用到紫外**波段\n\n2. 瑞利散射\n\n+ 大气中粒子的直径远小于入射电磁波波长\n+ 瑞利散射对可见光影响较大，对红外辐射的影响较小，对微波的影响可以不计(多波段不使用蓝紫光原因)\n+ 主要发生在可见光和近红外波段\n\n3. 米氏散射\n\n+ 大气中不均匀颗粒直径与入射波长同数量级\n\n+ 云、雾的粒子大小与红外线的波长接近\n\n3. 均匀散射\n\n+ 不均匀颗粒直径远远大于入射波长\n\n#### 大气窗口\n\n大气窗口是指通过大气后衰减较小，透过率较高的电磁辐射波段\n\n大气屏障是指透过率很小，甚至完全无法透过电磁波的波段\n\n### 一般物体的发射辐射\n\n1. 发射辐射\n\n自然界中<u>实际物体</u>的<u>发射</u>和<u>吸收</u>的辐射量都比相同条件下<u>绝对黑体低</u>。发射率$\\epsilon=\\frac{W~'}{W}$就是<u>实际物体</u>与<u>同温度的黑体</u>相同条件下<u>辐射功率之比</u>\n\n依据光谱发射率随波长的变化形式，将实际物体分为两类：一类是**选择性辐射体**，在**各波长的光谱发射率不同**；另一类是**灰体**，在各波长处的光谱发射率相等\n\n按照发射率与波长的关系，可把地物分为\n\n+ 黑体或绝对黑体：发射率为1，常数\n+ 灰体，发射率小于1，常数\n+ 选择性辐射体，发射率小于1，且随波长而变化\n+ 理想反射体(绝对白体)：发射率为0\n\n2. 基尔霍夫定律\n\n在一定温度下，物体的辐射出射度和吸收率 之比，对于任何物体都是一个常数，并等于该温 度下同面积黑体的辐射出射度\n$$\n\\epsilon=\\alpha\n$$\n\n<div class=\"danger\">\n\n> 该式说明任何物体的<u>**发射率=吸收率**</u>；吸收率越大，发射率也越大。如果不吸收某些波长的电磁波，也不发射该波长的电磁波\n\n</div>\n\n3. 影响地物发射率的因素\n\n地物的性质、表面状况、 温度（比热、热惯量），还与波长有关\n\n## 地物的反射辐射\n\n#### 地物的反射类别\n\n镜面反射、漫反射、方向反射\n\n#### 反射率与反射波谱\n\n1. 反射率\n\n> 反射率是物体的**反射辐射通量与入射辐射通量**之比。不同地物反射率不同，与物体本身的性质、入射波长、入射角度有关\n\n2. 反射波谱\n\n> 地物的反射率随入射波长变化的规律\n\n> 反射波谱特性曲线：以<u>波长为横坐标</u>，<u>反射率为纵坐标</u>所得的曲线\n\n地物电磁波光谱特征的差异是遥感识别地物性质的基本原理\n\n#### 反射特性曲线应用\n\n##### 同一地物的反射波谱特性\n\n地物的光谱特性一般随时间季节变化，这称之为<u>时间效应</u>；不同地理区域的同种地物具有不同的光谱响应，这称之为<u>空间效应</u>\n\n##### 不同地物的反射波谱特性\n\n1. 道路、建筑物\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211203223120.png)\n\n1. 水体\n\n水体的反射主要在<u>蓝绿光</u>波段，其他波段吸收都很 强，特别到了近红外波段,吸收就更强。水中不同物质的含量影响水体的波谱曲线\n\n3. 土壤\n\n土壤反射波谱曲线呈比 较平滑的特征，**没有明显的峰值**和**谷值**。土壤中的**含水量**和**组分浓度**影响土壤的波谱曲线\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211203223519.png)\n\n4. 植被\n\n![](https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211203223942.png)\n\n#### 影响地物反射波谱的因素\n\n除地物本身的因素外，以下因素会影响地物反射波谱曲线\n\n+ 太阳位置：太阳高度角与方位角 \n+ 传感器位置：观测角与方位角 \n+ 不同的地理位置：海拔高度、地理景观 \n+ 大气状况 \n+ 季节、气候变化\n\n#### 地物波谱特性\n\n地物波谱也称<u>地物光谱</u>。地物波谱特性是指各种地物各自所具有的电磁波特性(发射辐射、反射辐射)\n\n遥感图像的三大信息内容\n\n> 波谱信息、空间信息、时间信息\n\n测量地物的反射波谱特性曲线作用\n\n+ 选择遥感波谱段、设计遥感仪器的依据\n+ 外业测量中，是选择合适的飞行时间的基础资料\n+ 有效进行遥感图像数字处理的前提之一，是用户判断、识别、分析遥感影像的基础","slug":"遥感认识","published":1,"updated":"2021-12-29T12:28:50.791Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6mrt4h0059jsvk5n6cf57i","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"遥感基本概念\"><a href=\"#遥感基本概念\" class=\"headerlink\" title=\"遥感基本概念\"></a>遥感基本概念</h2><h3 id=\"遥感的定义\"><a href=\"#遥感的定义\" class=\"headerlink\" title=\"遥感的定义\"></a>遥感的定义</h3><h3 id=\"遥感平台\"><a href=\"#遥感平台\" class=\"headerlink\" title=\"遥感平台\"></a>遥感平台</h3><p>地面平台、航空平台、航天平台</p>\n<h3 id=\"传感器-遥感器\"><a href=\"#传感器-遥感器\" class=\"headerlink\" title=\"传感器/遥感器\"></a>传感器/遥感器</h3><p>接收、记录目标物反射或发射电磁波特征的仪器。如扫描仪、雷达、摄影机、摄像机、辐射计</p>\n<h3 id=\"遥感技术系统\"><a href=\"#遥感技术系统\" class=\"headerlink\" title=\"遥感技术系统\"></a>遥感技术系统</h3><h3 id=\"遥感的分类\"><a href=\"#遥感的分类\" class=\"headerlink\" title=\"遥感的分类\"></a>遥感的分类</h3><ol>\n<li><p>按照遥感的工作平台分类</p>\n<blockquote>\n<p>地面遥感、航空遥感、航天遥感</p>\n</blockquote>\n</li>\n<li><p>按照探测电磁波的工作波段分类</p>\n<blockquote>\n<p>紫外遥感、可见光遥感、红外遥感、微波遥感、多波段遥感</p>\n</blockquote>\n</li>\n<li><p>按照遥感应用的目的分类</p>\n<blockquote>\n<p>外层空间遥感、大气、陆地、海洋遥感</p>\n</blockquote>\n</li>\n<li><p>按照资料的记录方式</p>\n<blockquote>\n<p>成像方式、非成像方式</p>\n</blockquote>\n</li>\n<li><p>按照传感器工作方式分类</p>\n<blockquote>\n<p><a href=\"主动遥感\">主动遥感</a>、<a href=\"被动遥感\">被动遥感</a></p>\n</blockquote>\n</li>\n</ol>\n<ul>\n<li><p><span id=\"主动遥感\">主动遥感</span></p>\n<p>传感器<u><em>本身主动发射</em></u>人工探测信号，这些信息与目标对象相互作用后一部分<u>被反射回来</u>，又被传感器所接收，依靠这种信息进行的遥感是主动遥感</p>\n</li>\n<li><p><span id=\"被动遥感\">被动遥感</span></p>\n<p>传感器本身<u><em>不发射</em></u>任何人工探测信号，只能被动地接收从目标对象返回的电磁波信息进行遥感</p>\n</li>\n</ul>\n<ol>\n<li><p>按应用领域分类</p>\n<p>资源遥感、环境遥感、林业遥感、渔业遥感、城市遥感、农业遥感、水利遥感、地质遥感、军事遥感</p>\n</li>\n<li><p>按资源类型分类</p>\n<p>土地资源、矿产资源、生物资源、海洋资源、水资源</p>\n</li>\n</ol>\n<h3 id=\"遥感的特点\"><a href=\"#遥感的特点\" class=\"headerlink\" title=\"遥感的特点\"></a>遥感的特点</h3><p>大面积同步观测、时效性与动态性、多波段性、综合性与可比性、经济性、局限性</p>\n<h3 id=\"遥感的主要任务\"><a href=\"#遥感的主要任务\" class=\"headerlink\" title=\"遥感的主要任务\"></a>遥感的主要任务</h3><h2 id=\"电磁波与电磁波谱\"><a href=\"#电磁波与电磁波谱\" class=\"headerlink\" title=\"电磁波与电磁波谱\"></a>电磁波与电磁波谱</h2><ol>\n<li>电磁波(横波)</li>\n</ol>\n<ul>\n<li><p>波动性</p>\n<p>干涉、衍射、偏振</p>\n</li>\n<li><p>粒子性</p>\n</li>\n</ul>\n<ol>\n<li>电磁波谱</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160650.jpeg\" alt=\"电磁波谱图\"></p>\n<h2 id=\"物体的发射辐射\"><a href=\"#物体的发射辐射\" class=\"headerlink\" title=\"物体的发射辐射\"></a>物体的发射辐射</h2><h3 id=\"黑体辐射\"><a href=\"#黑体辐射\" class=\"headerlink\" title=\"黑体辐射\"></a>黑体辐射</h3><ol>\n<li>绝对黑体</li>\n</ol>\n<blockquote>\n<p><u><strong>对任何波长</strong></u>的电磁辐射<u><strong>全部吸收</strong></u>的物体。即对任何波长的辐射，反射率和透射率都等于0。也叫完全辐射体</p>\n<p>一个不透明的物体对入射到它什么的电磁波只有吸收和反射作用，且此物体的<u>光谱吸收率</u>与<u>光谱反射率</u>之和<u>恒等于1</u></p>\n</blockquote>\n<ol>\n<li><p>黑体辐射定律</p>\n<ol>\n<li><p>辐射通量密度随温度增加而迅速增加，每条曲线只有一个最大值</p>\n<blockquote>\n<p>红外装置测定温度的理论基础</p>\n</blockquote>\n</li>\n<li><p>随着温度的升高，辐射峰值波长向短波方向移动</p>\n<blockquote>\n<p>维恩位移定律，常用于选择传感器和最佳的遥感波段</p>\n</blockquote>\n</li>\n<li><p>温度越高辐射通量密度也越高，每条曲线彼此不相交</p>\n</li>\n<li><p>黑体微波波段的辐射亮度与温度成正比，与波长的平方成反比</p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"太阳辐射对大气对辐射影响\"><a href=\"#太阳辐射对大气对辐射影响\" class=\"headerlink\" title=\"太阳辐射对大气对辐射影响\"></a>太阳辐射对大气对辐射影响</h3><h4 id=\"太阳辐射\"><a href=\"#太阳辐射\" class=\"headerlink\" title=\"太阳辐射\"></a>太阳辐射</h4><p>太阳常数</p>\n<blockquote>\n<p>指不受不受大气影响，在距太阳一个天文单位内，垂 直于太阳光辐射方向上，单位面积单位时间黑体所接收 的太阳辐射能量</p>\n</blockquote>\n<p>太阳光谱</p>\n<ul>\n<li>太阳辐射的光谱是<strong><u>连续的</u></strong></li>\n<li>太阳辐射特性与绝对黑体的辐射特性基本一致</li>\n<li>从近紫外到中红外这一波段区间能力最<strong>集中</strong>而且相对<strong>稳定</strong>；被动遥感主要利用<strong>可见光、红外</strong>等稳定辐射</li>\n<li>在X射线、射线、远紫外及微波波段，能量小，变化大</li>\n<li>大气层对太阳辐射的吸收、反射和散射</li>\n</ul>\n<h4 id=\"大气对辐射的影响\"><a href=\"#大气对辐射的影响\" class=\"headerlink\" title=\"大气对辐射的影响\"></a>大气对辐射的影响</h4><ol>\n<li>散射、吸收</li>\n</ol>\n<ul>\n<li>大气<u><em>散射</em></u>集中在太阳辐射的<u><em>可见光波段</em></u>，<u>太阳辐射衰减主要原因</u></li>\n<li>大气<u>吸收</u>的影响主要是造成遥感<strong>影像暗淡</strong>，由于大气对<strong>紫外线</strong>有很强的<strong>吸收</strong>作用，遥感<strong>很少用到紫外</strong>波段</li>\n</ul>\n<ol>\n<li>瑞利散射</li>\n</ol>\n<ul>\n<li>大气中粒子的直径远小于入射电磁波波长</li>\n<li>瑞利散射对可见光影响较大，对红外辐射的影响较小，对微波的影响可以不计(多波段不使用蓝紫光原因)</li>\n<li>主要发生在可见光和近红外波段</li>\n</ul>\n<ol>\n<li>米氏散射</li>\n</ol>\n<ul>\n<li><p>大气中不均匀颗粒直径与入射波长同数量级</p>\n</li>\n<li><p>云、雾的粒子大小与红外线的波长接近</p>\n</li>\n</ul>\n<ol>\n<li>均匀散射</li>\n</ol>\n<ul>\n<li>不均匀颗粒直径远远大于入射波长</li>\n</ul>\n<h4 id=\"大气窗口\"><a href=\"#大气窗口\" class=\"headerlink\" title=\"大气窗口\"></a>大气窗口</h4><p>大气窗口是指通过大气后衰减较小，透过率较高的电磁辐射波段</p>\n<p>大气屏障是指透过率很小，甚至完全无法透过电磁波的波段</p>\n<h3 id=\"一般物体的发射辐射\"><a href=\"#一般物体的发射辐射\" class=\"headerlink\" title=\"一般物体的发射辐射\"></a>一般物体的发射辐射</h3><ol>\n<li>发射辐射</li>\n</ol>\n<p>自然界中<u>实际物体</u>的<u>发射</u>和<u>吸收</u>的辐射量都比相同条件下<u>绝对黑体低</u>。发射率<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.816ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.452ex\" height=\"2.921ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -930.7 3293.6 1291.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D716\" d=\"M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(683.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(1739.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,394) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(1048,0)\"><g data-mml-node=\"mtext\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mo\" transform=\"translate(283,363) scale(0.707)\"><path data-c=\"2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path></g></g></g><g data-mml-node=\"mi\" transform=\"translate(406.5,-345) scale(0.707)\"><path data-c=\"1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></g><rect width=\"1314\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container>就是<u>实际物体</u>与<u>同温度的黑体</u>相同条件下<u>辐射功率之比</u></p>\n<p>依据光谱发射率随波长的变化形式，将实际物体分为两类：一类是<strong>选择性辐射体</strong>，在<strong>各波长的光谱发射率不同</strong>；另一类是<strong>灰体</strong>，在各波长处的光谱发射率相等</p>\n<p>按照发射率与波长的关系，可把地物分为</p>\n<ul>\n<li>黑体或绝对黑体：发射率为1，常数</li>\n<li>灰体，发射率小于1，常数</li>\n<li>选择性辐射体，发射率小于1，且随波长而变化</li>\n<li>理想反射体(绝对白体)：发射率为0</li>\n</ul>\n<ol>\n<li>基尔霍夫定律</li>\n</ol>\n<p>在一定温度下，物体的辐射出射度和吸收率 之比，对于任何物体都是一个常数，并等于该温 度下同面积黑体的辐射出射度</p>\n<script type=\"math/tex; mode=display\">\n\\epsilon=\\alpha</script><div class=\"danger\">\n\n&gt; 该式说明任何物体的<u>**发射率=吸收率**</u>；吸收率越大，发射率也越大。如果不吸收某些波长的电磁波，也不发射该波长的电磁波\n\n</div>\n\n<ol>\n<li>影响地物发射率的因素</li>\n</ol>\n<p>地物的性质、表面状况、 温度（比热、热惯量），还与波长有关</p>\n<h2 id=\"地物的反射辐射\"><a href=\"#地物的反射辐射\" class=\"headerlink\" title=\"地物的反射辐射\"></a>地物的反射辐射</h2><h4 id=\"地物的反射类别\"><a href=\"#地物的反射类别\" class=\"headerlink\" title=\"地物的反射类别\"></a>地物的反射类别</h4><p>镜面反射、漫反射、方向反射</p>\n<h4 id=\"反射率与反射波谱\"><a href=\"#反射率与反射波谱\" class=\"headerlink\" title=\"反射率与反射波谱\"></a>反射率与反射波谱</h4><ol>\n<li>反射率</li>\n</ol>\n<blockquote>\n<p>反射率是物体的<strong>反射辐射通量与入射辐射通量</strong>之比。不同地物反射率不同，与物体本身的性质、入射波长、入射角度有关</p>\n</blockquote>\n<ol>\n<li>反射波谱</li>\n</ol>\n<blockquote>\n<p>地物的反射率随入射波长变化的规律</p>\n<p>反射波谱特性曲线：以<u>波长为横坐标</u>，<u>反射率为纵坐标</u>所得的曲线</p>\n</blockquote>\n<p>地物电磁波光谱特征的差异是遥感识别地物性质的基本原理</p>\n<h4 id=\"反射特性曲线应用\"><a href=\"#反射特性曲线应用\" class=\"headerlink\" title=\"反射特性曲线应用\"></a>反射特性曲线应用</h4><h5 id=\"同一地物的反射波谱特性\"><a href=\"#同一地物的反射波谱特性\" class=\"headerlink\" title=\"同一地物的反射波谱特性\"></a>同一地物的反射波谱特性</h5><p>地物的光谱特性一般随时间季节变化，这称之为<u>时间效应</u>；不同地理区域的同种地物具有不同的光谱响应，这称之为<u>空间效应</u></p>\n<h5 id=\"不同地物的反射波谱特性\"><a href=\"#不同地物的反射波谱特性\" class=\"headerlink\" title=\"不同地物的反射波谱特性\"></a>不同地物的反射波谱特性</h5><ol>\n<li>道路、建筑物</li>\n</ol>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211203223120.png\" alt=\"\"></p>\n<ol>\n<li>水体</li>\n</ol>\n<p>水体的反射主要在<u>蓝绿光</u>波段，其他波段吸收都很 强，特别到了近红外波段,吸收就更强。水中不同物质的含量影响水体的波谱曲线</p>\n<ol>\n<li>土壤</li>\n</ol>\n<p>土壤反射波谱曲线呈比 较平滑的特征，<strong>没有明显的峰值</strong>和<strong>谷值</strong>。土壤中的<strong>含水量</strong>和<strong>组分浓度</strong>影响土壤的波谱曲线</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211203223519.png\" alt=\"\"></p>\n<ol>\n<li>植被</li>\n</ol>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211203223942.png\" alt=\"\"></p>\n<h4 id=\"影响地物反射波谱的因素\"><a href=\"#影响地物反射波谱的因素\" class=\"headerlink\" title=\"影响地物反射波谱的因素\"></a>影响地物反射波谱的因素</h4><p>除地物本身的因素外，以下因素会影响地物反射波谱曲线</p>\n<ul>\n<li>太阳位置：太阳高度角与方位角 </li>\n<li>传感器位置：观测角与方位角 </li>\n<li>不同的地理位置：海拔高度、地理景观 </li>\n<li>大气状况 </li>\n<li>季节、气候变化</li>\n</ul>\n<h4 id=\"地物波谱特性\"><a href=\"#地物波谱特性\" class=\"headerlink\" title=\"地物波谱特性\"></a>地物波谱特性</h4><p>地物波谱也称<u>地物光谱</u>。地物波谱特性是指各种地物各自所具有的电磁波特性(发射辐射、反射辐射)</p>\n<p>遥感图像的三大信息内容</p>\n<blockquote>\n<p>波谱信息、空间信息、时间信息</p>\n</blockquote>\n<p>测量地物的反射波谱特性曲线作用</p>\n<ul>\n<li>选择遥感波谱段、设计遥感仪器的依据</li>\n<li>外业测量中，是选择合适的飞行时间的基础资料</li>\n<li>有效进行遥感图像数字处理的前提之一，是用户判断、识别、分析遥感影像的基础</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160701.webp","length":2277,"excerpt":"","more":"<h2 id=\"遥感基本概念\"><a href=\"#遥感基本概念\" class=\"headerlink\" title=\"遥感基本概念\"></a>遥感基本概念</h2><h3 id=\"遥感的定义\"><a href=\"#遥感的定义\" class=\"headerlink\" title=\"遥感的定义\"></a>遥感的定义</h3><h3 id=\"遥感平台\"><a href=\"#遥感平台\" class=\"headerlink\" title=\"遥感平台\"></a>遥感平台</h3><p>地面平台、航空平台、航天平台</p>\n<h3 id=\"传感器-遥感器\"><a href=\"#传感器-遥感器\" class=\"headerlink\" title=\"传感器/遥感器\"></a>传感器/遥感器</h3><p>接收、记录目标物反射或发射电磁波特征的仪器。如扫描仪、雷达、摄影机、摄像机、辐射计</p>\n<h3 id=\"遥感技术系统\"><a href=\"#遥感技术系统\" class=\"headerlink\" title=\"遥感技术系统\"></a>遥感技术系统</h3><h3 id=\"遥感的分类\"><a href=\"#遥感的分类\" class=\"headerlink\" title=\"遥感的分类\"></a>遥感的分类</h3><ol>\n<li><p>按照遥感的工作平台分类</p>\n<blockquote>\n<p>地面遥感、航空遥感、航天遥感</p>\n</blockquote>\n</li>\n<li><p>按照探测电磁波的工作波段分类</p>\n<blockquote>\n<p>紫外遥感、可见光遥感、红外遥感、微波遥感、多波段遥感</p>\n</blockquote>\n</li>\n<li><p>按照遥感应用的目的分类</p>\n<blockquote>\n<p>外层空间遥感、大气、陆地、海洋遥感</p>\n</blockquote>\n</li>\n<li><p>按照资料的记录方式</p>\n<blockquote>\n<p>成像方式、非成像方式</p>\n</blockquote>\n</li>\n<li><p>按照传感器工作方式分类</p>\n<blockquote>\n<p><a href=\"主动遥感\">主动遥感</a>、<a href=\"被动遥感\">被动遥感</a></p>\n</blockquote>\n</li>\n</ol>\n<ul>\n<li><p><span id=\"主动遥感\">主动遥感</span></p>\n<p>传感器<u><em>本身主动发射</em></u>人工探测信号，这些信息与目标对象相互作用后一部分<u>被反射回来</u>，又被传感器所接收，依靠这种信息进行的遥感是主动遥感</p>\n</li>\n<li><p><span id=\"被动遥感\">被动遥感</span></p>\n<p>传感器本身<u><em>不发射</em></u>任何人工探测信号，只能被动地接收从目标对象返回的电磁波信息进行遥感</p>\n</li>\n</ul>\n<ol>\n<li><p>按应用领域分类</p>\n<p>资源遥感、环境遥感、林业遥感、渔业遥感、城市遥感、农业遥感、水利遥感、地质遥感、军事遥感</p>\n</li>\n<li><p>按资源类型分类</p>\n<p>土地资源、矿产资源、生物资源、海洋资源、水资源</p>\n</li>\n</ol>\n<h3 id=\"遥感的特点\"><a href=\"#遥感的特点\" class=\"headerlink\" title=\"遥感的特点\"></a>遥感的特点</h3><p>大面积同步观测、时效性与动态性、多波段性、综合性与可比性、经济性、局限性</p>\n<h3 id=\"遥感的主要任务\"><a href=\"#遥感的主要任务\" class=\"headerlink\" title=\"遥感的主要任务\"></a>遥感的主要任务</h3><h2 id=\"电磁波与电磁波谱\"><a href=\"#电磁波与电磁波谱\" class=\"headerlink\" title=\"电磁波与电磁波谱\"></a>电磁波与电磁波谱</h2><ol>\n<li>电磁波(横波)</li>\n</ol>\n<ul>\n<li><p>波动性</p>\n<p>干涉、衍射、偏振</p>\n</li>\n<li><p>粒子性</p>\n</li>\n</ul>\n<ol>\n<li>电磁波谱</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160650.jpeg\" alt=\"电磁波谱图\"></p>\n<h2 id=\"物体的发射辐射\"><a href=\"#物体的发射辐射\" class=\"headerlink\" title=\"物体的发射辐射\"></a>物体的发射辐射</h2><h3 id=\"黑体辐射\"><a href=\"#黑体辐射\" class=\"headerlink\" title=\"黑体辐射\"></a>黑体辐射</h3><ol>\n<li>绝对黑体</li>\n</ol>\n<blockquote>\n<p><u><strong>对任何波长</strong></u>的电磁辐射<u><strong>全部吸收</strong></u>的物体。即对任何波长的辐射，反射率和透射率都等于0。也叫完全辐射体</p>\n<p>一个不透明的物体对入射到它什么的电磁波只有吸收和反射作用，且此物体的<u>光谱吸收率</u>与<u>光谱反射率</u>之和<u>恒等于1</u></p>\n</blockquote>\n<ol>\n<li><p>黑体辐射定律</p>\n<ol>\n<li><p>辐射通量密度随温度增加而迅速增加，每条曲线只有一个最大值</p>\n<blockquote>\n<p>红外装置测定温度的理论基础</p>\n</blockquote>\n</li>\n<li><p>随着温度的升高，辐射峰值波长向短波方向移动</p>\n<blockquote>\n<p>维恩位移定律，常用于选择传感器和最佳的遥感波段</p>\n</blockquote>\n</li>\n<li><p>温度越高辐射通量密度也越高，每条曲线彼此不相交</p>\n</li>\n<li><p>黑体微波波段的辐射亮度与温度成正比，与波长的平方成反比</p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"太阳辐射对大气对辐射影响\"><a href=\"#太阳辐射对大气对辐射影响\" class=\"headerlink\" title=\"太阳辐射对大气对辐射影响\"></a>太阳辐射对大气对辐射影响</h3><h4 id=\"太阳辐射\"><a href=\"#太阳辐射\" class=\"headerlink\" title=\"太阳辐射\"></a>太阳辐射</h4><p>太阳常数</p>\n<blockquote>\n<p>指不受不受大气影响，在距太阳一个天文单位内，垂 直于太阳光辐射方向上，单位面积单位时间黑体所接收 的太阳辐射能量</p>\n</blockquote>\n<p>太阳光谱</p>\n<ul>\n<li>太阳辐射的光谱是<strong><u>连续的</u></strong></li>\n<li>太阳辐射特性与绝对黑体的辐射特性基本一致</li>\n<li>从近紫外到中红外这一波段区间能力最<strong>集中</strong>而且相对<strong>稳定</strong>；被动遥感主要利用<strong>可见光、红外</strong>等稳定辐射</li>\n<li>在X射线、射线、远紫外及微波波段，能量小，变化大</li>\n<li>大气层对太阳辐射的吸收、反射和散射</li>\n</ul>\n<h4 id=\"大气对辐射的影响\"><a href=\"#大气对辐射的影响\" class=\"headerlink\" title=\"大气对辐射的影响\"></a>大气对辐射的影响</h4><ol>\n<li>散射、吸收</li>\n</ol>\n<ul>\n<li>大气<u><em>散射</em></u>集中在太阳辐射的<u><em>可见光波段</em></u>，<u>太阳辐射衰减主要原因</u></li>\n<li>大气<u>吸收</u>的影响主要是造成遥感<strong>影像暗淡</strong>，由于大气对<strong>紫外线</strong>有很强的<strong>吸收</strong>作用，遥感<strong>很少用到紫外</strong>波段</li>\n</ul>\n<ol>\n<li>瑞利散射</li>\n</ol>\n<ul>\n<li>大气中粒子的直径远小于入射电磁波波长</li>\n<li>瑞利散射对可见光影响较大，对红外辐射的影响较小，对微波的影响可以不计(多波段不使用蓝紫光原因)</li>\n<li>主要发生在可见光和近红外波段</li>\n</ul>\n<ol>\n<li>米氏散射</li>\n</ol>\n<ul>\n<li><p>大气中不均匀颗粒直径与入射波长同数量级</p>\n</li>\n<li><p>云、雾的粒子大小与红外线的波长接近</p>\n</li>\n</ul>\n<ol>\n<li>均匀散射</li>\n</ol>\n<ul>\n<li>不均匀颗粒直径远远大于入射波长</li>\n</ul>\n<h4 id=\"大气窗口\"><a href=\"#大气窗口\" class=\"headerlink\" title=\"大气窗口\"></a>大气窗口</h4><p>大气窗口是指通过大气后衰减较小，透过率较高的电磁辐射波段</p>\n<p>大气屏障是指透过率很小，甚至完全无法透过电磁波的波段</p>\n<h3 id=\"一般物体的发射辐射\"><a href=\"#一般物体的发射辐射\" class=\"headerlink\" title=\"一般物体的发射辐射\"></a>一般物体的发射辐射</h3><ol>\n<li>发射辐射</li>\n</ol>\n<p>自然界中<u>实际物体</u>的<u>发射</u>和<u>吸收</u>的辐射量都比相同条件下<u>绝对黑体低</u>。发射率<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.816ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.452ex\" height=\"2.921ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -930.7 3293.6 1291.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D716\" d=\"M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(683.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(1739.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,394) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(1048,0)\"><g data-mml-node=\"mtext\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mo\" transform=\"translate(283,363) scale(0.707)\"><path data-c=\"2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path></g></g></g><g data-mml-node=\"mi\" transform=\"translate(406.5,-345) scale(0.707)\"><path data-c=\"1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></g><rect width=\"1314\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container>就是<u>实际物体</u>与<u>同温度的黑体</u>相同条件下<u>辐射功率之比</u></p>\n<p>依据光谱发射率随波长的变化形式，将实际物体分为两类：一类是<strong>选择性辐射体</strong>，在<strong>各波长的光谱发射率不同</strong>；另一类是<strong>灰体</strong>，在各波长处的光谱发射率相等</p>\n<p>按照发射率与波长的关系，可把地物分为</p>\n<ul>\n<li>黑体或绝对黑体：发射率为1，常数</li>\n<li>灰体，发射率小于1，常数</li>\n<li>选择性辐射体，发射率小于1，且随波长而变化</li>\n<li>理想反射体(绝对白体)：发射率为0</li>\n</ul>\n<ol>\n<li>基尔霍夫定律</li>\n</ol>\n<p>在一定温度下，物体的辐射出射度和吸收率 之比，对于任何物体都是一个常数，并等于该温 度下同面积黑体的辐射出射度</p>\n<script type=\"math/tex; mode=display\">\n\\epsilon=\\alpha</script><div class=\"danger\">\n\n&gt; 该式说明任何物体的<u>**发射率=吸收率**</u>；吸收率越大，发射率也越大。如果不吸收某些波长的电磁波，也不发射该波长的电磁波\n\n</div>\n\n<ol>\n<li>影响地物发射率的因素</li>\n</ol>\n<p>地物的性质、表面状况、 温度（比热、热惯量），还与波长有关</p>\n<h2 id=\"地物的反射辐射\"><a href=\"#地物的反射辐射\" class=\"headerlink\" title=\"地物的反射辐射\"></a>地物的反射辐射</h2><h4 id=\"地物的反射类别\"><a href=\"#地物的反射类别\" class=\"headerlink\" title=\"地物的反射类别\"></a>地物的反射类别</h4><p>镜面反射、漫反射、方向反射</p>\n<h4 id=\"反射率与反射波谱\"><a href=\"#反射率与反射波谱\" class=\"headerlink\" title=\"反射率与反射波谱\"></a>反射率与反射波谱</h4><ol>\n<li>反射率</li>\n</ol>\n<blockquote>\n<p>反射率是物体的<strong>反射辐射通量与入射辐射通量</strong>之比。不同地物反射率不同，与物体本身的性质、入射波长、入射角度有关</p>\n</blockquote>\n<ol>\n<li>反射波谱</li>\n</ol>\n<blockquote>\n<p>地物的反射率随入射波长变化的规律</p>\n<p>反射波谱特性曲线：以<u>波长为横坐标</u>，<u>反射率为纵坐标</u>所得的曲线</p>\n</blockquote>\n<p>地物电磁波光谱特征的差异是遥感识别地物性质的基本原理</p>\n<h4 id=\"反射特性曲线应用\"><a href=\"#反射特性曲线应用\" class=\"headerlink\" title=\"反射特性曲线应用\"></a>反射特性曲线应用</h4><h5 id=\"同一地物的反射波谱特性\"><a href=\"#同一地物的反射波谱特性\" class=\"headerlink\" title=\"同一地物的反射波谱特性\"></a>同一地物的反射波谱特性</h5><p>地物的光谱特性一般随时间季节变化，这称之为<u>时间效应</u>；不同地理区域的同种地物具有不同的光谱响应，这称之为<u>空间效应</u></p>\n<h5 id=\"不同地物的反射波谱特性\"><a href=\"#不同地物的反射波谱特性\" class=\"headerlink\" title=\"不同地物的反射波谱特性\"></a>不同地物的反射波谱特性</h5><ol>\n<li>道路、建筑物</li>\n</ol>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211203223120.png\" alt=\"\"></p>\n<ol>\n<li>水体</li>\n</ol>\n<p>水体的反射主要在<u>蓝绿光</u>波段，其他波段吸收都很 强，特别到了近红外波段,吸收就更强。水中不同物质的含量影响水体的波谱曲线</p>\n<ol>\n<li>土壤</li>\n</ol>\n<p>土壤反射波谱曲线呈比 较平滑的特征，<strong>没有明显的峰值</strong>和<strong>谷值</strong>。土壤中的<strong>含水量</strong>和<strong>组分浓度</strong>影响土壤的波谱曲线</p>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211203223519.png\" alt=\"\"></p>\n<ol>\n<li>植被</li>\n</ol>\n<p><img src=\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20211203223942.png\" alt=\"\"></p>\n<h4 id=\"影响地物反射波谱的因素\"><a href=\"#影响地物反射波谱的因素\" class=\"headerlink\" title=\"影响地物反射波谱的因素\"></a>影响地物反射波谱的因素</h4><p>除地物本身的因素外，以下因素会影响地物反射波谱曲线</p>\n<ul>\n<li>太阳位置：太阳高度角与方位角 </li>\n<li>传感器位置：观测角与方位角 </li>\n<li>不同的地理位置：海拔高度、地理景观 </li>\n<li>大气状况 </li>\n<li>季节、气候变化</li>\n</ul>\n<h4 id=\"地物波谱特性\"><a href=\"#地物波谱特性\" class=\"headerlink\" title=\"地物波谱特性\"></a>地物波谱特性</h4><p>地物波谱也称<u>地物光谱</u>。地物波谱特性是指各种地物各自所具有的电磁波特性(发射辐射、反射辐射)</p>\n<p>遥感图像的三大信息内容</p>\n<blockquote>\n<p>波谱信息、空间信息、时间信息</p>\n</blockquote>\n<p>测量地物的反射波谱特性曲线作用</p>\n<ul>\n<li>选择遥感波谱段、设计遥感仪器的依据</li>\n<li>外业测量中，是选择合适的飞行时间的基础资料</li>\n<li>有效进行遥感图像数字处理的前提之一，是用户判断、识别、分析遥感影像的基础</li>\n</ul>\n"},{"title":"React","mathjax":true,"date":"2022-11-18T00:53:45.000Z","description":null,"_content":"\n### react\n\n#### useState\n\n##### 语法\n\n1. `count`: 数据状态\n\n   `setCount`： 修改`count`的专有函数\n\n2. `useState`中的参数是作为**状态**`count`的初始值\n\n3. `[count,setCount]` 这里的写法是一个解构赋值`useState`返回值是一个数组\n\n   名字可以自定义\n\n   顺序不可调换\n\n首次渲染：\n\n1. 首次渲染的时候，组件内部的代码会被执行一次\n\n2. 首次渲染时会执行`useState`，初始化数据状态，且初始值只在首次渲染时生效\n\n更新渲染：\n\n1. 组件会被再次渲染，setCount会被再次执行\n\n2. useState 再次执行，得到新的状态`count`的值\n\n##### 示例\n\n###### 基础用法\n\n```react\nconst [count,setCount] = useState(0)\n```\n\n```react\nimport { useState } from 'react';\n\nexport default function Counter() {\n  const [count, setCount] = useState(0);\n\n  function handleClick() {\n    setCount(count + 1);\n  }\n\n  return (\n    <button onClick={handleClick}>\n      You pressed me {count} times\n    </button>\n  );\n}\n```\n\n###### 基础用法\n\n```react\nimport { useState } from 'react';\n\nexport default function Form() {\n  const [name, setName] = useState('Taylor');\n  const [age, setAge] = useState(42);\n\n  return (\n    <>\n      <input\n        value={name}\n        onChange={e => setName(e.target.value)}\n      />\n      <button onClick={() => setAge(age + 1)}>\n        Increment age\n      </button>\n      <p>Hello, {name}. You are {age}.</p>\n    </>\n  );\n}\n```\n\n###### 闭包\n\n箭头函数形成闭包，保存了+1后的结果\n\n```react\nimport { useState } from 'react';\n\nexport default function Counter() {\n  const [age, setAge] = useState(42);\n\t\n    // 闭包\n  function increment() {\n    setAge(a => a + 1);\n  }\n   \n  function increment1() {\n    setAge(a + 1)\n  }\n\n  return (\n    <>\n      <h1>Your age: {age}</h1>\n      <button onClick={() => {\n        increment();\n        increment();\n        increment();\n      }}>+3</button>\n      <button onClick={() => {\n        increment1();\n        increment1();\n        increment1();\n      }}>+1</button>\n    </>\n  );\n}\n```\n\n##### 对象类型状态更新\n\n```rea\nimport { useState } from 'react';\n\nexport default function Form() {\n  const [person, setPerson] = useState({\n    name: 'Niki de Saint Phalle',\n    artwork: {\n      title: 'Blue Nana',\n      city: 'Hamburg',\n      image: 'https://i.imgur.com/Sd1AgUOm.jpg',\n    }\n  });\n\n  function handleNameChange(e) {\n    setPerson({\n      ...person,\n      name: e.target.value\n    });\n  }\n\n  function handleTitleChange(e) {\n    setPerson({\n      ...person,\n      artwork: {\n        ...person.artwork,\n        title: e.target.value\n      }\n    });\n  }\n\n\n  return (\n    <>\n      <label>\n        Name:\n        <input\n          value={person.name}\n          onChange={handleNameChange}\n        />\n      </label>\n      <label>\n        Title:\n        <input\n          value={person.artwork.title}\n          onChange={handleTitleChange}\n        />\n      </label>\n    </>\n  );\n}\n```\n\n##### 数组类型状态更新\n\n```js\nconst initialTodos = [\n  { id: 0, title: 'Buy milk', done: true },\n  { id: 1, title: 'Eat tacos', done: false },\n  { id: 2, title: 'Brew tea', done: false },\n];\nconst [todos, setTodos] = useState(initialTodos);\n\n  function handleAddTodo(title) {\n    setTodos([\n      ...todos,\n      {\n        id: nextId++,\n        title: title,\n        done: false\n      }\n    ]);\n  }\n\n  function handleChangeTodo(nextTodo) {\n    setTodos(todos.map(t => {\n      if (t.id === nextTodo.id) {\n        return nextTodo;\n      } else {\n        return t;\n      }\n    }));\n  }\n\n  function handleDeleteTodo(todoId) {\n    setTodos(\n      todos.filter(t => t.id !== todoId)\n    );\n  }\n```\n\n\n\n#### useContext\n\n##### 定义\n\n获取组件`context`(上下文)，跨组件传参\n\n###### 语法\n\ncontext值取决于组件树中最近的context provider的值\n\n```react\nimport { createContext, useContext } from 'react';\n\n//\nconst ThemeContext = createContext(null);\n\nexport default function MyApp() {\n  return (\n    <ThemeContext.Provider value=\"dark\">\n      <Form />\n    </ThemeContext.Provider>\n  )\n}\n\nfunction Form() {\n  return (\n    <Panel title=\"Welcome\">\n      <Button>Sign up</Button>\n      <Button>Log in</Button>\n    </Panel>\n  );\n}\n\nfunction Panel({ title, children }) {\n  const theme = useContext(ThemeContext);\n  const className = 'panel-' + theme;\n  return (\n    <section className={className}>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  )\n}\n\nfunction Button({ children }) {\n  const theme = useContext(ThemeContext);\n  const className = 'button-' + theme;\n  return (\n    <button className={className}>\n      {children}\n    </button>\n  );\n}\n```\n\n\n\n#### useEffect\n\n##### 定义\n\n副作用\n\n执行时机：DOM更新完后执行，每次组件重新渲染都会执行，包括首次渲染\n\n##### 语法\n\n`setup`：要执行的副作用\n\n`dependencies`：执行依赖，当依赖变化时就会执行`setup`里面的方法\n\n```react\nuseEffect(setup, dependencies?)\n```\n\n当 roomId、serverUrl 值变化时会执行`useEffect`\n\n```react\nconst [serverUrl, setServerUrl] = useState('https://localhost:1234');\n\n  useEffect(() => {\n    const connection = createConnection(serverUrl, roomId);\n  }, [roomId, serverUrl]);\n```\n\n当传入的依赖为空数组时，`useEffect`只会在首次渲染时执行\n\n```react\nuseEffect(setup, [])\n```\n\n```react\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  },[]);\n}\n```\n\n没有设置依赖时，当组件重新渲染时都会执行该方法\n\n```react\nuseEffect(setup)\n```\n\n```react\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  });\n}\n```\n\n通过`return`取消副作用\n\n```r\nimport { useState, useEffect } from 'react';\n\nexport function createConnection(serverUrl, roomId) {\n  // A real implementation would actually connect to the server\n  return {\n    connect() {\n      console.log('✅ Connecting to \"' + roomId + '\" room at ' + serverUrl + '...');\n    },\n    disconnect() {\n      console.log('❌ Disconnected from \"' + roomId + '\" room at ' + serverUrl);\n    }\n  };\n}\n\nfunction ChatRoom({ roomId }) {\n  const [serverUrl, setServerUrl] = useState('https://localhost:1234');\n\n  useEffect(() => {\n    const connection = createConnection(serverUrl, roomId);\n    connection.connect();\n    return () => {\n      connection.disconnect();\n    };\n  }, [roomId, serverUrl]);\n\n  return (\n    <>\n      <label>\n        Server URL:{' '}\n        <input\n          value={serverUrl}\n          onChange={e => setServerUrl(e.target.value)}\n        />\n      </label>\n      <h1>Welcome to the {roomId} room!</h1>\n    </>\n  );\n}\n\nexport default function App() {\n  const [roomId, setRoomId] = useState('general');\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <label>\n        Choose the chat room:{' '}\n        <select\n          value={roomId}\n          onChange={e => setRoomId(e.target.value)}\n        >\n          <option value=\"general\">general</option>\n          <option value=\"travel\">travel</option>\n          <option value=\"music\">music</option>\n        </select>\n      </label>\n      <button onClick={() => setShow(!show)}>\n        {show ? 'Close chat' : 'Open chat'}\n      </button>\n      {show && <hr />}\n      {show && <ChatRoom roomId={roomId} />}\n    </>\n  );\n}\n\n```\n\n","source":"_posts/esri-inership-log.md","raw":"---\ntitle: react\nmathjax: true\ndate: 2022-11-18 08:53:45\ntags: [react]\ncategories: [react]\ndescription:\n---\n\n### react\n\n#### useState\n\n##### 语法\n\n1. `count`: 数据状态\n\n   `setCount`： 修改`count`的专有函数\n\n2. `useState`中的参数是作为**状态**`count`的初始值\n\n3. `[count,setCount]` 这里的写法是一个解构赋值`useState`返回值是一个数组\n\n   名字可以自定义\n\n   顺序不可调换\n\n首次渲染：\n\n1. 首次渲染的时候，组件内部的代码会被执行一次\n\n2. 首次渲染时会执行`useState`，初始化数据状态，且初始值只在首次渲染时生效\n\n更新渲染：\n\n1. 组件会被再次渲染，setCount会被再次执行\n\n2. useState 再次执行，得到新的状态`count`的值\n\n##### 示例\n\n###### 基础用法\n\n```react\nconst [count,setCount] = useState(0)\n```\n\n```react\nimport { useState } from 'react';\n\nexport default function Counter() {\n  const [count, setCount] = useState(0);\n\n  function handleClick() {\n    setCount(count + 1);\n  }\n\n  return (\n    <button onClick={handleClick}>\n      You pressed me {count} times\n    </button>\n  );\n}\n```\n\n###### 基础用法\n\n```react\nimport { useState } from 'react';\n\nexport default function Form() {\n  const [name, setName] = useState('Taylor');\n  const [age, setAge] = useState(42);\n\n  return (\n    <>\n      <input\n        value={name}\n        onChange={e => setName(e.target.value)}\n      />\n      <button onClick={() => setAge(age + 1)}>\n        Increment age\n      </button>\n      <p>Hello, {name}. You are {age}.</p>\n    </>\n  );\n}\n```\n\n###### 闭包\n\n箭头函数形成闭包，保存了+1后的结果\n\n```react\nimport { useState } from 'react';\n\nexport default function Counter() {\n  const [age, setAge] = useState(42);\n\t\n    // 闭包\n  function increment() {\n    setAge(a => a + 1);\n  }\n   \n  function increment1() {\n    setAge(a + 1)\n  }\n\n  return (\n    <>\n      <h1>Your age: {age}</h1>\n      <button onClick={() => {\n        increment();\n        increment();\n        increment();\n      }}>+3</button>\n      <button onClick={() => {\n        increment1();\n        increment1();\n        increment1();\n      }}>+1</button>\n    </>\n  );\n}\n```\n\n##### 对象类型状态更新\n\n```rea\nimport { useState } from 'react';\n\nexport default function Form() {\n  const [person, setPerson] = useState({\n    name: 'Niki de Saint Phalle',\n    artwork: {\n      title: 'Blue Nana',\n      city: 'Hamburg',\n      image: 'https://i.imgur.com/Sd1AgUOm.jpg',\n    }\n  });\n\n  function handleNameChange(e) {\n    setPerson({\n      ...person,\n      name: e.target.value\n    });\n  }\n\n  function handleTitleChange(e) {\n    setPerson({\n      ...person,\n      artwork: {\n        ...person.artwork,\n        title: e.target.value\n      }\n    });\n  }\n\n\n  return (\n    <>\n      <label>\n        Name:\n        <input\n          value={person.name}\n          onChange={handleNameChange}\n        />\n      </label>\n      <label>\n        Title:\n        <input\n          value={person.artwork.title}\n          onChange={handleTitleChange}\n        />\n      </label>\n    </>\n  );\n}\n```\n\n##### 数组类型状态更新\n\n```js\nconst initialTodos = [\n  { id: 0, title: 'Buy milk', done: true },\n  { id: 1, title: 'Eat tacos', done: false },\n  { id: 2, title: 'Brew tea', done: false },\n];\nconst [todos, setTodos] = useState(initialTodos);\n\n  function handleAddTodo(title) {\n    setTodos([\n      ...todos,\n      {\n        id: nextId++,\n        title: title,\n        done: false\n      }\n    ]);\n  }\n\n  function handleChangeTodo(nextTodo) {\n    setTodos(todos.map(t => {\n      if (t.id === nextTodo.id) {\n        return nextTodo;\n      } else {\n        return t;\n      }\n    }));\n  }\n\n  function handleDeleteTodo(todoId) {\n    setTodos(\n      todos.filter(t => t.id !== todoId)\n    );\n  }\n```\n\n\n\n#### useContext\n\n##### 定义\n\n获取组件`context`(上下文)，跨组件传参\n\n###### 语法\n\ncontext值取决于组件树中最近的context provider的值\n\n```react\nimport { createContext, useContext } from 'react';\n\n//\nconst ThemeContext = createContext(null);\n\nexport default function MyApp() {\n  return (\n    <ThemeContext.Provider value=\"dark\">\n      <Form />\n    </ThemeContext.Provider>\n  )\n}\n\nfunction Form() {\n  return (\n    <Panel title=\"Welcome\">\n      <Button>Sign up</Button>\n      <Button>Log in</Button>\n    </Panel>\n  );\n}\n\nfunction Panel({ title, children }) {\n  const theme = useContext(ThemeContext);\n  const className = 'panel-' + theme;\n  return (\n    <section className={className}>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  )\n}\n\nfunction Button({ children }) {\n  const theme = useContext(ThemeContext);\n  const className = 'button-' + theme;\n  return (\n    <button className={className}>\n      {children}\n    </button>\n  );\n}\n```\n\n\n\n#### useEffect\n\n##### 定义\n\n副作用\n\n执行时机：DOM更新完后执行，每次组件重新渲染都会执行，包括首次渲染\n\n##### 语法\n\n`setup`：要执行的副作用\n\n`dependencies`：执行依赖，当依赖变化时就会执行`setup`里面的方法\n\n```react\nuseEffect(setup, dependencies?)\n```\n\n当 roomId、serverUrl 值变化时会执行`useEffect`\n\n```react\nconst [serverUrl, setServerUrl] = useState('https://localhost:1234');\n\n  useEffect(() => {\n    const connection = createConnection(serverUrl, roomId);\n  }, [roomId, serverUrl]);\n```\n\n当传入的依赖为空数组时，`useEffect`只会在首次渲染时执行\n\n```react\nuseEffect(setup, [])\n```\n\n```react\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  },[]);\n}\n```\n\n没有设置依赖时，当组件重新渲染时都会执行该方法\n\n```react\nuseEffect(setup)\n```\n\n```react\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  });\n}\n```\n\n通过`return`取消副作用\n\n```r\nimport { useState, useEffect } from 'react';\n\nexport function createConnection(serverUrl, roomId) {\n  // A real implementation would actually connect to the server\n  return {\n    connect() {\n      console.log('✅ Connecting to \"' + roomId + '\" room at ' + serverUrl + '...');\n    },\n    disconnect() {\n      console.log('❌ Disconnected from \"' + roomId + '\" room at ' + serverUrl);\n    }\n  };\n}\n\nfunction ChatRoom({ roomId }) {\n  const [serverUrl, setServerUrl] = useState('https://localhost:1234');\n\n  useEffect(() => {\n    const connection = createConnection(serverUrl, roomId);\n    connection.connect();\n    return () => {\n      connection.disconnect();\n    };\n  }, [roomId, serverUrl]);\n\n  return (\n    <>\n      <label>\n        Server URL:{' '}\n        <input\n          value={serverUrl}\n          onChange={e => setServerUrl(e.target.value)}\n        />\n      </label>\n      <h1>Welcome to the {roomId} room!</h1>\n    </>\n  );\n}\n\nexport default function App() {\n  const [roomId, setRoomId] = useState('general');\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <label>\n        Choose the chat room:{' '}\n        <select\n          value={roomId}\n          onChange={e => setRoomId(e.target.value)}\n        >\n          <option value=\"general\">general</option>\n          <option value=\"travel\">travel</option>\n          <option value=\"music\">music</option>\n        </select>\n      </label>\n      <button onClick={() => setShow(!show)}>\n        {show ? 'Close chat' : 'Open chat'}\n      </button>\n      {show && <hr />}\n      {show && <ChatRoom roomId={roomId} />}\n    </>\n  );\n}\n\n```\n\n","slug":"esri-inership-log","published":1,"updated":"2022-11-27T06:36:01.428Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clayzoefk00008svk1gf65p7k","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"react\"><a href=\"#react\" class=\"headerlink\" title=\"react\"></a>react</h3><h4 id=\"useState\"><a href=\"#useState\" class=\"headerlink\" title=\"useState\"></a>useState</h4><h5 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h5><ol>\n<li><p><code>count</code>: 数据状态</p>\n<p><code>setCount</code>： 修改<code>count</code>的专有函数</p>\n</li>\n<li><p><code>useState</code>中的参数是作为<strong>状态</strong><code>count</code>的初始值</p>\n</li>\n<li><p><code>[count,setCount]</code> 这里的写法是一个解构赋值<code>useState</code>返回值是一个数组</p>\n<p>名字可以自定义</p>\n<p>顺序不可调换</p>\n</li>\n</ol>\n<p>首次渲染：</p>\n<ol>\n<li><p>首次渲染的时候，组件内部的代码会被执行一次</p>\n</li>\n<li><p>首次渲染时会执行<code>useState</code>，初始化数据状态，且初始值只在首次渲染时生效</p>\n</li>\n</ol>\n<p>更新渲染：</p>\n<ol>\n<li><p>组件会被再次渲染，setCount会被再次执行</p>\n</li>\n<li><p>useState 再次执行，得到新的状态<code>count</code>的值</p>\n</li>\n</ol>\n<h5 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h5><h6 id=\"基础用法\"><a href=\"#基础用法\" class=\"headerlink\" title=\"基础用法\"></a>基础用法</h6><pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">const [count,setCount] = useState(0)</code></pre>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">import { useState } from 'react';\n\nexport default function Counter() {\n  const [count, setCount] = useState(0);\n\n  function handleClick() {\n    setCount(count + 1);\n  }\n\n  return (\n    &lt;button onClick={handleClick}&gt;\n      You pressed me {count} times\n    &lt;/button&gt;\n  );\n}</code></pre>\n<h6 id=\"基础用法-1\"><a href=\"#基础用法-1\" class=\"headerlink\" title=\"基础用法\"></a>基础用法</h6><pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">import { useState } from 'react';\n\nexport default function Form() {\n  const [name, setName] = useState('Taylor');\n  const [age, setAge] = useState(42);\n\n  return (\n    &lt;&gt;\n      &lt;input\n        value={name}\n        onChange={e =&gt; setName(e.target.value)}\n      /&gt;\n      &lt;button onClick={() =&gt; setAge(age + 1)}&gt;\n        Increment age\n      &lt;/button&gt;\n      &lt;p&gt;Hello, {name}. You are {age}.&lt;/p&gt;\n    &lt;/&gt;\n  );\n}</code></pre>\n<h6 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h6><p>箭头函数形成闭包，保存了+1后的结果</p>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">import { useState } from 'react';\n\nexport default function Counter() {\n  const [age, setAge] = useState(42);\n\t\n    // 闭包\n  function increment() {\n    setAge(a =&gt; a + 1);\n  }\n   \n  function increment1() {\n    setAge(a + 1)\n  }\n\n  return (\n    &lt;&gt;\n      &lt;h1&gt;Your age: {age}&lt;/h1&gt;\n      &lt;button onClick={() =&gt; {\n        increment();\n        increment();\n        increment();\n      }}&gt;+3&lt;/button&gt;\n      &lt;button onClick={() =&gt; {\n        increment1();\n        increment1();\n        increment1();\n      }}&gt;+1&lt;/button&gt;\n    &lt;/&gt;\n  );\n}</code></pre>\n<h5 id=\"对象类型状态更新\"><a href=\"#对象类型状态更新\" class=\"headerlink\" title=\"对象类型状态更新\"></a>对象类型状态更新</h5><pre class=\"language-rea\" data-language=\"rea\"><code class=\"language-rea\">import { useState } from 'react';\n\nexport default function Form() {\n  const [person, setPerson] = useState({\n    name: 'Niki de Saint Phalle',\n    artwork: {\n      title: 'Blue Nana',\n      city: 'Hamburg',\n      image: 'https://i.imgur.com/Sd1AgUOm.jpg',\n    }\n  });\n\n  function handleNameChange(e) {\n    setPerson({\n      ...person,\n      name: e.target.value\n    });\n  }\n\n  function handleTitleChange(e) {\n    setPerson({\n      ...person,\n      artwork: {\n        ...person.artwork,\n        title: e.target.value\n      }\n    });\n  }\n\n\n  return (\n    &lt;&gt;\n      &lt;label&gt;\n        Name:\n        &lt;input\n          value={person.name}\n          onChange={handleNameChange}\n        /&gt;\n      &lt;/label&gt;\n      &lt;label&gt;\n        Title:\n        &lt;input\n          value={person.artwork.title}\n          onChange={handleTitleChange}\n        /&gt;\n      &lt;/label&gt;\n    &lt;/&gt;\n  );\n}</code></pre>\n<h5 id=\"数组类型状态更新\"><a href=\"#数组类型状态更新\" class=\"headerlink\" title=\"数组类型状态更新\"></a>数组类型状态更新</h5><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> initialTodos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Buy milk'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Eat tacos'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Brew tea'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> setTodos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialTodos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleAddTodo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTodos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token operator\">...</span>todos<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        id<span class=\"token operator\">:</span> nextId<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span>\n        title<span class=\"token operator\">:</span> title<span class=\"token punctuation\">,</span>\n        done<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleChangeTodo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextTodo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTodos</span><span class=\"token punctuation\">(</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> nextTodo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> nextTodo<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleDeleteTodo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todoId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTodos</span><span class=\"token punctuation\">(</span>\n      todos<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span> <span class=\"token operator\">=&gt;</span> t<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> todoId<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"useContext\"><a href=\"#useContext\" class=\"headerlink\" title=\"useContext\"></a>useContext</h4><h5 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h5><p>获取组件<code>context</code>(上下文)，跨组件传参</p>\n<h6 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法\"></a>语法</h6><p>context值取决于组件树中最近的context provider的值</p>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">import { createContext, useContext } from 'react';\n\n//\nconst ThemeContext = createContext(null);\n\nexport default function MyApp() {\n  return (\n    &lt;ThemeContext.Provider value=\"dark\"&gt;\n      &lt;Form /&gt;\n    &lt;/ThemeContext.Provider&gt;\n  )\n}\n\nfunction Form() {\n  return (\n    &lt;Panel title=\"Welcome\"&gt;\n      &lt;Button&gt;Sign up&lt;/Button&gt;\n      &lt;Button&gt;Log in&lt;/Button&gt;\n    &lt;/Panel&gt;\n  );\n}\n\nfunction Panel({ title, children }) {\n  const theme = useContext(ThemeContext);\n  const className = 'panel-' + theme;\n  return (\n    &lt;section className={className}&gt;\n      &lt;h1&gt;{title}&lt;/h1&gt;\n      {children}\n    &lt;/section&gt;\n  )\n}\n\nfunction Button({ children }) {\n  const theme = useContext(ThemeContext);\n  const className = 'button-' + theme;\n  return (\n    &lt;button className={className}&gt;\n      {children}\n    &lt;/button&gt;\n  );\n}</code></pre>\n<h4 id=\"useEffect\"><a href=\"#useEffect\" class=\"headerlink\" title=\"useEffect\"></a>useEffect</h4><h5 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h5><p>副作用</p>\n<p>执行时机：DOM更新完后执行，每次组件重新渲染都会执行，包括首次渲染</p>\n<h5 id=\"语法-2\"><a href=\"#语法-2\" class=\"headerlink\" title=\"语法\"></a>语法</h5><p><code>setup</code>：要执行的副作用</p>\n<p><code>dependencies</code>：执行依赖，当依赖变化时就会执行<code>setup</code>里面的方法</p>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">useEffect(setup, dependencies?)</code></pre>\n<p>当 roomId、serverUrl 值变化时会执行<code>useEffect</code></p>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">const [serverUrl, setServerUrl] = useState('https://localhost:1234');\n\n  useEffect(() =&gt; {\n    const connection = createConnection(serverUrl, roomId);\n  }, [roomId, serverUrl]);</code></pre>\n<p>当传入的依赖为空数组时，<code>useEffect</code>只会在首次渲染时执行</p>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">useEffect(setup, [])</code></pre>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">function Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() =&gt; {\n    document.title = `You clicked ${count} times`;\n  },[]);\n}</code></pre>\n<p>没有设置依赖时，当组件重新渲染时都会执行该方法</p>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">useEffect(setup)</code></pre>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">function Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() =&gt; {\n    document.title = `You clicked ${count} times`;\n  });\n}</code></pre>\n<p>通过<code>return</code>取消副作用</p>\n<pre class=\"language-r\" data-language=\"r\"><code class=\"language-r\">import <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> from <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\nexport <span class=\"token keyword\">function</span> createConnection<span class=\"token punctuation\">(</span>serverUrl<span class=\"token punctuation\">,</span> roomId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> A real implementation would actually connect to the server\n  return <span class=\"token punctuation\">{</span>\n    connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console.log<span class=\"token punctuation\">(</span><span class=\"token string\">'✅ Connecting to \"'</span> <span class=\"token operator\">+</span> roomId <span class=\"token operator\">+</span> <span class=\"token string\">'\" room at '</span> <span class=\"token operator\">+</span> serverUrl <span class=\"token operator\">+</span> <span class=\"token string\">'...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    disconnect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console.log<span class=\"token punctuation\">(</span><span class=\"token string\">'❌ Disconnected from \"'</span> <span class=\"token operator\">+</span> roomId <span class=\"token operator\">+</span> <span class=\"token string\">'\" room at '</span> <span class=\"token operator\">+</span> serverUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> ChatRoom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> roomId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  const <span class=\"token punctuation\">[</span>serverUrl<span class=\"token punctuation\">,</span> setServerUrl<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> useState<span class=\"token punctuation\">(</span><span class=\"token string\">'https://localhost:1234'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  useEffect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    const connection <span class=\"token operator\">=</span> createConnection<span class=\"token punctuation\">(</span>serverUrl<span class=\"token punctuation\">,</span> roomId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    connection.connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    return <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n      connection.disconnect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>roomId<span class=\"token punctuation\">,</span> serverUrl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  return <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">&gt;</span>\n        Server URL<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>input\n          value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>serverUrl<span class=\"token punctuation\">}</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>e <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> setServerUrl<span class=\"token punctuation\">(</span>e.target.value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">&gt;</span>Welcome to the <span class=\"token punctuation\">{</span>roomId<span class=\"token punctuation\">}</span> room<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nexport default <span class=\"token keyword\">function</span> App<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  const <span class=\"token punctuation\">[</span>roomId<span class=\"token punctuation\">,</span> setRoomId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> useState<span class=\"token punctuation\">(</span><span class=\"token string\">'general'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  const <span class=\"token punctuation\">[</span>show<span class=\"token punctuation\">,</span> setShow<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> useState<span class=\"token punctuation\">(</span>false<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  return <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">&gt;</span>\n        Choose the chat room<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>select\n          value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>roomId<span class=\"token punctuation\">}</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>e <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> setRoomId<span class=\"token punctuation\">(</span>e.target.value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"general\"</span><span class=\"token operator\">&gt;</span>general<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"travel\"</span><span class=\"token operator\">&gt;</span>travel<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"music\"</span><span class=\"token operator\">&gt;</span>music<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> setShow<span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token punctuation\">{</span>show ? <span class=\"token string\">'Close chat'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Open chat'</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n      <span class=\"token punctuation\">{</span>show <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>hr <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">{</span>show <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>ChatRoom roomId<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>roomId<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n","site":{"data":{"styles":"body {\n  background: url(\"https://note-1306141435.cos.ap-beijing.myqcloud.com/img/20210708210814.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n}\n","head":"<span style=\"color:#333333\"><script>\n    (function () {\n        if ('') {\n            if (prompt('请输入文章密码') !== '') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"Faith-hesper.github.io\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script></span>","variables":""}},"cover":"https://cdn.jsdelivr.net/gh/faith-hesper/Note/20211229160654.webp","length":6321,"excerpt":"","more":"<h3 id=\"react\"><a href=\"#react\" class=\"headerlink\" title=\"react\"></a>react</h3><h4 id=\"useState\"><a href=\"#useState\" class=\"headerlink\" title=\"useState\"></a>useState</h4><h5 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h5><ol>\n<li><p><code>count</code>: 数据状态</p>\n<p><code>setCount</code>： 修改<code>count</code>的专有函数</p>\n</li>\n<li><p><code>useState</code>中的参数是作为<strong>状态</strong><code>count</code>的初始值</p>\n</li>\n<li><p><code>[count,setCount]</code> 这里的写法是一个解构赋值<code>useState</code>返回值是一个数组</p>\n<p>名字可以自定义</p>\n<p>顺序不可调换</p>\n</li>\n</ol>\n<p>首次渲染：</p>\n<ol>\n<li><p>首次渲染的时候，组件内部的代码会被执行一次</p>\n</li>\n<li><p>首次渲染时会执行<code>useState</code>，初始化数据状态，且初始值只在首次渲染时生效</p>\n</li>\n</ol>\n<p>更新渲染：</p>\n<ol>\n<li><p>组件会被再次渲染，setCount会被再次执行</p>\n</li>\n<li><p>useState 再次执行，得到新的状态<code>count</code>的值</p>\n</li>\n</ol>\n<h5 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h5><h6 id=\"基础用法\"><a href=\"#基础用法\" class=\"headerlink\" title=\"基础用法\"></a>基础用法</h6><pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">const [count,setCount] = useState(0)</code></pre>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">import { useState } from 'react';\n\nexport default function Counter() {\n  const [count, setCount] = useState(0);\n\n  function handleClick() {\n    setCount(count + 1);\n  }\n\n  return (\n    &lt;button onClick={handleClick}&gt;\n      You pressed me {count} times\n    &lt;/button&gt;\n  );\n}</code></pre>\n<h6 id=\"基础用法-1\"><a href=\"#基础用法-1\" class=\"headerlink\" title=\"基础用法\"></a>基础用法</h6><pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">import { useState } from 'react';\n\nexport default function Form() {\n  const [name, setName] = useState('Taylor');\n  const [age, setAge] = useState(42);\n\n  return (\n    &lt;&gt;\n      &lt;input\n        value={name}\n        onChange={e =&gt; setName(e.target.value)}\n      /&gt;\n      &lt;button onClick={() =&gt; setAge(age + 1)}&gt;\n        Increment age\n      &lt;/button&gt;\n      &lt;p&gt;Hello, {name}. You are {age}.&lt;/p&gt;\n    &lt;/&gt;\n  );\n}</code></pre>\n<h6 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h6><p>箭头函数形成闭包，保存了+1后的结果</p>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">import { useState } from 'react';\n\nexport default function Counter() {\n  const [age, setAge] = useState(42);\n\t\n    // 闭包\n  function increment() {\n    setAge(a =&gt; a + 1);\n  }\n   \n  function increment1() {\n    setAge(a + 1)\n  }\n\n  return (\n    &lt;&gt;\n      &lt;h1&gt;Your age: {age}&lt;/h1&gt;\n      &lt;button onClick={() =&gt; {\n        increment();\n        increment();\n        increment();\n      }}&gt;+3&lt;/button&gt;\n      &lt;button onClick={() =&gt; {\n        increment1();\n        increment1();\n        increment1();\n      }}&gt;+1&lt;/button&gt;\n    &lt;/&gt;\n  );\n}</code></pre>\n<h5 id=\"对象类型状态更新\"><a href=\"#对象类型状态更新\" class=\"headerlink\" title=\"对象类型状态更新\"></a>对象类型状态更新</h5><pre class=\"language-rea\" data-language=\"rea\"><code class=\"language-rea\">import { useState } from 'react';\n\nexport default function Form() {\n  const [person, setPerson] = useState({\n    name: 'Niki de Saint Phalle',\n    artwork: {\n      title: 'Blue Nana',\n      city: 'Hamburg',\n      image: 'https://i.imgur.com/Sd1AgUOm.jpg',\n    }\n  });\n\n  function handleNameChange(e) {\n    setPerson({\n      ...person,\n      name: e.target.value\n    });\n  }\n\n  function handleTitleChange(e) {\n    setPerson({\n      ...person,\n      artwork: {\n        ...person.artwork,\n        title: e.target.value\n      }\n    });\n  }\n\n\n  return (\n    &lt;&gt;\n      &lt;label&gt;\n        Name:\n        &lt;input\n          value={person.name}\n          onChange={handleNameChange}\n        /&gt;\n      &lt;/label&gt;\n      &lt;label&gt;\n        Title:\n        &lt;input\n          value={person.artwork.title}\n          onChange={handleTitleChange}\n        /&gt;\n      &lt;/label&gt;\n    &lt;/&gt;\n  );\n}</code></pre>\n<h5 id=\"数组类型状态更新\"><a href=\"#数组类型状态更新\" class=\"headerlink\" title=\"数组类型状态更新\"></a>数组类型状态更新</h5><pre class=\"language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> initialTodos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Buy milk'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Eat tacos'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Brew tea'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> setTodos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialTodos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleAddTodo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTodos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token operator\">...</span>todos<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        id<span class=\"token operator\">:</span> nextId<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span>\n        title<span class=\"token operator\">:</span> title<span class=\"token punctuation\">,</span>\n        done<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleChangeTodo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextTodo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTodos</span><span class=\"token punctuation\">(</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> nextTodo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> nextTodo<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleDeleteTodo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todoId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTodos</span><span class=\"token punctuation\">(</span>\n      todos<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span> <span class=\"token operator\">=&gt;</span> t<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> todoId<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre>\n<h4 id=\"useContext\"><a href=\"#useContext\" class=\"headerlink\" title=\"useContext\"></a>useContext</h4><h5 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h5><p>获取组件<code>context</code>(上下文)，跨组件传参</p>\n<h6 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法\"></a>语法</h6><p>context值取决于组件树中最近的context provider的值</p>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">import { createContext, useContext } from 'react';\n\n//\nconst ThemeContext = createContext(null);\n\nexport default function MyApp() {\n  return (\n    &lt;ThemeContext.Provider value=\"dark\"&gt;\n      &lt;Form /&gt;\n    &lt;/ThemeContext.Provider&gt;\n  )\n}\n\nfunction Form() {\n  return (\n    &lt;Panel title=\"Welcome\"&gt;\n      &lt;Button&gt;Sign up&lt;/Button&gt;\n      &lt;Button&gt;Log in&lt;/Button&gt;\n    &lt;/Panel&gt;\n  );\n}\n\nfunction Panel({ title, children }) {\n  const theme = useContext(ThemeContext);\n  const className = 'panel-' + theme;\n  return (\n    &lt;section className={className}&gt;\n      &lt;h1&gt;{title}&lt;/h1&gt;\n      {children}\n    &lt;/section&gt;\n  )\n}\n\nfunction Button({ children }) {\n  const theme = useContext(ThemeContext);\n  const className = 'button-' + theme;\n  return (\n    &lt;button className={className}&gt;\n      {children}\n    &lt;/button&gt;\n  );\n}</code></pre>\n<h4 id=\"useEffect\"><a href=\"#useEffect\" class=\"headerlink\" title=\"useEffect\"></a>useEffect</h4><h5 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h5><p>副作用</p>\n<p>执行时机：DOM更新完后执行，每次组件重新渲染都会执行，包括首次渲染</p>\n<h5 id=\"语法-2\"><a href=\"#语法-2\" class=\"headerlink\" title=\"语法\"></a>语法</h5><p><code>setup</code>：要执行的副作用</p>\n<p><code>dependencies</code>：执行依赖，当依赖变化时就会执行<code>setup</code>里面的方法</p>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">useEffect(setup, dependencies?)</code></pre>\n<p>当 roomId、serverUrl 值变化时会执行<code>useEffect</code></p>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">const [serverUrl, setServerUrl] = useState('https://localhost:1234');\n\n  useEffect(() =&gt; {\n    const connection = createConnection(serverUrl, roomId);\n  }, [roomId, serverUrl]);</code></pre>\n<p>当传入的依赖为空数组时，<code>useEffect</code>只会在首次渲染时执行</p>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">useEffect(setup, [])</code></pre>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">function Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() =&gt; {\n    document.title = `You clicked ${count} times`;\n  },[]);\n}</code></pre>\n<p>没有设置依赖时，当组件重新渲染时都会执行该方法</p>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">useEffect(setup)</code></pre>\n<pre class=\"language-react\" data-language=\"react\"><code class=\"language-react\">function Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() =&gt; {\n    document.title = `You clicked ${count} times`;\n  });\n}</code></pre>\n<p>通过<code>return</code>取消副作用</p>\n<pre class=\"language-r\" data-language=\"r\"><code class=\"language-r\">import <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> from <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\nexport <span class=\"token keyword\">function</span> createConnection<span class=\"token punctuation\">(</span>serverUrl<span class=\"token punctuation\">,</span> roomId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> A real implementation would actually connect to the server\n  return <span class=\"token punctuation\">{</span>\n    connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console.log<span class=\"token punctuation\">(</span><span class=\"token string\">'✅ Connecting to \"'</span> <span class=\"token operator\">+</span> roomId <span class=\"token operator\">+</span> <span class=\"token string\">'\" room at '</span> <span class=\"token operator\">+</span> serverUrl <span class=\"token operator\">+</span> <span class=\"token string\">'...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    disconnect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console.log<span class=\"token punctuation\">(</span><span class=\"token string\">'❌ Disconnected from \"'</span> <span class=\"token operator\">+</span> roomId <span class=\"token operator\">+</span> <span class=\"token string\">'\" room at '</span> <span class=\"token operator\">+</span> serverUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> ChatRoom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> roomId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  const <span class=\"token punctuation\">[</span>serverUrl<span class=\"token punctuation\">,</span> setServerUrl<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> useState<span class=\"token punctuation\">(</span><span class=\"token string\">'https://localhost:1234'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  useEffect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    const connection <span class=\"token operator\">=</span> createConnection<span class=\"token punctuation\">(</span>serverUrl<span class=\"token punctuation\">,</span> roomId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    connection.connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    return <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n      connection.disconnect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>roomId<span class=\"token punctuation\">,</span> serverUrl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  return <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">&gt;</span>\n        Server URL<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>input\n          value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>serverUrl<span class=\"token punctuation\">}</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>e <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> setServerUrl<span class=\"token punctuation\">(</span>e.target.value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">&gt;</span>Welcome to the <span class=\"token punctuation\">{</span>roomId<span class=\"token punctuation\">}</span> room<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nexport default <span class=\"token keyword\">function</span> App<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  const <span class=\"token punctuation\">[</span>roomId<span class=\"token punctuation\">,</span> setRoomId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> useState<span class=\"token punctuation\">(</span><span class=\"token string\">'general'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  const <span class=\"token punctuation\">[</span>show<span class=\"token punctuation\">,</span> setShow<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> useState<span class=\"token punctuation\">(</span>false<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  return <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">&gt;</span>\n        Choose the chat room<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>select\n          value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>roomId<span class=\"token punctuation\">}</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>e <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> setRoomId<span class=\"token punctuation\">(</span>e.target.value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"general\"</span><span class=\"token operator\">&gt;</span>general<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"travel\"</span><span class=\"token operator\">&gt;</span>travel<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"music\"</span><span class=\"token operator\">&gt;</span>music<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> setShow<span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token punctuation\">{</span>show ? <span class=\"token string\">'Close chat'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Open chat'</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n      <span class=\"token punctuation\">{</span>show <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>hr <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">{</span>show <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>ChatRoom roomId<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>roomId<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cla6mrt1x0001jsvk68k5akco","category_id":"cla6mrt240004jsvk18v63d2k","_id":"cla6mrt2g000jjsvkgi66fp4a"},{"post_id":"cla6mrt2a000bjsvkbfytg7zg","category_id":"cla6mrt2k000ojsvkhohma7g0","_id":"cla6mrt2s000zjsvk7ibghng0"},{"post_id":"cla6mrt2d000gjsvk3vgggoy7","category_id":"cla6mrt2n000ujsvk7dhl8z57","_id":"cla6mrt2v0015jsvkes0z6bhf"},{"post_id":"cla6mrt270007jsvkh97a47be","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt2y001cjsvk9vfrdx0z"},{"post_id":"cla6mrt270007jsvkh97a47be","category_id":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt31001gjsvk96hm6yzf"},{"post_id":"cla6mrt2f000ijsvkgkvg7csp","category_id":"cla6mrt2v0017jsvk453mb3g1","_id":"cla6mrt33001jjsvkeyxrbbkl"},{"post_id":"cla6mrt2i000mjsvk5h7f8yir","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt37001qjsvk0y4wgjd6"},{"post_id":"cla6mrt2i000mjsvk5h7f8yir","category_id":"cla6mrt2z001djsvkf4e06k4b","_id":"cla6mrt39001tjsvk2qtk5baa"},{"post_id":"cla6mrt290009jsvk0ssa5p4z","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt3a001wjsvk1l96g3ig"},{"post_id":"cla6mrt290009jsvk0ssa5p4z","category_id":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt3b0020jsvk0hbv50fq"},{"post_id":"cla6mrt2l000qjsvkgw8ogtss","category_id":"cla6mrt37001pjsvkbd58g890","_id":"cla6mrt3c0024jsvk5del9tk6"},{"post_id":"cla6mrt2m000sjsvkehj0ffof","category_id":"cla6mrt37001pjsvkbd58g890","_id":"cla6mrt3g002ajsvk06kx1nsi"},{"post_id":"cla6mrt2r000yjsvkd4aq104o","category_id":"cla6mrt3f0029jsvkftunajhj","_id":"cla6mrt3m002kjsvk77qefpf3"},{"post_id":"cla6mrt2u0014jsvkb6z3gddp","category_id":"cla6mrt3k002gjsvk9z65bc47","_id":"cla6mrt3o002qjsvk6v5i1vws"},{"post_id":"cla6mrt2v0016jsvk7c4varn4","category_id":"cla6mrt3m002ljsvk7cv4fh6s","_id":"cla6mrt3q002yjsvkayk3hier"},{"post_id":"cla6mrt3b0021jsvk9pvgar4g","category_id":"cla6mrt3m002ljsvk7cv4fh6s","_id":"cla6mrt3s0034jsvk85qubouc"},{"post_id":"cla6mrt3d0025jsvkbxqab7iw","category_id":"cla6mrt3q002xjsvkaj050l3z","_id":"cla6mrt3u003bjsvk43ffe3z0"},{"post_id":"cla6mrt3u0039jsvkdw9m31df","category_id":"cla6mrt37001pjsvkbd58g890","_id":"cla6mrt3x003jjsvk7xg4bm28"},{"post_id":"cla6mrt3e0027jsvkhp3i3q3r","category_id":"cla6mrt3s0035jsvk5z6m2567","_id":"cla6mrt3y003njsvkdr04amd2"},{"post_id":"cla6mrt2n000wjsvkcthd3nvs","category_id":"cla6mrt37001pjsvkbd58g890","_id":"cla6mrt3z003sjsvkfbc74eo1"},{"post_id":"cla6mrt2n000wjsvkcthd3nvs","category_id":"cla6mrt3v003djsvkgdbm27g1","_id":"cla6mrt40003vjsvkgk2nbr8m"},{"post_id":"cla6mrt3g002bjsvk2lwhcrm8","category_id":"cla6mrt3m002ljsvk7cv4fh6s","_id":"cla6mrt42003zjsvkfuu9020h"},{"post_id":"cla6mrt3h002djsvkb4bj9ev3","category_id":"cla6mrt3z003rjsvkbnqb6lo2","_id":"cla6mrt450045jsvk8mnt54gk"},{"post_id":"cla6mrt3m002njsvkabi1h4vm","category_id":"cla6mrt450046jsvk1jarfwf0","_id":"cla6mrt49004jjsvk5hds4f6d"},{"post_id":"cla6mrt3n002pjsvk4gvx9ueu","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt4b004rjsvk8ze65pew"},{"post_id":"cla6mrt3n002pjsvk4gvx9ueu","category_id":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt4c004ujsvk64247tkq"},{"post_id":"cla6mrt3n002pjsvk4gvx9ueu","category_id":"cla6mrt47004djsvkgn3z4e1d","_id":"cla6mrt4d004yjsvk82ynaps8"},{"post_id":"cla6mrt3u003cjsvkhkis237e","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt4l005hjsvk9qkbhgzy"},{"post_id":"cla6mrt3u003cjsvkhkis237e","category_id":"cla6mrt4j005bjsvk05refwp4","_id":"cla6mrt4l005jjsvkf22n2iex"},{"post_id":"cla6mrt3l002jjsvkh2iq8kwi","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt4r005xjsvkghh3c8fv"},{"post_id":"cla6mrt3l002jjsvkh2iq8kwi","category_id":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt4s0060jsvk05z1f5in"},{"post_id":"cla6mrt3l002jjsvkh2iq8kwi","category_id":"cla6mrt4n005rjsvk0oei18b3","_id":"cla6mrt4s0062jsvk9j5ddo5g"},{"post_id":"cla6mrt450047jsvkcxh7bayk","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt4t0065jsvk3f2sarus"},{"post_id":"cla6mrt450047jsvkcxh7bayk","category_id":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt4u0067jsvk5ra103ef"},{"post_id":"cla6mrt450047jsvkcxh7bayk","category_id":"cla6mrt4q005tjsvkbau853pl","_id":"cla6mrt4u006bjsvk852ndz71"},{"post_id":"cla6mrt48004gjsvkczfd4cn4","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt4x006gjsvkgzegecei"},{"post_id":"cla6mrt48004gjsvkczfd4cn4","category_id":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt4z006jjsvkbeek823y"},{"post_id":"cla6mrt48004gjsvkczfd4cn4","category_id":"cla6mrt4u0068jsvk90pmdau0","_id":"cla6mrt4z006ljsvk496420mg"},{"post_id":"cla6mrt49004ijsvkcdpyczwk","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt50006ojsvk388m3lyn"},{"post_id":"cla6mrt49004ijsvkcdpyczwk","category_id":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt50006qjsvkgelue7w8"},{"post_id":"cla6mrt49004ijsvkcdpyczwk","category_id":"cla6mrt4w006djsvkf09lhjla","_id":"cla6mrt51006tjsvkewtmdtu2"},{"post_id":"cla6mrt4a004mjsvkfkny0o6p","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt51006vjsvkbi906ftx"},{"post_id":"cla6mrt4a004mjsvkfkny0o6p","category_id":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt52006yjsvk91jd5ymy"},{"post_id":"cla6mrt4a004mjsvkfkny0o6p","category_id":"cla6mrt4y006hjsvkd7e9a48d","_id":"cla6mrt520070jsvkc9d03my5"},{"post_id":"cla6mrt3o002tjsvkh6weh2jz","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt520071jsvkc6xvcjzt"},{"post_id":"cla6mrt3o002tjsvkh6weh2jz","category_id":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt530075jsvk1agzd44k"},{"post_id":"cla6mrt3o002tjsvkh6weh2jz","category_id":"cla6mrt4z006mjsvkewzk8yz1","_id":"cla6mrt540076jsvkcuy89p9s"},{"post_id":"cla6mrt4b004pjsvk3sosdy7z","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt550079jsvk32pgdsbw"},{"post_id":"cla6mrt4b004pjsvk3sosdy7z","category_id":"cla6mrt2s0010jsvkccnu63la","_id":"cla6mrt55007bjsvk23yveuxl"},{"post_id":"cla6mrt4b004pjsvk3sosdy7z","category_id":"cla6mrt51006rjsvkcteof76p","_id":"cla6mrt56007ejsvkcjcq8dwm"},{"post_id":"cla6mrt3p002wjsvkcyaveq55","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt56007gjsvkbv098xvk"},{"post_id":"cla6mrt3p002wjsvkcyaveq55","category_id":"cla6mrt4b004qjsvk4kmo00zf","_id":"cla6mrt57007jjsvk04rc6f40"},{"post_id":"cla6mrt3p002wjsvkcyaveq55","category_id":"cla6mrt52006xjsvk8rnk5oy8","_id":"cla6mrt57007ljsvkdisy1mlz"},{"post_id":"cla6mrt4d004xjsvk8jnz1pvy","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt57007njsvkhqz48clz"},{"post_id":"cla6mrt4d004xjsvk8jnz1pvy","category_id":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt58007qjsvk1mldh6nh"},{"post_id":"cla6mrt4d004xjsvk8jnz1pvy","category_id":"cla6mrt520073jsvkfwyo9d7x","_id":"cla6mrt58007sjsvk9npsgh1c"},{"post_id":"cla6mrt3r0032jsvk53iydbjr","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt58007vjsvk74i38uv8"},{"post_id":"cla6mrt3r0032jsvk53iydbjr","category_id":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt59007xjsvkbeoz04ht"},{"post_id":"cla6mrt3r0032jsvk53iydbjr","category_id":"cla6mrt540078jsvke67l1zwl","_id":"cla6mrt590080jsvkas3215lr"},{"post_id":"cla6mrt4e0053jsvk13gfhjem","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt590082jsvk75710g9k"},{"post_id":"cla6mrt4e0053jsvk13gfhjem","category_id":"cla6mrt4b004qjsvk4kmo00zf","_id":"cla6mrt5a0085jsvkcext3nhc"},{"post_id":"cla6mrt4e0053jsvk13gfhjem","category_id":"cla6mrt56007djsvkbhzaht0p","_id":"cla6mrt5a0087jsvkhzxzcuul"},{"post_id":"cla6mrt3s0036jsvk7fjqg3nl","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt5a0089jsvk0vzvawvj"},{"post_id":"cla6mrt3s0036jsvk7fjqg3nl","category_id":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt5b008cjsvkcqvq533b"},{"post_id":"cla6mrt3s0036jsvk7fjqg3nl","category_id":"cla6mrt56007ijsvk5sqn28z6","_id":"cla6mrt5b008ejsvk70kecnbw"},{"post_id":"cla6mrt3x003mjsvk3m22hpgw","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt5b008hjsvkdxne6l6e"},{"post_id":"cla6mrt3x003mjsvk3m22hpgw","category_id":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt5c008jjsvk4xm822uu"},{"post_id":"cla6mrt3x003mjsvk3m22hpgw","category_id":"cla6mrt57007pjsvk5uji0xpi","_id":"cla6mrt5c008ljsvkegr5f1oe"},{"post_id":"cla6mrt3y003qjsvk6i683inl","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt5c008njsvkd4u8etvk"},{"post_id":"cla6mrt3y003qjsvk6i683inl","category_id":"cla6mrt4j005bjsvk05refwp4","_id":"cla6mrt5c008ojsvkfiezdwzw"},{"post_id":"cla6mrt3y003qjsvk6i683inl","category_id":"cla6mrt58007ujsvk062x3rp8","_id":"cla6mrt5c008qjsvk2jm79wik"},{"post_id":"cla6mrt40003ujsvkdnmi4ali","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt5c008rjsvkfc1m5zou"},{"post_id":"cla6mrt40003ujsvkdnmi4ali","category_id":"cla6mrt430040jsvkeo57f6x7","_id":"cla6mrt5c008sjsvk6jhu6c6w"},{"post_id":"cla6mrt40003ujsvkdnmi4ali","category_id":"cla6mrt59007zjsvkhibe57ff","_id":"cla6mrt5c008tjsvkfx2p66xd"},{"post_id":"cla6mrt430041jsvk2pxearlf","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt5c008ujsvkhptc5q0g"},{"post_id":"cla6mrt430041jsvk2pxearlf","category_id":"cla6mrt4b004qjsvk4kmo00zf","_id":"cla6mrt5c008vjsvk6ie73sdv"},{"post_id":"cla6mrt430041jsvk2pxearlf","category_id":"cla6mrt5a0084jsvk3fxt3pd8","_id":"cla6mrt5d008wjsvkbtqi9cl9"},{"post_id":"cla6mrt46004ajsvk1lnr29my","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt5d008xjsvk29otbfz7"},{"post_id":"cla6mrt46004ajsvk1lnr29my","category_id":"cla6mrt4b004qjsvk4kmo00zf","_id":"cla6mrt5d008yjsvk2t4n52pk"},{"post_id":"cla6mrt46004ajsvk1lnr29my","category_id":"cla6mrt5a008ajsvk0q15at58","_id":"cla6mrt5d008zjsvk3zkzhkbw"},{"post_id":"cla6mrt47004cjsvkcbdtc6jq","category_id":"cla6mrt2b000cjsvk40wb61gm","_id":"cla6mrt5d0090jsvke4skb3pc"},{"post_id":"cla6mrt47004cjsvkcbdtc6jq","category_id":"cla6mrt4j005bjsvk05refwp4","_id":"cla6mrt5d0091jsvkc37q5qe5"},{"post_id":"cla6mrt47004cjsvkcbdtc6jq","category_id":"cla6mrt5b008fjsvk7j0ycc3a","_id":"cla6mrt5d0092jsvk5vmt5xdz"},{"post_id":"clayzoefk00008svk1gf65p7k","category_id":"clayzoefq00018svk4f0e46oe","_id":"clayzoeg500048svk3erwg9qz"}],"PostTag":[{"post_id":"cla6mrt1x0001jsvk68k5akco","tag_id":"cla6mrt250005jsvk8s1j2f7s","_id":"cla6mrt2c000ejsvkh4g12isq"},{"post_id":"cla6mrt220003jsvk8rigfv8n","tag_id":"cla6mrt2b000djsvk02h5cjqz","_id":"cla6mrt2m000rjsvkdd2chbzh"},{"post_id":"cla6mrt220003jsvk8rigfv8n","tag_id":"cla6mrt2g000ljsvk5y5d2rfn","_id":"cla6mrt2m000tjsvk3q9bah8z"},{"post_id":"cla6mrt270007jsvkh97a47be","tag_id":"cla6mrt2k000pjsvk5ekp1pqh","_id":"cla6mrt2r000xjsvk3ffj3orz"},{"post_id":"cla6mrt290009jsvk0ssa5p4z","tag_id":"cla6mrt2n000vjsvk3scgeae7","_id":"cla6mrt2u0013jsvkgrmx33ah"},{"post_id":"cla6mrt2a000bjsvkbfytg7zg","tag_id":"cla6mrt2t0012jsvk8g8oggtf","_id":"cla6mrt2x001ajsvkhceaesa9"},{"post_id":"cla6mrt2d000gjsvk3vgggoy7","tag_id":"cla6mrt2w0018jsvk7dt255zz","_id":"cla6mrt32001hjsvk913tbdak"},{"post_id":"cla6mrt2f000ijsvkgkvg7csp","tag_id":"cla6mrt30001ejsvk8ef2aw8a","_id":"cla6mrt36001njsvk2lwn2ycz"},{"post_id":"cla6mrt2i000mjsvk5h7f8yir","tag_id":"cla6mrt34001ljsvkbe03cfph","_id":"cla6mrt39001ujsvkeym1eumg"},{"post_id":"cla6mrt2j000njsvk7wey5uo1","tag_id":"cla6mrt39001sjsvk6frm4zro","_id":"cla6mrt3c0022jsvk67z0hyy7"},{"post_id":"cla6mrt2l000qjsvkgw8ogtss","tag_id":"cla6mrt3b001zjsvk6k6x5i5w","_id":"cla6mrt3f0028jsvk9e440962"},{"post_id":"cla6mrt2m000sjsvkehj0ffof","tag_id":"cla6mrt3b001zjsvk6k6x5i5w","_id":"cla6mrt3j002ejsvk2jfz62x1"},{"post_id":"cla6mrt2n000wjsvkcthd3nvs","tag_id":"cla6mrt3b001zjsvk6k6x5i5w","_id":"cla6mrt3n002ojsvk3crj5744"},{"post_id":"cla6mrt2n000wjsvkcthd3nvs","tag_id":"cla6mrt3k002hjsvk9grq6vtp","_id":"cla6mrt3o002sjsvkeu4hfbah"},{"post_id":"cla6mrt3n002pjsvk4gvx9ueu","tag_id":"cla6mrt2k000pjsvk5ekp1pqh","_id":"cla6mrt3p002vjsvkhtgyg11f"},{"post_id":"cla6mrt2r000yjsvkd4aq104o","tag_id":"cla6mrt3m002mjsvkef3tc92d","_id":"cla6mrt3q002zjsvk4ki6etd2"},{"post_id":"cla6mrt2t0011jsvkbdelhips","tag_id":"cla6mrt3p002ujsvkbhth572c","_id":"cla6mrt3s0033jsvkd8y883cm"},{"post_id":"cla6mrt3q0030jsvkdbyactkj","tag_id":"cla6mrt2g000ljsvk5y5d2rfn","_id":"cla6mrt3t0037jsvk86fy9yye"},{"post_id":"cla6mrt2u0014jsvkb6z3gddp","tag_id":"cla6mrt3r0031jsvk1oar36um","_id":"cla6mrt3u003ajsvkbpapa6tw"},{"post_id":"cla6mrt3u0039jsvkdw9m31df","tag_id":"cla6mrt3b001zjsvk6k6x5i5w","_id":"cla6mrt3v003ejsvk4t1q0x72"},{"post_id":"cla6mrt2v0016jsvk7c4varn4","tag_id":"cla6mrt3t0038jsvke0vb936z","_id":"cla6mrt3w003hjsvk1ppzawl8"},{"post_id":"cla6mrt3v003gjsvk92ma69kp","tag_id":"cla6mrt2g000ljsvk5y5d2rfn","_id":"cla6mrt3x003ljsvkaaaldc28"},{"post_id":"cla6mrt2x001bjsvk0gacalkh","tag_id":"cla6mrt2g000ljsvk5y5d2rfn","_id":"cla6mrt3y003pjsvk8utu1u37"},{"post_id":"cla6mrt2x001bjsvk0gacalkh","tag_id":"cla6mrt3v003fjsvk5lmi0d17","_id":"cla6mrt3z003tjsvk6zpcba5l"},{"post_id":"cla6mrt30001fjsvkgk9i20py","tag_id":"cla6mrt3y003ojsvk2akn7p59","_id":"cla6mrt42003yjsvk5rshhy3u"},{"post_id":"cla6mrt32001ijsvk9rxfbaxx","tag_id":"cla6mrt3y003ojsvk2akn7p59","_id":"cla6mrt450044jsvkh9zibvny"},{"post_id":"cla6mrt440043jsvkgysi0nyc","tag_id":"cla6mrt3y003ojsvk2akn7p59","_id":"cla6mrt460049jsvk67s885k9"},{"post_id":"cla6mrt35001mjsvkboet5p6g","tag_id":"cla6mrt440042jsvkhrgpg642","_id":"cla6mrt47004bjsvk67z26fjb"},{"post_id":"cla6mrt450047jsvkcxh7bayk","tag_id":"cla6mrt2k000pjsvk5ekp1pqh","_id":"cla6mrt48004ejsvkhxbeag0t"},{"post_id":"cla6mrt36001ojsvk6cimdfpo","tag_id":"cla6mrt460048jsvkbwybhp23","_id":"cla6mrt49004hjsvkb4om9gte"},{"post_id":"cla6mrt48004gjsvkczfd4cn4","tag_id":"cla6mrt2k000pjsvk5ekp1pqh","_id":"cla6mrt4a004ljsvkd1g25zvu"},{"post_id":"cla6mrt49004ijsvkcdpyczwk","tag_id":"cla6mrt2k000pjsvk5ekp1pqh","_id":"cla6mrt4b004ojsvk07nves01"},{"post_id":"cla6mrt38001rjsvk7kdv682f","tag_id":"cla6mrt48004fjsvk8tje6v76","_id":"cla6mrt4c004sjsvke7ijacyh"},{"post_id":"cla6mrt4a004mjsvkfkny0o6p","tag_id":"cla6mrt2k000pjsvk5ekp1pqh","_id":"cla6mrt4c004wjsvkaam37e6e"},{"post_id":"cla6mrt4b004pjsvk3sosdy7z","tag_id":"cla6mrt2k000pjsvk5ekp1pqh","_id":"cla6mrt4d0050jsvk8q7l97xo"},{"post_id":"cla6mrt39001vjsvk9jyi7l1e","tag_id":"cla6mrt4a004njsvkgu5gchms","_id":"cla6mrt4f0054jsvk9zwp3yg4"},{"post_id":"cla6mrt39001vjsvk9jyi7l1e","tag_id":"cla6mrt4c004vjsvk6qx73jpx","_id":"cla6mrt4g0057jsvkdzrgg9o5"},{"post_id":"cla6mrt4e0051jsvk28z44bvz","tag_id":"cla6mrt2g000ljsvk5y5d2rfn","_id":"cla6mrt4j005ajsvk6hc9h1hs"},{"post_id":"cla6mrt3a001yjsvkatqr8snd","tag_id":"cla6mrt4e0052jsvk21rfcqby","_id":"cla6mrt4k005cjsvka8ouhnah"},{"post_id":"cla6mrt3b0021jsvk9pvgar4g","tag_id":"cla6mrt4h0058jsvk7u271vm0","_id":"cla6mrt4l005ijsvkfv6h1vaq"},{"post_id":"cla6mrt3b0021jsvk9pvgar4g","tag_id":"cla6mrt4k005djsvk05yeg6di","_id":"cla6mrt4l005kjsvk8kdna0tg"},{"post_id":"cla6mrt3d0025jsvkbxqab7iw","tag_id":"cla6mrt4l005fjsvke4zze5go","_id":"cla6mrt4m005pjsvk25fda3b8"},{"post_id":"cla6mrt3d0025jsvkbxqab7iw","tag_id":"cla6mrt4l005ljsvkhfgs43jj","_id":"cla6mrt4n005qjsvk1h8oe0zc"},{"post_id":"cla6mrt3e0027jsvkhp3i3q3r","tag_id":"cla6mrt4m005ojsvk3mhc0ykx","_id":"cla6mrt4r005vjsvke2ku92jh"},{"post_id":"cla6mrt3e0027jsvkhp3i3q3r","tag_id":"cla6mrt4l005ljsvkhfgs43jj","_id":"cla6mrt4r005wjsvke5bhdmek"},{"post_id":"cla6mrt3g002bjsvk2lwhcrm8","tag_id":"cla6mrt4q005ujsvk704f53jj","_id":"cla6mrt4s0061jsvkapsp2pqa"},{"post_id":"cla6mrt3h002djsvkb4bj9ev3","tag_id":"cla6mrt2g000ljsvk5y5d2rfn","_id":"cla6mrt4t0066jsvk35g3bqjy"},{"post_id":"cla6mrt3h002djsvkb4bj9ev3","tag_id":"cla6mrt4r005zjsvkanz2hj01","_id":"cla6mrt4u0069jsvkcwwpg2el"},{"post_id":"cla6mrt3l002jjsvkh2iq8kwi","tag_id":"cla6mrt4t0064jsvkfl4v025i","_id":"cla6mrt4u006cjsvk2dgm0n04"},{"post_id":"cla6mrt3m002njsvkabi1h4vm","tag_id":"cla6mrt4u006ajsvkdqsqg6x7","_id":"cla6mrt4x006fjsvk8cn244n8"},{"post_id":"cla6mrt3o002tjsvkh6weh2jz","tag_id":"cla6mrt4t0064jsvkfl4v025i","_id":"cla6mrt4z006kjsvk0hwwhloq"},{"post_id":"cla6mrt3p002wjsvkcyaveq55","tag_id":"cla6mrt4z006ijsvk14rj2rv6","_id":"cla6mrt50006pjsvk2vgge64c"},{"post_id":"cla6mrt3r0032jsvk53iydbjr","tag_id":"cla6mrt4t0064jsvkfl4v025i","_id":"cla6mrt51006ujsvkf0khenfq"},{"post_id":"cla6mrt3s0036jsvk7fjqg3nl","tag_id":"cla6mrt4t0064jsvkfl4v025i","_id":"cla6mrt52006zjsvk2ceyedyk"},{"post_id":"cla6mrt3u003cjsvkhkis237e","tag_id":"cla6mrt51006wjsvk69vhg48q","_id":"cla6mrt530074jsvk3jpb7jaa"},{"post_id":"cla6mrt3w003ijsvk3ucd08z6","tag_id":"cla6mrt520072jsvkbyl6gnnx","_id":"cla6mrt55007ajsvk5l4i45j9"},{"post_id":"cla6mrt3x003mjsvk3m22hpgw","tag_id":"cla6mrt4t0064jsvkfl4v025i","_id":"cla6mrt56007fjsvk9n2tbsxg"},{"post_id":"cla6mrt3y003qjsvk6i683inl","tag_id":"cla6mrt51006wjsvk69vhg48q","_id":"cla6mrt57007kjsvkb3qz1907"},{"post_id":"cla6mrt40003ujsvkdnmi4ali","tag_id":"cla6mrt4t0064jsvkfl4v025i","_id":"cla6mrt57007ojsvk7h6733f2"},{"post_id":"cla6mrt430041jsvk2pxearlf","tag_id":"cla6mrt4z006ijsvk14rj2rv6","_id":"cla6mrt58007tjsvkb6xg0a0m"},{"post_id":"cla6mrt46004ajsvk1lnr29my","tag_id":"cla6mrt4z006ijsvk14rj2rv6","_id":"cla6mrt59007yjsvkfi5gfxs2"},{"post_id":"cla6mrt47004cjsvkcbdtc6jq","tag_id":"cla6mrt51006wjsvk69vhg48q","_id":"cla6mrt590083jsvk26w6abwd"},{"post_id":"cla6mrt4c004tjsvk27t2bqr5","tag_id":"cla6mrt590081jsvk2ybd1s36","_id":"cla6mrt5a0088jsvk8qm36s7x"},{"post_id":"cla6mrt4d004xjsvk8jnz1pvy","tag_id":"cla6mrt4t0064jsvkfl4v025i","_id":"cla6mrt5b008djsvk7sc6hvyr"},{"post_id":"cla6mrt4e0053jsvk13gfhjem","tag_id":"cla6mrt4z006ijsvk14rj2rv6","_id":"cla6mrt5c008ijsvk4i2ha5y0"},{"post_id":"cla6mrt4f0056jsvk69u3amuc","tag_id":"cla6mrt4z006ijsvk14rj2rv6","_id":"cla6mrt5c008mjsvk5wzvclqh"},{"post_id":"cla6mrt4h0059jsvk5n6cf57i","tag_id":"cla6mrt4z006ijsvk14rj2rv6","_id":"cla6mrt5c008pjsvk2n9bdlgm"},{"post_id":"clayzoefk00008svk1gf65p7k","tag_id":"clayzoeg300028svkg77734wz","_id":"clayzoeg500038svk3wiragvg"}],"Tag":[{"name":"CMD","_id":"cla6mrt250005jsvk8s1j2f7s"},{"name":"css","_id":"cla6mrt2b000djsvk02h5cjqz"},{"name":"前端","_id":"cla6mrt2g000ljsvk5y5d2rfn"},{"name":"GIS空间分析","_id":"cla6mrt2k000pjsvk5ekp1pqh"},{"name":"题目","_id":"cla6mrt2n000vjsvk3scgeae7"},{"name":"tips","_id":"cla6mrt2t0012jsvk8g8oggtf"},{"name":"PowerShell","_id":"cla6mrt2w0018jsvk7dt255zz"},{"name":"markdown","_id":"cla6mrt30001ejsvk8ef2aw8a"},{"name":"GIS","_id":"cla6mrt34001ljsvkbe03cfph"},{"name":"SuperMapObjects","_id":"cla6mrt39001sjsvk6frm4zro"},{"name":"Supermap","_id":"cla6mrt3b001zjsvk6k6x5i5w"},{"name":"编程","_id":"cla6mrt3k002hjsvk9grq6vtp"},{"name":"comments","_id":"cla6mrt3m002mjsvkef3tc92d"},{"name":"docker","_id":"cla6mrt3p002ujsvkbhth572c"},{"name":"网站","_id":"cla6mrt3r0031jsvk1oar36um"},{"name":"git","_id":"cla6mrt3t0038jsvke0vb936z"},{"name":"HTML","_id":"cla6mrt3v003fjsvk5lmi0d17"},{"name":"linux","_id":"cla6mrt3y003ojsvk2akn7p59"},{"name":"sql","_id":"cla6mrt440042jsvkhrgpg642"},{"name":"npm","_id":"cla6mrt460048jsvkbwybhp23"},{"name":"php","_id":"cla6mrt48004fjsvk8tje6v76"},{"name":"leaflet","_id":"cla6mrt4a004njsvkgu5gchms"},{"name":"draw","_id":"cla6mrt4c004vjsvk6qx73jpx"},{"name":"supermap","_id":"cla6mrt4e0052jsvk21rfcqby"},{"name":"工具","_id":"cla6mrt4h0058jsvk7u271vm0"},{"name":"tool","_id":"cla6mrt4k005djsvk05yeg6di"},{"name":"typora","_id":"cla6mrt4l005fjsvke4zze5go"},{"name":"快捷键","_id":"cla6mrt4l005ljsvkhfgs43jj"},{"name":"vscode","_id":"cla6mrt4m005ojsvk3mhc0ykx"},{"name":"youtube-dl","_id":"cla6mrt4q005ujsvk704f53jj"},{"name":"vue","_id":"cla6mrt4r005zjsvkanz2hj01"},{"name":"摄影测量","_id":"cla6mrt4t0064jsvkfl4v025i"},{"name":"傻妞","_id":"cla6mrt4u006ajsvkdqsqg6x7"},{"name":"遥感","_id":"cla6mrt4z006ijsvk14rj2rv6"},{"name":"地理信息科学","_id":"cla6mrt51006wjsvk69vhg48q"},{"name":"config","_id":"cla6mrt520072jsvkbyl6gnnx"},{"name":"翻墙","_id":"cla6mrt590081jsvk2ybd1s36"},{"name":"react","_id":"clayzoeg300028svkg77734wz"}]}}