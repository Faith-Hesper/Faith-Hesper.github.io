define(["./PrimitivePipeline-7bd2b931","./createTaskProcessorWorker-03824364","./Transforms-b1e48e05","./Cartesian3-e96ac170","./defaultValue-9f6a6288","./defined-64766648","./Math-56779564","./Ellipsoid-fa58f06f","./GeographicProjection-868b0b16","./Matrix3-59918a96","./Matrix2-e52b9454","./RuntimeError-cfbf2bc8","./Cartesian2-0a34ed75","./Resource-be841477","./combine-ac72e009","./defer-7878b392","./ComponentDatatype-63fd8cd4","./WebGLConstants-7f557f93","./Geometry-dd0ae099","./GeometryAttribute-5ac032ac","./GeometryAttributes-3de79df5","./GeometryPipeline-92c34dd1","./AttributeCompression-44abee07","./EncodedCartesian3-e0f0a7d1","./IndexDatatype-ed8b21cb","./IntersectionTests-39c3b1c1","./Plane-f9bf6226","./WebMercatorProjection-78306e76"],(function(e,t,r,i,o,n,a,s,m,c,P,p,u,l,b,d,y,G,f,C,k,v,M,T,W,h,j,x){"use strict";return t.createTaskProcessorWorker((function(t,r){const i=e.PrimitivePipeline.unpackCombineGeometryParameters(t),o=e.PrimitivePipeline.combineGeometry(i);return e.PrimitivePipeline.packCombineGeometryResults(o,r)}))}));
