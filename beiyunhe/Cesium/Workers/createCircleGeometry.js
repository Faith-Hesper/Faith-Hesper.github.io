define(["./Cartesian3-e96ac170","./defaultValue-9f6a6288","./defined-64766648","./EllipseGeometry-3694744c","./Ellipsoid-fa58f06f","./VertexFormat-01d05a0d","./Math-56779564","./Transforms-b1e48e05","./GeographicProjection-868b0b16","./Matrix3-59918a96","./Matrix2-e52b9454","./RuntimeError-cfbf2bc8","./Cartesian2-0a34ed75","./Resource-be841477","./combine-ac72e009","./defer-7878b392","./ComponentDatatype-63fd8cd4","./WebGLConstants-7f557f93","./EllipseGeometryLibrary-6f58b026","./Geometry-dd0ae099","./GeometryAttribute-5ac032ac","./GeometryAttributes-3de79df5","./GeometryInstance-a555221e","./GeometryOffsetAttribute-2579b8d2","./GeometryPipeline-92c34dd1","./AttributeCompression-44abee07","./EncodedCartesian3-e0f0a7d1","./IndexDatatype-ed8b21cb","./IntersectionTests-39c3b1c1","./Plane-f9bf6226"],(function(e,t,i,r,o,n,s,l,a,m,d,u,p,c,y,_,G,x,h,g,f,E,w,v,A,M,C,V,R,F){"use strict";function j(e){const i=(e=t.defaultValue(e,t.defaultValue.EMPTY_OBJECT)).radius,o={center:e.center,semiMajorAxis:i,semiMinorAxis:i,ellipsoid:e.ellipsoid,height:e.height,extrudedHeight:e.extrudedHeight,granularity:e.granularity,vertexFormat:e.vertexFormat,stRotation:e.stRotation,shadowVolume:e.shadowVolume};this._ellipseGeometry=new r.EllipseGeometry(o),this._workerName="createCircleGeometry"}j.packedLength=r.EllipseGeometry.packedLength,j.pack=function(e,t,i){return r.EllipseGeometry.pack(e._ellipseGeometry,t,i)};const b=new r.EllipseGeometry({center:new e.Cartesian3,semiMajorAxis:1,semiMinorAxis:1}),k={center:new e.Cartesian3,radius:void 0,ellipsoid:o.Ellipsoid.clone(o.Ellipsoid.UNIT_SPHERE),height:void 0,extrudedHeight:void 0,granularity:void 0,vertexFormat:new n.VertexFormat,stRotation:void 0,semiMajorAxis:void 0,semiMinorAxis:void 0,shadowVolume:void 0};return j.unpack=function(t,s,l){const a=r.EllipseGeometry.unpack(t,s,b);return k.center=e.Cartesian3.clone(a._center,k.center),k.ellipsoid=o.Ellipsoid.clone(a._ellipsoid,k.ellipsoid),k.height=a._height,k.extrudedHeight=a._extrudedHeight,k.granularity=a._granularity,k.vertexFormat=n.VertexFormat.clone(a._vertexFormat,k.vertexFormat),k.stRotation=a._stRotation,k.shadowVolume=a._shadowVolume,i.defined(l)?(k.semiMajorAxis=a._semiMajorAxis,k.semiMinorAxis=a._semiMinorAxis,l._ellipseGeometry=new r.EllipseGeometry(k),l):(k.radius=a._semiMajorAxis,new j(k))},j.createGeometry=function(e){return r.EllipseGeometry.createGeometry(e._ellipseGeometry)},j.createShadowVolume=function(e,t,i){const r=e._ellipseGeometry._granularity,o=e._ellipseGeometry._ellipsoid,s=t(r,o),l=i(r,o);return new j({center:e._ellipseGeometry._center,radius:e._ellipseGeometry._semiMajorAxis,ellipsoid:o,stRotation:e._ellipseGeometry._stRotation,granularity:r,extrudedHeight:s,height:l,vertexFormat:n.VertexFormat.POSITION_ONLY,shadowVolume:!0})},Object.defineProperties(j.prototype,{rectangle:{get:function(){return this._ellipseGeometry.rectangle}},textureCoordinateRotationPoints:{get:function(){return this._ellipseGeometry.textureCoordinateRotationPoints}}}),function(t,r){return i.defined(r)&&(t=j.unpack(t,r)),t._ellipseGeometry._center=e.Cartesian3.clone(t._ellipseGeometry._center),t._ellipseGeometry._ellipsoid=o.Ellipsoid.clone(t._ellipseGeometry._ellipsoid),j.createGeometry(t)}}));
