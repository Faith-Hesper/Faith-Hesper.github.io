define(["./createTaskProcessorWorker-03824364","./Resource-be841477","./Cartesian3-e96ac170","./HouseDrawer","./snappyJs","./GetPrimitiveData","./PolygonBuffer","./defer-7878b392","./defaultValue-9f6a6288","./defined-64766648","./Math-56779564","./combine-ac72e009","./RuntimeError-cfbf2bc8","./Color-cad7c885","./Transforms-b1e48e05","./Ellipsoid-fa58f06f","./GeographicProjection-868b0b16","./Matrix3-59918a96","./Matrix2-e52b9454","./Cartesian2-0a34ed75","./ComponentDatatype-63fd8cd4","./WebGLConstants-7f557f93","./GeometryInstance-a555221e","./PolygonGeometry-9ef51ca3","./ArcType-26a3f38d","./BoundingRectangle-3100662d","./EllipsoidGeodesic-9e013872","./EllipsoidTangentPlane-8f36a7e0","./AxisAlignedBoundingBox-8b4e9f9c","./IntersectionTests-39c3b1c1","./Plane-f9bf6226","./Geometry-dd0ae099","./GeometryAttribute-5ac032ac","./GeometryOffsetAttribute-2579b8d2","./GeometryPipeline-92c34dd1","./AttributeCompression-44abee07","./EncodedCartesian3-e0f0a7d1","./IndexDatatype-ed8b21cb","./PolygonGeometryLibrary-37fe200f","./arrayRemoveDuplicates-d0608faf","./EllipsoidRhumbLine-cea00df6","./GeometryAttributes-3de79df5","./PolygonPipeline-d79010c3","./VertexFormat-01d05a0d","./PolygonOutlineGeometry-9f19e302","./Texture-3b0b528f","./PixelFormat-5109196d","./PrimitivePipeline-7bd2b931","./WebMercatorProjection-78306e76","./GetRidingLanternGeometry","./turf.min"],(function(e,t,r,n,o,l,i,s,a,f,u,c,h,y,g,p,m,d,P,v,G,b,A,C,w,x,D,S,B,E,F,R,T,I,L,j,k,M,O,V,W,q,J,N,H,_,U,z,$,K,Q){"use strict";let X,Y=512,Z="",ee={};function te(e,t){let r=t.rectangle;for(var n=[],o=0;o<e.length;o++){var l=re(e[o],e[o+1],r);n.push(l[0]),n.push(l[1]),o++}return n}function re(e,t,r){var n=ne(r.west+r.width/Y*e),o=ne(r.north-r.height/Y*t);return[n=Number(n.toFixed(6)),o=Number(o.toFixed(6))]}function ne(e){return 180*e/Math.PI}function oe(e,t){if(Array.isArray(t[0])){let r=t.length;for(let n=0;n<r;n++){oe(e,t[n])}}else e.push(t)}function le(e,t){if("F"!=e[0])if(Array.isArray(e[0])){let r=e.length;for(let n=0;n<r;n++){le(e[n],t)}}else t&&function(e){let t=[e[0],e[1]];for(let r=2;r<e.length;r++){let n=t[0]+e[r],o=t[1]+e[r+1];e[r]=n,e[r+1]=o,t=[n,o],r++}}(e);else e[0]=[.05*-Y,.05*-Y,1.05*Y,.05*-Y,1.05*Y,1.05*Y,.05*-Y,1.05*Y]}return e.createTaskProcessorWorker((function(e,a){if(1==e.init)return void function(e){let t=s.defer();X=new Function("drawer","level",e.styleStr),Y=e.tileSize,Z=e.return_type,ee=e,t.resolve({}),t.promise}(e);var f,u=e.url,c=new t.Resource({url:u});if(c.request.throttle=!1,c.request.throttleByServer=!0,c.request.type=1,!(f="stream_snappy"==Z?c.fetchArrayBuffer():c.fetchJson()))return!0;let h=s.defer();return f.then((function(t){if(t||(t={}),"stream_snappy"==Z){t=o(t);let e=function(e){let t=[],r=0,n=0;for(;r<e.length;){let o=e[r++];if(o<128)t[n++]=o;else if(o>191&&o<224){let l=e[r++];t[n++]=(31&o)<<6|63&l}else if(o>239&&o<365){let l=((7&o)<<18|(63&e[r++])<<12|(63&e[r++])<<6|63&e[r++])-65536;t[n++]=55296+(l>>10),t[n++]=56320+(1023&l)}else{let l=e[r++],i=e[r++];t[n++]=(15&o)<<12|(63&l)<<6|63&i}}let o=[],l=0,i=0,s=0,a=5e4,f=t.length/a-1;for(l=0;l<f;l++)i=l*a,s=(l+1)*a,o.push(String.fromCharCode.apply({},t.slice(i,s)));return i=l*a,s=t.length,o.push(String.fromCharCode.apply({},t.slice(i,s))),o=o.join(""),o}(new Uint8Array(t));t=JSON.parse(e)}let s=function(e,t){if(e&&e.layer){(function(e,t){for(let r in e){let n=e[r].features;n||(n=e[r].datas);for(let e=0;e<n.length;e++)le(n[e][2],t)}})(e=e.layer,t.needDecode);let r={},o=new n([e],t.level,r,t.controlVector,t.highLightVector,t.filterLayerId);return X.call({},o,t.level),function(e){for(let t in e){let r=e[t];for(let e=0;e<r.length;e++){let t=r[e],n=[];oe(n,t.data),delete t.data,t.geometrys=n;let o=0;if(ee.hasOwnProperty("heightProperty")){let e=ee.heightProperty;o=t.properties[e],ee.hasOwnProperty("heightScale")&&(o*=parseFloat(ee.heightScale))}t.height=o,t.totalHeight=o}}}(r),r}return{}}(t,e);!function(e,t){for(let r in e){let n=e[r];for(let e=0;e<n.length;e++){let r=n[e];r.polygons=[];for(let e=0;e<r.geometrys.length;e++){let n=te(r.geometrys[e],t);r.polygons.push(n)}delete r.geometrys}}}(s,e),0!=e.bufferDistance&&i.buffer(s,.001*e.bufferDistance),function(e){for(let t in e){e[t].map((e=>{let t=[];for(let n=0;n<e.geometrys.length;n++){let o=e.geometrys[n],l=[];for(let e=0;e<o.length;e++){let t=o[e],n=o[e+1],i=r.Cartesian3.fromDegrees(t,n);l.push(i),e++}t.push(l)}e.polygons=t,delete e.geometrys}))}}(s);let f=l(s,e.level,ee,a);h.resolve(f)}),(function(e){h.reject(e)})),h.promise}))}));
