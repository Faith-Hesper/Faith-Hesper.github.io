define(["exports","./Ellipsoid-fa58f06f","./defaultValue-9f6a6288","./defined-64766648","./Math-56779564"],(function(t,e,n,a,u){"use strict";function i(t,e,a,u){this.west=n.defaultValue(t,0),this.south=n.defaultValue(e,0),this.east=n.defaultValue(a,0),this.north=n.defaultValue(u,0)}Object.defineProperties(i.prototype,{width:{get:function(){return i.computeWidth(this)}},height:{get:function(){return i.computeHeight(this)}}}),i.packedLength=4,i.pack=function(t,e,a){return a=n.defaultValue(a,0),e[a++]=t.west,e[a++]=t.south,e[a++]=t.east,e[a]=t.north,e},i.unpack=function(t,e,u){return e=n.defaultValue(e,0),a.defined(u)||(u=new i),u.west=t[e++],u.south=t[e++],u.east=t[e++],u.north=t[e],u},i.computeWidth=function(t){let e=t.east;const n=t.west;return e<n&&(e+=u.CesiumMath.TWO_PI),e-n},i.computeHeight=function(t){return t.north-t.south},i.fromDegrees=function(t,e,o,s,r){return t=u.CesiumMath.toRadians(n.defaultValue(t,0)),e=u.CesiumMath.toRadians(n.defaultValue(e,0)),o=u.CesiumMath.toRadians(n.defaultValue(o,0)),s=u.CesiumMath.toRadians(n.defaultValue(s,0)),a.defined(r)?(r.west=t,r.south=e,r.east=o,r.north=s,r):new i(t,e,o,s)},i.fromRadians=function(t,e,u,o,s){return a.defined(s)?(s.west=n.defaultValue(t,0),s.south=n.defaultValue(e,0),s.east=n.defaultValue(u,0),s.north=n.defaultValue(o,0),s):new i(t,e,u,o)},i.fromCartographicArray=function(t,e){let n=Number.MAX_VALUE,o=-Number.MAX_VALUE,s=Number.MAX_VALUE,r=-Number.MAX_VALUE,h=Number.MAX_VALUE,l=-Number.MAX_VALUE;for(let e=0,a=t.length;e<a;e++){const a=t[e];n=Math.min(n,a.longitude),o=Math.max(o,a.longitude),h=Math.min(h,a.latitude),l=Math.max(l,a.latitude);const i=a.longitude>=0?a.longitude:a.longitude+u.CesiumMath.TWO_PI;s=Math.min(s,i),r=Math.max(r,i)}return o-n>r-s&&(n=s,o=r,o>u.CesiumMath.PI&&(o-=u.CesiumMath.TWO_PI),n>u.CesiumMath.PI&&(n-=u.CesiumMath.TWO_PI)),a.defined(e)?(e.west=n,e.south=h,e.east=o,e.north=l,e):new i(n,h,o,l)},i.fromCartesianArray=function(t,o,s){o=n.defaultValue(o,e.Ellipsoid.WGS84);let r=Number.MAX_VALUE,h=-Number.MAX_VALUE,l=Number.MAX_VALUE,c=-Number.MAX_VALUE,d=Number.MAX_VALUE,f=-Number.MAX_VALUE;for(let e=0,n=t.length;e<n;e++){const n=o.cartesianToCartographic(t[e]);r=Math.min(r,n.longitude),h=Math.max(h,n.longitude),d=Math.min(d,n.latitude),f=Math.max(f,n.latitude);const a=n.longitude>=0?n.longitude:n.longitude+u.CesiumMath.TWO_PI;l=Math.min(l,a),c=Math.max(c,a)}return h-r>c-l&&(r=l,h=c,h>u.CesiumMath.PI&&(h-=u.CesiumMath.TWO_PI),r>u.CesiumMath.PI&&(r-=u.CesiumMath.TWO_PI)),a.defined(s)?(s.west=r,s.south=d,s.east=h,s.north=f,s):new i(r,d,h,f)},i.clone=function(t,e){if(a.defined(t))return a.defined(e)?(e.west=t.west,e.south=t.south,e.east=t.east,e.north=t.north,e):new i(t.west,t.south,t.east,t.north)},i.equalsEpsilon=function(t,e,u){return u=n.defaultValue(u,0),t===e||a.defined(t)&&a.defined(e)&&Math.abs(t.west-e.west)<=u&&Math.abs(t.south-e.south)<=u&&Math.abs(t.east-e.east)<=u&&Math.abs(t.north-e.north)<=u},i.prototype.clone=function(t){return i.clone(this,t)},i.prototype.equals=function(t){return i.equals(this,t)},i.equals=function(t,e){return t===e||a.defined(t)&&a.defined(e)&&t.west===e.west&&t.south===e.south&&t.east===e.east&&t.north===e.north},i.prototype.equalsEpsilon=function(t,e){return i.equalsEpsilon(this,t,e)},i.validate=function(t){},i.southwest=function(t,n){return a.defined(n)?(n.longitude=t.west,n.latitude=t.south,n.height=0,n):new e.Cartographic(t.west,t.south)},i.northwest=function(t,n){return a.defined(n)?(n.longitude=t.west,n.latitude=t.north,n.height=0,n):new e.Cartographic(t.west,t.north)},i.northeast=function(t,n){return a.defined(n)?(n.longitude=t.east,n.latitude=t.north,n.height=0,n):new e.Cartographic(t.east,t.north)},i.southeast=function(t,n){return a.defined(n)?(n.longitude=t.east,n.latitude=t.south,n.height=0,n):new e.Cartographic(t.east,t.south)},i.center=function(t,n){let i=t.east;const o=t.west;i<o&&(i+=u.CesiumMath.TWO_PI);const s=u.CesiumMath.negativePiToPi(.5*(o+i)),r=.5*(t.south+t.north);return a.defined(n)?(n.longitude=s,n.latitude=r,n.height=0,n):new e.Cartographic(s,r)},i.intersection=function(t,e,n){let o=t.east,s=t.west,r=e.east,h=e.west;o<s&&r>0?o+=u.CesiumMath.TWO_PI:r<h&&o>0&&(r+=u.CesiumMath.TWO_PI),o<s&&h<0?h+=u.CesiumMath.TWO_PI:r<h&&s<0&&(s+=u.CesiumMath.TWO_PI);const l=u.CesiumMath.negativePiToPi(Math.max(s,h)),c=u.CesiumMath.negativePiToPi(Math.min(o,r));if((t.west<t.east||e.west<e.east)&&c<=l)return;const d=Math.max(t.south,e.south),f=Math.min(t.north,e.north);return d>=f?void 0:a.defined(n)?(n.west=l,n.south=d,n.east=c,n.north=f,n):new i(l,d,c,f)},i.simpleIntersection=function(t,e,n){const u=Math.max(t.west,e.west),o=Math.max(t.south,e.south),s=Math.min(t.east,e.east),r=Math.min(t.north,e.north);if(!(o>=r||u>=s))return a.defined(n)?(n.west=u,n.south=o,n.east=s,n.north=r,n):new i(u,o,s,r)},i.union=function(t,e,n){a.defined(n)||(n=new i);let o=t.east,s=t.west,r=e.east,h=e.west;o<s&&r>0?o+=u.CesiumMath.TWO_PI:r<h&&o>0&&(r+=u.CesiumMath.TWO_PI),o<s&&h<0?h+=u.CesiumMath.TWO_PI:r<h&&s<0&&(s+=u.CesiumMath.TWO_PI);const l=u.CesiumMath.negativePiToPi(Math.min(s,h)),c=u.CesiumMath.negativePiToPi(Math.max(o,r));return n.west=l,n.south=Math.min(t.south,e.south),n.east=c,n.north=Math.max(t.north,e.north),n},i.expand=function(t,e,n){return a.defined(n)||(n=new i),n.west=Math.min(t.west,e.longitude),n.south=Math.min(t.south,e.latitude),n.east=Math.max(t.east,e.longitude),n.north=Math.max(t.north,e.latitude),n},i.contains=function(t,e){let n=e.longitude;const a=e.latitude,i=t.west;let o=t.east;return o<i&&(o+=u.CesiumMath.TWO_PI,n<0&&(n+=u.CesiumMath.TWO_PI)),(n>i||u.CesiumMath.equalsEpsilon(n,i,u.CesiumMath.EPSILON14))&&(n<o||u.CesiumMath.equalsEpsilon(n,o,u.CesiumMath.EPSILON14))&&a>=t.south&&a<=t.north};const o=new e.Cartographic;function s(t,e){this.x=n.defaultValue(t,0),this.y=n.defaultValue(e,0)}i.subsample=function(t,s,r,h){s=n.defaultValue(s,e.Ellipsoid.WGS84),r=n.defaultValue(r,0),a.defined(h)||(h=[]);let l=0;const c=t.north,d=t.south,f=t.east,m=t.west,M=o;M.height=r,M.longitude=m,M.latitude=c,h[l]=s.cartographicToCartesian(M,h[l]),l++,M.longitude=f,h[l]=s.cartographicToCartesian(M,h[l]),l++,M.latitude=d,h[l]=s.cartographicToCartesian(M,h[l]),l++,M.longitude=m,h[l]=s.cartographicToCartesian(M,h[l]),l++,M.latitude=c<0?c:d>0?d:0;for(let e=1;e<8;++e)M.longitude=-Math.PI+e*u.CesiumMath.PI_OVER_TWO,i.contains(t,M)&&(h[l]=s.cartographicToCartesian(M,h[l]),l++);return 0===M.latitude&&(M.longitude=m,h[l]=s.cartographicToCartesian(M,h[l]),l++,M.longitude=f,h[l]=s.cartographicToCartesian(M,h[l]),l++),h.length=l,h},i.subsection=function(t,e,n,o,s,r){if(a.defined(r)||(r=new i),t.west<=t.east){const n=t.east-t.west;r.west=t.west+e*n,r.east=t.west+o*n}else{const n=u.CesiumMath.TWO_PI+t.east-t.west;r.west=u.CesiumMath.negativePiToPi(t.west+e*n),r.east=u.CesiumMath.negativePiToPi(t.west+o*n)}const h=t.north-t.south;return r.south=t.south+n*h,r.north=t.south+s*h,1===e&&(r.west=t.east),1===o&&(r.east=t.east),1===n&&(r.south=t.north),1===s&&(r.north=t.north),r},i.MAX_VALUE=Object.freeze(new i(-Math.PI,-u.CesiumMath.PI_OVER_TWO,Math.PI,u.CesiumMath.PI_OVER_TWO)),s.fromElements=function(t,e,n){return a.defined(n)?(n.x=t,n.y=e,n):new s(t,e)},s.clone=function(t,e){if(a.defined(t))return a.defined(e)?(e.x=t.x,e.y=t.y,e):new s(t.x,t.y)},s.fromCartesian3=s.clone,s.fromCartesian4=s.clone,s.packedLength=2,s.pack=function(t,e,a){return a=n.defaultValue(a,0),e[a++]=t.x,e[a]=t.y,e},s.unpack=function(t,e,u){return e=n.defaultValue(e,0),a.defined(u)||(u=new s),u.x=t[e++],u.y=t[e],u},s.packArray=function(t,e){const n=t.length,u=2*n;a.defined(e)?(Array.isArray(e)||e.length===u)&&e.length!==u&&(e.length=u):e=new Array(u);for(let a=0;a<n;++a)s.pack(t[a],e,2*a);return e},s.unpackArray=function(t,e){const n=t.length;a.defined(e)?e.length=n/2:e=new Array(n/2);for(let a=0;a<n;a+=2){const n=a/2;e[n]=s.unpack(t,a,e[n])}return e},s.fromArray=s.unpack,s.maximumComponent=function(t){return Math.max(t.x,t.y)},s.minimumComponent=function(t){return Math.min(t.x,t.y)},s.minimumByComponent=function(t,e,n){return n.x=Math.min(t.x,e.x),n.y=Math.min(t.y,e.y),n},s.maximumByComponent=function(t,e,n){return n.x=Math.max(t.x,e.x),n.y=Math.max(t.y,e.y),n},s.clamp=function(t,e,n,a){const i=u.CesiumMath.clamp(t.x,e.x,n.x),o=u.CesiumMath.clamp(t.y,e.y,n.y);return a.x=i,a.y=o,a},s.magnitudeSquared=function(t){return t.x*t.x+t.y*t.y},s.magnitude=function(t){return Math.sqrt(s.magnitudeSquared(t))};const r=new s;s.distance=function(t,e){return s.subtract(t,e,r),s.magnitude(r)},s.distanceSquared=function(t,e){return s.subtract(t,e,r),s.magnitudeSquared(r)},s.normalize=function(t,e){const n=s.magnitude(t);return e.x=t.x/n,e.y=t.y/n,e},s.dot=function(t,e){return t.x*e.x+t.y*e.y},s.cross=function(t,e){return t.x*e.y-t.y*e.x},s.multiplyComponents=function(t,e,n){return n.x=t.x*e.x,n.y=t.y*e.y,n},s.divideComponents=function(t,e,n){return n.x=t.x/e.x,n.y=t.y/e.y,n},s.add=function(t,e,n){return n.x=t.x+e.x,n.y=t.y+e.y,n},s.subtract=function(t,e,n){return n.x=t.x-e.x,n.y=t.y-e.y,n},s.multiplyByScalar=function(t,e,n){return n.x=t.x*e,n.y=t.y*e,n},s.divideByScalar=function(t,e,n){return n.x=t.x/e,n.y=t.y/e,n},s.negate=function(t,e){return e.x=-t.x,e.y=-t.y,e},s.abs=function(t,e){return e.x=Math.abs(t.x),e.y=Math.abs(t.y),e};const h=new s;s.lerp=function(t,e,n,a){return s.multiplyByScalar(e,n,h),a=s.multiplyByScalar(t,1-n,a),s.add(h,a,a)};const l=new s,c=new s;s.angleBetween=function(t,e){return s.normalize(t,l),s.normalize(e,c),u.CesiumMath.acosClamped(s.dot(l,c))};const d=new s;s.mostOrthogonalAxis=function(t,e){const n=s.normalize(t,d);return s.abs(n,n),e=n.x<=n.y?s.clone(s.UNIT_X,e):s.clone(s.UNIT_Y,e)},s.equals=function(t,e){return t===e||a.defined(t)&&a.defined(e)&&t.x===e.x&&t.y===e.y},s.equalsArray=function(t,e,n){return t.x===e[n]&&t.y===e[n+1]},s.equalsEpsilon=function(t,e,n,i){return t===e||a.defined(t)&&a.defined(e)&&u.CesiumMath.equalsEpsilon(t.x,e.x,n,i)&&u.CesiumMath.equalsEpsilon(t.y,e.y,n,i)},s.ZERO=Object.freeze(new s(0,0)),s.ONE=Object.freeze(new s(1,1)),s.UNIT_X=Object.freeze(new s(1,0)),s.UNIT_Y=Object.freeze(new s(0,1)),s.prototype.clone=function(t){return s.clone(this,t)},s.prototype.equals=function(t){return s.equals(this,t)},s.prototype.equalsEpsilon=function(t,e,n){return s.equalsEpsilon(this,t,e,n)},s.prototype.toString=function(){return`(${this.x}, ${this.y})`},t.Cartesian2=s,t.Rectangle=i}));
