define(["exports","./arrayRemoveDuplicates-d0608faf","./Cartesian3-e96ac170","./Ellipsoid-fa58f06f","./defined-64766648","./Math-56779564","./PolylinePipeline-206d6e54"],(function(e,t,i,n,o,r,s){"use strict";const a={};function l(e,t){return r.CesiumMath.equalsEpsilon(e.latitude,t.latitude,r.CesiumMath.EPSILON10)&&r.CesiumMath.equalsEpsilon(e.longitude,t.longitude,r.CesiumMath.EPSILON10)}const h=new n.Cartographic,g=new n.Cartographic;const c=new Array(2),u=new Array(2),p={positions:void 0,height:void 0,granularity:void 0,ellipsoid:void 0};a.computePositions=function(e,a,d,y,m,P){const f=function(e,r,s,a){const c=(r=t.arrayRemoveDuplicates(r,i.Cartesian3.equalsEpsilon)).length;if(c<2)return;const u=o.defined(a),p=o.defined(s),d=new Array(c),y=new Array(c),m=new Array(c),P=r[0];d[0]=P;const f=e.cartesianToCartographic(P,h);p&&(f.height=s[0]),y[0]=f.height,m[0]=u?a[0]:0;let A=y[0]===m[0],C=1;for(let t=1;t<c;++t){const i=r[t],o=e.cartesianToCartographic(i,g);p&&(o.height=s[t]),A=A&&0===o.height,l(f,o)?f.height<o.height&&(y[C-1]=o.height):(d[C]=i,y[C]=o.height,m[C]=u?a[t]:0,A=A&&y[C]===m[C],n.Cartographic.clone(o,f),++C)}return A||C<2?void 0:(d.length=C,y.length=C,m.length=C,{positions:d,topHeights:y,bottomHeights:m})}(e,a,d,y);if(!o.defined(f))return;a=f.positions,d=f.topHeights,y=f.bottomHeights;const A=a.length,C=A-2;let w,v;const M=r.CesiumMath.chordLength(m,e.maximumRadius),E=p;if(E.minDistance=M,E.ellipsoid=e,P){let e,t=0;for(e=0;e<A-1;e++)t+=s.PolylinePipeline.numberOfPoints(a[e],a[e+1],M)+1;w=new Float64Array(3*t),v=new Float64Array(3*t);const i=c,n=u;E.positions=i,E.height=n;let o=0;for(e=0;e<A-1;e++){i[0]=a[e],i[1]=a[e+1],n[0]=d[e],n[1]=d[e+1];const t=s.PolylinePipeline.generateArc(E);w.set(t,o),n[0]=y[e],n[1]=y[e+1],v.set(s.PolylinePipeline.generateArc(E),o),o+=t.length}}else E.positions=a,E.height=d,w=new Float64Array(s.PolylinePipeline.generateArc(E)),E.height=y,v=new Float64Array(s.PolylinePipeline.generateArc(E));return{bottomPositions:v,topPositions:w,numCorners:C}};var d=a;e.WallGeometryLibrary=d}));
