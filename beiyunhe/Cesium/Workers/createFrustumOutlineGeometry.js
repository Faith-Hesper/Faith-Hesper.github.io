define(["./defined-64766648","./Transforms-b1e48e05","./Cartesian3-e96ac170","./ComponentDatatype-63fd8cd4","./defaultValue-9f6a6288","./FrustumGeometry-5fb70b48","./Geometry-dd0ae099","./GeometryAttribute-5ac032ac","./GeometryAttributes-3de79df5","./Ellipsoid-fa58f06f","./Math-56779564","./GeographicProjection-868b0b16","./Matrix3-59918a96","./Matrix2-e52b9454","./RuntimeError-cfbf2bc8","./Cartesian2-0a34ed75","./Resource-be841477","./combine-ac72e009","./defer-7878b392","./WebGLConstants-7f557f93","./Plane-f9bf6226","./VertexFormat-01d05a0d"],(function(e,t,r,n,a,i,u,o,s,c,p,m,h,d,f,l,g,_,k,y,F,P){"use strict";const w=0,L=1;function C(e){const n=e.frustum,u=e.orientation,o=e.origin,s=a.defaultValue(e._drawNearPlane,!0);let c,p;n instanceof i.PerspectiveFrustum?(c=w,p=i.PerspectiveFrustum.packedLength):n instanceof i.OrthographicFrustum&&(c=L,p=i.OrthographicFrustum.packedLength),this._frustumType=c,this._frustum=n.clone(),this._origin=r.Cartesian3.clone(o),this._orientation=t.Quaternion.clone(u),this._drawNearPlane=s,this._workerName="createFrustumOutlineGeometry",this.packedLength=2+p+r.Cartesian3.packedLength+t.Quaternion.packedLength}C.pack=function(e,n,u){u=a.defaultValue(u,0);const o=e._frustumType,s=e._frustum;return n[u++]=o,o===w?(i.PerspectiveFrustum.pack(s,n,u),u+=i.PerspectiveFrustum.packedLength):(i.OrthographicFrustum.pack(s,n,u),u+=i.OrthographicFrustum.packedLength),r.Cartesian3.pack(e._origin,n,u),u+=r.Cartesian3.packedLength,t.Quaternion.pack(e._orientation,n,u),n[u+=t.Quaternion.packedLength]=e._drawNearPlane?1:0,n};const G=new i.PerspectiveFrustum,v=new i.OrthographicFrustum,b=new t.Quaternion,N=new r.Cartesian3;return C.unpack=function(n,u,o){u=a.defaultValue(u,0);const s=n[u++];let c;s===w?(c=i.PerspectiveFrustum.unpack(n,u,G),u+=i.PerspectiveFrustum.packedLength):(c=i.OrthographicFrustum.unpack(n,u,v),u+=i.OrthographicFrustum.packedLength);const p=r.Cartesian3.unpack(n,u,N);u+=r.Cartesian3.packedLength;const m=t.Quaternion.unpack(n,u,b),h=1===n[u+=t.Quaternion.packedLength];if(!e.defined(o))return new C({frustum:c,origin:p,orientation:m,_drawNearPlane:h});const d=s===o._frustumType?o._frustum:void 0;return o._frustum=c.clone(d),o._frustumType=s,o._origin=r.Cartesian3.clone(p,o._origin),o._orientation=t.Quaternion.clone(m,o._orientation),o._drawNearPlane=h,o},C.createGeometry=function(e){const r=e._frustumType,a=e._frustum,c=e._origin,p=e._orientation,m=e._drawNearPlane,h=new Float64Array(24);i.FrustumGeometry._computeNearFarPlanes(c,p,r,a,h);const d=new s.GeometryAttributes({position:new o.GeometryAttribute({componentDatatype:n.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:h})});let f,l;const g=m?2:1,_=new Uint16Array(8*(g+1));let k=m?0:1;for(;k<2;++k)f=m?8*k:0,l=4*k,_[f]=l,_[f+1]=l+1,_[f+2]=l+1,_[f+3]=l+2,_[f+4]=l+2,_[f+5]=l+3,_[f+6]=l+3,_[f+7]=l;for(k=0;k<2;++k)f=8*(g+k),l=4*k,_[f]=l,_[f+1]=l+4,_[f+2]=l+1,_[f+3]=l+5,_[f+4]=l+2,_[f+5]=l+6,_[f+6]=l+3,_[f+7]=l+7;return new u.Geometry({attributes:d,indices:_,primitiveType:u.PrimitiveType.LINES,boundingSphere:t.BoundingSphere.fromVertices(h)})},function(t,r){return e.defined(r)&&(t=C.unpack(t,r)),C.createGeometry(t)}}));
