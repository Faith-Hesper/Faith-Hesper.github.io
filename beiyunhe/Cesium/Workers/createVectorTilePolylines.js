define(["./Cartesian3-e96ac170","./combine-ac72e009","./AttributeCompression-44abee07","./Ellipsoid-fa58f06f","./Math-56779564","./IndexDatatype-ed8b21cb","./Cartesian2-0a34ed75","./createTaskProcessorWorker-03824364","./defaultValue-9f6a6288","./defined-64766648","./ComponentDatatype-63fd8cd4","./WebGLConstants-7f557f93","./Matrix2-e52b9454","./Matrix3-59918a96","./RuntimeError-cfbf2bc8"],(function(e,t,a,n,r,s,i,o,c,u,f,p,d,l,C){"use strict";const b=32767,h=new n.Cartographic,w=new e.Cartesian3;const y=new i.Rectangle,k=new n.Ellipsoid,g=new e.Cartesian3,m={min:void 0,max:void 0};const A=new e.Cartesian3,x=new e.Cartesian3,E=new e.Cartesian3,D=new e.Cartesian3,I=new e.Cartesian3;return o.createTaskProcessorWorker((function(o,c){const u=new Uint16Array(o.positions),f=new Uint16Array(o.widths),p=new Uint32Array(o.counts),d=new Uint16Array(o.batchIds);!function(t){t=new Float64Array(t);let a=0;m.min=t[a++],m.max=t[a++],i.Rectangle.unpack(t,a,y),a+=i.Rectangle.packedLength,n.Ellipsoid.unpack(t,a,k),a+=n.Ellipsoid.packedLength,e.Cartesian3.unpack(t,a,g)}(o.packedBuffer);const l=k,C=g,P=function(t,s,i,o,c){const u=t.length/3,f=t.subarray(0,u),p=t.subarray(u,2*u),d=t.subarray(2*u,3*u);a.AttributeCompression.zigZagDeltaDecode(f,p,d);const l=new Float64Array(t.length);for(let t=0;t<u;++t){const a=f[t],u=p[t],C=d[t],y=r.CesiumMath.lerp(s.west,s.east,a/b),k=r.CesiumMath.lerp(s.south,s.north,u/b),g=r.CesiumMath.lerp(i,o,C/b),m=n.Cartographic.fromRadians(y,k,g,h),A=c.cartographicToCartesian(m,w);e.Cartesian3.pack(A,l,3*t)}return l}(u,y,m.min,m.max,l),T=P.length/3,U=4*T-4,M=new Float32Array(3*U),R=new Float32Array(3*U),F=new Float32Array(3*U),N=new Float32Array(2*U),L=new Uint16Array(U);let S,W=0,_=0,v=0,G=0,B=p.length;for(S=0;S<B;++S){const t=p[S],a=f[S],n=d[S];for(let r=0;r<t;++r){let s;if(0===r){const t=e.Cartesian3.unpack(P,3*G,A),a=e.Cartesian3.unpack(P,3*(G+1),x);s=e.Cartesian3.subtract(t,a,E),e.Cartesian3.add(t,s,s)}else s=e.Cartesian3.unpack(P,3*(G+r-1),E);const i=e.Cartesian3.unpack(P,3*(G+r),D);let o;if(r===t-1){const a=e.Cartesian3.unpack(P,3*(G+t-1),A),n=e.Cartesian3.unpack(P,3*(G+t-2),x);o=e.Cartesian3.subtract(a,n,I),e.Cartesian3.add(a,o,o)}else o=e.Cartesian3.unpack(P,3*(G+r+1),I);e.Cartesian3.subtract(s,C,s),e.Cartesian3.subtract(i,C,i),e.Cartesian3.subtract(o,C,o);const c=r===t-1?2:4;for(let t=0===r?2:0;t<c;++t){e.Cartesian3.pack(i,M,W),e.Cartesian3.pack(s,R,W),e.Cartesian3.pack(o,F,W),W+=3;const r=t-2<0?-1:1;N[_++]=t%2*2-1,N[_++]=r*a,L[v++]=n}}G+=t}const O=s.IndexDatatype.createTypedArray(U,6*T-6);let z=0,H=0;for(B=T-1,S=0;S<B;++S)O[H++]=z,O[H++]=z+2,O[H++]=z+1,O[H++]=z+1,O[H++]=z+2,O[H++]=z+3,z+=4;c.push(M.buffer,R.buffer,F.buffer),c.push(N.buffer,L.buffer,O.buffer);let V={indexDatatype:2===O.BYTES_PER_ELEMENT?s.IndexDatatype.UNSIGNED_SHORT:s.IndexDatatype.UNSIGNED_INT,currentPositions:M.buffer,previousPositions:R.buffer,nextPositions:F.buffer,expandAndWidth:N.buffer,batchIds:L.buffer,indices:O.buffer};if(o.keepDecodedPositions){const e=function(e){const t=e.length,a=new Uint32Array(t+1);let n=0;for(let r=0;r<t;++r)a[r]=n,n+=e[r];return a[t]=n,a}(p);c.push(P.buffer,e.buffer),V=t.combine(V,{decodedPositions:P.buffer,decodedPositionOffsets:e.buffer})}return V}))}));
