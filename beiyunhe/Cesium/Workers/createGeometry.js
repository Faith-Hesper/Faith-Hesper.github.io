define(["./defined-64766648","./PrimitivePipeline-7bd2b931","./createTaskProcessorWorker-03824364","./Transforms-b1e48e05","./Cartesian3-e96ac170","./defaultValue-9f6a6288","./Math-56779564","./Ellipsoid-fa58f06f","./GeographicProjection-868b0b16","./Matrix3-59918a96","./Matrix2-e52b9454","./RuntimeError-cfbf2bc8","./Cartesian2-0a34ed75","./Resource-be841477","./combine-ac72e009","./defer-7878b392","./ComponentDatatype-63fd8cd4","./WebGLConstants-7f557f93","./Geometry-dd0ae099","./GeometryAttribute-5ac032ac","./GeometryAttributes-3de79df5","./GeometryPipeline-92c34dd1","./AttributeCompression-44abee07","./EncodedCartesian3-e0f0a7d1","./IndexDatatype-ed8b21cb","./IntersectionTests-39c3b1c1","./Plane-f9bf6226","./WebMercatorProjection-78306e76"],(function(e,t,r,o,n,i,s,a,c,u,f,l,m,d,p,P,y,b,k,C,G,W,h,T,g,j,x,A){"use strict";const M={};function q(t){let r=M[t];return e.defined(r)||("object"==typeof exports?M[r]=r=require(`Workers/${t}`):require([`Workers/${t}`],(function(e){r=e,M[r]=e}))),r}return r.createTaskProcessorWorker((function(r,o){const n=r.subTasks,i=n.length,s=new Array(i);for(let t=0;t<i;t++){const r=n[t],o=r.geometry,i=r.moduleName;if(e.defined(i)){const e=q(i);s[t]=e(o,r.offset)}else s[t]=o}return Promise.all(s).then((function(e){return t.PrimitivePipeline.packCreateGeometryResults(e,o)}))}))}));
