define(["./defined-64766648","./Ellipsoid-fa58f06f","./arrayRemoveDuplicates-d0608faf","./BoundingRectangle-3100662d","./Transforms-b1e48e05","./Cartesian2-0a34ed75","./Cartesian3-e96ac170","./ComponentDatatype-63fd8cd4","./PolylineVolumeGeometryLibrary-b5caf6df","./defaultValue-9f6a6288","./Geometry-dd0ae099","./GeometryAttribute-5ac032ac","./GeometryAttributes-3de79df5","./IndexDatatype-ed8b21cb","./Math-56779564","./PolygonPipeline-d79010c3","./GeographicProjection-868b0b16","./Matrix3-59918a96","./Matrix2-e52b9454","./RuntimeError-cfbf2bc8","./Resource-be841477","./combine-ac72e009","./defer-7878b392","./WebGLConstants-7f557f93","./EllipsoidTangentPlane-8f36a7e0","./AxisAlignedBoundingBox-8b4e9f9c","./IntersectionTests-39c3b1c1","./Plane-f9bf6226","./PolylinePipeline-206d6e54","./EllipsoidGeodesic-9e013872","./EllipsoidRhumbLine-cea00df6"],(function(e,t,i,n,o,r,a,l,s,p,c,d,u,y,g,h,m,f,E,P,_,k,C,G,L,T,D,b,A,v,R){"use strict";function V(e){const i=(e=p.defaultValue(e,p.defaultValue.EMPTY_OBJECT)).polylinePositions,n=e.shapePositions;this._positions=i,this._shape=n,this._ellipsoid=t.Ellipsoid.clone(p.defaultValue(e.ellipsoid,t.Ellipsoid.WGS84)),this._cornerType=p.defaultValue(e.cornerType,s.CornerType.ROUNDED),this._granularity=p.defaultValue(e.granularity,g.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry";let o=1+i.length*a.Cartesian3.packedLength;o+=1+n.length*r.Cartesian2.packedLength,this.packedLength=o+t.Ellipsoid.packedLength+2}V.pack=function(e,i,n){let o;n=p.defaultValue(n,0);const l=e._positions;let s=l.length;for(i[n++]=s,o=0;o<s;++o,n+=a.Cartesian3.packedLength)a.Cartesian3.pack(l[o],i,n);const c=e._shape;for(s=c.length,i[n++]=s,o=0;o<s;++o,n+=r.Cartesian2.packedLength)r.Cartesian2.pack(c[o],i,n);return t.Ellipsoid.pack(e._ellipsoid,i,n),n+=t.Ellipsoid.packedLength,i[n++]=e._cornerType,i[n]=e._granularity,i};const B=t.Ellipsoid.clone(t.Ellipsoid.UNIT_SPHERE),w={polylinePositions:void 0,shapePositions:void 0,ellipsoid:B,height:void 0,cornerType:void 0,granularity:void 0};V.unpack=function(i,n,o){let l;n=p.defaultValue(n,0);let s=i[n++];const c=new Array(s);for(l=0;l<s;++l,n+=a.Cartesian3.packedLength)c[l]=a.Cartesian3.unpack(i,n);s=i[n++];const d=new Array(s);for(l=0;l<s;++l,n+=r.Cartesian2.packedLength)d[l]=r.Cartesian2.unpack(i,n);const u=t.Ellipsoid.unpack(i,n,B);n+=t.Ellipsoid.packedLength;const y=i[n++],g=i[n];return e.defined(o)?(o._positions=c,o._shape=d,o._ellipsoid=t.Ellipsoid.clone(u,o._ellipsoid),o._cornerType=y,o._granularity=g,o):(w.polylinePositions=c,w.shapePositions=d,w.cornerType=y,w.granularity=g,new V(w))};const I=new n.BoundingRectangle;return V.createGeometry=function(e){const t=e._positions,r=i.arrayRemoveDuplicates(t,a.Cartesian3.equalsEpsilon);let p=e._shape;if(p=s.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(p),r.length<2||p.length<3)return;h.PolygonPipeline.computeWindingOrder2D(p)===h.WindingOrder.CLOCKWISE&&p.reverse();const g=n.BoundingRectangle.fromPoints(p,I);return function(e,t){const i=new u.GeometryAttributes;i.position=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e});const n=t.length,r=i.position.values.length/3,a=e.length/3/n,s=y.IndexDatatype.createTypedArray(r,2*n*(a+1));let p,g,h=0;p=0;let m=p*n;for(g=0;g<n-1;g++)s[h++]=g+m,s[h++]=g+m+1;for(s[h++]=n-1+m,s[h++]=m,p=a-1,m=p*n,g=0;g<n-1;g++)s[h++]=g+m,s[h++]=g+m+1;for(s[h++]=n-1+m,s[h++]=m,p=0;p<a-1;p++){const e=n*p,t=e+n;for(g=0;g<n;g++)s[h++]=g+e,s[h++]=g+t}return new c.Geometry({attributes:i,indices:y.IndexDatatype.createTypedArray(r,s),boundingSphere:o.BoundingSphere.fromVertices(e),primitiveType:c.PrimitiveType.LINES})}(s.PolylineVolumeGeometryLibrary.computePositions(r,p,g,e,!1),p)},function(i,n){return e.defined(n)&&(i=V.unpack(i,n)),i._ellipsoid=t.Ellipsoid.clone(i._ellipsoid),V.createGeometry(i)}}));
