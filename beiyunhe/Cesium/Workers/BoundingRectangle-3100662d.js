define(["exports","./Cartesian2-0a34ed75","./Ellipsoid-fa58f06f","./defaultValue-9f6a6288","./defined-64766648","./GeographicProjection-868b0b16","./Transforms-b1e48e05"],(function(t,e,n,i,h,r,d){"use strict";function a(t,e,n,h){this.x=i.defaultValue(t,0),this.y=i.defaultValue(e,0),this.width=i.defaultValue(n,0),this.height=i.defaultValue(h,0)}a.packedLength=4,a.pack=function(t,e,n){return n=i.defaultValue(n,0),e[n++]=t.x,e[n++]=t.y,e[n++]=t.width,e[n]=t.height,e},a.unpack=function(t,e,n){return e=i.defaultValue(e,0),h.defined(n)||(n=new a),n.x=t[e++],n.y=t[e++],n.width=t[e++],n.height=t[e],n},a.fromPoints=function(t,e){if(h.defined(e)||(e=new a),!h.defined(t)||0===t.length)return e.x=0,e.y=0,e.width=0,e.height=0,e;const n=t.length;let i=t[0].x,r=t[0].y,d=t[0].x,u=t[0].y;for(let e=1;e<n;e++){const n=t[e],h=n.x,a=n.y;i=Math.min(h,i),d=Math.max(h,d),r=Math.min(a,r),u=Math.max(a,u)}return e.x=i,e.y=r,e.width=d-i,e.height=u-r,e};const u=new r.GeographicProjection,o=new n.Cartographic,c=new n.Cartographic;a.fromRectangle=function(t,n,r){if(h.defined(r)||(r=new a),!h.defined(t))return r.x=0,r.y=0,r.width=0,r.height=0,r;const d=(n=i.defaultValue(n,u)).project(e.Rectangle.southwest(t,o)),f=n.project(e.Rectangle.northeast(t,c));return e.Cartesian2.subtract(f,d,f),r.x=d.x,r.y=d.y,r.width=f.x,r.height=f.y,r},a.clone=function(t,e){if(h.defined(t))return h.defined(e)?(e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e):new a(t.x,t.y,t.width,t.height)},a.union=function(t,e,n){h.defined(n)||(n=new a);const i=Math.min(t.x,e.x),r=Math.min(t.y,e.y),d=Math.max(t.x+t.width,e.x+e.width),u=Math.max(t.y+t.height,e.y+e.height);return n.x=i,n.y=r,n.width=d-i,n.height=u-r,n},a.expand=function(t,e,n){n=a.clone(t,n);const i=e.x-n.x,h=e.y-n.y;return i>n.width?n.width=i:i<0&&(n.width-=i,n.x=e.x),h>n.height?n.height=h:h<0&&(n.height-=h,n.y=e.y),n},a.intersect=function(t,e){const n=t.x,i=t.y,h=e.x,r=e.y;return n>h+e.width||n+t.width<h||i+t.height<r||i>r+e.height?d.Intersect.OUTSIDE:d.Intersect.INTERSECTING},a.equals=function(t,e){return t===e||h.defined(t)&&h.defined(e)&&t.x===e.x&&t.y===e.y&&t.width===e.width&&t.height===e.height},a.prototype.clone=function(t){return a.clone(this,t)},a.prototype.intersect=function(t){return a.intersect(this,t)},a.prototype.equals=function(t){return a.equals(this,t)},t.BoundingRectangle=a}));
